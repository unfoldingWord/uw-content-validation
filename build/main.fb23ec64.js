(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./README.md":
/*!************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./README.md ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = { 'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\") };\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '[![Custom badge](https://img.shields.io/endpoint?color=%2374b9ff&url=https%3A%2F%2Fraw.githubusercontent.com%2unfoldingWord%2Fcontent-validation%2Fmaster%2Fcoverage%2Fshields.json)](<>)\\n[![Install, Build & Run Cypress](https://github.com/unfoldingWord/uw-content-validation/workflows/Install,%20Build%20&%20Run%20Cypress/badge.svg)](<>)\\n\\n# uW Content/Resource Validation functions\\n\\nGH Pages: \\\\[[https://unfoldingword.github.io/uw-content-validation/]]\\n\\nThis repository contains JavaScript functions for validating/checking for errors in text that is passed to the functions. This text might be a line in a file (especially a TSV file when a line contains a number of distinct fields), or the entire text of a file that\\u2019s perhaps open in an editor in the enclosing app.\\n\\nThe basic functions return an object containing two lists:\\n\\n1.  successList: a list of strings giving an overview of what checks have been made,\\n2.  noticeList: a list of objects with fields that can be filtered, sorted, combined, and then displayed as error or warning messages.\\n\\nNote that the object may also contain other relevant fields such as `checkedFileCount`, `checkedFilenames`, `checkedFilenameExtensions`, `checkedFilesizes`, `checkedRepoNames`, and `elapsedSeconds`.\\n\\nThere are three sample notice processing functions that show how to:\\n\\n1.  Divide the noticeList into a list of errors and a list of warnings,\\n2.  Divide the noticeList into a list of severe, medium, and low priority warnings,\\n3.  Convert the noticeList into a list of warnings sorted by priority,\\n\\nIn addition, there are Styleguidist pages viewable at \\\\[[https://unfoldingword.github.io/uw-content-validation/]] which show how these core functions may be used, effectively producing a primitive app that checks Door43.org files, repositories (repos), book packages, etc. as well as demonstrating the basic functions.\\n\\n## The Stack\\n\\n-   Javascript for primary functions.\\n-   React (functional components & hooks) for demonstration applets.\\n-   MaterialUI for UI/UX baseline design components.\\n-   Styleguidist for Playground Documentation.\\n-   Yarn for dependencies, publishing, and deploying.\\n-   Github + NPM + Github Pages for Hosting.\\n-   Cypress for testing\\n\\n## Design Philosophy\\n\\nThis code is designed to thoroughly check various types of Bible-related content data files. This includes:\\n\\n1.  [Unified Standard Format Marker](ubsicap.github.io/usfm/) (USFM) Bible content files, including original language Bibles and Bible translations aligned by word/phrase to the original words/phrases\\n2.  Legacy Translation Notes (TN) tables in Tab-Separated Values (9-column TSV) files\\n3.  New tables in Tab-Separated Values (TSV) files (for TWL, TN2 and TQ, SN, and SQ)\\n4.  Markdown files (for TA, TW, and TQ1; also markdown fields in TSV files)\\n5.  Plain-text files\\n6.  Metadata (manifest) YAML files\\n\\nNote: There is also a separate function for checking individual TSV lines (e.g., TN, TN2, TQ) which is intended to be able to provide immediate user feedback if built into a TSV editor.\\n\\nThe top-level checking demonstrations return:\\n\\n1.  A list of things that were checked (successList)\\n2.  Typically a list of (higher-priority) errors and a list of (lower-priority) warnings, but other formats for display of messages are also demonstrated.\\n\\nNote that it\\u2019s quite possible for the package to give multiple different notices for a single mistake. For example, a punctuation abnormality in a quoted text might advise about the bad punctuation as well as advising about not being able to match the quote. The package errs on the side that having additional warnings is better than missing a warning (and then later being confused about why a data file won\\u2019t load). These consequential warnings mean that, if possible, it\\u2019s good to rerun the checks from time to time on your latest files as you\\'re fixing multiple errors.\\n\\n### Notice Objects (in noticeList)\\n\\nHowever, the lower-level checking functions provide only the list of success message strings and one list of `notices` (i.e., warnings/errors combined) typically consisting of an object with some or all of the following fields (as available/relevant):\\n\\nThere are two compulsory fields in all of these notice objects:\\n\\n1.  `priority`: A notice priority number in the range 1-1,000. Each different type of warning/error has a unique number (but not each instance of those warnings/errors). By default, notice priority numbers 700 and over are considered `errors` and 0-699 are considered `warnings`, but in truth, that\\u2019s rather arbitrary.\\n2.  `message`: The actual general descriptive text of the notice (starts with a capital letter)\\n\\nAll of the following fields may be missing or undefined, i.e., they\\u2019re all optional:\\n\\n1.  `details`: More helpful details about the notice (if applicable; doesn\\u2019t start with a capital letter)\\n2.  `repoCode`: brief repository code (if available), e.g., \\'UHB\\', \\'LT\\', \\'ST\\', \\'TN\\', \\'TQ\\', forthcoming \\'TN2\\', old \\'TQ1\\', etc.\\n3.  `repoName`: Door43 repository name (if available), e.g., \\'en_ta\\', \\'hi_tw\\'\\n4.  `filename`: filename string (if available)\\n5.  `bookID`: The 3-character UPPERCASE [book identifier](http://ubsicap.github.io/usfm/identification/books.html) or [OBS](https://www.openbiblestories.org/) (if relevant)\\n6.  `C`: The chapter number or OBS story number (if relevant)\\n7.  `V`: The verse number or OBS frame number (if relevant)\\n8.  `rowID`: 4-character ID field for TSV row (if relevant)\\n9.  `lineNumber`: A one-based line number in the file (if available)\\n10. `fieldName`: name of TSV field (if relevant)\\n11. `characterIndex`: A **zero-based** integer character index which indicates the position of the error in the given text (line or field) (if available)\\n12. `excerpt`: An excerpt (if available) from the checked text which indicates the area containing the problem. Where helpful, some character substitutions have already been made, for example, if the notice is about spaces, it is generally helpful to display spaces as a visible character in an attempt to best highlight the issue to the user. (The length of the excerpt defaults to ten characters, but is settable as an option.)\\n13. `location`: A string indicating the context of the notice, e.g., \"in line 17 of \\'someBook.usfm\\'\". (Still not completely sure what should be left in this string now that we have added optional `repoName`, `filename`, `rowID`, `lineNumber`, `fieldName` fields.)\\n14. `extra`: for a check that looks in multiple repos, this contains extra identifying information (typically the `repoCode`) to help the user determine what resource/repo/file that the notice applies to (which, in the demos, is then often prepended to the `message`).\\n\\nKeeping our notices in this format, rather than the simplicity of just saving an array of single strings, allows the above _notice components_ to be processed at a higher level, e.g., to allow user-controlled filtering, sorting, etc. For example, in a rush it might be good to display the highest priority messages first, and fix a few of those. On the other hand, if working systematically through, it might be good to sort by filename and line-number so that warnings about the same part of a file can be viewed together irrespective of their different priority numbers.\\n\\nThe default in the demos is to funnel all the raw notices through the supplied `processNoticesToErrorsWarnings` function (in demos/notice-processing-functions.fs) which does the following:\\n\\n1.  Removes excess repeated errors. For example, if there\\u2019s a systematic error in a file, say with unneeded leading spaces in every field, rather than returning with hundreds of errors, only the first several errors will be returned, followed by an \"errors suppressed\" message. (The number of each error displayed is settable as an option\\u2014zero means display all errors with no suppression.)\\n2.  Separates notices into error and warning lists based on the priority number. (The switch-over point is settable as an option.)\\n3.  Optionally drops the lowest priority notices and/or certain given notice types (by priority number).\\n\\nThere is a second version of the function which splits into `Severe`, `Medium`, and `Low` priority lists instead. And a third version that leaves them as notices, but allows for a Bright red...Dull red colour gradient instead.\\n\\nHowever, the user is, of course, free to create their own alternative version of these functions. This is possibly also the place to consider localisation of all the notices into different interface languages???\\n\\n## User-settable Options\\n\\n### Checking Options\\n\\nThere is provision for checking to be altered and/or sped-up when the calling app sets some or all of the following fields in `checkingOptions`:\\n\\n-   `disableAllLinkFetchingFlag`: a boolean (true/false) which if set to true, stops the package from fetching (hence checking) links, e.g., when a translation note refers to Translation Academy it won\\u2019t check that the TA article actually exists, and also stops the checking of any extra files like LICENSE.md\\u2014this gives a dramatic speed-up to many checks (but, of course, it means that the data might still contain quite major errors)\\n-   `disableLexiconLinkFetchingFlag`: this one boolean (true/false) flag exists to stop the package from fetching lexicon links. This is a separate flag so that the main link fetching (see the flag immediately above) can be enabled without slowing down the checks considerably by fetching/testing thousands of lexicon links.\\n-   `disableLinkedTAArticlesCheckFlag`, `disableLinkedTWArticlesCheckFlag`, `disableLinkedLexiconEntriesCheckFlag`: boolean (true/false) flags which if set to true, stop the functions from checking the CONTENT of articles linked to from other places. These flags only make a difference if the appropriate link fetching (the above two flags) is enabled.\\n-   `getFile`: a function which takes the four parameters ({username, repository, path, branch}) and returns the full text of the relevant Door43 file\\u2014default is to use our own function and associated caching\\n-   `fetchRepositoryZipFile`: a function which takes the three parameters ({username, repository, branch}) and returns the contents of the zip file containing all the Door43 files\\u2014default is to use our own function and associated caching\\n-   `getFileListFromZip`: takes the same three parameters and returns a list/array containing the filepaths of all the files in the zip file from Door43\\u2014default is to use our own function and associated caching\\n-   `originalLanguageVerseText`: the Hebrew/Aramaic or Greek original language text for the book/chapter/verse of the TSV line being checked\\u2014this enables `Quote` fields to be checked without needing to load and parse the actual USFM file\\n-   `originalLanguageRepoUsername` and `originalLanguageRepoBranch`: these two fields can be used to specify the username/organisation and/or the branch/tag name for fetching the UHB and UGNT files for checking\\n-   `taRepoUsername`, `taRepoBranchName`: these two fields can be used to specify the username/organisation and/or the branch/tag name for fetching the TA files for checking\\n-   `taRepoLanguageCode`, and `taRepoSectionName`: can be used to specify how the `SupportReference` field is checked in TA\\u2014defaults are \\'en\\' and \\'translate\\'\\n-   `twRepoUsername`, `twRepoBranchName`: these two fields can be used to specify the username/organisation and/or the branch/tag name for fetching the TW files for checking\\n-   `excerptLength`: an integer which defines how long excerpts of lines containing errors should be\\u2014the default is 20 characters\\u2014the package attempts to place the error in the middle of the excerpt\\n-   `cutoffPriorityLevel`: an integer which can define notices to not be detected\\u2014defaults to 0 so none are dropped. Note that this will also affect the `suggestion` response. (Only partially implemented at present, so drops some but not all low priority notices.)\\n-   `suppressNoticeDisablingFlag`: Defaults to `false`, i.e., to removing (thus suppressing) notices for warnings which are expected in certain files and hence we don\\u2019t want them displayed. Note that this is always set to `true` for the demos (because they suppress these notices later\\u2014see the `showDisabledNoticesFlag` below).\\n\\n      Currently this supressing is only done in the (exported) `internalCheckTN_TSV9Table` and `checkNotesTSV7Table` functions which we know to be called by [tC Create](https://github.com/unfoldingWord/tc-create-app) as well as `checkManifestText`, `checkMarkdownText`, `checkPlainText`, `internalCheckTN_TSV9Table`, `checkUSFMText`, and `checkYAMLText` called by the [Content Validation App](https://github.com/unfoldingWord-box3/content-validation-app).\\n\\nMost of the high-level demonstrations allow a choice of one of three display formats for notices:\\n\\n-   \\'SingleList\\' (recommended): sorts notices by priority (highest first) then colours the highest ones bright red, slowly fading to black for the lowest priorities\\n-   \\'ErrorsWarnings\\': arbitrarily divides notices into a list of _errors_ and a list of _warnings_, each displayed in different colours\\n-   \\'SevereMediumLow\\': divides notices into three lists which are displayed in different colours\\n\\n### Processing Options\\n\\nIn addition, there are some options in the display of notices for the demonstrations, set in `optionalProcessingOptions` used by the sample notice processing functions:\\n\\n-   `ignorePriorityNumberList`: a list (array) of integers that causes of notices with these priority values to be dropped during notice processing\\n-   `sortBy`: a string which can be set to \\'ByPriority\\', \\'ByRepo\\', or \\'AsFound\\'\\u2014the default is \\'ByPriority\\', i.e., unsorted\\n-   `errorPriorityLevel`: an integer which can define _errors_ (vs _warnings_) (if relevant)\\u2014defaults to 700 (and above)\\n-   `severePriorityLevel`: an integer which can define _severe_ errors (if relevant)\\u2014defaults to 800 (and above)\\n-   `mediumPriorityLevel`: an integer which can define _medium_ errors (if relevant)\\u2014defaults to 600 (and up to `severePriorityLevel`)\\n-   `cutoffPriorityLevel` (deprecated): an integer which can define notices to be dropped/ignored\\u2014defaults to 0 so none are dropped\\n-   `maximumSimilarMessages`: an integer which defines how many of a certain notice to display, before summarising and saying something like _99 similar errors suppressed_\\u2014zero means don\\u2019t ever summarise notices\\u2014defaults to 3\\n-   `showDisabledNoticesFlag`: some content files produce false alarms, e.g., a discussion of using the , as punctuation. Where known, these false alarm notices are disabled from being shown. Setting this flag to \\'true\\' would show these notices (with the word \"(disabled)\" added) instead\\u2014the default is \\'false\\'.\\n\\n## Still To Do\\n\\nThere is a list of open issues at \\\\[[https://github.com/unfoldingWord/uw-content-validation/issues]] (and you can add suggestions and bug reports there at any time). But in summary, still unfinished (in rough priority order):\\n\\n1.  Keep up with changes are more repos are converted to the new TSV formats\\n2.  Handle the fact that Door43-Catalog repos now have different formats (old markdown) than unfoldingWord repos (new TSV)\\n3.  Finish moving `cutoffPriorityLevel` from `processingOptions` to `checkingOptions`\\n4.  The `suggestion` mechanism is working, but more suggestions need to be created\\n5.  Checking of general markdown and naked links (esp. in plain text and markdown files)\\n6.  Work through all [Issues](https://github.com/unfoldingWord/uw-content-validation/issues)\\n7.  Work through all `ToDo`s in code\\n8.  Standardise parameters according to best practice (i.e., dereferencing, etc.)\\u2014might be too late now coz it would affect API presented to users???\\n9.  Document the API (with JsDoc)\\n10. Improve general documentation in the code and readMe files\\n11. Is our `RepoCheck` the same as `ResourceContainerCheck`? Or is the latter more specific?\\n12. Understand and standardise React stuff in the demos, e.g., e.g., withStyles, etc.\\n13. Check for and remove left-over (but unused) code from the source projects that the original code was copied from\\n14. Remove all debug code and console logging, and to consider possible speed and memory optimizations (incl. async and/or multi-worker operations)\\n15. Add a Scripture Burrito check (once Door43 has that available).\\n\\nKnown bugs:\\n\\n1.  Not all demos have all options available\\n2.  Demos likely to fail on Door43-Catalog as we move unfoldingWord repos to the new TSV formats\\n3.  Work on checking naked links in text files is not yet completed\\n4.  File caching (i.e., demos not checking latest file versions) is still a frustration for some users and needs to be investigated more\\u2014presumably it\\u2019s out of control of this package and its demos???\\n\\nKnown check deficiencies:\\n\\n1.  ULT/UST quotes in TranslationAcademy are not yet checked\\n\\n## Functionality and Limitations\\n\\nSee component `README` for details.\\n\\n# How to install\\n\\nOnce you have this codebase forked and cloned to your local machine, you can start modifying the codebase. You will need to ensure `node.js` and `yarn` are already installed.\\n\\n### Installation and Running the Styleguide Locally\\n\\n1.  Install the npm dependencies with `yarn`.\\n2.  Run the Styleguide with `yarn start`.\\n3.  Ensure that the Styleguide is running by visiting `localhost:6060` on your web browser. (for Chromebooks see note below)\\n4.  Modify the code and documentation in your code editor and check out the Styleguide.\\n    -   Update the styleguide.config.js to match your new component names.\\n5.  See debug `userLog()` output in browser console\\u2014in chrome, CTRL-SHIFT-J to open.\\n\\n### Setting up NPM Publishing\\n\\n1.  Rename your library:\\n    -   the folder\\n    -   repo on Github\\n2.  Update the `package.json`:\\n    -   change the `name` and `description` of your app\\n    -   change the URLs of your `homepage` and `repository`\\n3.  Create an account on `npmjs.org` if you don\\u2019t have one already.\\n\\n### Publishing to NPM\\n\\nThe scripts in the `package.json` file do all of the heavy lifting.\\n\\n1.  Commit and push all changes to your github repo.\\n2.  Run `yarn publish`:\\n    -   login to NPM using your credentials if asked.\\n    -   enter the new version number using symver.\\n    -   wait for the code to be transpiled and published to NPM.\\n    -   wait for the styleguide to be built and deployed to GHPages.\\n3.  Visit your published library on NPM.\\n4.  Visit your deployed Styleguide on GHPages.\\n\\n### Deploying Styleguide to GHPages\\n\\nYou can optionally deploy the styleguide to GHPages without publishing to NPM.\\n\\n1.  Run `yarn deploy`\\n2.  There is a `predeploy` hook that builds the Styleguide.\\n3.  That\\u2019s it!\\n\\n## Chromebook Linux Beta Notes\\n\\nMust use `hostname -I` to get the host address. **Neither `localhost` nor `127.0.0.1` will work.**'\n    },\n    {\n        'type': 'code',\n        'content': '$ hostname -I\\n100.115.92.202\\n$',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./README.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/BCS-usfm-grammar-check.md":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/BCS-usfm-grammar-check.md ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './BCS-usfm-grammar-check': __webpack_require__(/*! ./BCS-usfm-grammar-check */ \"./src/core/BCS-usfm-grammar-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Bridgeconn (BCS) USFM Grammar Check Sandbox\\n\\nThis function simply packages the [Bridgeconn USFM Grammar Check](https://www.npmjs.com/package/usfm-grammar) and runs it on the given USFM snippet just for our convenient testing.\\n\\nOur packaged function returns a list of success messages and a list of (prioritised) notice components.\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { checkUSFMGrammar } from \\'./BCS-usfm-grammar-check\\';\\nimport { RenderNumberedLines, RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// USFM samples\\nconst textS = `\\\\\\\\id GEN Short test\\n\\\\\\\\usfm 3.0\\n\\\\\\\\h Genesis\\n\\\\\\\\mt Genesis\\n\\\\\\\\c 1\\n\\\\\\\\s5 My first heading\\n\\\\\\\\p\\n\\\\\\\\v 1 This is the first and last verse\\n`;\\n\\nconst textG = `\\\\\\\\id GEN EN_ULT en_English_ltr unfoldingWord Literal Text Thu Jul 25 2019 09:33:56 GMT-0400 (EDT) tc\\n\\\\\\\\usfm 3.0\\n\\\\\\\\ide UTF-8\\n\\\\\\\\h Genesis\\n\\\\\\\\toc1 The Book of Genesis\\n\\\\\\\\toc2 Genesis\\n\\\\\\\\toc3 Gen\\n\\\\\\\\mt Genesis\\n\\n\\\\\\\\s5\\n\\\\\\\\c 1\\n\\\\\\\\p\\n\\\\\\\\v 1 In the beginning, God created the heavens and the earth.\\n\\\\\\\\v 2 The earth was without form and empty. Darkness was upon the surface of the deep. The Spirit of God was moving above the surface of the waters.\\n\\\\\\\\s5\\n\\\\\\\\v 3 God said, \\u201CLet there be light,\\u201D and there was light.\\n\\\\\\\\v 4 God saw the light, that it was good. He divided the light from the darkness.\\n\\\\\\\\v 5 God called the light \\u201Cday,\\u201D and the darkness he called \\u201Cnight.\\u201D This was evening and morning, the first day.\\n\\n\\\\\\\\ts\\\\\\\\*\\n\\\\\\\\p\\n\\\\\\\\v 6 God said, \\u201CLet there be an expanse between the waters, and let it divide the waters from the waters.\\u201D\\n\\\\\\\\v 7 God made the expanse and divided the waters which were under the expanse from the waters which were above the expanse. It was so.\\n\\\\\\\\v 8 God called the expanse \\u201Csky.\\u201D This was evening and morning, the second day.\\n`;\\n\\nconst textH = `\\\\\\\\id RUT unfoldingWord\\xAE Hebrew Bible\\n\\\\\\\\usfm 3.0\\n\\\\\\\\ide UTF-8\\n\\\\\\\\h Ruth\\n\\\\\\\\toc1 The Book of Ruth\\n\\\\\\\\toc2 Ruth\\n\\\\\\\\toc3 Rut\\n\\\\\\\\mt Ruth\\n\\n\\\\\\\\c 1\\n\\\\\\\\p\\n\\n\\\\\\\\v 1\\n\\\\\\\\w וַ\\u2060יְהִ֗י|lemma=\"הָיָה\" strong=\"c:H1961\" x-morph=\"He,C:Vqw3ms\"\\\\\\\\w*\\n\\\\\\\\w בִּ\\u2060ימֵי֙|lemma=\"יוֹם\" strong=\"b:H3117\" x-morph=\"He,R:Ncmpc\"\\\\\\\\w*\\n\\\\\\\\w שְׁפֹ֣ט|lemma=\"שָׁפַט\" strong=\"H8199\" x-morph=\"He,Vqc\"\\\\\\\\w*\\n\\\\\\\\w הַ\\u2060שֹּׁפְטִ֔ים|lemma=\"שָׁפַט\" strong=\"d:H8199\" x-morph=\"He,Td:Vqrmpa\" x-tw=\"rc://*/tw/dict/bible/kt/judge\"\\\\\\\\w*\\n\\\\\\\\w וַ\\u2060יְהִ֥י|lemma=\"הָיָה\" strong=\"c:H1961\" x-morph=\"He,C:Vqw3ms\"\\\\\\\\w*\\n\\\\\\\\w רָעָ֖ב|lemma=\"רָעָב\" strong=\"H7458\" x-morph=\"He,Ncmsa\" x-tw=\"rc://*/tw/dict/bible/other/famine\"\\\\\\\\w*\\n\\\\\\\\w בָּ\\u2060אָ֑רֶץ|lemma=\"אֶרֶץ\" strong=\"b:H0776\" x-morph=\"He,Rd:Ncbsa\"\\\\\\\\w*\\n\\\\\\\\w וַ\\u2060יֵּ֨לֶךְ|lemma=\"יָלַךְ\" strong=\"c:H3212\" x-morph=\"He,C:Vqw3ms\"\\\\\\\\w*\\n\\\\\\\\w אִ֜ישׁ|lemma=\"אִישׁ\" strong=\"H0376\" x-morph=\"He,Ncmsa\"\\\\\\\\w*\\n\\\\\\\\k-s | x-tw=\"rc://*/tw/dict/bible/names/bethlehem\"\\\\\\\\*\\\\\\\\w מִ\\u2060בֵּ֧ית|lemma=\"בֵּית לֶחֶם\" strong=\"m:H1035\" x-morph=\"He,R:Np\"\\\\\\\\w*\\n\\\\\\\\w לֶ֣חֶם|lemma=\"בֵּית לֶחֶם\" strong=\"H1035\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\k-e\\\\\\\\*\\n\\\\\\\\w יְהוּדָ֗ה|lemma=\"יְהוּדָה\" strong=\"H3063\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/judah\"\\\\\\\\w*\\n\\\\\\\\w לָ\\u2060גוּר֙|lemma=\"גּוּר\" strong=\"l:H1481a\" x-morph=\"He,R:Vqc\"\\\\\\\\w*\\n\\\\\\\\w בִּ\\u2060שְׂדֵ֣י|lemma=\"שָׂדֶה\" strong=\"b:H7704b\" x-morph=\"He,R:Ncmpc\"\\\\\\\\w*\\n\\\\\\\\w מוֹאָ֔ב|lemma=\"מוֹאָב\" strong=\"H4124\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/moab\"\\\\\\\\w*\\n\\\\\\\\w ה֥וּא|lemma=\"הוּא\" strong=\"H1931\" x-morph=\"He,Pp3ms\"\\\\\\\\w*\\n\\\\\\\\w וְ\\u2060אִשְׁתּ֖\\u2060וֹ|lemma=\"אִשָּׁה\" strong=\"c:H0802\" x-morph=\"He,C:Ncfsc:Sp3ms\"\\\\\\\\w*\\n\\\\\\\\w וּ\\u2060שְׁנֵ֥י|lemma=\"שְׁנַיִם\" strong=\"c:H8147\" x-morph=\"He,C:Acmdc\"\\\\\\\\w*\\n\\\\\\\\w בָנָֽי\\u2060ו|lemma=\"בֵּן\" strong=\"H1121a\" x-morph=\"He,Ncmpc:Sp3ms\" x-tw=\"rc://*/tw/dict/bible/kt/son\"\\\\\\\\w*\\u05C3\\n\\n\\\\\\\\v 2\\n\\\\\\\\w וְ\\u2060שֵׁ֣ם|lemma=\"שֵׁם\" strong=\"c:H8034\" x-morph=\"He,C:Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w הָ\\u2060אִ֣ישׁ|lemma=\"אִישׁ\" strong=\"d:H0376\" x-morph=\"He,Td:Ncmsa\"\\\\\\\\w*\\n\\\\\\\\w אֱֽלִימֶ֡לֶךְ|lemma=\"אֱלִימֶלֶךְ\" strong=\"H0458\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וְ\\u2060שֵׁם֩|lemma=\"שֵׁם\" strong=\"c:H8034\" x-morph=\"He,C:Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w אִשְׁתּ֨\\u2060וֹ|lemma=\"אִשָּׁה\" strong=\"H0802\" x-morph=\"He,Ncfsc:Sp3ms\"\\\\\\\\w*\\n\\\\\\\\w נָעֳמִ֜י|lemma=\"נׇעֳמִי\" strong=\"H5281\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וְ\\u2060שֵׁ֥ם|lemma=\"שֵׁם\" strong=\"c:H8034\" x-morph=\"He,C:Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w שְׁנֵֽי|lemma=\"שְׁנַיִם\" strong=\"H8147\" x-morph=\"He,Acmdc\"\\\\\\\\w*\\u05BE\\\\\\\\w בָנָ֣י\\u2060ו|lemma=\"בֵּן\" strong=\"H1121a\" x-morph=\"He,Ncmpc:Sp3ms\" x-tw=\"rc://*/tw/dict/bible/kt/son\"\\\\\\\\w* \\u05C0\\n\\\\\\\\w מַחְל֤וֹן|lemma=\"מַחְלוֹן\" strong=\"H4248\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וְ\\u2060כִלְיוֹן֙|lemma=\"כִּלְיוֹן\" strong=\"c:H3630\" x-morph=\"He,C:Np\"\\\\\\\\w*\\n\\\\\\\\w אֶפְרָתִ֔ים|lemma=\"אֶפְרָתִי\" strong=\"H0673\" x-morph=\"He,Ngmpa\" x-tw=\"rc://*/tw/dict/bible/names/ephrathah\"\\\\\\\\w*\\n\\\\\\\\k-s | x-tw=\"rc://*/tw/dict/bible/names/bethlehem\"\\\\\\\\*\\\\\\\\w מִ\\u2060בֵּ֥ית|lemma=\"בֵּית לֶחֶם\" strong=\"m:H1035\" x-morph=\"He,R:Np\"\\\\\\\\w*\\n\\\\\\\\w לֶ֖חֶם|lemma=\"בֵּית לֶחֶם\" strong=\"H1035\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\k-e\\\\\\\\*\\n\\\\\\\\w יְהוּדָ֑ה|lemma=\"יְהוּדָה\" strong=\"H3063\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/judah\"\\\\\\\\w*\\n\\\\\\\\w וַ\\u2060יָּבֹ֥אוּ|lemma=\"בּוֹא\" strong=\"c:H0935\" x-morph=\"He,C:Vqw3mp\"\\\\\\\\w*\\n\\\\\\\\w שְׂדֵי|lemma=\"שָׂדֶה\" strong=\"H7704b\" x-morph=\"He,Ncmpc\"\\\\\\\\w*\\u05BE\\\\\\\\w מוֹאָ֖ב|lemma=\"מוֹאָב\" strong=\"H4124\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/moab\"\\\\\\\\w*\\n\\\\\\\\w וַ\\u2060יִּֽהְיוּ|lemma=\"הָיָה\" strong=\"c:H1961\" x-morph=\"He,C:Vqw3mp\"\\\\\\\\w*\\u05BE\\\\\\\\w שָֽׁם|lemma=\"שָׁם\" strong=\"H8033\" x-morph=\"He,D\"\\\\\\\\w*\\u05C3\\n\\n\\\\\\\\v 3\\n\\\\\\\\w וַ\\u2060יָּ֥מָת|lemma=\"מוּת\" strong=\"c:H4191\" x-morph=\"He,C:Vqw3ms\" x-tw=\"rc://*/tw/dict/bible/other/death\"\\\\\\\\w*\\n\\\\\\\\w אֱלִימֶ֖לֶךְ|lemma=\"אֱלִימֶלֶךְ\" strong=\"H0458\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w אִ֣ישׁ|lemma=\"אִישׁ\" strong=\"H0376\" x-morph=\"He,Ncmsc\"\\\\\\\\w*\\n\\\\\\\\w נָעֳמִ֑י|lemma=\"נׇעֳמִי\" strong=\"H5281\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וַ\\u2060תִּשָּׁאֵ֥ר|lemma=\"שָׁאַר\" strong=\"c:H7604\" x-morph=\"He,C:VNw3fs\"\\\\\\\\w*\\n\\\\\\\\w הִ֖יא|lemma=\"הוּא\" strong=\"H1931\" x-morph=\"He,Pp3fs\"\\\\\\\\w*\\n\\\\\\\\w וּ\\u2060שְׁנֵ֥י|lemma=\"שְׁנַיִם\" strong=\"c:H8147\" x-morph=\"He,C:Acmdc\"\\\\\\\\w*\\n\\\\\\\\w בָנֶֽי\\u2060הָ|lemma=\"בֵּן\" strong=\"H1121a\" x-morph=\"He,Ncmpc:Sp3fs\" x-tw=\"rc://*/tw/dict/bible/kt/son\"\\\\\\\\w*\\u05C3\\n\\n\\\\\\\\v 4\\n\\\\\\\\w וַ\\u2060יִּשְׂא֣וּ|lemma=\"נָשָׂא\" strong=\"c:H5375\" x-morph=\"He,C:Vqw3mp\"\\\\\\\\w*\\n\\\\\\\\w לָ\\u2060הֶ֗ם|lemma=\"\" strong=\"l\" x-morph=\"He,R:Sp3mp\"\\\\\\\\w*\\n\\\\\\\\w נָשִׁים֙|lemma=\"אִשָּׁה\" strong=\"H0802\" x-morph=\"He,Ncfpa\"\\\\\\\\w*\\n\\\\\\\\w מֹֽאֲבִיּ֔וֹת|lemma=\"מוֹאָבִי\" strong=\"H4125\" x-morph=\"He,Ngfpa\" x-tw=\"rc://*/tw/dict/bible/names/moab\"\\\\\\\\w*\\n\\\\\\\\w שֵׁ֤ם|lemma=\"שֵׁם\" strong=\"H8034\" x-morph=\"He,Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w הָֽ\\u2060אַחַת֙|lemma=\"אֶחָד\" strong=\"d:H0259\" x-morph=\"He,Td:Acfsa\"\\\\\\\\w*\\n\\\\\\\\w עָרְפָּ֔ה|lemma=\"עׇרְפָּה\" strong=\"H6204\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וְ\\u2060שֵׁ֥ם|lemma=\"שֵׁם\" strong=\"c:H8034\" x-morph=\"He,C:Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w הַ\\u2060שֵּׁנִ֖ית|lemma=\"שֵׁנִי\" strong=\"d:H8145\" x-morph=\"He,Td:Aofsa\"\\\\\\\\w*\\n\\\\\\\\w ר֑וּת|lemma=\"רוּת\" strong=\"H7327\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/ruth\"\\\\\\\\w*\\n\\\\\\\\w וַ\\u2060יֵּ֥שְׁבוּ|lemma=\"יָשַׁב\" strong=\"c:H3427\" x-morph=\"He,C:Vqw3mp\"\\\\\\\\w*\\n\\\\\\\\w שָׁ֖ם|lemma=\"שָׁם\" strong=\"H8033\" x-morph=\"He,D\"\\\\\\\\w*\\n\\\\\\\\w כְּ\\u2060עֶ֥שֶׂר|lemma=\"עֶשֶׂר\" strong=\"k:H6235\" x-morph=\"He,R:Acfsa\"\\\\\\\\w*\\n\\\\\\\\w שָׁנִֽים|lemma=\"שָׁנֶה\" strong=\"H8141\" x-morph=\"He,Ncfpa\"\\\\\\\\w*\\u05C3\\n`;\\n\\nconst textULT = `\\\\\\\\id RUT EN_ULT en_English_ltr Tue Mar 03 2020 16:27:33 GMT+0200 (SAST) tc\\n\\\\\\\\usfm 3.0\\n\\\\\\\\ide UTF-8\\n\\\\\\\\h Ruth\\n\\\\\\\\toc1 The Book of Ruth\\n\\\\\\\\toc2 Ruth\\n\\\\\\\\toc3 Rut\\n\\\\\\\\mt Ruth\\n\\n\\\\\\\\ts\\\\\\\\*\\n\\\\\\\\c 1\\n\\\\\\\\p\\n\\\\\\\\v 1 \\\\\\\\zaln-s | x-strong=\"c:H1961\" x-lemma=\"הָיָה\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיְהִ֗י\"\\\\\\\\*\\\\\\\\w Now|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w it|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w happened|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"b:H3117\" x-lemma=\"יוֹם\" x-morph=\"He,R:Ncmpc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בִּימֵי֙\"\\\\\\\\*\\\\\\\\w in|x-occurrence=\"1\" x-occurrences=\"3\"\\\\\\\\w*\\n\\\\\\\\w the|x-occurrence=\"1\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w days|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"1\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H8199\" x-lemma=\"שָׁפַט\" x-morph=\"He,Vqc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"שְׁפֹ֣ט\"\\\\\\\\*\\\\\\\\w the|x-occurrence=\"2\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w ruling|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"2\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"d:H8199\" x-lemma=\"שָׁפַט\" x-morph=\"He,Td:Vqrmpa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"הַשּׁפְטִ֔ים\"\\\\\\\\*\\\\\\\\w the|x-occurrence=\"3\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w judges|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H1961\" x-lemma=\"הָיָה\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיְהִ֥י\"\\\\\\\\*\\\\\\\\w that|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w there|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w was|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H7458\" x-lemma=\"רָעָב\" x-morph=\"He,Ncmsa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"רָעָ֖ב\"\\\\\\\\*\\\\\\\\w a|x-occurrence=\"1\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w famine|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"b:H0776\" x-lemma=\"אֶרֶץ\" x-morph=\"He,Rd:Ncbsa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בָּאָ֑רֶץ\"\\\\\\\\*\\\\\\\\w in|x-occurrence=\"2\" x-occurrences=\"3\"\\\\\\\\w*\\n\\\\\\\\w the|x-occurrence=\"4\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w land|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*.\\n\\\\\\\\zaln-s | x-strong=\"c:H3212\" x-lemma=\"יָלַךְ\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיֵּלֶךְ\"\\\\\\\\*\\\\\\\\w And|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H0376\" x-lemma=\"אִישׁ\" x-morph=\"He,Ncmsa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"אִ֜ישׁ\"\\\\\\\\*\\\\\\\\w a|x-occurrence=\"2\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w certain|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w man|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"m:H1035\" x-lemma=\"בֵּית לֶחֶם\" x-morph=\"He,R:Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"מִבֵּית\"\\\\\\\\*\\\\\\\\zaln-s | x-strong=\"H1035\" x-lemma=\"בֵּית לֶחֶם\" x-morph=\"He,Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"לֶ֣חֶם\"\\\\\\\\*\\\\\\\\w from|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w Bethlehem|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"3\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H3063\" x-lemma=\"יְהוּדָה\" x-morph=\"He,Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"יְהוּדָ֗ה\"\\\\\\\\*\\\\\\\\w Judah|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H3212\" x-lemma=\"יָלַךְ\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיֵּלֶךְ\"\\\\\\\\*\\\\\\\\w went|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"l:H1481a\" x-lemma=\"גּוּר\" x-morph=\"He,R:Vqc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"לָגוּר֙\"\\\\\\\\*\\\\\\\\w to|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w live|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"b:H7704b\" x-lemma=\"שָׂדֶה\" x-morph=\"He,R:Ncmpc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בִּשְׂדֵ֣י\"\\\\\\\\*\\\\\\\\w in|x-occurrence=\"3\" x-occurrences=\"3\"\\\\\\\\w*\\n\\\\\\\\w the|x-occurrence=\"5\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w fields|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"4\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H4124\" x-lemma=\"מוֹאָב\" x-morph=\"He,Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"מוֹאָ֔ב\"\\\\\\\\*\\\\\\\\w Moab|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*,\\n\\\\\\\\zaln-s | x-strong=\"H1931\" x-lemma=\"הוּא\" x-morph=\"He,Pp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"ה֥וּא\"\\\\\\\\*\\\\\\\\w he|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H0802\" x-lemma=\"אִשּׁה\" x-morph=\"He,C:Ncfsc:Sp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וְאִשְׁתּ֖וֹ\"\\\\\\\\*\\\\\\\\w and|x-occurrence=\"1\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w his|x-occurrence=\"1\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w wife|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H8147\" x-lemma=\"שְׁנַיִם\" x-morph=\"He,C:Acmdc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וּשְׁנֵ֥י\"\\\\\\\\*\\\\\\\\w and|x-occurrence=\"2\" x-occurrences=\"2\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H1121a\" x-lemma=\"בֵּן\" x-morph=\"He,Ncmpc:Sp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בָנָֽיו\"\\\\\\\\*\\\\\\\\w his|x-occurrence=\"2\" x-occurrences=\"2\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H8147\" x-lemma=\"שְׁנַיִם\" x-morph=\"He,C:Acmdc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וּשְׁנֵ֥י\"\\\\\\\\*\\\\\\\\w two|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H1121a\" x-lemma=\"בֵּן\" x-morph=\"He,Ncmpc:Sp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בָנָֽיו\"\\\\\\\\*\\\\\\\\w sons|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*.\\n`;\\n\\nconst textB = `\\\\\\\\id GEN Bad USFM test\\n\\\\\\\\usfm 4.0\\n\\\\\\\\h Genesis\\n\\\\\\\\mt Genesis\\n\\\\\\\\c 7\\n\\\\\\\\s5 My  first  heading\\n\\\\\\\\v3 This is the first and last verse::\\n\\\\\\\\v\\n\\\\\\\\c 8a\\n\\\\\\\\v 1b Hello\\n\\\\\\\\v 1-3 Bad overlap\\n\\\\\\\\v 2 Not good here\\n`;\\n\\n// You can choose any of the above texts here\\n//  (to demonstrate differing results)\\nconst chosenTextName = \\'textH\\';\\nconst chosenText = textH;\\nconst bookID = \\'RUT\\'; // 3-character UPPERCASE USFM book identifier\\n\\n// Choose \\'strict\\' or \\'relaxed\\'\\nconst strictness = \\'strict\\';\\n\\nconst rawResults = checkUSFMGrammar(bookID, strictness, chosenTextName, chosenText, \\'that was supplied\\');\\n\\n<>\\n<b>Check</b><RenderNumberedLines text={chosenText} />\\n<RenderRawResults results={rawResults} />\\n</>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/BCS-usfm-grammar-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/field-link-check.md":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/field-link-check.md ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './field-link-check': __webpack_require__(/*! ./field-link-check */ \"./src/core/field-link-check.js\"),\n    '../demos/notice-processing-functions': __webpack_require__(/*! ../demos/notice-processing-functions */ \"./src/demos/notice-processing-functions.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\"),\n    './utilities': __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Basic Link Field Check Sandbox\\n\\nThis function is for checking text fields that are links, or that contain links.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { checkFieldLinks } from \\'./field-link-check\\';\\nimport { processNoticesToErrorsWarnings } from \\'../demos/notice-processing-functions\\';\\nimport { RenderRawResults, RenderSuccessesErrorsWarnings } from \\'../demos/RenderProcessedResults\\';\\nimport { userLog } from \\'./utilities\\';\\n\\n// Empty, space, link, RC, good, and bad text samples\\nconst textE = \"\";\\nconst textS = \" \";\\nconst textL = \"https://unfoldingWord.org\";\\nconst textRC1 = \"rc://en/obs/book/obs/02/03\";\\nconst textRC2 = \"rc://en/tw/dict/bible/other/canaan\";\\nconst textMD1 = \"Have a look [here](https://unfoldingWord.org/)!\";\\nconst textMD2 = \" Look at [[https://unfoldingWord.org]]\\u202F\";\\nconst textMD3 = \"Now  look at [[http://door43.org]]\\u202F\";\\n\\n// Easy for user to change text used in next line (to demonstrate differing results)\\nconst username = \\'unfoldingWord\\';\\nconst chosenTextName = \"textMD3\";\\nconst chosenText = textMD3;\\n\\nlet rawResults;\\n\\n// Define our callback function\\nfunction acceptUpdatedResult(newLinkResult){\\n    // Update the results with later results\\n    userLog(`acceptUpdatedResult callback function is updating result now with ${newLinkResult.noticeList.length} notices.`);\\n    rawResults.noticeList = newLinkResult.noticeList;\\n    // Now how can we tell Styleguidist to refresh???\\n}\\n\\nconst linkOptions = {\\n    expectedCount: 1, // 0 = all links optional (no minimal number expected)\\n    allowedCount: 0, // 0 = no maximum limit\\n    otherTextAllowed: true, // if false, field is just the link only\\n    linkTypesAllowed: [\\'RC\\', \\'md\\', \\'naked\\',],\\n        // \\'RC\\' (ResourceContainer) allows \\'rc://...` links\\n        // \\'md\\' allows \\'[this](http://here.org)\\' and [[http://here.org]]\\n        // \\'naked\\' allows \\'http:://example.org\\' and even \\'example.org\\'\\n    checkTargets: true, // Attempt to retrieve the link(s) -- slows it down\\n    callbackFunction: acceptUpdatedResult, // Required to accept updated results if checking targets\\n};\\n\\n// This function returns the results of the fast checks\\n//  and if specified in linkOptions, the callback will update result later with results of slower checks\\nrawResults = checkFieldLinks(username, \\'en\\', \\'\\', chosenTextName, chosenText, linkOptions, \\'that was supplied\\');\\nif (!rawResults.successList || !rawResults.successList.length)\\n    rawResults.successList = [\"Done basic link checks\"];\\n\\n<>\\n<b>Check</b> \"{chosenText}\"<br/><br/>\\n<RenderRawResults results={rawResults} />\\n</>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/field-link-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/field-text-check.md":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/field-text-check.md ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './field-text-check': __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Basic Text Field Check Sandbox\\n\\nThis `checkTextField()` function can be passed a text (incl. markdown) field and checks for basic errors like leading/trailing spaces, bad punctuation, etc.\\n\\nThis generic function returns a list/array of notices, that can then be post-processed to eliminate any warning types that don\\u2019t apply to this particular type of field so we don\\u2019t flood the user with a lot of false positives.\\n\\nThis demonstration doesn\\u2019t display the raw notices, but rather displays the processed and formatted lists of errors and warnings.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { checkTextField } from \\'./field-text-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Empty, space, good, and bad, link, and RC text samples\\nconst textE = \"\";\\nconst textS = \" \";\\nconst textG = \"Peace on Earth, good will to all men/people!\";\\nconst textB = \" Peace  on\\xA0Earth,, good will to all) men!\\u202F\";\\nconst textL = \"https://unfoldingWord.org\";\\nconst textRC1 = \"rc://en/obs/book/obs/02/03\";\\nconst textRC2 = \"Compare with rc://en/tw/dict/bible/other/canaan\";\\n\\n// Just change these next two lines to change the text being used (to demonstrate differing results)\\nconst username = \\'unfoldingWord\\';\\nconst chosenTextName = \"textB\";\\nconst chosenText = textB;\\n\\n// The third parameter is \"linksAllowed\"\\nconst rawResults = checkTextField(username, \\'en\\', \\'TN\\', \\'raw\\', \\'Sample\\', chosenText, false, \\'in \\'+chosenTextName+\\' that was supplied\\');\\nif (!rawResults.successList || !rawResults.successList.length)\\n    rawResults.successList = [\"Done basic text checks\"];\\n\\n<>\\n<b>Check</b> \"{chosenText}\"<br/><br/>\\n<RenderRawResults results={rawResults} />\\n</>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/field-text-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/file-text-check.md":
/*!******************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/file-text-check.md ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './file-text-check': __webpack_require__(/*! ./file-text-check */ \"./src/core/file-text-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Basic File Check Sandbox\\n\\nThis `checkTextfileContents()` function can be passed a text and checks for global errors like mismatching punctuation pairs.\\n\\nNote that it\\u2019s not always wise to call this function. If punctuation pairs, etc., are already constrained to, and checked for, in certain fields/parts of the file, then this function may just confuse the user with duplicated warnings.\\n\\nThis generic function returns a list/array of notices, that can then be post-processed to eliminate any warning types that don\\u2019t apply to this particular type of field so we don\\u2019t flood the user with a lot of false positives.\\n\\nThis demonstration doesn\\u2019t display the raw notices, but rather displays the processed and formatted lists of errors and warnings.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { checkTextfileContents } from \\'./file-text-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Empty, space, good, and bad samples\\nconst textE = \"\";\\nconst textS = \" \";\\nconst textG = `{Peace on Earth, good will to all men/people!\\n}`;\\nconst textB = `{ Peace  on\\xA0Earth,,\\n good will to all) men!\\u202F`;\\n\\n// Just change these next two lines to change the text being used (to demonstrate differing results)\\nconst username = \\'unfoldingWord\\';\\nconst chosenTextName = \"textB\";\\nconst chosenText = textB;\\nconst checkingOptions = {};\\n\\nconst rawResults = checkTextfileContents(username, \\'en\\', \\'TN\\', \\'text\\', \\'Sample\\', chosenText, \\'in \\'+chosenTextName+\\' that was supplied\\', checkingOptions);\\n\\n// Because we know here that we\\'re only checking one file, we don\\u2019t need the filename field in the notices\\nfunction deleteFilenameField(notice) { delete notice.filename; return notice; }\\nrawResults.noticeList = rawResults.noticeList.map(deleteFilenameField);\\n\\nif (!rawResults.successList || !rawResults.successList.length)\\n    rawResults.successList = [\"Done basic file checks\"];\\n\\n<>\\n<b>Check</b> \"{chosenText}\"<br/><br/>\\n<RenderRawResults results={rawResults} />\\n</>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/file-text-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/manifest-text-check.md":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/manifest-text-check.md ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './manifest-text-check': __webpack_require__(/*! ./manifest-text-check */ \"./src/core/manifest-text-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Manifest Text Check Sandbox\\n\\nThis function checks the given manifest.yaml for typical formatting errors. See \\\\[[https://resource-container.readthedocs.io/en/latest/manifest.html]] for the manifest specification.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport { checkManifestText } from \\'./manifest-text-check\\';\\nimport { RenderNumberedLines, RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Manifest empty, good and bad text samples\\nconst textE = \\'\\';\\nconst textG = `dublin_core:\\n  conformsto: \\'rc0.2\\'\\n  contributor:\\n    - \\'Jesse Griffin, BA Biblical Studies, MA Biblical Languages\\'\\n    - \\'Larry Sallee, Th.M Dallas Theological Seminary, D.Min. Columbia Biblical Seminary\\'\\n    - \\'Door43 World Missions Community\\'\\n  creator: \\'unfoldingWord\\'\\n  description: \"An open-licensed update of the ASV, intended to provide a \\'form-centric\\' understanding of the Bible. It increases the translator\\'s understanding of the lexical and grammatical composition of the underlying text by adhering closely to the word order and structure of the originals.\"\\n  format: \\'text/usfm3\\'\\n  identifier: \\'ult\\'\\n  issued: \\'2020-03-25\\'\\n  language:\\n    direction: \\'ltr\\'\\n    identifier: \\'en\\'\\n    title: \\'English\\'\\n  modified: \\'2020-03-25\\'\\n  publisher: \\'unfoldingWord\\'\\n  relation:\\n    - \\'en/tw\\'\\n    - \\'en/tq\\'\\n    - \\'en/tn\\'\\n  rights: \\'CC BY-SA 4.0\\'\\n  source:\\n    -\\n      identifier: \\'asv\\'\\n      language: \\'en\\'\\n      version: \\'1901\\'\\n    -\\n      identifier: \\'ugnt\\'\\n      language: \\'el-x-koine\\'\\n      version: \\'0.12\\'\\n    -\\n      identifier: \\'uhb\\'\\n      language: \\'hbo\\'\\n      version: \\'2.1.12\\'\\n  subject: \\'Aligned Bible\\'\\n  title: \\'unfoldingWord\\xAE Literal Text\\'\\n  type: \\'bundle\\'\\n  version: \\'10\\'\\n\\nchecking:\\n  checking_entity:\\n    - \\'unfoldingWord\\'\\n  checking_level: \\'3\\'\\n\\nprojects:\\n\\n  -\\n    title: \\'Genesis\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'gen\\'\\n    sort: 1\\n    path: \\'./01-GEN.usfm\\'\\n    categories: [ \\'bible-ot\\'  ]\\n\\n  -\\n    title: \\'Exodus\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'exo\\'\\n    sort: 2\\n    path: \\'./02-EXO.usfm\\'\\n    categories: [ \\'bible-ot\\'  ]\\n\\n  -\\n    title: \\'Zechariah\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'zec\\'\\n    sort: 38\\n    path: \\'./38-ZEC.usfm\\'\\n    categories: [ \\'bible-ot\\' ]\\n\\n  -\\n    title: \\'Malachi\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'mal\\'\\n    sort: 39\\n    path: \\'./39-MAL.usfm\\'\\n    categories: [ \\'bible-ot\\' ]\\n\\n  -\\n    title: \\'Matthew\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'mat\\'\\n    sort: 40\\n    path: \\'./41-MAT.usfm\\'\\n    categories: [ \\'bible-nt\\' ]\\n\\n  -\\n    title: \\'Jude\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'jud\\'\\n    sort: 65\\n    path: \\'./66-JUD.usfm\\'\\n    categories: [ \\'bible-nt\\' ]\\n\\n  -\\n    title: \\'Revelation\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'rev\\'\\n    sort: 66\\n    path: \\'./67-REV.usfm\\'\\n    categories: [ \\'bible-nt\\' ]\\n`;\\nconst textB1 = `dublin_core:\\n  conformsto: \\'rc0.2\\'\\n  contributor:\\n    - \\'Jesse Griffin, BA Biblical Studies, MA Biblical Languages\\'\\n    - \\'Larry Sallee, Th.M Dallas Theological Seminary, D.Min. Columbia Biblical Seminary\\'\\n    - \\'Door43 World Missions Community\\'\\n  creator: \\'unfoldingWord\\'\\n  description: \"An open-licensed update of the ASV, intended to provide a \\'form-centric\\' understanding of the Bible. It increases the translator\\'s understanding of the lexical and grammatical composition of the underlying text by adhering closely to the word order and structure of the originals.\"\\n  format: \\'text/usfm3\\'\\n  identifier: \\'ult\\'\\n  issued: \\'2020-03-25\\'\\n  language:\\n    direction: \\'ltr\\'\\n    identifier: \\'en\\'\\n    title: \\'English\\'\\n  modified: \\'2020-03-25\\'\\n  publisher: \\'unfoldingWord\\'\\n  relation:\\n    - \\'en/tw\\'\\n    - \\'en/tq\\'\\n    - \\'en/tn\\'\\n  rights: \\'CC BY-SA 4.0\\'\\n  source:\\n    -\\n      identifier: \\'asv\\'\\n      language: \\'en\\'\\n      version: \\'1901\\'\\n    -\\n      identifier: \\'ugnt\\'\\n      language: \\'el-x-koine\\'\\n      version: \\'0.12\\'\\n    -\\n      identifier: \\'uhb\\'\\n      language: \\'hbo\\'\\n      version: \\'2.1.12\\'\\n  subject: \\'Aligned Bible\\'\\n  title: \\'unfoldingWord\\xAE Literal Text\\'\\n  type: \\'bundle\\'\\n  version: \\'10\\'\\n\\nchecking:\\n  checking_entity:\\n    - \\'unfoldingWord\\'\\n  checking_level: \\'3\\'\\n\\nprojects:\\n\\n  =\\n    title: \\'Genesis\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'gen\\'\\n    sort: 1\\n    path: \\'./01-GEN.usfm\\'\\n    categories: [ \\'bible-ot\\'  ]\\n\\n  -\\n    title \\'Revelation\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'rev\\'\\n    sort: 66\\n    path: \\'./67-REV.usfm\\'\\n    categories: [ \\'bible-nt\\' ]\\n`;\\n// This is an excerpt from a media.yaml file:\\nconst textB2 = `resource:\\n  version: \\'{latest}\\'\\n  media:\\n    -\\n     identifier: \\'pdf\\'\\n     version: \\'{latest}\\'\\n     contributor: []\\n     url: \\'https://cdn.door43.org/en/ult/v{latest}/pdf/en_ult_v{latest}.pdf\\'\\n\\nprojects:\\n  -\\n    identifier: \\'gen\\'\\n    version: \\'{latest}\\'\\n    media:\\n      -\\n       identifier: \\'pdf\\'\\n       version: \\'{latest}\\'\\n       contributor: []\\n       url: \\'https://cdn.door43.org/en/ult/v{latest}/pdf/en_ult_01-GEN_v{latest}.pdf\\'\\n\\n  -\\n    identifier: \\'rev\\'\\n    version: \\'{latest}\\'\\n    media:\\n      -\\n       identifier: \\'pdf\\'\\n       version: \\'{latest}\\'\\n       contributor: []\\n       url: \\'https://cdn.door43.org/en/ult/v{latest}/pdf/en_ult_67-REV_v{latest}.pdf\\'\\n`;\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  chosenTextName : \\'textG\\',\\n  chosenText : textG,\\n  languageCode : \\'en\\',\\n  givenLocation : \"that was supplied\",\\n}\\n\\nfunction OurCheckManifestText(props) {\\n  const { username, languageCode, chosenText, chosenTextName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because checkManifestText is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {chosenTextName}\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await checkManifestText(username, languageCode, \\'LT\\', \\'en_ult\\', \\'master\\', chosenText, givenLocation, checkingOptions);\\n      if (!rawResults.successList || !rawResults.successList.length)\\n        rawResults.successList = [\"Done manifest text checks\"];\\n      setResults(\\n        <div>\\n          <b>Check</b> {chosenTextName}: \"{chosenText.substr(0,256)}\\u2026\"<br/><br/>\\n          <b>Manifest contents</b>: <RenderNumberedLines text={chosenText} />\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckManifestText function\\n\\n<OurCheckManifestText data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/manifest-text-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/markdown-text-check.md":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/markdown-text-check.md ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    'react-markdown': __webpack_require__(/*! react-markdown */ \"./node_modules/react-markdown/lib/react-markdown.js\"),\n    './markdown-text-check': __webpack_require__(/*! ./markdown-text-check */ \"./src/core/markdown-text-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Markdown Text Check Sandbox\\n\\nThis function checks the given markdown-formatted text for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport Markdown from \\'react-markdown\\'\\nimport { checkMarkdownText } from \\'./markdown-text-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Markdown text samples\\nconst textSG = `# Short Good Markdown Test\\n\\nThis is a paragraph.\\n\\n## Second level heading\\n\\nAnother paragraph.\\n\\n  * List item 1\\n  * List item 2\\n`;\\nconst textSB = `### Short Bad Markdown Test\\nThis should be a paragraph.\\n\\n# First level heading\\n\\nAnother  paragraph.\\n\\n  * List item 1\\n   * List item 2\\n`;\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  chosenTextName : \\'textSB\\',\\n  chosenText : textSB,\\n  languageCode : \\'en\\',\\n  repoCode : \\'TN\\',\\n  givenLocation : \"that was supplied\",\\n}\\n\\nfunction OurCheckMarkdownText(props) {\\n  const { username, languageCode, repoCode, chosenText, chosenTextName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because checkMarkdownText is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {chosenTextName}\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await checkMarkdownText(username, languageCode, repoCode, chosenTextName, chosenText, givenLocation, checkingOptions);\\n      if (!rawResults.successList || !rawResults.successList.length)\\n        rawResults.successList = [\"Done markdown text checks\"];\\n      setResults(\\n        <div>\\n          <b>Check</b> {chosenTextName}: \"{chosenText.substr(0,256)}\\u2026\"<br/><br/>\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckMarkdownText function\\n\\n<OurCheckMarkdownText data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/markdown-text-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/notes-tsv7-row-check.md":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/notes-tsv7-row-check.md ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './notes-tsv7-row-check': __webpack_require__(/*! ./notes-tsv7-row-check */ \"./src/core/notes-tsv7-row-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Notes (TSV) Row Check Sandbox\\n\\nDesigned for the new Translation Notes (TN2) and Study Notes (SN), this function checks one tab-separated line for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport { checkNotesTSV7DataRow } from \\'./notes-tsv7-row-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Empty, Header, Nonsense, Good, Bad, Very bad, and Actual line samples\\nconst lineE = \"\";\\nconst lineH = \"Reference\\\\tID\\\\tTags\\\\tSupportReference\\\\tQuote\\\\tOccurrence\\\\tNote\";\\nconst lineN = \"Peace on Earth, good will to all men/people!\";\\nconst lineG = \"2:3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tThis is an  optional note\";\\nconst lineB1 = \"2:3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\t<br>Boo\";\\nconst lineB2 = \"99:3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tBoo\";\\nconst lineB3 = \"2:boo\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tNote3\";\\nconst lineB4 = \"2:3\\\\tw3r5q\\\\t\\\\t1\\\\t\\\\tNote4\";\\nconst lineB5 = \"2:3\\\\tw3r5\\\\tLaugh\\\\t\\\\t1\\\\t\\\\tNote5\";\\nconst lineB6 = \"2:3\\\\tw3r5\\\\t\\\\tCan\\u2019t remember\\\\t1\\\\t\\\\tNote6\";\\nconst lineB7 = \"2:3\\\\tw3r5\\\\t\\\\t17\\\\t\\\\tNote7\";\\nconst lineB8 = \"2:3\\\\tw3r5\\\\t\\\\t1\\\\tBad ellipse...\\\\tNote8\";\\nconst lineB9 = \"2:3\\\\tw3r\\\\t\\\\t1\\\\t\\\\t<br>Boo hoo,, lost my shoe !\";\\nconst lineV = \"200:9\\\\tW-3r5\\\\tLaugh\\\\t\\\\t17\\\\tBad ellipse...\\\\t<br>Boo hoo,,<br> lost my shoe !\";\\nconst lineA1 = \"front:intro\\\\td9wn\\\\t\\\\t\\\\t0\\\\t\\\\t# Introduction to Genesis<br><br>## Part 1: General Introduction<br><br>### Outline of Genesis<br><br>1. From the Creation to the Tower of Babel<br>- The account of the creation of the heavens and the earth (1:1\\u20134:26)<br>- The account of Adam (5:1\\u20136:8)<br>- The account of Noah (6:9\\u201311:9)<br>- The account of Shem (11:10\\u201311:26)<br>- The account of Terah (11:27\\u201311:32)<br>1. The accounts of the Patriarchs<br>- The account of Abraham (12:1-25:11)<br>- The account of Ishmael (25:12\\u201325:18)<br>- The account of Isaac, focusing on Jacob (25:19\\u201335:29)<br>- The account of Esau (36:1\\u201337:1)<br>- The account of Jacob, focusing on Joseph (37:2\\u201350:26)<br><br>### What is Genesis about?<br><br>Genesis begins with the early years of creation. It tells about God creating heaven, earth, and the first humans. It also tells about the first time humans sinned. This caused humans to be separated from God and to eventually die. Genesis 1-11 briefly tells about other important events that occurred over many hundreds of years. (See: [[rc://en/tw/dict/bible/kt/sin]] and [[rc://en/tw/dict/bible/other/death]])<br><br>Genesis is also about the beginning of God\\u2019s people. Genesis 12-50 tells about how God remained faithful to Abraham and his descendants. Abraham\\u2019s descendants became known as the Hebrews and later as the Israelites. These people would worship Yahweh and be his people.<br><br>Genesis ends with Abraham\\u2019s descendants living in Egypt with the hope of returning one day to the Promised Land. (See: [[rc://en/tw/dict/bible/kt/promisedland]])<br><br>### How should the title of this book be translated?<br><br>\\u201CGenesis\\u201D means \\u201Cbeginning,\\u201D so translators should express this idea in their title. Titles such as \\u201CThe Beginning of Things\\u201D may be suitable. (See: [[rc://en/ta/man/translate/translate-names]])<br><br>### Who wrote Genesis?<br><br>The writers of both the Old and New Testaments presented Moses as being very involved with writing the book of Genesis. Since ancient times, both Jews and Christians have thought that Moses wrote Genesis, Exodus, Leviticus, Numbers, and Deuteronomy.<br><br>## Part 2: Important Religious and Cultural Concepts<br><br>### What are the covenants mentioned in Genesis?<br><br>A covenant is a formal, binding agreement between two parties that one or both parties must fulfill.<br><br>God made three covenants in Genesis. In the covenant with Adam, God promised to bless Adam and cause him to prosper. Adam was not allowed to eat fruit from the tree of knowledge of good and evil. God promised that Adam would die if he disobeyed what he commanded.<br><br>In the covenant with Noah, God promised to never again destroy the world with a flood.<br><br>In the covenant with Abraham, God promised to make Abraham\\u2019s descendants into a great nation. He also promised to protect them and to give them a land of their own.<br><br>### What was God\\u2019s purpose for the book of Genesis?<br><br>The book of Genesis says that God created a very good world. However, the world became cursed because human beings began to sin. But Genesis shows that God continues to have complete control over the world.<br><br>Genesis also describes the start of God\\u2019s plan to bless the whole world again. This is shown when God makes a covenant with Abraham. With this covenant, God chose Abraham and his descendants to be his people. God promised to bless the world through Abraham\\u2019s descendants.<br><br>### What was the custom for inheritance as described by Genesis?<br><br>There are several passages in Genesis that show the customs of a father who is about to die passing on a blessing to his son. Abraham blessed his son, Isaac, and made him the ancestor of the people of Israel. However, Ishmael, Abraham\\u2019s other son, did not receive that same divine blessing. Likewise, Isaac\\u2019s older son Esau  did not receive the blessing. Isaac\\u2019s younger son, Jacob, received it instead. (See: [[rc://en/tw/dict/bible/kt/inherit]] and [[rc://en/tw/dict/bible/kt/bless]])<br><br>Also, it was the custom for a man to divide among his sons his material wealth and land. All his sons received equal portions except the oldest son. The firstborn son received twice as much. His portion was called a double portion. Esau gave up his right to receive the double portion.<br><br>### How does Genesis present sin and evil?<br><br>Genesis presents sin as doing things that are against God\\u2019s word and God\\u2019s ways. It presents evil as the opposite of good.<br><br>Sin and evil have affected all people. This started when Adam disobeyed God in the Garden of Eden.<br><br>## Part 3: Important Translation Issues<br><br>### What is one way in which Genesis marks the beginning of important sections?<br><br>Genesis uses one Hebrew phrase that the ULT translates as \\u201Cthis is the record of,\\u201D \\u201Cthese were the events concerning,\\u201D or \\u201Cthese were the descendants of.\\u201D The information in these sections may have come from sources much older than Moses. These passages are 2:4; 5:1; 6:9; 10:1; 11:10, 27; 25:12, 19; 36:1, 9; 37:2.<br><br>If the translator wants to translate in only two ways, we recommend for most passages a phrase such as, \\u201Cthis is the record about\\u201D or \\u201Cthis is information about.\\u201D Some passages will be better translated, however, as \\u201CThese were the descendants of.\\u201D<br><br>### Why are the beginnings of some narrative sections in Genesis difficult to translate?<br><br>Often in Genesis, the author first summarizes what is about to happen. Then in the following verses, the author tells the details of what happened. Probable examples of this style occur in Gen. 1:1, 6:22, 18:1, 21:1 and 22:1.<br><br>However, in many languages, it is preferred to write summaries at the end of a narrative. In this case, translators may choose a different approach. For example, in Gen. 1:1 (\\u201CIn the beginning God created the heavens and the earth\\u201D), translators may decide to translate like this: \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D<br><br>### What is the difference between \\u201Cpeople,\\u201D \\u201Cpeoples,\\u201D and \\u201Cpeople groups\\u201D?<br><br>The word \\u201Cpeople\\u201D refers to all the individuals who belong to a group, such as \\u201Cthe people of Israel.\\u201D The word \\u201Cpeoples\\u201D (used in the ULT) refers to multiple groups of people. Each people group might speak their own language, have their own customs, and worships their own gods. Some different peoples in the ancient Near East were those of Israel, Egypt, Edom, Moab, and Ammon.<br><br>The expression \\u201Cpeople groups\\u201D (used in the UST) means the same thing as \\u201Cpeoples\\u201D in the ULT. The translator should use the most equivalent term that is common in the project language.<br><br>### What is the relationship between individuals and peoples that have similar names?<br><br>Many individuals in Genesis eventually had large numbers of descendants who were called after their ancestor\\u2019s name. For example, Cush was the name of an individual. But, \\u201CCush\\u201D also became the name of nation that his descendants formed. They were called \\u201CCushites.\\u201D If possible, when translating these names, the translator should make the individual\\u2019s name and the nation\\u2019s name similar. Examples of this are \\u201CCush\\u201D and \\u201CCushite\\u201D or \\u201CMoab\\u201D and \\u201CMoabite.\\u201D Otherwise, the translator may say, \\u201Cthe descendants of Cush\\u201D or \\u201Cthe descendants of Moab.\\u201D<br><br>### What do the phrases \\u201Cto this day\\u201D or \\u201Cof today\\u201D mean?<br><br>These phrases were used by the narrator to refer to the time when he was writing. The translator should be aware that \\u201Cto this day\\u201D and \\u201Cof today\\u201D refer to a time already passed. The translator might decide to say, \\u201Cto this day, at the time when this is being written,\\u201D or, \\u201Cto this day, at the time of writing.\\u201D This Hebrew phrase occurs in Gen. 19:37, 19:38, 22:14, 26:33, 32:32, 35:20, 47:26, 48:18.\";\\nconst lineA2 = \"1:intro\\\\tzb6f\\\\t\\\\t\\\\t0\\\\t\\\\t# Genesis 01 General Notes<br><br>## Structure and formatting<br><br>This chapter presents the first account of God creating the world. There is a pattern to this account: \\u201CGod said\\u2026God saw that it was good\\u2026This was evening and morning, the first day.\\u201D Translators should preserve this pattern in their versions.<br><br>## Special concepts in this chapter<br><br>### The universe<br><br>This account of creation is told within the framework of ancient Hebrew ideas about the universe: the earth was resting with water around it and below it. Over the earth was something like a vast dome, called \\u201Can expanse between the waters\\u201D (1:6), on top of which was more water. Translators should try to keep these original images in their work, even though readers in their project language might have a completely different idea of what the universe is like.<br><br>### Evening and morning<br><br>Genesis 1 presents the ancient Hebrew idea of a day: it begins with sunset, lasts through the night and continues through the daylight hours until the next sunset. This pattern should be preserved in translation, even if readers in the project language define \\u201Cday\\u201D differently.<br><br>## Other possible translation difficulties in this chapter<br><br>### \\u201CIn the beginning\\u201D<br><br>Some languages and cultures speak of the world as if it has always existed, as if it had no beginning. But \\u201Cvery long ago\\u201D is different from \\u201Cin the beginning,\\u201D and you need to be sure that your translation communicates correctly.<br><br>### \\u201CGod said, \\u2018Let there be\\u2019\\u201D<br><br>This expression occurs often in this chapter. It can be difficult to translate, because God is not shown as talking to a particular person. If God is talking to a thing, it is something not yet in existence. Translators should find the most natural way in the project language to signal the idea that God spoke things into existence; he created the world and the things in it by simply commanding that they should exist.\";\\nconst lineA3 = \"1:1\\\\tf2mg\\\\t\\\\t0\\\\t\\\\t\\\\tIn the beginning, God created the heavens and the earth \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D This statement summarizes the rest of the chapter. Some languages translate it as \\u201CA very long time ago God created the heavens and the earth.\\u201D Translate it in a way that shows this actually happened and is not just a folk story.\";\\nconst lineA4 = \"1:3\\\\td7qw\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be light\\\\tThis is a command. By commanding that light should exist, God made it exist. (See: [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA5 = \"1:5\\\\tjc2d\\\\tfigs-merism\\\\t\\\\t0\\\\tevening and morning\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. (See: [[rc://en/ta/man/translate/figs-merism]])\";\\nconst lineA6 = \"1:6\\\\turb3\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be an expanse\\u2026let it divide\\\\tThese are commands. By commanding that the expanse should exist and that it divide the waters, God made it exist and divide the waters. (See: [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA7 = \"1:8\\\\tss9r\\\\tfigs-merism\\\\t\\\\t0\\\\tevening and morning\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. See how you translated this in [Genesis 1:5](../01/05.md). (See: [[rc://en/ta/man/translate/figs-merism]])\";\\nconst lineA8 = \"1:9\\\\tzu6f\\\\tfigs-activepassive\\\\t\\\\t0\\\\tLet the waters\\u2026be gathered\\\\tThis can be translated with an active verb. This is a command. By commanding that the waters gather together, God made them gather together. Alternate translation: \\u201CLet the waters\\u2026gather\\u201D or \\u201CLet the waters\\u2026come together\\u201D (See: [[rc://en/ta/man/translate/figs-activepassive]] and [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA9 = \"1:9\\\\tha33\\\\t\\\\t\\\\t0\\\\tIt was so\\\\t\\u201CIt happened like that\\u201D or \\u201CThat is what happened.\\u201D What God commanded happened just as he said it should. This phrase appears throughout the chapter and has the same meaning wherever it appears. See how you translated it in [Genesis 1:7](../01/07.md).\";\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  languageCode: \\'en\\',\\n  repoCode: \\'TN2\\',\\n  tableLineName : \\'lineA9\\',\\n  tableLine : lineA9,\\n  bookID : \\'GEN\\', C:\\'1\\', V:\\'2\\',\\n  givenLocation : \\'that was supplied\\',\\n}\\n\\nfunction OurCheckNotesRow(props) {\\n  const { username, languageCode, repoCode, bookID, C, V, tableLine, tableLineName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because checkNotesTSV7DataRow is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {tableLineName} <b>{bookID}</b>\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await checkNotesTSV7DataRow(username, languageCode, repoCode, tableLine, bookID, C, V, givenLocation, checkingOptions);\\n      setResults(\\n        <div>\\n          <b>Check</b> {tableLineName}: \"{tableLine.substr(0,256)}\\u2026\"<br/><br/>\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckNotesRow function\\n\\n<OurCheckNotesRow data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/notes-tsv7-row-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/notes-tsv7-table-check.md":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/notes-tsv7-table-check.md ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './notes-tsv7-table-check': __webpack_require__(/*! ./notes-tsv7-table-check */ \"./src/core/notes-tsv7-table-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Notes (TSV) Table Text Check Sandbox\\n\\nDesigned for the new Translation Notes (TN2) and Study Notes (SN), this function checks the given block of note (TSV) table lines for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport { checkNotesTSV7Table } from \\'./notes-tsv7-table-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Text samples\\nconst textA = `Reference\\\\tID\\\\tTags\\\\tSupportReference\\\\tQuote\\\\tOccurrence\\\\tNote\\n2:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\t<br>Boo\\n99:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\tBad chapter number\\n2:boo\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\tBad verse number\\n2:3\\\\tw3r5q\\\\t\\\\t\\\\t\\\\t1\\\\tNote4\\n2:3\\\\tw3r5\\\\t\\\\tLaugh\\\\t\\\\t\\\\t1\\\\tNote5\\n2:3\\\\tw3r5\\\\t\\\\t\\\\tCan\\u2019t remember\\\\t\\\\t1\\\\tNote6\\n2:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t17\\\\tNote7\\n2:3\\\\tw3r5\\\\t\\\\t\\\\tBad ellipse...\\\\t1\\\\tNote8\\n2:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\t<br>Boo hoo,, lost my shoe !`;\\nconst textG = `Reference\\\\tID\\\\tTags\\\\tSupportReference\\\\tQuote\\\\tOccurrence\\\\tNote\\nfront:intro\\\\td9wn\\\\t\\\\t\\\\t\\\\t0\\\\t# Introduction to Genesis<br><br>## Part 1: General Introduction<br><br>### Outline of Genesis<br><br>1. From the Creation to the Tower of Babel<br>- The account of the creation of the heavens and the earth (1:1\\u20134:26)<br>- The account of Adam (5:1\\u20136:8)<br>- The account of Noah (6:9\\u201311:9)<br>- The account of Shem (11:10\\u201311:26)<br>- The account of Terah (11:27\\u201311:32)<br>1. The accounts of the Patriarchs<br>- The account of Abraham (12:1-25:11)<br>- The account of Ishmael (25:12\\u201325:18)<br>- The account of Isaac, focusing on Jacob (25:19\\u201335:29)<br>- The account of Esau (36:1\\u201337:1)<br>- The account of Jacob, focusing on Joseph (37:2\\u201350:26)<br><br>### What is Genesis about?<br><br>Genesis begins with the early years of creation. It tells about God creating heaven, earth, and the first humans. It also tells about the first time humans sinned. This caused humans to be separated from God and to eventually die. Genesis 1-11 briefly tells about other important events that occurred over many hundreds of years. (See: [[rc://en/tw/dict/bible/kt/sin]] and [[rc://en/tw/dict/bible/other/death]])<br><br>Genesis is also about the beginning of God\\u2019s people. Genesis 12-50 tells about how God remained faithful to Abraham and his descendants. Abraham\\u2019s descendants became known as the Hebrews and later as the Israelites. These people would worship Yahweh and be his people.<br><br>Genesis ends with Abraham\\u2019s descendants living in Egypt with the hope of returning one day to the Promised Land. (See: [[rc://en/tw/dict/bible/kt/promisedland]])<br><br>### How should the title of this book be translated?<br><br>\\u201CGenesis\\u201D means \\u201Cbeginning,\\u201D so translators should express this idea in their title. Titles such as \\u201CThe Beginning of Things\\u201D may be suitable. (See: [[rc://en/ta/man/translate/translate-names]])<br><br>### Who wrote Genesis?<br><br>The writers of both the Old and New Testaments presented Moses as being very involved with writing the book of Genesis. Since ancient times, both Jews and Christians have thought that Moses wrote Genesis, Exodus, Leviticus, Numbers, and Deuteronomy.<br><br>## Part 2: Important Religious and Cultural Concepts<br><br>### What are the covenants mentioned in Genesis?<br><br>A covenant is a formal, binding agreement between two parties that one or both parties must fulfill.<br><br>God made three covenants in Genesis. In the covenant with Adam, God promised to bless Adam and cause him to prosper. Adam was not allowed to eat fruit from the tree of knowledge of good and evil. God promised that Adam would die if he disobeyed what he commanded.<br><br>In the covenant with Noah, God promised to never again destroy the world with a flood.<br><br>In the covenant with Abraham, God promised to make Abraham\\u2019s descendants into a great nation. He also promised to protect them and to give them a land of their own.<br><br>### What was God\\u2019s purpose for the book of Genesis?<br><br>The book of Genesis says that God created a very good world. However, the world became cursed because human beings began to sin. But Genesis shows that God continues to have complete control over the world.<br><br>Genesis also describes the start of God\\u2019s plan to bless the whole world again. This is shown when God makes a covenant with Abraham. With this covenant, God chose Abraham and his descendants to be his people. God promised to bless the world through Abraham\\u2019s descendants.<br><br>### What was the custom for inheritance as described by Genesis?<br><br>There are several passages in Genesis that show the customs of a father who is about to die passing on a blessing to his son. Abraham blessed his son, Isaac, and made him the ancestor of the people of Israel. However, Ishmael, Abraham\\u2019s other son, did not receive that same divine blessing. Likewise, Isaac\\u2019s older son Esau  did not receive the blessing. Isaac\\u2019s younger son, Jacob, received it instead. (See: [[rc://en/tw/dict/bible/kt/inherit]] and [[rc://en/tw/dict/bible/kt/bless]])<br><br>Also, it was the custom for a man to divide among his sons his material wealth and land. All his sons received equal portions except the oldest son. The firstborn son received twice as much. His portion was called a double portion. Esau gave up his right to receive the double portion.<br><br>### How does Genesis present sin and evil?<br><br>Genesis presents sin as doing things that are against God\\u2019s word and God\\u2019s ways. It presents evil as the opposite of good.<br><br>Sin and evil have affected all people. This started when Adam disobeyed God in the Garden of Eden.<br><br>## Part 3: Important Translation Issues<br><br>### What is one way in which Genesis marks the beginning of important sections?<br><br>Genesis uses one Hebrew phrase that the ULT translates as \\u201Cthis is the record of,\\u201D \\u201Cthese were the events concerning,\\u201D or \\u201Cthese were the descendants of.\\u201D The information in these sections may have come from sources much older than Moses. These passages are 2:4; 5:1; 6:9; 10:1; 11:10, 27; 25:12, 19; 36:1, 9; 37:2.<br><br>If the translator wants to translate in only two ways, we recommend for most passages a phrase such as, \\u201Cthis is the record about\\u201D or \\u201Cthis is information about.\\u201D Some passages will be better translated, however, as \\u201CThese were the descendants of.\\u201D<br><br>### Why are the beginnings of some narrative sections in Genesis difficult to translate?<br><br>Often in Genesis, the author first summarizes what is about to happen. Then in the following verses, the author tells the details of what happened. Probable examples of this style occur in Gen. 1:1, 6:22, 18:1, 21:1 and 22:1.<br><br>However, in many languages, it is preferred to write summaries at the end of a narrative. In this case, translators may choose a different approach. For example, in Gen. 1:1 (\\u201CIn the beginning God created the heavens and the earth\\u201D), translators may decide to translate like this: \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D<br><br>### What is the difference between \\u201Cpeople,\\u201D \\u201Cpeoples,\\u201D and \\u201Cpeople groups\\u201D?<br><br>The word \\u201Cpeople\\u201D refers to all the individuals who belong to a group, such as \\u201Cthe people of Israel.\\u201D The word \\u201Cpeoples\\u201D (used in the ULT) refers to multiple groups of people. Each people group might speak their own language, have their own customs, and worships their own gods. Some different peoples in the ancient Near East were those of Israel, Egypt, Edom, Moab, and Ammon.<br><br>The expression \\u201Cpeople groups\\u201D (used in the UST) means the same thing as \\u201Cpeoples\\u201D in the ULT. The translator should use the most equivalent term that is common in the project language.<br><br>### What is the relationship between individuals and peoples that have similar names?<br><br>Many individuals in Genesis eventually had large numbers of descendants who were called after their ancestor\\u2019s name. For example, Cush was the name of an individual. But, \\u201CCush\\u201D also became the name of nation that his descendants formed. They were called \\u201CCushites.\\u201D If possible, when translating these names, the translator should make the individual\\u2019s name and the nation\\u2019s name similar. Examples of this are \\u201CCush\\u201D and \\u201CCushite\\u201D or \\u201CMoab\\u201D and \\u201CMoabite.\\u201D Otherwise, the translator may say, \\u201Cthe descendants of Cush\\u201D or \\u201Cthe descendants of Moab.\\u201D<br><br>### What do the phrases \\u201Cto this day\\u201D or \\u201Cof today\\u201D mean?<br><br>These phrases were used by the narrator to refer to the time when he was writing. The translator should be aware that \\u201Cto this day\\u201D and \\u201Cof today\\u201D refer to a time already passed. The translator might decide to say, \\u201Cto this day, at the time when this is being written,\\u201D or, \\u201Cto this day, at the time of writing.\\u201D This Hebrew phrase occurs in Gen. 19:37, 19:38, 22:14, 26:33, 32:32, 35:20, 47:26, 48:18.\";\\nconst lineA2 = \"1:intro\\\\tzb6f\\\\t\\\\t\\\\t\\\\t0\\\\t# Genesis 01 General Notes<br><br>## Structure and formatting<br><br>This chapter presents the first account of God creating the world. There is a pattern to this account: \\u201CGod said\\u2026God saw that it was good\\u2026This was evening and morning, the first day.\\u201D Translators should preserve this pattern in their versions.<br><br>## Special concepts in this chapter<br><br>### The universe<br><br>This account of creation is told within the framework of ancient Hebrew ideas about the universe: the earth was resting with water around it and below it. Over the earth was something like a vast dome, called \\u201Can expanse between the waters\\u201D (1:6), on top of which was more water. Translators should try to keep these original images in their work, even though readers in their project language might have a completely different idea of what the universe is like.<br><br>### Evening and morning<br><br>Genesis 1 presents the ancient Hebrew idea of a day: it begins with sunset, lasts through the night and continues through the daylight hours until the next sunset. This pattern should be preserved in translation, even if readers in the project language define \\u201Cday\\u201D differently.<br><br>## Other possible translation difficulties in this chapter<br><br>### \\u201CIn the beginning\\u201D<br><br>Some languages and cultures speak of the world as if it has always existed, as if it had no beginning. But \\u201Cvery long ago\\u201D is different from \\u201Cin the beginning,\\u201D and you need to be sure that your translation communicates correctly.<br><br>### \\u201CGod said, \\u2018Let there be\\u2019\\u201D<br><br>This expression occurs often in this chapter. It can be difficult to translate, because God is not shown as talking to a particular person. If God is talking to a thing, it is something not yet in existence. Translators should find the most natural way in the project language to signal the idea that God spoke things into existence; he created the world and the things in it by simply commanding that they should exist.\\n1:1\\\\tf2mg\\\\t\\\\t\\\\t0\\\\t\\\\tIn the beginning, God created the heavens and the earth \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D This statement summarizes the rest of the chapter. Some languages translate it as \\u201CA very long time ago God created the heavens and the earth.\\u201D Translate it in a way that shows this actually happened and is not just a folk story.\\n1:3\\\\td7qw\\\\t\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be light\\\\tThis is a command. By commanding that light should exist, God made it exist. (See: [[rc://en/ta/man/translate/figs-imperative]])\\n1:5\\\\tjc2d\\\\t\\\\tfigs-merism\\\\t\\\\t0\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. (See: [[rc://en/ta/man/translate/figs-merism]])\\n1:6\\\\turb3\\\\t\\\\tfigs-imperative\\\\t\\\\t0\\\\tThese are commands. By commanding that the expanse should exist and that it divide the waters, God made it exist and divide the waters. (See: [[rc://en/ta/man/translate/figs-imperative]])\\n1:8\\\\tss9r\\\\t\\\\tfigs-merism\\\\t\\\\t0\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. See how you translated this in [Genesis 1:5](../01/05.md). (See: [[rc://en/ta/man/translate/figs-merism]])\\n1:9\\\\tzu6f\\\\t\\\\tfigs-activepassive\\\\t\\\\t0\\\\tThis can be translated with an active verb. This is a command. By commanding that the waters gather together, God made them gather together. Alternate translation: \\u201CLet the waters\\u2026gather\\u201D or \\u201CLet the waters\\u2026come together\\u201D (See: [[rc://en/ta/man/translate/figs-activepassive]] and [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA9 = \"1:9\\\\tha33\\\\t\\\\t\\\\t\\\\t0\\\\t\\u201CIt happened like that\\u201D or \\u201CThat is what happened.\\u201D What God commanded happened just as he said it should. This phrase appears throughout the chapter and has the same meaning wherever it appears. See how you translated it in [Genesis 1:7](../01/07.md).`;\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  languageCode: \\'en\\',\\n  repoCode: \\'TN2\\',\\n  tableTextName : \\'textG\\',\\n  tableText : textG,\\n  bookID : \\'GEN\\',\\n  filename: \\'dummyFilename\\',\\n  givenLocation : \\'that was supplied\\',\\n}\\n\\nfunction OurCheckNotesTSV7Table(props) {\\n  const { username, languageCode, repoCode, bookID, filename, tableText, tableTextName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because checkNotesTSV7Table is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {languageCode} {repoCode} for {tableTextName} <b>{bookID}</b>\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await checkNotesTSV7Table(username, languageCode, repoCode, bookID, filename, tableText, givenLocation, checkingOptions);\\n      setResults(\\n        <div>\\n          <b>Check</b> {tableTextName}: \"{tableText.substr(0,256)}\\u2026\"<br/><br/>\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckNotesTSV7Table function\\n\\n<OurCheckNotesTSV7Table data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/notes-tsv7-table-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/plain-text-check.md":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/plain-text-check.md ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './plain-text-check': __webpack_require__(/*! ./plain-text-check */ \"./src/core/plain-text-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Plain Text Check Sandbox\\n\\nThis function checks the given text for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { checkPlainText } from \\'./plain-text-check\\';\\nimport { RenderNumberedLines, RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Plain text samples\\nconst textSG = `Short Good Plain Test\\n\\nThis is a paragraph.\\n\\nSecond level heading\\n\\nAnother paragraph.\\n\\n  List item 1\\n  List item 2\\n`;\\nconst textSB = `Short Ba,d Plain Test\\n\\nThis should be a  paragraph.\\n\\nFirst level heading\\n\\nAnother  paragraph.\\n\\n  List item 1\\n   List item 2\\n`;\\n\\n// You can choose any of the above texts here\\n//  (to demonstrate differing results)\\nconst username = \\'unfoldingWord\\';\\nconst chosenText = textSB;\\nconst chosenTextName = \\'textSB\\';\\nconst checkingOptions = {};\\n\\nconst rawResults = checkPlainText(username, \\'en\\', \\'TN\\', \\'raw\\', chosenTextName, chosenText, \\'that was supplied\\', checkingOptions);\\nif (!rawResults.successList || !rawResults.successList.length)\\n  rawResults.successList = [\"Done plain text checks\"];\\n\\n<>\\n<b>Source (normalized)</b>: <RenderNumberedLines text={chosenText} />\\n<RenderRawResults results={rawResults} />\\n</>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/plain-text-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/questions-tsv7-row-check.md":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/questions-tsv7-row-check.md ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './questions-tsv7-row-check': __webpack_require__(/*! ./questions-tsv7-row-check */ \"./src/core/questions-tsv7-row-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Questions (TSV) Row Check Sandbox\\n\\nDesigned for the new Translation Questions (TQ) and Study Questions (SQ), this function checks one tab-separated line for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport { checkQuestionsTSV7DataRow } from \\'./questions-tsv7-row-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Empty, Header, Nonsense, Good, Bad, Very bad, and Actual line samples\\nconst lineE = \"\";\\nconst lineH = \"Reference\\\\tID\\\\tTags\\\\tQuote\\\\tOccurrence\\\\tQuestion\\\\tResponse\";\\nconst lineN = \"Peace on Earth, good will to all men/people!\";\\nconst lineG = \"2:3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tThis is an  optional note\";\\nconst lineB1 = \"2:3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\t<br>Boo\";\\nconst lineB2 = \"99:3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tBoo\";\\nconst lineB3 = \"2:boo\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tNote3\";\\nconst lineB4 = \"2:3\\\\tw3r5q\\\\t\\\\t1\\\\t\\\\tNote4\";\\nconst lineB5 = \"2:3\\\\tw3r5\\\\tLaugh\\\\t\\\\t1\\\\t\\\\tNote5\";\\nconst lineB6 = \"2:3\\\\tw3r5\\\\t\\\\tCan\\u2019t remember\\\\t1\\\\t\\\\tNote6\";\\nconst lineB7 = \"2:3\\\\tw3r5\\\\t\\\\t17\\\\t\\\\tNote7\";\\nconst lineB8 = \"2:3\\\\tw3r5\\\\t\\\\t1\\\\tBad ellipse...\\\\tNote8\";\\nconst lineB9 = \"2:3\\\\tw3r\\\\t\\\\t1\\\\t\\\\t<br>Boo hoo,, lost my shoe !\";\\nconst lineV = \"200:9\\\\tW-3r5\\\\tLaugh\\\\t\\\\t17\\\\tBad ellipse...\\\\t<br>Boo hoo,,<br> lost my shoe !\";\\nconst lineA1 = \"front:intro\\\\td9wn\\\\t\\\\t\\\\t0\\\\t\\\\t# Introduction to Genesis<br><br>## Part 1: General Introduction<br><br>### Outline of Genesis<br><br>1. From the Creation to the Tower of Babel<br>- The account of the creation of the heavens and the earth (1:1\\u20134:26)<br>- The account of Adam (5:1\\u20136:8)<br>- The account of Noah (6:9\\u201311:9)<br>- The account of Shem (11:10\\u201311:26)<br>- The account of Terah (11:27\\u201311:32)<br>1. The accounts of the Patriarchs<br>- The account of Abraham (12:1-25:11)<br>- The account of Ishmael (25:12\\u201325:18)<br>- The account of Isaac, focusing on Jacob (25:19\\u201335:29)<br>- The account of Esau (36:1\\u201337:1)<br>- The account of Jacob, focusing on Joseph (37:2\\u201350:26)<br><br>### What is Genesis about?<br><br>Genesis begins with the early years of creation. It tells about God creating heaven, earth, and the first humans. It also tells about the first time humans sinned. This caused humans to be separated from God and to eventually die. Genesis 1-11 briefly tells about other important events that occurred over many hundreds of years. (See: [[rc://en/tw/dict/bible/kt/sin]] and [[rc://en/tw/dict/bible/other/death]])<br><br>Genesis is also about the beginning of God\\u2019s people. Genesis 12-50 tells about how God remained faithful to Abraham and his descendants. Abraham\\u2019s descendants became known as the Hebrews and later as the Israelites. These people would worship Yahweh and be his people.<br><br>Genesis ends with Abraham\\u2019s descendants living in Egypt with the hope of returning one day to the Promised Land. (See: [[rc://en/tw/dict/bible/kt/promisedland]])<br><br>### How should the title of this book be translated?<br><br>\\u201CGenesis\\u201D means \\u201Cbeginning,\\u201D so translators should express this idea in their title. Titles such as \\u201CThe Beginning of Things\\u201D may be suitable. (See: [[rc://en/ta/man/translate/translate-names]])<br><br>### Who wrote Genesis?<br><br>The writers of both the Old and New Testaments presented Moses as being very involved with writing the book of Genesis. Since ancient times, both Jews and Christians have thought that Moses wrote Genesis, Exodus, Leviticus, Numbers, and Deuteronomy.<br><br>## Part 2: Important Religious and Cultural Concepts<br><br>### What are the covenants mentioned in Genesis?<br><br>A covenant is a formal, binding agreement between two parties that one or both parties must fulfill.<br><br>God made three covenants in Genesis. In the covenant with Adam, God promised to bless Adam and cause him to prosper. Adam was not allowed to eat fruit from the tree of knowledge of good and evil. God promised that Adam would die if he disobeyed what he commanded.<br><br>In the covenant with Noah, God promised to never again destroy the world with a flood.<br><br>In the covenant with Abraham, God promised to make Abraham\\u2019s descendants into a great nation. He also promised to protect them and to give them a land of their own.<br><br>### What was God\\u2019s purpose for the book of Genesis?<br><br>The book of Genesis says that God created a very good world. However, the world became cursed because human beings began to sin. But Genesis shows that God continues to have complete control over the world.<br><br>Genesis also describes the start of God\\u2019s plan to bless the whole world again. This is shown when God makes a covenant with Abraham. With this covenant, God chose Abraham and his descendants to be his people. God promised to bless the world through Abraham\\u2019s descendants.<br><br>### What was the custom for inheritance as described by Genesis?<br><br>There are several passages in Genesis that show the customs of a father who is about to die passing on a blessing to his son. Abraham blessed his son, Isaac, and made him the ancestor of the people of Israel. However, Ishmael, Abraham\\u2019s other son, did not receive that same divine blessing. Likewise, Isaac\\u2019s older son Esau  did not receive the blessing. Isaac\\u2019s younger son, Jacob, received it instead. (See: [[rc://en/tw/dict/bible/kt/inherit]] and [[rc://en/tw/dict/bible/kt/bless]])<br><br>Also, it was the custom for a man to divide among his sons his material wealth and land. All his sons received equal portions except the oldest son. The firstborn son received twice as much. His portion was called a double portion. Esau gave up his right to receive the double portion.<br><br>### How does Genesis present sin and evil?<br><br>Genesis presents sin as doing things that are against God\\u2019s word and God\\u2019s ways. It presents evil as the opposite of good.<br><br>Sin and evil have affected all people. This started when Adam disobeyed God in the Garden of Eden.<br><br>## Part 3: Important Translation Issues<br><br>### What is one way in which Genesis marks the beginning of important sections?<br><br>Genesis uses one Hebrew phrase that the ULT translates as \\u201Cthis is the record of,\\u201D \\u201Cthese were the events concerning,\\u201D or \\u201Cthese were the descendants of.\\u201D The information in these sections may have come from sources much older than Moses. These passages are 2:4; 5:1; 6:9; 10:1; 11:10, 27; 25:12, 19; 36:1, 9; 37:2.<br><br>If the translator wants to translate in only two ways, we recommend for most passages a phrase such as, \\u201Cthis is the record about\\u201D or \\u201Cthis is information about.\\u201D Some passages will be better translated, however, as \\u201CThese were the descendants of.\\u201D<br><br>### Why are the beginnings of some narrative sections in Genesis difficult to translate?<br><br>Often in Genesis, the author first summarizes what is about to happen. Then in the following verses, the author tells the details of what happened. Probable examples of this style occur in Gen. 1:1, 6:22, 18:1, 21:1 and 22:1.<br><br>However, in many languages, it is preferred to write summaries at the end of a narrative. In this case, translators may choose a different approach. For example, in Gen. 1:1 (\\u201CIn the beginning God created the heavens and the earth\\u201D), translators may decide to translate like this: \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D<br><br>### What is the difference between \\u201Cpeople,\\u201D \\u201Cpeoples,\\u201D and \\u201Cpeople groups\\u201D?<br><br>The word \\u201Cpeople\\u201D refers to all the individuals who belong to a group, such as \\u201Cthe people of Israel.\\u201D The word \\u201Cpeoples\\u201D (used in the ULT) refers to multiple groups of people. Each people group might speak their own language, have their own customs, and worships their own gods. Some different peoples in the ancient Near East were those of Israel, Egypt, Edom, Moab, and Ammon.<br><br>The expression \\u201Cpeople groups\\u201D (used in the UST) means the same thing as \\u201Cpeoples\\u201D in the ULT. The translator should use the most equivalent term that is common in the project language.<br><br>### What is the relationship between individuals and peoples that have similar names?<br><br>Many individuals in Genesis eventually had large numbers of descendants who were called after their ancestor\\u2019s name. For example, Cush was the name of an individual. But, \\u201CCush\\u201D also became the name of nation that his descendants formed. They were called \\u201CCushites.\\u201D If possible, when translating these names, the translator should make the individual\\u2019s name and the nation\\u2019s name similar. Examples of this are \\u201CCush\\u201D and \\u201CCushite\\u201D or \\u201CMoab\\u201D and \\u201CMoabite.\\u201D Otherwise, the translator may say, \\u201Cthe descendants of Cush\\u201D or \\u201Cthe descendants of Moab.\\u201D<br><br>### What do the phrases \\u201Cto this day\\u201D or \\u201Cof today\\u201D mean?<br><br>These phrases were used by the narrator to refer to the time when he was writing. The translator should be aware that \\u201Cto this day\\u201D and \\u201Cof today\\u201D refer to a time already passed. The translator might decide to say, \\u201Cto this day, at the time when this is being written,\\u201D or, \\u201Cto this day, at the time of writing.\\u201D This Hebrew phrase occurs in Gen. 19:37, 19:38, 22:14, 26:33, 32:32, 35:20, 47:26, 48:18.\";\\nconst lineA2 = \"1:intro\\\\tzb6f\\\\t\\\\t\\\\t0\\\\t\\\\t# Genesis 01 General Notes<br><br>## Structure and formatting<br><br>This chapter presents the first account of God creating the world. There is a pattern to this account: \\u201CGod said\\u2026God saw that it was good\\u2026This was evening and morning, the first day.\\u201D Translators should preserve this pattern in their versions.<br><br>## Special concepts in this chapter<br><br>### The universe<br><br>This account of creation is told within the framework of ancient Hebrew ideas about the universe: the earth was resting with water around it and below it. Over the earth was something like a vast dome, called \\u201Can expanse between the waters\\u201D (1:6), on top of which was more water. Translators should try to keep these original images in their work, even though readers in their project language might have a completely different idea of what the universe is like.<br><br>### Evening and morning<br><br>Genesis 1 presents the ancient Hebrew idea of a day: it begins with sunset, lasts through the night and continues through the daylight hours until the next sunset. This pattern should be preserved in translation, even if readers in the project language define \\u201Cday\\u201D differently.<br><br>## Other possible translation difficulties in this chapter<br><br>### \\u201CIn the beginning\\u201D<br><br>Some languages and cultures speak of the world as if it has always existed, as if it had no beginning. But \\u201Cvery long ago\\u201D is different from \\u201Cin the beginning,\\u201D and you need to be sure that your translation communicates correctly.<br><br>### \\u201CGod said, \\u2018Let there be\\u2019\\u201D<br><br>This expression occurs often in this chapter. It can be difficult to translate, because God is not shown as talking to a particular person. If God is talking to a thing, it is something not yet in existence. Translators should find the most natural way in the project language to signal the idea that God spoke things into existence; he created the world and the things in it by simply commanding that they should exist.\";\\nconst lineA3 = \"1:1\\\\tf2mg\\\\t\\\\t0\\\\t\\\\t\\\\tIn the beginning, God created the heavens and the earth \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D This statement summarizes the rest of the chapter. Some languages translate it as \\u201CA very long time ago God created the heavens and the earth.\\u201D Translate it in a way that shows this actually happened and is not just a folk story.\";\\nconst lineA4 = \"1:3\\\\td7qw\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be light\\\\tThis is a command. By commanding that light should exist, God made it exist. (See: [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA5 = \"1:5\\\\tjc2d\\\\tfigs-merism\\\\t\\\\t0\\\\tevening and morning\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. (See: [[rc://en/ta/man/translate/figs-merism]])\";\\nconst lineA6 = \"1:6\\\\turb3\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be an expanse\\u2026let it divide\\\\tThese are commands. By commanding that the expanse should exist and that it divide the waters, God made it exist and divide the waters. (See: [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA7 = \"1:8\\\\tss9r\\\\tfigs-merism\\\\t\\\\t0\\\\tevening and morning\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. See how you translated this in [Genesis 1:5](../01/05.md). (See: [[rc://en/ta/man/translate/figs-merism]])\";\\nconst lineA8 = \"1:9\\\\tzu6f\\\\tfigs-activepassive\\\\t\\\\t0\\\\tLet the waters\\u2026be gathered\\\\tThis can be translated with an active verb. This is a command. By commanding that the waters gather together, God made them gather together. Alternate translation: \\u201CLet the waters\\u2026gather\\u201D or \\u201CLet the waters\\u2026come together\\u201D (See: [[rc://en/ta/man/translate/figs-activepassive]] and [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA9 = \"1:9\\\\tha33\\\\t\\\\t\\\\t0\\\\tIt was so\\\\t\\u201CIt happened like that\\u201D or \\u201CThat is what happened.\\u201D What God commanded happened just as he said it should. This phrase appears throughout the chapter and has the same meaning wherever it appears. See how you translated it in [Genesis 1:7](../01/07.md).\";\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  languageCode: \\'en\\',\\n  repoCode: \\'TQ\\',\\n  tableLineName : \\'lineA9\\',\\n  tableLine : lineA9,\\n  bookID : \\'GEN\\', C:\\'1\\', V:\\'2\\',\\n  givenLocation : \\'that was supplied\\',\\n}\\n\\nfunction OurCheckQuestionsRow(props) {\\n  const { username, languageCode, repoCode, bookID, C, V, tableLine, tableLineName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because checkQuestionsTSV7DataRow is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {tableLineName} <b>{bookID}</b>\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await checkQuestionsTSV7DataRow(username, languageCode, repoCode, tableLine, bookID, C, V, givenLocation, checkingOptions);\\n      setResults(\\n        <div>\\n          <b>Check</b> {tableLineName}: \"{tableLine.substr(0,256)}\\u2026\"<br/><br/>\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckQuestionsRow function\\n\\n<OurCheckQuestionsRow data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/questions-tsv7-row-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/questions-tsv7-table-check.md":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/questions-tsv7-table-check.md ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './questions-tsv7-table-check': __webpack_require__(/*! ./questions-tsv7-table-check */ \"./src/core/questions-tsv7-table-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Questions (TSV) Table Text Check Sandbox\\n\\nDesigned for the new Translation Questions (TQ) and Study Questions (SQ), this function checks the given block of question/response (TSV) table lines for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport { checkQuestionsTSV7Table } from \\'./questions-tsv7-table-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Text samples\\nconst textA = `Reference\\\\tID\\\\tTags\\\\tQuote\\\\tOccurrence\\\\tQuestion\\\\tResponse\\n2:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\t<br>Boo\\n99:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\tBad chapter number\\n2:boo\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\tBad verse number\\n2:3\\\\tw3r5q\\\\t\\\\t\\\\t\\\\t1\\\\tNote4\\n2:3\\\\tw3r5\\\\t\\\\tLaugh\\\\t\\\\t\\\\t1\\\\tNote5\\n2:3\\\\tw3r5\\\\t\\\\t\\\\tCan\\u2019t remember\\\\t\\\\t1\\\\tNote6\\n2:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t17\\\\tNote7\\n2:3\\\\tw3r5\\\\t\\\\t\\\\tBad ellipse...\\\\t1\\\\tNote8\\n2:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\t<br>Boo hoo,, lost my shoe !`;\\nconst textG = `Reference\\\\tID\\\\tTags\\\\tQuote\\\\tOccurrence\\\\tQuestion\\\\tResponse\\nfront:intro\\\\td9wn\\\\t\\\\t\\\\t\\\\t0\\\\t# Introduction to Genesis<br><br>## Part 1: General Introduction<br><br>### Outline of Genesis<br><br>1. From the Creation to the Tower of Babel<br>- The account of the creation of the heavens and the earth (1:1\\u20134:26)<br>- The account of Adam (5:1\\u20136:8)<br>- The account of Noah (6:9\\u201311:9)<br>- The account of Shem (11:10\\u201311:26)<br>- The account of Terah (11:27\\u201311:32)<br>1. The accounts of the Patriarchs<br>- The account of Abraham (12:1-25:11)<br>- The account of Ishmael (25:12\\u201325:18)<br>- The account of Isaac, focusing on Jacob (25:19\\u201335:29)<br>- The account of Esau (36:1\\u201337:1)<br>- The account of Jacob, focusing on Joseph (37:2\\u201350:26)<br><br>### What is Genesis about?<br><br>Genesis begins with the early years of creation. It tells about God creating heaven, earth, and the first humans. It also tells about the first time humans sinned. This caused humans to be separated from God and to eventually die. Genesis 1-11 briefly tells about other important events that occurred over many hundreds of years. (See: [[rc://en/tw/dict/bible/kt/sin]] and [[rc://en/tw/dict/bible/other/death]])<br><br>Genesis is also about the beginning of God\\u2019s people. Genesis 12-50 tells about how God remained faithful to Abraham and his descendants. Abraham\\u2019s descendants became known as the Hebrews and later as the Israelites. These people would worship Yahweh and be his people.<br><br>Genesis ends with Abraham\\u2019s descendants living in Egypt with the hope of returning one day to the Promised Land. (See: [[rc://en/tw/dict/bible/kt/promisedland]])<br><br>### How should the title of this book be translated?<br><br>\\u201CGenesis\\u201D means \\u201Cbeginning,\\u201D so translators should express this idea in their title. Titles such as \\u201CThe Beginning of Things\\u201D may be suitable. (See: [[rc://en/ta/man/translate/translate-names]])<br><br>### Who wrote Genesis?<br><br>The writers of both the Old and New Testaments presented Moses as being very involved with writing the book of Genesis. Since ancient times, both Jews and Christians have thought that Moses wrote Genesis, Exodus, Leviticus, Numbers, and Deuteronomy.<br><br>## Part 2: Important Religious and Cultural Concepts<br><br>### What are the covenants mentioned in Genesis?<br><br>A covenant is a formal, binding agreement between two parties that one or both parties must fulfill.<br><br>God made three covenants in Genesis. In the covenant with Adam, God promised to bless Adam and cause him to prosper. Adam was not allowed to eat fruit from the tree of knowledge of good and evil. God promised that Adam would die if he disobeyed what he commanded.<br><br>In the covenant with Noah, God promised to never again destroy the world with a flood.<br><br>In the covenant with Abraham, God promised to make Abraham\\u2019s descendants into a great nation. He also promised to protect them and to give them a land of their own.<br><br>### What was God\\u2019s purpose for the book of Genesis?<br><br>The book of Genesis says that God created a very good world. However, the world became cursed because human beings began to sin. But Genesis shows that God continues to have complete control over the world.<br><br>Genesis also describes the start of God\\u2019s plan to bless the whole world again. This is shown when God makes a covenant with Abraham. With this covenant, God chose Abraham and his descendants to be his people. God promised to bless the world through Abraham\\u2019s descendants.<br><br>### What was the custom for inheritance as described by Genesis?<br><br>There are several passages in Genesis that show the customs of a father who is about to die passing on a blessing to his son. Abraham blessed his son, Isaac, and made him the ancestor of the people of Israel. However, Ishmael, Abraham\\u2019s other son, did not receive that same divine blessing. Likewise, Isaac\\u2019s older son Esau  did not receive the blessing. Isaac\\u2019s younger son, Jacob, received it instead. (See: [[rc://en/tw/dict/bible/kt/inherit]] and [[rc://en/tw/dict/bible/kt/bless]])<br><br>Also, it was the custom for a man to divide among his sons his material wealth and land. All his sons received equal portions except the oldest son. The firstborn son received twice as much. His portion was called a double portion. Esau gave up his right to receive the double portion.<br><br>### How does Genesis present sin and evil?<br><br>Genesis presents sin as doing things that are against God\\u2019s word and God\\u2019s ways. It presents evil as the opposite of good.<br><br>Sin and evil have affected all people. This started when Adam disobeyed God in the Garden of Eden.<br><br>## Part 3: Important Translation Issues<br><br>### What is one way in which Genesis marks the beginning of important sections?<br><br>Genesis uses one Hebrew phrase that the ULT translates as \\u201Cthis is the record of,\\u201D \\u201Cthese were the events concerning,\\u201D or \\u201Cthese were the descendants of.\\u201D The information in these sections may have come from sources much older than Moses. These passages are 2:4; 5:1; 6:9; 10:1; 11:10, 27; 25:12, 19; 36:1, 9; 37:2.<br><br>If the translator wants to translate in only two ways, we recommend for most passages a phrase such as, \\u201Cthis is the record about\\u201D or \\u201Cthis is information about.\\u201D Some passages will be better translated, however, as \\u201CThese were the descendants of.\\u201D<br><br>### Why are the beginnings of some narrative sections in Genesis difficult to translate?<br><br>Often in Genesis, the author first summarizes what is about to happen. Then in the following verses, the author tells the details of what happened. Probable examples of this style occur in Gen. 1:1, 6:22, 18:1, 21:1 and 22:1.<br><br>However, in many languages, it is preferred to write summaries at the end of a narrative. In this case, translators may choose a different approach. For example, in Gen. 1:1 (\\u201CIn the beginning God created the heavens and the earth\\u201D), translators may decide to translate like this: \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D<br><br>### What is the difference between \\u201Cpeople,\\u201D \\u201Cpeoples,\\u201D and \\u201Cpeople groups\\u201D?<br><br>The word \\u201Cpeople\\u201D refers to all the individuals who belong to a group, such as \\u201Cthe people of Israel.\\u201D The word \\u201Cpeoples\\u201D (used in the ULT) refers to multiple groups of people. Each people group might speak their own language, have their own customs, and worships their own gods. Some different peoples in the ancient Near East were those of Israel, Egypt, Edom, Moab, and Ammon.<br><br>The expression \\u201Cpeople groups\\u201D (used in the UST) means the same thing as \\u201Cpeoples\\u201D in the ULT. The translator should use the most equivalent term that is common in the project language.<br><br>### What is the relationship between individuals and peoples that have similar names?<br><br>Many individuals in Genesis eventually had large numbers of descendants who were called after their ancestor\\u2019s name. For example, Cush was the name of an individual. But, \\u201CCush\\u201D also became the name of nation that his descendants formed. They were called \\u201CCushites.\\u201D If possible, when translating these names, the translator should make the individual\\u2019s name and the nation\\u2019s name similar. Examples of this are \\u201CCush\\u201D and \\u201CCushite\\u201D or \\u201CMoab\\u201D and \\u201CMoabite.\\u201D Otherwise, the translator may say, \\u201Cthe descendants of Cush\\u201D or \\u201Cthe descendants of Moab.\\u201D<br><br>### What do the phrases \\u201Cto this day\\u201D or \\u201Cof today\\u201D mean?<br><br>These phrases were used by the narrator to refer to the time when he was writing. The translator should be aware that \\u201Cto this day\\u201D and \\u201Cof today\\u201D refer to a time already passed. The translator might decide to say, \\u201Cto this day, at the time when this is being written,\\u201D or, \\u201Cto this day, at the time of writing.\\u201D This Hebrew phrase occurs in Gen. 19:37, 19:38, 22:14, 26:33, 32:32, 35:20, 47:26, 48:18.\";\\nconst lineA2 = \"1:intro\\\\tzb6f\\\\t\\\\t\\\\t\\\\t0\\\\t# Genesis 01 General Notes<br><br>## Structure and formatting<br><br>This chapter presents the first account of God creating the world. There is a pattern to this account: \\u201CGod said\\u2026God saw that it was good\\u2026This was evening and morning, the first day.\\u201D Translators should preserve this pattern in their versions.<br><br>## Special concepts in this chapter<br><br>### The universe<br><br>This account of creation is told within the framework of ancient Hebrew ideas about the universe: the earth was resting with water around it and below it. Over the earth was something like a vast dome, called \\u201Can expanse between the waters\\u201D (1:6), on top of which was more water. Translators should try to keep these original images in their work, even though readers in their project language might have a completely different idea of what the universe is like.<br><br>### Evening and morning<br><br>Genesis 1 presents the ancient Hebrew idea of a day: it begins with sunset, lasts through the night and continues through the daylight hours until the next sunset. This pattern should be preserved in translation, even if readers in the project language define \\u201Cday\\u201D differently.<br><br>## Other possible translation difficulties in this chapter<br><br>### \\u201CIn the beginning\\u201D<br><br>Some languages and cultures speak of the world as if it has always existed, as if it had no beginning. But \\u201Cvery long ago\\u201D is different from \\u201Cin the beginning,\\u201D and you need to be sure that your translation communicates correctly.<br><br>### \\u201CGod said, \\u2018Let there be\\u2019\\u201D<br><br>This expression occurs often in this chapter. It can be difficult to translate, because God is not shown as talking to a particular person. If God is talking to a thing, it is something not yet in existence. Translators should find the most natural way in the project language to signal the idea that God spoke things into existence; he created the world and the things in it by simply commanding that they should exist.\\n1:1\\\\tf2mg\\\\t\\\\t\\\\t0\\\\t\\\\tIn the beginning, God created the heavens and the earth \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D This statement summarizes the rest of the chapter. Some languages translate it as \\u201CA very long time ago God created the heavens and the earth.\\u201D Translate it in a way that shows this actually happened and is not just a folk story.\\n1:3\\\\td7qw\\\\t\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be light\\\\tThis is a command. By commanding that light should exist, God made it exist. (See: [[rc://en/ta/man/translate/figs-imperative]])\\n1:5\\\\tjc2d\\\\t\\\\tfigs-merism\\\\t\\\\t0\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. (See: [[rc://en/ta/man/translate/figs-merism]])\\n1:6\\\\turb3\\\\t\\\\tfigs-imperative\\\\t\\\\t0\\\\tThese are commands. By commanding that the expanse should exist and that it divide the waters, God made it exist and divide the waters. (See: [[rc://en/ta/man/translate/figs-imperative]])\\n1:8\\\\tss9r\\\\t\\\\tfigs-merism\\\\t\\\\t0\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. See how you translated this in [Genesis 1:5](../01/05.md). (See: [[rc://en/ta/man/translate/figs-merism]])\\n1:9\\\\tzu6f\\\\t\\\\tfigs-activepassive\\\\t\\\\t0\\\\tThis can be translated with an active verb. This is a command. By commanding that the waters gather together, God made them gather together. Alternate translation: \\u201CLet the waters\\u2026gather\\u201D or \\u201CLet the waters\\u2026come together\\u201D (See: [[rc://en/ta/man/translate/figs-activepassive]] and [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA9 = \"1:9\\\\tha33\\\\t\\\\t\\\\t\\\\t0\\\\t\\u201CIt happened like that\\u201D or \\u201CThat is what happened.\\u201D What God commanded happened just as he said it should. This phrase appears throughout the chapter and has the same meaning wherever it appears. See how you translated it in [Genesis 1:7](../01/07.md).`;\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  languageCode: \\'en\\',\\n  repoCode: \\'TQ\\',\\n  tableTextName : \\'textG\\',\\n  tableText : textG,\\n  bookID : \\'GEN\\',\\n  filename: \\'dummyFilename\\',\\n  givenLocation : \\'that was supplied\\',\\n}\\n\\nfunction OurCheckQuestionsTSV7Table(props) {\\n  const { username, languageCode, repoCode, bookID, filename, tableText, tableTextName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because checkQuestionsTSV7Table is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {languageCode} {repoCode} for {tableTextName} <b>{bookID}</b>\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await checkQuestionsTSV7Table(username, languageCode, repoCode, bookID, filename, tableText, givenLocation, checkingOptions);\\n      setResults(\\n        <div>\\n          <b>Check</b> {tableTextName}: \"{tableText.substr(0,256)}\\u2026\"<br/><br/>\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckQuestionsTSV7Table function\\n\\n<OurCheckQuestionsTSV7Table data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/questions-tsv7-table-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/tn-tsv9-row-check.md":
/*!********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/tn-tsv9-row-check.md ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './tn-tsv9-row-check': __webpack_require__(/*! ./tn-tsv9-row-check */ \"./src/core/tn-tsv9-row-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## TN TSV Table Row Check Sandbox\\n\\nThis function checks one Translation Notes (TN) tab-separated (9-columns) line for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport { checkTN_TSV9DataRow } from \\'./tn-tsv9-row-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Empty, Header, Nonsense, Good, Bad, Very bad, and Actual line samples\\nconst lineE = \"\";\\nconst lineH = \"Book\\\\tChapter\\\\tVerse\\\\tID\\\\tSupportReference\\\\tQuote\\\\tOccurrence\\\\tGLQuote\\\\tOccurrenceNote\";\\nconst lineN = \"Peace on Earth, good will to all men/people!\";\\nconst lineG = \"GEN\\\\t2\\\\t3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tThis is an  optional note\";\\nconst lineB1 = \"EXO\\\\t2\\\\t3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\t<br>Boo\";\\nconst lineB2 = \"GEN\\\\t99\\\\t3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tBoo\";\\nconst lineB3 = \"GEN\\\\t2\\\\tboo\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tNote3\";\\nconst lineB4 = \"GEN\\\\t2\\\\t3\\\\tw3r5q\\\\t\\\\t1\\\\t\\\\tNote4\";\\nconst lineB5 = \"GEN\\\\t2\\\\t3\\\\tw3r5\\\\tLaugh\\\\t\\\\t1\\\\t\\\\tNote5\";\\nconst lineB6 = \"GEN\\\\t2\\\\t3\\\\tw3r5\\\\t\\\\tCan\\u2019t remember\\\\t1\\\\t\\\\tNote6 (See: [[rc://en/tw/dict/bible/kt/fairyland]])\";\\nconst lineB7 = \"GEN\\\\t2\\\\t3\\\\tw3r5\\\\t\\\\t17\\\\t\\\\tNote7.\";\\nconst lineB8 = \"GEN\\\\t2\\\\t3\\\\tw3r5\\\\t\\\\t\\\\t1\\\\tBad ellipse...\\\\tNote8\\u2014see how you translated it in [Odyssey 1:7](../01/07.md).\";\\nconst lineB9 = \"GEN\\\\t2\\\\t3\\\\tw3r\\\\t\\\\t\\\\t1\\\\t\\\\t<br>Boo hoo,, lost my shoe ! See how you translated it in [Genesis 1:77](../91/07.md).\";\\nconst lineV = \"GIN\\\\t200\\\\t9\\\\tW-3r5\\\\tLaugh\\\\t\\\\t17\\\\tBad ellipse...\\\\t<br>Boo hoo,,<br> lost my shoe !\";\\nconst lineA1 = \"GEN\\\\tfront\\\\tintro\\\\td9wn\\\\t\\\\t\\\\t0\\\\t\\\\t# Introduction to Genesis<br><br>## Part 1: General Introduction<br><br>### Outline of Genesis<br><br>1. From the Creation to the Tower of Babel<br>- The account of the creation of the heavens and the earth (1:1\\u20134:26)<br>- The account of Adam (5:1\\u20136:8)<br>- The account of Noah (6:9\\u201311:9)<br>- The account of Shem (11:10\\u201311:26)<br>- The account of Terah (11:27\\u201311:32)<br>1. The accounts of the Patriarchs<br>- The account of Abraham (12:1-25:11)<br>- The account of Ishmael (25:12\\u201325:18)<br>- The account of Isaac, focusing on Jacob (25:19\\u201335:29)<br>- The account of Esau (36:1\\u201337:1)<br>- The account of Jacob, focusing on Joseph (37:2\\u201350:26)<br><br>### What is Genesis about?<br><br>Genesis begins with the early years of creation. It tells about God creating heaven, earth, and the first humans. It also tells about the first time humans sinned. This caused humans to be separated from God and to eventually die. Genesis 1-11 briefly tells about other important events that occurred over many hundreds of years. (See: [[rc://en/tw/dict/bible/kt/sin]] and [[rc://en/tw/dict/bible/other/death]])<br><br>Genesis is also about the beginning of God\\u2019s people. Genesis 12-50 tells about how God remained faithful to Abraham and his descendants. Abraham\\u2019s descendants became known as the Hebrews and later as the Israelites. These people would worship Yahweh and be his people.<br><br>Genesis ends with Abraham\\u2019s descendants living in Egypt with the hope of returning one day to the Promised Land. (See: [[rc://en/tw/dict/bible/kt/promisedland]])<br><br>### How should the title of this book be translated?<br><br>\\u201CGenesis\\u201D means \\u201Cbeginning,\\u201D so translators should express this idea in their title. Titles such as \\u201CThe Beginning of Things\\u201D may be suitable. (See: [[rc://en/ta/man/translate/translate-names]])<br><br>### Who wrote Genesis?<br><br>The writers of both the Old and New Testaments presented Moses as being very involved with writing the book of Genesis. Since ancient times, both Jews and Christians have thought that Moses wrote Genesis, Exodus, Leviticus, Numbers, and Deuteronomy.<br><br>## Part 2: Important Religious and Cultural Concepts<br><br>### What are the covenants mentioned in Genesis?<br><br>A covenant is a formal, binding agreement between two parties that one or both parties must fulfill.<br><br>God made three covenants in Genesis. In the covenant with Adam, God promised to bless Adam and cause him to prosper. Adam was not allowed to eat fruit from the tree of knowledge of good and evil. God promised that Adam would die if he disobeyed what he commanded.<br><br>In the covenant with Noah, God promised to never again destroy the world with a flood.<br><br>In the covenant with Abraham, God promised to make Abraham\\u2019s descendants into a great nation. He also promised to protect them and to give them a land of their own.<br><br>### What was God\\u2019s purpose for the book of Genesis?<br><br>The book of Genesis says that God created a very good world. However, the world became cursed because human beings began to sin. But Genesis shows that God continues to have complete control over the world.<br><br>Genesis also describes the start of God\\u2019s plan to bless the whole world again. This is shown when God makes a covenant with Abraham. With this covenant, God chose Abraham and his descendants to be his people. God promised to bless the world through Abraham\\u2019s descendants.<br><br>### What was the custom for inheritance as described by Genesis?<br><br>There are several passages in Genesis that show the customs of a father who is about to die passing on a blessing to his son. Abraham blessed his son, Isaac, and made him the ancestor of the people of Israel. However, Ishmael, Abraham\\u2019s other son, did not receive that same divine blessing. Likewise, Isaac\\u2019s older son Esau  did not receive the blessing. Isaac\\u2019s younger son, Jacob, received it instead. (See: [[rc://en/tw/dict/bible/kt/inherit]] and [[rc://en/tw/dict/bible/kt/bless]])<br><br>Also, it was the custom for a man to divide among his sons his material wealth and land. All his sons received equal portions except the oldest son. The firstborn son received twice as much. His portion was called a double portion. Esau gave up his right to receive the double portion.<br><br>### How does Genesis present sin and evil?<br><br>Genesis presents sin as doing things that are against God\\u2019s word and God\\u2019s ways. It presents evil as the opposite of good.<br><br>Sin and evil have affected all people. This started when Adam disobeyed God in the Garden of Eden.<br><br>## Part 3: Important Translation Issues<br><br>### What is one way in which Genesis marks the beginning of important sections?<br><br>Genesis uses one Hebrew phrase that the ULT translates as \\u201Cthis is the record of,\\u201D \\u201Cthese were the events concerning,\\u201D or \\u201Cthese were the descendants of.\\u201D The information in these sections may have come from sources much older than Moses. These passages are 2:4; 5:1; 6:9; 10:1; 11:10, 27; 25:12, 19; 36:1, 9; 37:2.<br><br>If the translator wants to translate in only two ways, we recommend for most passages a phrase such as, \\u201Cthis is the record about\\u201D or \\u201Cthis is information about.\\u201D Some passages will be better translated, however, as \\u201CThese were the descendants of.\\u201D<br><br>### Why are the beginnings of some narrative sections in Genesis difficult to translate?<br><br>Often in Genesis, the author first summarizes what is about to happen. Then in the following verses, the author tells the details of what happened. Probable examples of this style occur in Gen. 1:1, 6:22, 18:1, 21:1 and 22:1.<br><br>However, in many languages, it is preferred to write summaries at the end of a narrative. In this case, translators may choose a different approach. For example, in Gen. 1:1 (\\u201CIn the beginning God created the heavens and the earth\\u201D), translators may decide to translate like this: \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D<br><br>### What is the difference between \\u201Cpeople,\\u201D \\u201Cpeoples,\\u201D and \\u201Cpeople groups\\u201D?<br><br>The word \\u201Cpeople\\u201D refers to all the individuals who belong to a group, such as \\u201Cthe people of Israel.\\u201D The word \\u201Cpeoples\\u201D (used in the ULT) refers to multiple groups of people. Each people group might speak their own language, have their own customs, and worships their own gods. Some different peoples in the ancient Near East were those of Israel, Egypt, Edom, Moab, and Ammon.<br><br>The expression \\u201Cpeople groups\\u201D (used in the UST) means the same thing as \\u201Cpeoples\\u201D in the ULT. The translator should use the most equivalent term that is common in the project language.<br><br>### What is the relationship between individuals and peoples that have similar names?<br><br>Many individuals in Genesis eventually had large numbers of descendants who were called after their ancestor\\u2019s name. For example, Cush was the name of an individual. But, \\u201CCush\\u201D also became the name of nation that his descendants formed. They were called \\u201CCushites.\\u201D If possible, when translating these names, the translator should make the individual\\u2019s name and the nation\\u2019s name similar. Examples of this are \\u201CCush\\u201D and \\u201CCushite\\u201D or \\u201CMoab\\u201D and \\u201CMoabite.\\u201D Otherwise, the translator may say, \\u201Cthe descendants of Cush\\u201D or \\u201Cthe descendants of Moab.\\u201D<br><br>### What do the phrases \\u201Cto this day\\u201D or \\u201Cof today\\u201D mean?<br><br>These phrases were used by the narrator to refer to the time when he was writing. The translator should be aware that \\u201Cto this day\\u201D and \\u201Cof today\\u201D refer to a time already passed. The translator might decide to say, \\u201Cto this day, at the time when this is being written,\\u201D or, \\u201Cto this day, at the time of writing.\\u201D This Hebrew phrase occurs in Gen. 19:37, 19:38, 22:14, 26:33, 32:32, 35:20, 47:26, 48:18.\";\\nconst lineA2 = \"GEN\\\\t1\\\\tintro\\\\tzb6f\\\\t\\\\t\\\\t0\\\\t\\\\t# Genesis 01 General Notes<br><br>## Structure and formatting<br><br>This chapter presents the first account of God creating the world. There is a pattern to this account: \\u201CGod said\\u2026God saw that it was good\\u2026This was evening and morning, the first day.\\u201D Translators should preserve this pattern in their versions.<br><br>## Special concepts in this chapter<br><br>### The universe<br><br>This account of creation is told within the framework of ancient Hebrew ideas about the universe: the earth was resting with water around it and below it. Over the earth was something like a vast dome, called \\u201Can expanse between the waters\\u201D (1:6), on top of which was more water. Translators should try to keep these original images in their work, even though readers in their project language might have a completely different idea of what the universe is like.<br><br>### Evening and morning<br><br>Genesis 1 presents the ancient Hebrew idea of a day: it begins with sunset, lasts through the night and continues through the daylight hours until the next sunset. This pattern should be preserved in translation, even if readers in the project language define \\u201Cday\\u201D differently.<br><br>## Other possible translation difficulties in this chapter<br><br>### \\u201CIn the beginning\\u201D<br><br>Some languages and cultures speak of the world as if it has always existed, as if it had no beginning. But \\u201Cvery long ago\\u201D is different from \\u201Cin the beginning,\\u201D and you need to be sure that your translation communicates correctly.<br><br>### \\u201CGod said, \\u2018Let there be\\u2019\\u201D<br><br>This expression occurs often in this chapter. It can be difficult to translate, because God is not shown as talking to a particular person. If God is talking to a thing, it is something not yet in existence. Translators should find the most natural way in the project language to signal the idea that God spoke things into existence; he created the world and the things in it by simply commanding that they should exist.\";\\nconst lineA3 = \"GEN\\\\t1\\\\t1\\\\tf2mg\\\\t\\\\t0\\\\t\\\\t\\\\tIn the beginning, God created the heavens and the earth \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D This statement summarizes the rest of the chapter. Some languages translate it as \\u201CA very long time ago God created the heavens and the earth.\\u201D Translate it in a way that shows this actually happened and is not just a folk story.\";\\nconst lineA4 = \"GEN\\\\t1\\\\t3\\\\td7qw\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be light\\\\tThis is a command. By commanding that light should exist, God made it exist. (See: [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA5 = \"GEN\\\\t1\\\\t5\\\\tjc2d\\\\tfigs-merism\\\\t\\\\t0\\\\tevening and morning\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. (See: [[rc://en/ta/man/translate/figs-merism]])\";\\nconst lineA6 = \"GEN\\\\t1\\\\t6\\\\turb3\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be an expanse\\u2026let it divide\\\\tThese are commands. By commanding that the expanse should exist and that it divide the waters, God made it exist and divide the waters. (See: [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA7 = \"GEN\\\\t1\\\\t8\\\\tss9r\\\\tfigs-merism\\\\t\\\\t0\\\\tevening and morning\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. See how you translated this in [Genesis 1:5](../01/05.md). (See: [[rc://en/ta/man/translate/figs-merism]])\";\\nconst lineA8 = \"GEN\\\\t1\\\\t9\\\\tzu6f\\\\tfigs-activepassive\\\\t\\\\t0\\\\tLet the waters\\u2026be gathered\\\\tThis can be translated with an active verb. This is a command. By commanding that the waters gather together, God made them gather together. Alternate translation: \\u201CLet the waters\\u2026gather\\u201D or \\u201CLet the waters\\u2026come together\\u201D (See: [[rc://en/ta/man/translate/figs-activepassive]] and [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA9 = \"GEN\\\\t1\\\\t9\\\\tha33\\\\t\\\\t\\\\t0\\\\tIt was so\\\\t\\u201CIt happened like that\\u201D or \\u201CThat is what happened.\\u201D What God commanded happened just as he said it should. This phrase appears throughout the chapter and has the same meaning wherever it appears. See how you translated it in [Genesis 1:7](../01/07.md).\";\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  languageCode : \\'en\\',\\n  tableLineName : \\'lineB9\\',\\n  tableLine : lineB9,\\n  bookID : \\'GEN\\', C:\\'1\\', V:\\'2\\',\\n  givenLocation : \"that was supplied\",\\n}\\n\\nfunction OurCheckTNTSVRow(props) {\\n  const { username, languageCode, bookID, C, V, tableLine, tableLineName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because checkTN_TSV9DataRow is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {tableLineName} <b>{bookID}</b>\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await checkTN_TSV9DataRow(username, languageCode, \\'TN\\', tableLine, bookID, C, V, givenLocation, checkingOptions);\\n      setResults(\\n        <div>\\n          <b>Check</b> {tableLineName}: \"{tableLine.substr(0,256)}\\u2026\"<br/><br/>\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckTNTSVRow function\\n\\n<OurCheckTNTSVRow data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/tn-tsv9-row-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/tn-tsv9-table-check.md":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/tn-tsv9-table-check.md ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './tn-tsv9-table-check': __webpack_require__(/*! ./tn-tsv9-table-check */ \"./src/core/tn-tsv9-table-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## TN TSV Table Text Check Sandbox\\n\\nThis function checks the given block of Translation Note (TN) 9-column TSV table lines for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport { internalCheckTN_TSV9Table } from \\'./tn-tsv9-table-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Text samples\\nconst textA = `Book\\\\tChapter\\\\tVerse\\\\tID\\\\tSupportReference\\\\tQuote\\\\tOccurrence\\\\tGLQuote\\\\tOccurrenceNote\\nEXO\\\\t2\\\\t3\\\\tw3r5\\\\t\\\\t\\\\t1\\\\t\\\\t<br>Boo\\nGEN\\\\t99\\\\t3\\\\tw3r5\\\\t\\\\\\\\tt1\\\\t\\\\tBoo\\nGEN\\\\t2\\\\tboo\\\\tw3r5\\\\t\\\\\\\\tt1\\\\t\\\\tNote3\\nGEN\\\\t2\\\\t3\\\\tw3r5q\\\\t\\\\t\\\\t1\\\\t\\\\tNote4\\nGEN\\\\t2\\\\t3\\\\tw3r5\\\\tLaugh\\\\t\\\\t\\\\t1\\\\t\\\\tNote5\\nGEN\\\\t2\\\\t3\\\\tw3r5\\\\t\\\\tCan\\u2019t remember\\\\t\\\\t1\\\\t\\\\tNote6\\nGEN\\\\t2\\\\t3\\\\tw3r5\\\\t\\\\t\\\\t17\\\\t\\\\tNote7\\nGEN\\\\t2\\\\t3\\\\tw3r5\\\\t\\\\t\\\\t1\\\\tBad ellipse...\\\\tNote8\\nGEN\\\\t2\\\\t3\\\\tw3r5\\\\t\\\\t\\\\t1\\\\t\\\\t<br>Boo hoo,, lost my shoe !`;\\nconst textG = `Book\\\\tChapter\\\\tVerse\\\\tID\\\\tSupportReference\\\\tQuote\\\\tOccurrence\\\\tGLQuote\\\\tOccurrenceNote\\nGEN\\\\tfront\\\\tintro\\\\td9wn\\\\t\\\\t\\\\t0\\\\t\\\\t# Introduction to Genesis<br><br>## Part 1: General Introduction<br><br>### Outline of Genesis<br><br>1. From the Creation to the Tower of Babel<br>- The account of the creation of the heavens and the earth (1:1\\u20134:26)<br>- The account of Adam (5:1\\u20136:8)<br>- The account of Noah (6:9\\u201311:9)<br>- The account of Shem (11:10\\u201311:26)<br>- The account of Terah (11:27\\u201311:32)<br>1. The accounts of the Patriarchs<br>- The account of Abraham (12:1-25:11)<br>- The account of Ishmael (25:12\\u201325:18)<br>- The account of Isaac, focusing on Jacob (25:19\\u201335:29)<br>- The account of Esau (36:1\\u201337:1)<br>- The account of Jacob, focusing on Joseph (37:2\\u201350:26)<br><br>### What is Genesis about?<br><br>Genesis begins with the early years of creation. It tells about God creating heaven, earth, and the first humans. It also tells about the first time humans sinned. This caused humans to be separated from God and to eventually die. Genesis 1-11 briefly tells about other important events that occurred over many hundreds of years. (See: [[rc://en/tw/dict/bible/kt/sin]] and [[rc://en/tw/dict/bible/other/death]])<br><br>Genesis is also about the beginning of God\\u2019s people. Genesis 12-50 tells about how God remained faithful to Abraham and his descendants. Abraham\\u2019s descendants became known as the Hebrews and later as the Israelites. These people would worship Yahweh and be his people.<br><br>Genesis ends with Abraham\\u2019s descendants living in Egypt with the hope of returning one day to the Promised Land. (See: [[rc://en/tw/dict/bible/kt/promisedland]])<br><br>### How should the title of this book be translated?<br><br>\\u201CGenesis\\u201D means \\u201Cbeginning,\\u201D so translators should express this idea in their title. Titles such as \\u201CThe Beginning of Things\\u201D may be suitable. (See: [[rc://en/ta/man/translate/translate-names]])<br><br>### Who wrote Genesis?<br><br>The writers of both the Old and New Testaments presented Moses as being very involved with writing the book of Genesis. Since ancient times, both Jews and Christians have thought that Moses wrote Genesis, Exodus, Leviticus, Numbers, and Deuteronomy.<br><br>## Part 2: Important Religious and Cultural Concepts<br><br>### What are the covenants mentioned in Genesis?<br><br>A covenant is a formal, binding agreement between two parties that one or both parties must fulfill.<br><br>God made three covenants in Genesis. In the covenant with Adam, God promised to bless Adam and cause him to prosper. Adam was not allowed to eat fruit from the tree of knowledge of good and evil. God promised that Adam would die if he disobeyed what he commanded.<br><br>In the covenant with Noah, God promised to never again destroy the world with a flood.<br><br>In the covenant with Abraham, God promised to make Abraham\\u2019s descendants into a great nation. He also promised to protect them and to give them a land of their own.<br><br>### What was God\\u2019s purpose for the book of Genesis?<br><br>The book of Genesis says that God created a very good world. However, the world became cursed because human beings began to sin. But Genesis shows that God continues to have complete control over the world.<br><br>Genesis also describes the start of God\\u2019s plan to bless the whole world again. This is shown when God makes a covenant with Abraham. With this covenant, God chose Abraham and his descendants to be his people. God promised to bless the world through Abraham\\u2019s descendants.<br><br>### What was the custom for inheritance as described by Genesis?<br><br>There are several passages in Genesis that show the customs of a father who is about to die passing on a blessing to his son. Abraham blessed his son, Isaac, and made him the ancestor of the people of Israel. However, Ishmael, Abraham\\u2019s other son, did not receive that same divine blessing. Likewise, Isaac\\u2019s older son Esau  did not receive the blessing. Isaac\\u2019s younger son, Jacob, received it instead. (See: [[rc://en/tw/dict/bible/kt/inherit]] and [[rc://en/tw/dict/bible/kt/bless]])<br><br>Also, it was the custom for a man to divide among his sons his material wealth and land. All his sons received equal portions except the oldest son. The firstborn son received twice as much. His portion was called a double portion. Esau gave up his right to receive the double portion.<br><br>### How does Genesis present sin and evil?<br><br>Genesis presents sin as doing things that are against God\\u2019s word and God\\u2019s ways. It presents evil as the opposite of good.<br><br>Sin and evil have affected all people. This started when Adam disobeyed God in the Garden of Eden.<br><br>## Part 3: Important Translation Issues<br><br>### What is one way in which Genesis marks the beginning of important sections?<br><br>Genesis uses one Hebrew phrase that the ULT translates as \\u201Cthis is the record of,\\u201D \\u201Cthese were the events concerning,\\u201D or \\u201Cthese were the descendants of.\\u201D The information in these sections may have come from sources much older than Moses. These passages are 2:4; 5:1; 6:9; 10:1; 11:10, 27; 25:12, 19; 36:1, 9; 37:2.<br><br>If the translator wants to translate in only two ways, we recommend for most passages a phrase such as, \\u201Cthis is the record about\\u201D or \\u201Cthis is information about.\\u201D Some passages will be better translated, however, as \\u201CThese were the descendants of.\\u201D<br><br>### Why are the beginnings of some narrative sections in Genesis difficult to translate?<br><br>Often in Genesis, the author first summarizes what is about to happen. Then in the following verses, the author tells the details of what happened. Probable examples of this style occur in Gen. 1:1, 6:22, 18:1, 21:1 and 22:1.<br><br>However, in many languages, it is preferred to write summaries at the end of a narrative. In this case, translators may choose a different approach. For example, in Gen. 1:1 (\\u201CIn the beginning God created the heavens and the earth\\u201D), translators may decide to translate like this: \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D<br><br>### What is the difference between \\u201Cpeople,\\u201D \\u201Cpeoples,\\u201D and \\u201Cpeople groups\\u201D?<br><br>The word \\u201Cpeople\\u201D refers to all the individuals who belong to a group, such as \\u201Cthe people of Israel.\\u201D The word \\u201Cpeoples\\u201D (used in the ULT) refers to multiple groups of people. Each people group might speak their own language, have their own customs, and worships their own gods. Some different peoples in the ancient Near East were those of Israel, Egypt, Edom, Moab, and Ammon.<br><br>The expression \\u201Cpeople groups\\u201D (used in the UST) means the same thing as \\u201Cpeoples\\u201D in the ULT. The translator should use the most equivalent term that is common in the project language.<br><br>### What is the relationship between individuals and peoples that have similar names?<br><br>Many individuals in Genesis eventually had large numbers of descendants who were called after their ancestor\\u2019s name. For example, Cush was the name of an individual. But, \\u201CCush\\u201D also became the name of nation that his descendants formed. They were called \\u201CCushites.\\u201D If possible, when translating these names, the translator should make the individual\\u2019s name and the nation\\u2019s name similar. Examples of this are \\u201CCush\\u201D and \\u201CCushite\\u201D or \\u201CMoab\\u201D and \\u201CMoabite.\\u201D Otherwise, the translator may say, \\u201Cthe descendants of Cush\\u201D or \\u201Cthe descendants of Moab.\\u201D<br><br>### What do the phrases \\u201Cto this day\\u201D or \\u201Cof today\\u201D mean?<br><br>These phrases were used by the narrator to refer to the time when he was writing. The translator should be aware that \\u201Cto this day\\u201D and \\u201Cof today\\u201D refer to a time already passed. The translator might decide to say, \\u201Cto this day, at the time when this is being written,\\u201D or, \\u201Cto this day, at the time of writing.\\u201D This Hebrew phrase occurs in Gen. 19:37, 19:38, 22:14, 26:33, 32:32, 35:20, 47:26, 48:18.\";\\nconst lineA2 = \"GEN\\\\t1\\\\tintro\\\\tzb6f\\\\t\\\\t\\\\t0\\\\t\\\\t# Genesis 01 General Notes<br><br>## Structure and formatting<br><br>This chapter presents the first account of God creating the world. There is a pattern to this account: \\u201CGod said\\u2026God saw that it was good\\u2026This was evening and morning, the first day.\\u201D Translators should preserve this pattern in their versions.<br><br>## Special concepts in this chapter<br><br>### The universe<br><br>This account of creation is told within the framework of ancient Hebrew ideas about the universe: the earth was resting with water around it and below it. Over the earth was something like a vast dome, called \\u201Can expanse between the waters\\u201D (1:6), on top of which was more water. Translators should try to keep these original images in their work, even though readers in their project language might have a completely different idea of what the universe is like.<br><br>### Evening and morning<br><br>Genesis 1 presents the ancient Hebrew idea of a day: it begins with sunset, lasts through the night and continues through the daylight hours until the next sunset. This pattern should be preserved in translation, even if readers in the project language define \\u201Cday\\u201D differently.<br><br>## Other possible translation difficulties in this chapter<br><br>### \\u201CIn the beginning\\u201D<br><br>Some languages and cultures speak of the world as if it has always existed, as if it had no beginning. But \\u201Cvery long ago\\u201D is different from \\u201Cin the beginning,\\u201D and you need to be sure that your translation communicates correctly.<br><br>### \\u201CGod said, \\u2018Let there be\\u2019\\u201D<br><br>This expression occurs often in this chapter. It can be difficult to translate, because God is not shown as talking to a particular person. If God is talking to a thing, it is something not yet in existence. Translators should find the most natural way in the project language to signal the idea that God spoke things into existence; he created the world and the things in it by simply commanding that they should exist.\\nGEN\\\\t1\\\\t1\\\\tf2mg\\\\t\\\\t0\\\\t\\\\t\\\\tIn the beginning, God created the heavens and the earth \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D This statement summarizes the rest of the chapter. Some languages translate it as \\u201CA very long time ago God created the heavens and the earth.\\u201D Translate it in a way that shows this actually happened and is not just a folk story.\\nGEN\\\\t1\\\\t3\\\\td7qw\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be light\\\\tThis is a command. By commanding that light should exist, God made it exist. (See: [[rc://en/ta/man/translate/figs-imperative]])\\nGEN\\\\t1\\\\t5\\\\tjc2d\\\\tfigs-merism\\\\t\\\\t0\\\\tevening and morning\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. (See: [[rc://en/ta/man/translate/figs-merism]])\\nGEN\\\\t1\\\\t6\\\\turb3\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be an expanse\\u2026let it divide\\\\tThese are commands. By commanding that the expanse should exist and that it divide the waters, God made it exist and divide the waters. (See: [[rc://en/ta/man/translate/figs-imperative]])\\nGEN\\\\t1\\\\t8\\\\tss9r\\\\tfigs-merism\\\\t\\\\t0\\\\tevening and morning\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. See how you translated this in [Genesis 1:5](../01/05.md). (See: [[rc://en/ta/man/translate/figs-merism]])\\nGEN\\\\t1\\\\t9\\\\tzu6f\\\\tfigs-activepassive\\\\t\\\\t0\\\\tLet the waters\\u2026be gathered\\\\tThis can be translated with an active verb. This is a command. By commanding that the waters gather together, God made them gather together. Alternate translation: \\u201CLet the waters\\u2026gather\\u201D or \\u201CLet the waters\\u2026come together\\u201D (See: [[rc://en/ta/man/translate/figs-activepassive]] and [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA9 = \"GEN\\\\t1\\\\t9\\\\tha33\\\\t\\\\t\\\\t0\\\\tIt was so\\\\t\\u201CIt happened like that\\u201D or \\u201CThat is what happened.\\u201D What God commanded happened just as he said it should. This phrase appears throughout the chapter and has the same meaning wherever it appears. See how you translated it in [Genesis 1:7](../01/07.md).`;\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  languageCode : \\'en\\',\\n  tableTextName : \\'textG\\',\\n  tableText : textG,\\n  bookID : \\'GEN\\',\\n  filename: \\'dummyFilename\\',\\n  givenLocation : \\'that was supplied\\',\\n}\\n\\nfunction OurCheckTN_TSV9Table(props) {\\n  const { username, languageCode, bookID, filename, tableText, tableTextName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because internalCheckTN_TSV9Table is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {tableTextName} <b>{bookID}</b>\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await internalCheckTN_TSV9Table(username, languageCode, \\'TN\\', bookID, filename, tableText, givenLocation, checkingOptions);\\n      setResults(\\n        <div>\\n          <b>Check</b> {tableTextName}: \"{tableText.substr(0,256)}\\u2026\"<br/><br/>\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckTN_TSV9Table function\\n\\n<OurCheckTN_TSV9Table data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/tn-tsv9-table-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/twl-tsv6-row-check.md":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/twl-tsv6-row-check.md ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './twl-tsv6-row-check': __webpack_require__(/*! ./twl-tsv6-row-check */ \"./src/core/twl-tsv6-row-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## TW Links (TSV) Row Check Sandbox\\n\\nThis function checks one tab-separated line for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport { checkTWL_TSV6DataRow } from \\'./twl-tsv6-row-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Empty, Header, Nonsense, Good, Bad, Very bad, and Actual line samples\\nconst lineE = \"\";\\nconst lineH = \"Reference\\\\tID\\\\tTags\\\\tOrigWords\\\\tOccurrence\\\\tTWLink\";\\nconst lineN = \"Peace on Earth, good will to all men/people!\";\\nconst lineG = \"2:3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tThis is an  optional note\";\\nconst lineB1 = \"2:3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\t<br>Boo\";\\nconst lineB2 = \"99:3\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tBoo\";\\nconst lineB3 = \"2:boo\\\\tw3r5\\\\t\\\\t1\\\\t\\\\tNote3\";\\nconst lineB4 = \"2:3\\\\tw3r5q\\\\t\\\\t1\\\\t\\\\tNote4\";\\nconst lineB5 = \"2:3\\\\tw3r5\\\\tLaugh\\\\t\\\\t1\\\\t\\\\tNote5\";\\nconst lineB6 = \"2:3\\\\tw3r5\\\\t\\\\tCan\\u2019t remember\\\\t1\\\\t\\\\tNote6\";\\nconst lineB7 = \"2:3\\\\tw3r5\\\\t\\\\t17\\\\t\\\\tNote7\";\\nconst lineB8 = \"2:3\\\\tw3r5\\\\t\\\\t1\\\\tBad ellipse...\\\\tNote8\";\\nconst lineB9 = \"2:3\\\\tw3r\\\\t\\\\t1\\\\t\\\\t<br>Boo hoo,, lost my shoe !\";\\nconst lineV = \"200:9\\\\tW-3r5\\\\tLaugh\\\\t\\\\t17\\\\tBad ellipse...\\\\t<br>Boo hoo,,<br> lost my shoe !\";\\nconst lineA1 = \"1:1\\\\tgfme\\\\tkeyterm\\\\tהַשּׁפְטִ֔ים\\\\t1\\\\trc://*/tw/dict/bible/kt/judge\";\\nconst lineA2 = \"1:1\\\\trenf\\\\t\\\\tרָעָ֖ב\\\\t1\\\\trc://*/tw/dict/bible/other/famine\";\\nconst lineA3 = \"1:1\\\\tqury\\\\tname\\\\tמִבֵּית לֶ֣חֶם\\\\t1\\\\trc://*/tw/dict/bible/names/bethlehem\";\\nconst lineA4 = \"2:16\\\\tytc7\\\\tkeyterm; name\\\\tΧριστοῦ Ἰησοῦ\\\\t1\\\\trc://*/tw/dict/bible/kt/jesus\";\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  languageCode: \\'en\\',\\n  repoCode: \\'TWL\\',\\n  tableLineName : \\'lineA4\\',\\n  tableLine : lineA4,\\n  bookID : \\'ROM\\', C:\\'2\\', V:\\'16\\',\\n  givenLocation : \\'that was supplied\\',\\n}\\n\\nfunction OurCheckTWLRow(props) {\\n  const { username, languageCode, repoCode, bookID, C, V, tableLine, tableLineName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because checkTWL_TSV6DataRow is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {tableLineName} <b>{bookID}</b>\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await checkTWL_TSV6DataRow(username, languageCode, repoCode, tableLine, bookID, C, V, givenLocation, checkingOptions);\\n      setResults(\\n        <div>\\n          <b>Check</b> {tableLineName}: \"{tableLine}\"<br/><br/>\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckTWLRow function\\n\\n<OurCheckTWLRow data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/twl-tsv6-row-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/twl-tsv6-table-check.md":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/twl-tsv6-table-check.md ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './twl-tsv6-table-check': __webpack_require__(/*! ./twl-tsv6-table-check */ \"./src/core/twl-tsv6-table-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## TW Links (TSV) Table Text Check Sandbox\\n\\nThis function checks the given block of TW Links (TSV) table lines for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport { internalCheckTWL_TSV6Table } from \\'./twl-tsv6-table-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// Text samples\\nconst textA = `Reference\\\\tID\\\\tTags\\\\tOrigWords\\\\tOccurrence\\\\tTWLink\\n2:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\t<br>Boo\\n99:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\tBad chapter number\\n2:boo\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\tBad verse number\\n2:3\\\\tw3r5q\\\\t\\\\t\\\\t\\\\t1\\\\tNote4\\n2:3\\\\tw3r5\\\\t\\\\tLaugh\\\\t\\\\t\\\\t1\\\\tNote5\\n2:3\\\\tw3r5\\\\t\\\\t\\\\tCan\\u2019t remember\\\\t\\\\t1\\\\tNote6\\n2:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t17\\\\tNote7\\n2:3\\\\tw3r5\\\\t\\\\t\\\\tBad ellipse...\\\\t1\\\\tNote8\\n2:3\\\\tw3r5\\\\t\\\\t\\\\t\\\\t1\\\\t<br>Boo hoo,, lost my shoe !`;\\nconst textG = `Reference\\\\tID\\\\tTags\\\\tOrigWords\\\\tOccurrence\\\\tTWLink\\nfront:intro\\\\td9wn\\\\t\\\\t\\\\t\\\\t0\\\\t# Introduction to Genesis<br><br>## Part 1: General Introduction<br><br>### Outline of Genesis<br><br>1. From the Creation to the Tower of Babel<br>- The account of the creation of the heavens and the earth (1:1\\u20134:26)<br>- The account of Adam (5:1\\u20136:8)<br>- The account of Noah (6:9\\u201311:9)<br>- The account of Shem (11:10\\u201311:26)<br>- The account of Terah (11:27\\u201311:32)<br>1. The accounts of the Patriarchs<br>- The account of Abraham (12:1-25:11)<br>- The account of Ishmael (25:12\\u201325:18)<br>- The account of Isaac, focusing on Jacob (25:19\\u201335:29)<br>- The account of Esau (36:1\\u201337:1)<br>- The account of Jacob, focusing on Joseph (37:2\\u201350:26)<br><br>### What is Genesis about?<br><br>Genesis begins with the early years of creation. It tells about God creating heaven, earth, and the first humans. It also tells about the first time humans sinned. This caused humans to be separated from God and to eventually die. Genesis 1-11 briefly tells about other important events that occurred over many hundreds of years. (See: [[rc://en/tw/dict/bible/kt/sin]] and [[rc://en/tw/dict/bible/other/death]])<br><br>Genesis is also about the beginning of God\\u2019s people. Genesis 12-50 tells about how God remained faithful to Abraham and his descendants. Abraham\\u2019s descendants became known as the Hebrews and later as the Israelites. These people would worship Yahweh and be his people.<br><br>Genesis ends with Abraham\\u2019s descendants living in Egypt with the hope of returning one day to the Promised Land. (See: [[rc://en/tw/dict/bible/kt/promisedland]])<br><br>### How should the title of this book be translated?<br><br>\\u201CGenesis\\u201D means \\u201Cbeginning,\\u201D so translators should express this idea in their title. Titles such as \\u201CThe Beginning of Things\\u201D may be suitable. (See: [[rc://en/ta/man/translate/translate-names]])<br><br>### Who wrote Genesis?<br><br>The writers of both the Old and New Testaments presented Moses as being very involved with writing the book of Genesis. Since ancient times, both Jews and Christians have thought that Moses wrote Genesis, Exodus, Leviticus, Numbers, and Deuteronomy.<br><br>## Part 2: Important Religious and Cultural Concepts<br><br>### What are the covenants mentioned in Genesis?<br><br>A covenant is a formal, binding agreement between two parties that one or both parties must fulfill.<br><br>God made three covenants in Genesis. In the covenant with Adam, God promised to bless Adam and cause him to prosper. Adam was not allowed to eat fruit from the tree of knowledge of good and evil. God promised that Adam would die if he disobeyed what he commanded.<br><br>In the covenant with Noah, God promised to never again destroy the world with a flood.<br><br>In the covenant with Abraham, God promised to make Abraham\\u2019s descendants into a great nation. He also promised to protect them and to give them a land of their own.<br><br>### What was God\\u2019s purpose for the book of Genesis?<br><br>The book of Genesis says that God created a very good world. However, the world became cursed because human beings began to sin. But Genesis shows that God continues to have complete control over the world.<br><br>Genesis also describes the start of God\\u2019s plan to bless the whole world again. This is shown when God makes a covenant with Abraham. With this covenant, God chose Abraham and his descendants to be his people. God promised to bless the world through Abraham\\u2019s descendants.<br><br>### What was the custom for inheritance as described by Genesis?<br><br>There are several passages in Genesis that show the customs of a father who is about to die passing on a blessing to his son. Abraham blessed his son, Isaac, and made him the ancestor of the people of Israel. However, Ishmael, Abraham\\u2019s other son, did not receive that same divine blessing. Likewise, Isaac\\u2019s older son Esau  did not receive the blessing. Isaac\\u2019s younger son, Jacob, received it instead. (See: [[rc://en/tw/dict/bible/kt/inherit]] and [[rc://en/tw/dict/bible/kt/bless]])<br><br>Also, it was the custom for a man to divide among his sons his material wealth and land. All his sons received equal portions except the oldest son. The firstborn son received twice as much. His portion was called a double portion. Esau gave up his right to receive the double portion.<br><br>### How does Genesis present sin and evil?<br><br>Genesis presents sin as doing things that are against God\\u2019s word and God\\u2019s ways. It presents evil as the opposite of good.<br><br>Sin and evil have affected all people. This started when Adam disobeyed God in the Garden of Eden.<br><br>## Part 3: Important Translation Issues<br><br>### What is one way in which Genesis marks the beginning of important sections?<br><br>Genesis uses one Hebrew phrase that the ULT translates as \\u201Cthis is the record of,\\u201D \\u201Cthese were the events concerning,\\u201D or \\u201Cthese were the descendants of.\\u201D The information in these sections may have come from sources much older than Moses. These passages are 2:4; 5:1; 6:9; 10:1; 11:10, 27; 25:12, 19; 36:1, 9; 37:2.<br><br>If the translator wants to translate in only two ways, we recommend for most passages a phrase such as, \\u201Cthis is the record about\\u201D or \\u201Cthis is information about.\\u201D Some passages will be better translated, however, as \\u201CThese were the descendants of.\\u201D<br><br>### Why are the beginnings of some narrative sections in Genesis difficult to translate?<br><br>Often in Genesis, the author first summarizes what is about to happen. Then in the following verses, the author tells the details of what happened. Probable examples of this style occur in Gen. 1:1, 6:22, 18:1, 21:1 and 22:1.<br><br>However, in many languages, it is preferred to write summaries at the end of a narrative. In this case, translators may choose a different approach. For example, in Gen. 1:1 (\\u201CIn the beginning God created the heavens and the earth\\u201D), translators may decide to translate like this: \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D<br><br>### What is the difference between \\u201Cpeople,\\u201D \\u201Cpeoples,\\u201D and \\u201Cpeople groups\\u201D?<br><br>The word \\u201Cpeople\\u201D refers to all the individuals who belong to a group, such as \\u201Cthe people of Israel.\\u201D The word \\u201Cpeoples\\u201D (used in the ULT) refers to multiple groups of people. Each people group might speak their own language, have their own customs, and worships their own gods. Some different peoples in the ancient Near East were those of Israel, Egypt, Edom, Moab, and Ammon.<br><br>The expression \\u201Cpeople groups\\u201D (used in the UST) means the same thing as \\u201Cpeoples\\u201D in the ULT. The translator should use the most equivalent term that is common in the project language.<br><br>### What is the relationship between individuals and peoples that have similar names?<br><br>Many individuals in Genesis eventually had large numbers of descendants who were called after their ancestor\\u2019s name. For example, Cush was the name of an individual. But, \\u201CCush\\u201D also became the name of nation that his descendants formed. They were called \\u201CCushites.\\u201D If possible, when translating these names, the translator should make the individual\\u2019s name and the nation\\u2019s name similar. Examples of this are \\u201CCush\\u201D and \\u201CCushite\\u201D or \\u201CMoab\\u201D and \\u201CMoabite.\\u201D Otherwise, the translator may say, \\u201Cthe descendants of Cush\\u201D or \\u201Cthe descendants of Moab.\\u201D<br><br>### What do the phrases \\u201Cto this day\\u201D or \\u201Cof today\\u201D mean?<br><br>These phrases were used by the narrator to refer to the time when he was writing. The translator should be aware that \\u201Cto this day\\u201D and \\u201Cof today\\u201D refer to a time already passed. The translator might decide to say, \\u201Cto this day, at the time when this is being written,\\u201D or, \\u201Cto this day, at the time of writing.\\u201D This Hebrew phrase occurs in Gen. 19:37, 19:38, 22:14, 26:33, 32:32, 35:20, 47:26, 48:18.\";\\nconst lineA2 = \"1:intro\\\\tzb6f\\\\t\\\\t\\\\t\\\\t0\\\\t# Genesis 01 General Notes<br><br>## Structure and formatting<br><br>This chapter presents the first account of God creating the world. There is a pattern to this account: \\u201CGod said\\u2026God saw that it was good\\u2026This was evening and morning, the first day.\\u201D Translators should preserve this pattern in their versions.<br><br>## Special concepts in this chapter<br><br>### The universe<br><br>This account of creation is told within the framework of ancient Hebrew ideas about the universe: the earth was resting with water around it and below it. Over the earth was something like a vast dome, called \\u201Can expanse between the waters\\u201D (1:6), on top of which was more water. Translators should try to keep these original images in their work, even though readers in their project language might have a completely different idea of what the universe is like.<br><br>### Evening and morning<br><br>Genesis 1 presents the ancient Hebrew idea of a day: it begins with sunset, lasts through the night and continues through the daylight hours until the next sunset. This pattern should be preserved in translation, even if readers in the project language define \\u201Cday\\u201D differently.<br><br>## Other possible translation difficulties in this chapter<br><br>### \\u201CIn the beginning\\u201D<br><br>Some languages and cultures speak of the world as if it has always existed, as if it had no beginning. But \\u201Cvery long ago\\u201D is different from \\u201Cin the beginning,\\u201D and you need to be sure that your translation communicates correctly.<br><br>### \\u201CGod said, \\u2018Let there be\\u2019\\u201D<br><br>This expression occurs often in this chapter. It can be difficult to translate, because God is not shown as talking to a particular person. If God is talking to a thing, it is something not yet in existence. Translators should find the most natural way in the project language to signal the idea that God spoke things into existence; he created the world and the things in it by simply commanding that they should exist.\\n1:1\\\\tf2mg\\\\t\\\\t\\\\t0\\\\t\\\\tIn the beginning, God created the heavens and the earth \\u201CThis is about how God made the heavens and the earth in the beginning.\\u201D This statement summarizes the rest of the chapter. Some languages translate it as \\u201CA very long time ago God created the heavens and the earth.\\u201D Translate it in a way that shows this actually happened and is not just a folk story.\\n1:3\\\\td7qw\\\\t\\\\tfigs-imperative\\\\t\\\\t0\\\\tLet there be light\\\\tThis is a command. By commanding that light should exist, God made it exist. (See: [[rc://en/ta/man/translate/figs-imperative]])\\n1:5\\\\tjc2d\\\\t\\\\tfigs-merism\\\\t\\\\t0\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. (See: [[rc://en/ta/man/translate/figs-merism]])\\n1:6\\\\turb3\\\\t\\\\tfigs-imperative\\\\t\\\\t0\\\\tThese are commands. By commanding that the expanse should exist and that it divide the waters, God made it exist and divide the waters. (See: [[rc://en/ta/man/translate/figs-imperative]])\\n1:8\\\\tss9r\\\\t\\\\tfigs-merism\\\\t\\\\t0\\\\tThis refers to the whole day. The writer speaks of the whole day as if it were these two parts. In the Jewish culture, a day begins when the sun sets. See how you translated this in [Genesis 1:5](../01/05.md). (See: [[rc://en/ta/man/translate/figs-merism]])\\n1:9\\\\tzu6f\\\\t\\\\tfigs-activepassive\\\\t\\\\t0\\\\tThis can be translated with an active verb. This is a command. By commanding that the waters gather together, God made them gather together. Alternate translation: \\u201CLet the waters\\u2026gather\\u201D or \\u201CLet the waters\\u2026come together\\u201D (See: [[rc://en/ta/man/translate/figs-activepassive]] and [[rc://en/ta/man/translate/figs-imperative]])\";\\nconst lineA9 = \"1:9\\\\tha33\\\\t\\\\t\\\\t\\\\t0\\\\t\\u201CIt happened like that\\u201D or \\u201CThat is what happened.\\u201D What God commanded happened just as he said it should. This phrase appears throughout the chapter and has the same meaning wherever it appears. See how you translated it in [Genesis 1:7](../01/07.md).`;\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  languageCode: \\'en\\',\\n  repoCode: \\'TWL\\',\\n  tableTextName : \\'textG\\',\\n  tableText : textG,\\n  bookID : \\'GEN\\',\\n  filename: \\'dummyFilename\\',\\n  givenLocation : \\'that was supplied\\',\\n}\\n\\nfunction OurCheckTWL_TSV6Table(props) {\\n  const { username, languageCode, repoCode, bookID, filename, tableText, tableTextName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because internalCheckTWL_TSV6Table is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {languageCode} {repoCode} for {tableTextName} <b>{bookID}</b>\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await internalCheckTWL_TSV6Table(username, languageCode, repoCode, bookID, filename, tableText, givenLocation, checkingOptions);\\n      setResults(\\n        <div>\\n          <b>Check</b> {tableTextName}: \"{tableText.substr(0,256)}\\u2026\"<br/><br/>\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckTWL_TSV6Table function\\n\\n<OurCheckTWL_TSV6Table data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/twl-tsv6-table-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/usfm-js-check.md":
/*!****************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/usfm-js-check.md ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './usfm-js-check': __webpack_require__(/*! ./usfm-js-check */ \"./src/core/usfm-js-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## USFM-JS Convert Check Sandbox\\n\\nThis function simply packages the [USFM-JS converter](https://www.npmjs.com/package/usfm-js) and runs it on the given USFM snippet just for our testing.\\n\\nThis might be removed again if it\\u2019s not at all helpful.\\n\\nOur packaged function returns a list of success messages and a list of (prioritised) notice components.\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { checkUSFMToJSON } from \\'./usfm-js-check\\';\\nimport { RenderNumberedLines, RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// USFM samples\\nconst textS = `\\\\\\\\id GEN Short test\\n\\\\\\\\usfm 3.0\\n\\\\\\\\h Genesis\\n\\\\\\\\mt Genesis\\n\\\\\\\\c 1\\n\\\\\\\\s5 My first heading\\n\\\\\\\\p\\n\\\\\\\\v 1 This is the first and last verse\\n`;\\n\\nconst textG = `\\\\\\\\id GEN EN_ULT en_English_ltr unfoldingWord Literal Text Thu Jul 25 2019 09:33:56 GMT-0400 (EDT) tc\\n\\\\\\\\usfm 3.0\\n\\\\\\\\ide UTF-8\\n\\\\\\\\h Genesis\\n\\\\\\\\toc1 The Book of Genesis\\n\\\\\\\\toc2 Genesis\\n\\\\\\\\toc3 Gen\\n\\\\\\\\mt Genesis\\n\\n\\\\\\\\s5\\n\\\\\\\\c 1\\n\\\\\\\\p\\n\\\\\\\\v 1 In the beginning, God created the heavens and the earth.\\n\\\\\\\\v 2 The earth was without form and empty. Darkness was upon the surface of the deep. The Spirit of God was moving above the surface of the waters.\\n\\\\\\\\s5\\n\\\\\\\\v 3 God said, \\u201CLet there be light,\\u201D and there was light.\\n\\\\\\\\v 4 God saw the light, that it was good. He divided the light from the darkness.\\n\\\\\\\\v 5 God called the light \\u201Cday,\\u201D and the darkness he called \\u201Cnight.\\u201D This was evening and morning, the first day.\\n\\n\\\\\\\\ts\\\\\\\\*\\n\\\\\\\\p\\n\\\\\\\\v 6 God said, \\u201CLet there be an expanse between the waters, and let it divide the waters from the waters.\\u201D\\n\\\\\\\\v 7 God made the expanse and divided the waters which were under the expanse from the waters which were above the expanse. It was so.\\n\\\\\\\\v 8 God called the expanse \\u201Csky.\\u201D This was evening and morning, the second day.\\n`;\\n\\nconst textH = `\\\\\\\\id RUT unfoldingWord\\xAE Hebrew Bible\\n\\\\\\\\usfm 3.0\\n\\\\\\\\ide UTF-8\\n\\\\\\\\h Ruth\\n\\\\\\\\toc1 The Book of Ruth\\n\\\\\\\\toc2 Ruth\\n\\\\\\\\toc3 Rut\\n\\\\\\\\mt Ruth\\n\\n\\\\\\\\c 1\\n\\\\\\\\p\\n\\n\\\\\\\\v 1\\n\\\\\\\\w וַיְהִ֗י|lemma=\"הָיָה\" strong=\"c:H1961\" x-morph=\"He,C:Vqw3ms\"\\\\\\\\w*\\n\\\\\\\\w בִּימֵי֙|lemma=\"יוֹם\" strong=\"b:H3117\" x-morph=\"He,R:Ncmpc\"\\\\\\\\w*\\n\\\\\\\\w שְׁפֹ֣ט|lemma=\"שָׁפַט\" strong=\"H8199\" x-morph=\"He,Vqc\"\\\\\\\\w*\\n\\\\\\\\w הַשּׁפְטִ֔ים|lemma=\"שָׁפַט\" strong=\"d:H8199\" x-morph=\"He,Td:Vqrmpa\" x-tw=\"rc://*/tw/dict/bible/kt/judge\"\\\\\\\\w*\\n\\\\\\\\w וַיְהִ֥י|lemma=\"הָיָה\" strong=\"c:H1961\" x-morph=\"He,C:Vqw3ms\"\\\\\\\\w*\\n\\\\\\\\w רָעָ֖ב|lemma=\"רָעָב\" strong=\"H7458\" x-morph=\"He,Ncmsa\" x-tw=\"rc://*/tw/dict/bible/other/famine\"\\\\\\\\w*\\n\\\\\\\\w בָּאָ֑רֶץ|lemma=\"אֶרֶץ\" strong=\"b:H0776\" x-morph=\"He,Rd:Ncbsa\"\\\\\\\\w*\\n\\\\\\\\w וַיֵּלֶךְ|lemma=\"יָלַךְ\" strong=\"c:H3212\" x-morph=\"He,C:Vqw3ms\"\\\\\\\\w*\\n\\\\\\\\w אִ֜ישׁ|lemma=\"אִישׁ\" strong=\"H0376\" x-morph=\"He,Ncmsa\"\\\\\\\\w*\\n\\\\\\\\k-s | x-tw=\"rc://*/tw/dict/bible/names/bethlehem\"\\\\\\\\*\\\\\\\\w מִבֵּית|lemma=\"בֵּית לֶחֶם\" strong=\"m:H1035\" x-morph=\"He,R:Np\"\\\\\\\\w*\\n\\\\\\\\w לֶ֣חֶם|lemma=\"בֵּית לֶחֶם\" strong=\"H1035\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\k-e\\\\\\\\*\\n\\\\\\\\w יְהוּדָ֗ה|lemma=\"יְהוּדָה\" strong=\"H3063\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/judah\"\\\\\\\\w*\\n\\\\\\\\w לָגוּר֙|lemma=\"גּוּר\" strong=\"l:H1481a\" x-morph=\"He,R:Vqc\"\\\\\\\\w*\\n\\\\\\\\w בִּשְׂדֵ֣י|lemma=\"שָׂדֶה\" strong=\"b:H7704b\" x-morph=\"He,R:Ncmpc\"\\\\\\\\w*\\n\\\\\\\\w מוֹאָ֔ב|lemma=\"מוֹאָב\" strong=\"H4124\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/moab\"\\\\\\\\w*\\n\\\\\\\\w ה֥וּא|lemma=\"הוּא\" strong=\"H1931\" x-morph=\"He,Pp3ms\"\\\\\\\\w*\\n\\\\\\\\w וְאִשְׁתּ֖וֹ|lemma=\"אִשּׁה\" strong=\"c:H0802\" x-morph=\"He,C:Ncfsc:Sp3ms\"\\\\\\\\w*\\n\\\\\\\\w וּשְׁנֵ֥י|lemma=\"שְׁנַיִם\" strong=\"c:H8147\" x-morph=\"He,C:Acmdc\"\\\\\\\\w*\\n\\\\\\\\w בָנָֽיו|lemma=\"בֵּן\" strong=\"H1121a\" x-morph=\"He,Ncmpc:Sp3ms\" x-tw=\"rc://*/tw/dict/bible/kt/son\"\\\\\\\\w*\\u05C3\\n\\n\\\\\\\\v 2\\n\\\\\\\\w וְשֵׁם|lemma=\"שֵׁם\" strong=\"c:H8034\" x-morph=\"He,C:Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w הָאִ֣ישׁ|lemma=\"אִישׁ\" strong=\"d:H0376\" x-morph=\"He,Td:Ncmsa\"\\\\\\\\w*\\n\\\\\\\\w אֱֽלִימֶ֡לֶךְ|lemma=\"אֱלִימֶלֶךְ\" strong=\"H0458\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וְשֵׁם֩|lemma=\"שֵׁם\" strong=\"c:H8034\" x-morph=\"He,C:Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w אִשְׁתּ֨וֹ|lemma=\"אִשּׁה\" strong=\"H0802\" x-morph=\"He,Ncfsc:Sp3ms\"\\\\\\\\w*\\n\\\\\\\\w נָעֳמִ֜י|lemma=\"נׇעֳמִי\" strong=\"H5281\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וְשֵׁם|lemma=\"שֵׁם\" strong=\"c:H8034\" x-morph=\"He,C:Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w שְׁנֵֽי|lemma=\"שְׁנַיִם\" strong=\"H8147\" x-morph=\"He,Acmdc\"\\\\\\\\w*\\u05BE\\\\\\\\w בָנָ֣יו|lemma=\"בֵּן\" strong=\"H1121a\" x-morph=\"He,Ncmpc:Sp3ms\" x-tw=\"rc://*/tw/dict/bible/kt/son\"\\\\\\\\w* \\u05C0\\n\\\\\\\\w מַחְל֤וֹן|lemma=\"מַחְלוֹן\" strong=\"H4248\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וְכִלְיוֹן֙|lemma=\"כִּלְיוֹן\" strong=\"c:H3630\" x-morph=\"He,C:Np\"\\\\\\\\w*\\n\\\\\\\\w אֶפְרָתִ֔ים|lemma=\"אֶפְרָתִי\" strong=\"H0673\" x-morph=\"He,Ngmpa\" x-tw=\"rc://*/tw/dict/bible/names/ephrathah\"\\\\\\\\w*\\n\\\\\\\\k-s | x-tw=\"rc://*/tw/dict/bible/names/bethlehem\"\\\\\\\\*\\\\\\\\w מִבֵּית|lemma=\"בֵּית לֶחֶם\" strong=\"m:H1035\" x-morph=\"He,R:Np\"\\\\\\\\w*\\n\\\\\\\\w לֶ֖חֶם|lemma=\"בֵּית לֶחֶם\" strong=\"H1035\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\k-e\\\\\\\\*\\n\\\\\\\\w יְהוּדָ֑ה|lemma=\"יְהוּדָה\" strong=\"H3063\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/judah\"\\\\\\\\w*\\n\\\\\\\\w וַיָּבֹ֥אוּ|lemma=\"בּוֹא\" strong=\"c:H0935\" x-morph=\"He,C:Vqw3mp\"\\\\\\\\w*\\n\\\\\\\\w שְׂדֵי|lemma=\"שָׂדֶה\" strong=\"H7704b\" x-morph=\"He,Ncmpc\"\\\\\\\\w*\\u05BE\\\\\\\\w מוֹאָ֖ב|lemma=\"מוֹאָב\" strong=\"H4124\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/moab\"\\\\\\\\w*\\n\\\\\\\\w וַיִּהְיוּ|lemma=\"הָיָה\" strong=\"c:H1961\" x-morph=\"He,C:Vqw3mp\"\\\\\\\\w*\\u05BE\\\\\\\\w שָׁם|lemma=\"שָׁם\" strong=\"H8033\" x-morph=\"He,D\"\\\\\\\\w*\\u05C3\\n`;\\n\\nconst textULT = `\\\\\\\\id RUT EN_ULT en_English_ltr Tue Mar 03 2020 16:27:33 GMT+0200 (SAST) tc\\n\\\\\\\\usfm 3.0\\n\\\\\\\\ide UTF-8\\n\\\\\\\\h Ruth\\n\\\\\\\\toc1 The Book of Ruth\\n\\\\\\\\toc2 Ruth\\n\\\\\\\\toc3 Rut\\n\\\\\\\\mt Ruth\\n\\n\\\\\\\\ts\\\\\\\\*\\n\\\\\\\\c 1\\n\\\\\\\\p\\n\\\\\\\\v 1 \\\\\\\\zaln-s | x-strong=\"c:H1961\" x-lemma=\"הָיָה\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיְהִ֗י\"\\\\\\\\*\\\\\\\\w Now|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w it|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w happened|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"b:H3117\" x-lemma=\"יוֹם\" x-morph=\"He,R:Ncmpc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בִּימֵי֙\"\\\\\\\\*\\\\\\\\w in|x-occurrence=\"1\" x-occurrences=\"3\"\\\\\\\\w*\\n\\\\\\\\w the|x-occurrence=\"1\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w days|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"1\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H8199\" x-lemma=\"שָׁפַט\" x-morph=\"He,Vqc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"שְׁפֹ֣ט\"\\\\\\\\*\\\\\\\\w the|x-occurrence=\"2\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w ruling|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"2\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"d:H8199\" x-lemma=\"שָׁפַט\" x-morph=\"He,Td:Vqrmpa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"הַשּׁפְטִ֔ים\"\\\\\\\\*\\\\\\\\w the|x-occurrence=\"3\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w judges|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H1961\" x-lemma=\"הָיָה\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיְהִ֥י\"\\\\\\\\*\\\\\\\\w that|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w there|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w was|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H7458\" x-lemma=\"רָעָב\" x-morph=\"He,Ncmsa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"רָעָ֖ב\"\\\\\\\\*\\\\\\\\w a|x-occurrence=\"1\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w famine|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"b:H0776\" x-lemma=\"אֶרֶץ\" x-morph=\"He,Rd:Ncbsa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בָּאָ֑רֶץ\"\\\\\\\\*\\\\\\\\w in|x-occurrence=\"2\" x-occurrences=\"3\"\\\\\\\\w*\\n\\\\\\\\w the|x-occurrence=\"4\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w land|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*.\\n\\\\\\\\zaln-s | x-strong=\"c:H3212\" x-lemma=\"יָלַךְ\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיֵּלֶךְ\"\\\\\\\\*\\\\\\\\w And|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H0376\" x-lemma=\"אִישׁ\" x-morph=\"He,Ncmsa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"אִ֜ישׁ\"\\\\\\\\*\\\\\\\\w a|x-occurrence=\"2\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w certain|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w man|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"m:H1035\" x-lemma=\"בֵּית לֶחֶם\" x-morph=\"He,R:Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"מִבֵּית\"\\\\\\\\*\\\\\\\\zaln-s | x-strong=\"H1035\" x-lemma=\"בֵּית לֶחֶם\" x-morph=\"He,Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"לֶ֣חֶם\"\\\\\\\\*\\\\\\\\w from|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w Bethlehem|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"3\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H3063\" x-lemma=\"יְהוּדָה\" x-morph=\"He,Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"יְהוּדָ֗ה\"\\\\\\\\*\\\\\\\\w Judah|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H3212\" x-lemma=\"יָלַךְ\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיֵּלֶךְ\"\\\\\\\\*\\\\\\\\w went|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"l:H1481a\" x-lemma=\"גּוּר\" x-morph=\"He,R:Vqc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"לָגוּר֙\"\\\\\\\\*\\\\\\\\w to|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w live|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"b:H7704b\" x-lemma=\"שָׂדֶה\" x-morph=\"He,R:Ncmpc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בִּשְׂדֵ֣י\"\\\\\\\\*\\\\\\\\w in|x-occurrence=\"3\" x-occurrences=\"3\"\\\\\\\\w*\\n\\\\\\\\w the|x-occurrence=\"5\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w fields|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"4\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H4124\" x-lemma=\"מוֹאָב\" x-morph=\"He,Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"מוֹאָ֔ב\"\\\\\\\\*\\\\\\\\w Moab|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*,\\n\\\\\\\\zaln-s | x-strong=\"H1931\" x-lemma=\"הוּא\" x-morph=\"He,Pp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"ה֥וּא\"\\\\\\\\*\\\\\\\\w he|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H0802\" x-lemma=\"אִשּׁה\" x-morph=\"He,C:Ncfsc:Sp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וְאִשְׁתּ֖וֹ\"\\\\\\\\*\\\\\\\\w and|x-occurrence=\"1\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w his|x-occurrence=\"1\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w wife|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H8147\" x-lemma=\"שְׁנַיִם\" x-morph=\"He,C:Acmdc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וּשְׁנֵ֥י\"\\\\\\\\*\\\\\\\\w and|x-occurrence=\"2\" x-occurrences=\"2\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H1121a\" x-lemma=\"בֵּן\" x-morph=\"He,Ncmpc:Sp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בָנָֽיו\"\\\\\\\\*\\\\\\\\w his|x-occurrence=\"2\" x-occurrences=\"2\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H8147\" x-lemma=\"שְׁנַיִם\" x-morph=\"He,C:Acmdc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וּשְׁנֵ֥י\"\\\\\\\\*\\\\\\\\w two|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H1121a\" x-lemma=\"בֵּן\" x-morph=\"He,Ncmpc:Sp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בָנָֽיו\"\\\\\\\\*\\\\\\\\w sons|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*.\\n`;\\n\\nconst textB = `\\\\\\\\id GEN Bad USFM test\\n\\\\\\\\usfm 4.0\\n\\\\\\\\h Genesis\\n\\\\\\\\mt Genesis\\n\\\\\\\\c 7\\n\\\\\\\\s5 My  first  heading\\n\\\\\\\\v3 This is the first and last verse::\\n\\\\\\\\v\\n\\\\\\\\c 8a\\n\\\\\\\\v 1b Hello\\n\\\\\\\\v 1-3 Bad overlap\\n\\\\\\\\v 2 Not good here\\n`;\\n\\n// You can choose any of the above texts here\\n//  (to demonstrate differing results)\\nconst chosenTextName = \\'textH\\';\\nconst chosenText = textH;\\n\\nconst rawResults = checkUSFMToJSON(\\'GEN\\', chosenTextName, chosenText, \\'that was supplied\\');\\n\\n<>\\n<b>Check</b><RenderNumberedLines text={chosenText} />\\n<RenderRawResults results={rawResults} />\\n</>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/usfm-js-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/usfm-text-check.md":
/*!******************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/usfm-text-check.md ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './usfm-text-check': __webpack_require__(/*! ./usfm-text-check */ \"./src/core/usfm-text-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## USFM Text Check Sandbox\\n\\nThis function checks the given USFM text for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.\\n\\nNote that unfoldingWord has three distinct forms of USFM files (and these functions have been designed to properly handle all three):\\n\\n1.  Our original language files (UHB and UGNT) have each word parsed with morphological information, and also have some key terms marked. Each original language word is usually placed on a separate line in the file.\\n2.  Our ULT and UST have many books that contain alignment information, i.e., the translated words or phrases are aligned/connected to specific original languages words or phrases. Each word is usually placed on a separate line in the file.\\n3.  Some of our USFM Bible books simply contain the (normal) Bible text. (Of course, these files are much smaller and quicker to validate.)'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport React, { useState, useEffect } from \\'react\\';\\nimport { checkUSFMText } from \\'./usfm-text-check\\';\\nimport { RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// USFM samples\\nconst textS = `\\\\\\\\id GEN Short test\\n\\\\\\\\usfm 3.0\\n\\\\\\\\h Genesis\\n\\\\\\\\mt Genesis\\n\\\\\\\\c 1\\n\\\\\\\\s5 My first heading\\n\\\\\\\\p\\n\\\\\\\\v 1 This is the first and last verse\\n`;\\nconst textG = `\\\\\\\\id GEN EN_ULT en_English_ltr unfoldingWord Literal Text Thu Jul 25 2019 09:33:56 GMT-0400 (EDT) tc\\n\\\\\\\\usfm 3.0\\n\\\\\\\\ide UTF-8\\n\\\\\\\\h Genesis\\n\\\\\\\\toc1 The Book of Genesis\\n\\\\\\\\toc2 Genesis\\n\\\\\\\\toc3 Gen\\n\\\\\\\\mt Genesis\\n\\n\\\\\\\\s5\\n\\\\\\\\c 1\\n\\\\\\\\p\\n\\\\\\\\v 1 In the beginning, God created the heavens and the earth.\\n\\\\\\\\v 2 The earth was without form and empty. Darkness was upon the surface of the deep. The Spirit of God was moving above the surface of the waters.\\n\\\\\\\\s5\\n\\\\\\\\v 3 God said, \\u201CLet there be light,\\u201D and there was light.\\n\\\\\\\\v 4 God saw the light, that it was good. He divided the light from the darkness.\\n\\\\\\\\v 5 God called the light \\u201Cday,\\u201D and the darkness he called \\u201Cnight.\\u201D This was evening and morning, the first day.\\n\\n\\\\\\\\ts\\\\\\\\*\\n\\\\\\\\p\\n\\\\\\\\v 6 God said, \\u201CLet there be an expanse between the waters, and let it divide the waters from the waters.\\u201D\\n\\\\\\\\v 7 God made the expanse and divided the waters which were under the expanse from the waters which were above the expanse. It was so.\\n\\\\\\\\v 8 God called the expanse \\u201Csky.\\u201D This was evening and morning, the second day.\\n`;\\nconst textH = `\\\\\\\\id RUT unfoldingWord\\xAE Hebrew Bible\\n\\\\\\\\usfm 3.0\\n\\\\\\\\ide UTF-8\\n\\\\\\\\h Ruth\\n\\\\\\\\toc1 The Book of Ruth\\n\\\\\\\\toc2 Ruth\\n\\\\\\\\toc3 Rut\\n\\\\\\\\mt Ruth\\n\\n\\\\\\\\c 1\\n\\\\\\\\p\\n\\n\\\\\\\\v 1\\n\\\\\\\\w וַיְהִ֗י|lemma=\"הָיָה\" strong=\"c:H1961\" x-morph=\"He,C:Vqw3ms\"\\\\\\\\w*\\n\\\\\\\\w בִּימֵי֙|lemma=\"יוֹם\" strong=\"b:H3117\" x-morph=\"He,R:Ncmpc\"\\\\\\\\w*\\n\\\\\\\\w שְׁפֹ֣ט|lemma=\"שָׁפַט\" strong=\"H8199\" x-morph=\"He,Vqc\"\\\\\\\\w*\\n\\\\\\\\w הַשּׁפְטִ֔ים|lemma=\"שָׁפַט\" strong=\"d:H8199\" x-morph=\"He,Td:Vqrmpa\" x-tw=\"rc://*/tw/dict/bible/kt/judge\"\\\\\\\\w*\\n\\\\\\\\w וַיְהִ֥י|lemma=\"הָיָה\" strong=\"c:H1961\" x-morph=\"He,C:Vqw3ms\"\\\\\\\\w*\\n\\\\\\\\w רָעָ֖ב|lemma=\"רָעָב\" strong=\"H7458\" x-morph=\"He,Ncmsa\" x-tw=\"rc://*/tw/dict/bible/other/famine\"\\\\\\\\w*\\n\\\\\\\\w בָּאָ֑רֶץ|lemma=\"אֶרֶץ\" strong=\"b:H0776\" x-morph=\"He,Rd:Ncbsa\"\\\\\\\\w*\\n\\\\\\\\w וַיֵּלֶךְ|lemma=\"יָלַךְ\" strong=\"c:H3212\" x-morph=\"He,C:Vqw3ms\"\\\\\\\\w*\\n\\\\\\\\w אִ֜ישׁ|lemma=\"אִישׁ\" strong=\"H0376\" x-morph=\"He,Ncmsa\"\\\\\\\\w*\\n\\\\\\\\k-s | x-tw=\"rc://*/tw/dict/bible/names/bethlehem\"\\\\\\\\*\\\\\\\\w מִבֵּית|lemma=\"בֵּית לֶחֶם\" strong=\"m:H1035\" x-morph=\"He,R:Np\"\\\\\\\\w*\\n\\\\\\\\w לֶ֣חֶם|lemma=\"בֵּית לֶחֶם\" strong=\"H1035\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\k-e\\\\\\\\*\\n\\\\\\\\w יְהוּדָ֗ה|lemma=\"יְהוּדָה\" strong=\"H3063\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/judah\"\\\\\\\\w*\\n\\\\\\\\w לָגוּר֙|lemma=\"גּוּר\" strong=\"l:H1481a\" x-morph=\"He,R:Vqc\"\\\\\\\\w*\\n\\\\\\\\w בִּשְׂדֵ֣י|lemma=\"שָׂדֶה\" strong=\"b:H7704b\" x-morph=\"He,R:Ncmpc\"\\\\\\\\w*\\n\\\\\\\\w מוֹאָ֔ב|lemma=\"מוֹאָב\" strong=\"H4124\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/moab\"\\\\\\\\w*\\n\\\\\\\\w ה֥וּא|lemma=\"הוּא\" strong=\"H1931\" x-morph=\"He,Pp3ms\"\\\\\\\\w*\\n\\\\\\\\w וְאִשְׁתּ֖וֹ|lemma=\"אִשּׁה\" strong=\"c:H0802\" x-morph=\"He,C:Ncfsc:Sp3ms\"\\\\\\\\w*\\n\\\\\\\\w וּשְׁנֵ֥י|lemma=\"שְׁנַיִם\" strong=\"c:H8147\" x-morph=\"He,C:Acmdc\"\\\\\\\\w*\\n\\\\\\\\w בָנָֽיו|lemma=\"בֵּן\" strong=\"H1121a\" x-morph=\"He,Ncmpc:Sp3ms\" x-tw=\"rc://*/tw/dict/bible/kt/son\"\\\\\\\\w*\\u05C3\\n\\n\\\\\\\\v 2\\n\\\\\\\\w וְשֵׁם|lemma=\"שֵׁם\" strong=\"c:H8034\" x-morph=\"He,C:Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w הָאִ֣ישׁ|lemma=\"אִישׁ\" strong=\"d:H0376\" x-morph=\"He,Td:Ncmsa\"\\\\\\\\w*\\n\\\\\\\\w אֱֽלִימֶ֡לֶךְ|lemma=\"אֱלִימֶלֶךְ\" strong=\"H0458\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וְשֵׁם֩|lemma=\"שֵׁם\" strong=\"c:H8034\" x-morph=\"He,C:Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w אִשְׁתּ֨וֹ|lemma=\"אִשּׁה\" strong=\"H0802\" x-morph=\"He,Ncfsc:Sp3ms\"\\\\\\\\w*\\n\\\\\\\\w נָעֳמִ֜י|lemma=\"נׇעֳמִי\" strong=\"H5281\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וְשֵׁם|lemma=\"שֵׁם\" strong=\"c:H8034\" x-morph=\"He,C:Ncmsc\" x-tw=\"rc://*/tw/dict/bible/kt/name\"\\\\\\\\w*\\n\\\\\\\\w שְׁנֵֽי|lemma=\"שְׁנַיִם\" strong=\"H8147\" x-morph=\"He,Acmdc\"\\\\\\\\w*\\u05BE\\\\\\\\w בָנָ֣יו|lemma=\"בֵּן\" strong=\"H1121a\" x-morph=\"He,Ncmpc:Sp3ms\" x-tw=\"rc://*/tw/dict/bible/kt/son\"\\\\\\\\w* \\u05C0\\n\\\\\\\\w מַחְל֤וֹן|lemma=\"מַחְלוֹן\" strong=\"H4248\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\w וְכִלְיוֹן֙|lemma=\"כִּלְיוֹן\" strong=\"c:H3630\" x-morph=\"He,C:Np\"\\\\\\\\w*\\n\\\\\\\\w אֶפְרָתִ֔ים|lemma=\"אֶפְרָתִי\" strong=\"H0673\" x-morph=\"He,Ngmpa\" x-tw=\"rc://*/tw/dict/bible/names/ephrathah\"\\\\\\\\w*\\n\\\\\\\\k-s | x-tw=\"rc://*/tw/dict/bible/names/bethlehem\"\\\\\\\\*\\\\\\\\w מִבֵּית|lemma=\"בֵּית לֶחֶם\" strong=\"m:H1035\" x-morph=\"He,R:Np\"\\\\\\\\w*\\n\\\\\\\\w לֶ֖חֶם|lemma=\"בֵּית לֶחֶם\" strong=\"H1035\" x-morph=\"He,Np\"\\\\\\\\w*\\n\\\\\\\\k-e\\\\\\\\*\\n\\\\\\\\w יְהוּדָ֑ה|lemma=\"יְהוּדָה\" strong=\"H3063\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/judah\"\\\\\\\\w*\\n\\\\\\\\w וַיָּבֹ֥אוּ|lemma=\"בּוֹא\" strong=\"c:H0935\" x-morph=\"He,C:Vqw3mp\"\\\\\\\\w*\\n\\\\\\\\w שְׂדֵי|lemma=\"שָׂדֶה\" strong=\"H7704b\" x-morph=\"He,Ncmpc\"\\\\\\\\w*\\u05BE\\\\\\\\w מוֹאָ֖ב|lemma=\"מוֹאָב\" strong=\"H4124\" x-morph=\"He,Np\" x-tw=\"rc://*/tw/dict/bible/names/moab\"\\\\\\\\w*\\n\\\\\\\\w וַיִּהְיוּ|lemma=\"הָיָה\" strong=\"c:H1961\" x-morph=\"He,C:Vqw3mp\"\\\\\\\\w*\\u05BE\\\\\\\\w שָׁם|lemma=\"שָׁם\" strong=\"H8033\" x-morph=\"He,D\"\\\\\\\\w*\\u05C3\\n`;\\nconst textULT = `\\\\\\\\id RUT EN_ULT en_English_ltr Tue Mar 03 2020 16:27:33 GMT+0200 (SAST) tc\\n\\\\\\\\usfm 3.0\\n\\\\\\\\ide UTF-8\\n\\\\\\\\h Ruth\\n\\\\\\\\toc1 The Book of Ruth\\n\\\\\\\\toc2 Ruth\\n\\\\\\\\toc3 Rut\\n\\\\\\\\mt Ruth\\n\\n\\\\\\\\ts\\\\\\\\*\\n\\\\\\\\c 1\\n\\\\\\\\p\\n\\\\\\\\v 1 \\\\\\\\zaln-s | x-strong=\"c:H1961\" x-lemma=\"הָיָה\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיְהִ֗י\"\\\\\\\\*\\\\\\\\w Now|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w it|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w happened|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"b:H3117\" x-lemma=\"יוֹם\" x-morph=\"He,R:Ncmpc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בִּימֵי֙\"\\\\\\\\*\\\\\\\\w in|x-occurrence=\"1\" x-occurrences=\"3\"\\\\\\\\w*\\n\\\\\\\\w the|x-occurrence=\"1\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w days|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"1\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H8199\" x-lemma=\"שָׁפַט\" x-morph=\"He,Vqc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"שְׁפֹ֣ט\"\\\\\\\\*\\\\\\\\w the|x-occurrence=\"2\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w ruling|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"2\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"d:H8199\" x-lemma=\"שָׁפַט\" x-morph=\"He,Td:Vqrmpa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"הַשּׁפְטִ֔ים\"\\\\\\\\*\\\\\\\\w the|x-occurrence=\"3\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w judges|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H1961\" x-lemma=\"הָיָה\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיְהִ֥י\"\\\\\\\\*\\\\\\\\w that|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w there|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w was|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H7458\" x-lemma=\"רָעָב\" x-morph=\"He,Ncmsa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"רָעָ֖ב\"\\\\\\\\*\\\\\\\\w a|x-occurrence=\"1\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w famine|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"b:H0776\" x-lemma=\"אֶרֶץ\" x-morph=\"He,Rd:Ncbsa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בָּאָ֑רֶץ\"\\\\\\\\*\\\\\\\\w in|x-occurrence=\"2\" x-occurrences=\"3\"\\\\\\\\w*\\n\\\\\\\\w the|x-occurrence=\"4\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w land|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*.\\n\\\\\\\\zaln-s | x-strong=\"c:H3212\" x-lemma=\"יָלַךְ\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיֵּלֶךְ\"\\\\\\\\*\\\\\\\\w And|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H0376\" x-lemma=\"אִישׁ\" x-morph=\"He,Ncmsa\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"אִ֜ישׁ\"\\\\\\\\*\\\\\\\\w a|x-occurrence=\"2\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w certain|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w man|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"m:H1035\" x-lemma=\"בֵּית לֶחֶם\" x-morph=\"He,R:Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"מִבֵּית\"\\\\\\\\*\\\\\\\\zaln-s | x-strong=\"H1035\" x-lemma=\"בֵּית לֶחֶם\" x-morph=\"He,Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"לֶ֣חֶם\"\\\\\\\\*\\\\\\\\w from|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w Bethlehem|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"3\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H3063\" x-lemma=\"יְהוּדָה\" x-morph=\"He,Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"יְהוּדָ֗ה\"\\\\\\\\*\\\\\\\\w Judah|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H3212\" x-lemma=\"יָלַךְ\" x-morph=\"He,C:Vqw3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וַיֵּלֶךְ\"\\\\\\\\*\\\\\\\\w went|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"l:H1481a\" x-lemma=\"גּוּר\" x-morph=\"He,R:Vqc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"לָגוּר֙\"\\\\\\\\*\\\\\\\\w to|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w live|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"b:H7704b\" x-lemma=\"שָׂדֶה\" x-morph=\"He,R:Ncmpc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בִּשְׂדֵ֣י\"\\\\\\\\*\\\\\\\\w in|x-occurrence=\"3\" x-occurrences=\"3\"\\\\\\\\w*\\n\\\\\\\\w the|x-occurrence=\"5\" x-occurrences=\"5\"\\\\\\\\w*\\n\\\\\\\\w fields|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\n\\\\\\\\w of|x-occurrence=\"4\" x-occurrences=\"4\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H4124\" x-lemma=\"מוֹאָב\" x-morph=\"He,Np\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"מוֹאָ֔ב\"\\\\\\\\*\\\\\\\\w Moab|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*,\\n\\\\\\\\zaln-s | x-strong=\"H1931\" x-lemma=\"הוּא\" x-morph=\"He,Pp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"ה֥וּא\"\\\\\\\\*\\\\\\\\w he|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H0802\" x-lemma=\"אִשּׁה\" x-morph=\"He,C:Ncfsc:Sp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וְאִשְׁתּ֖וֹ\"\\\\\\\\*\\\\\\\\w and|x-occurrence=\"1\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w his|x-occurrence=\"1\" x-occurrences=\"2\"\\\\\\\\w*\\n\\\\\\\\w wife|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H8147\" x-lemma=\"שְׁנַיִם\" x-morph=\"He,C:Acmdc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וּשְׁנֵ֥י\"\\\\\\\\*\\\\\\\\w and|x-occurrence=\"2\" x-occurrences=\"2\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H1121a\" x-lemma=\"בֵּן\" x-morph=\"He,Ncmpc:Sp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בָנָֽיו\"\\\\\\\\*\\\\\\\\w his|x-occurrence=\"2\" x-occurrences=\"2\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"c:H8147\" x-lemma=\"שְׁנַיִם\" x-morph=\"He,C:Acmdc\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"וּשְׁנֵ֥י\"\\\\\\\\*\\\\\\\\w two|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*\\n\\\\\\\\zaln-s | x-strong=\"H1121a\" x-lemma=\"בֵּן\" x-morph=\"He,Ncmpc:Sp3ms\" x-occurrence=\"1\" x-occurrences=\"1\" x-content=\"בָנָֽיו\"\\\\\\\\*\\\\\\\\w sons|x-occurrence=\"1\" x-occurrences=\"1\"\\\\\\\\w*\\\\\\\\zaln-e\\\\\\\\*.\\n`;\\nconst textB = `\\\\\\\\id GEN Bad USFM test\\n\\\\\\\\usfm 4.0\\n\\\\\\\\h Genesis\\n\\\\\\\\mt Genesis\\n\\\\\\\\c 7\\n\\\\\\\\s5 My  first  heading\\n\\\\\\\\v3 This is the first and last verse::\\n\\\\\\\\v\\n\\\\\\\\c 8a\\n\\\\\\\\v 1b Hello\\n\\\\\\\\v 1-3 Bad overlap\\n\\\\\\\\v 2 Not good here\\n`;\\n\\nconst data = {\\n  // You can choose any of the above lines here\\n  //  (to demonstrate differing results)\\n  username: \\'unfoldingWord\\',\\n  languageCode: \\'el-x-koine\\',\\n  repoCode: \\'UGNT\\',\\n  USFMTextName : \\'textG\\',\\n  USFMText : textG,\\n  bookID : \\'GEN\\',\\n  filename: \\'dummyFilename\\',\\n  givenLocation : \\'that was supplied\\',\\n}\\n\\nfunction OurCheckUSFMText(props) {\\n  const { username, languageCode, repoCode, bookID, filename, USFMText, USFMTextName, givenLocation } = props.data;\\n\\n  const [results, setResults] = useState(null);\\n\\n  // We need the following construction because checkUSFMText is an ASYNC function\\n  useEffect(() => {\\n    // Use an IIFE (Immediately Invoked Function Expression)\\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\\n    (async () => {\\n      // Display our \"waiting\" message\\n      setResults(<p style={{ color: \\'magenta\\' }}>Checking {languageCode} {repoCode} for {USFMTextName} <b>{bookID}</b>\\u2026</p>);\\n      const checkingOptions = {};\\n      const rawResults = await checkUSFMText(username, languageCode, repoCode, bookID, filename, USFMText, givenLocation, checkingOptions);\\n      setResults(\\n        <div>\\n          <b>Check</b> {USFMTextName}: \"{USFMText.substr(0,256)}\\u2026\"<br/><br/>\\n          <RenderRawResults results={rawResults} />\\n        </div>\\n      );\\n    })(); // end of async part in unnamedFunction\\n  }, []); // end of useEffect part\\n\\n  return results;\\n} // end of OurCheckUSFMText function\\n\\n<OurCheckUSFMText data={data}/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/usfm-text-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/yaml-text-check.md":
/*!******************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/core/yaml-text-check.md ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './yaml-text-check': __webpack_require__(/*! ./yaml-text-check */ \"./src/core/yaml-text-check.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## YAML Text Check Sandbox\\n\\nThis function checks the given yaml file for typical formatting errors.\\n\\nIt returns a list of success messages and a list of notice components. (There is always a priority number in the range 0..999 and the main message string, as well as other details to help locate the error as available.)\\n\\nThese raw notice components can then be filtered and/or sorted as required by the calling program, and then divided into a list of errors and a list of warnings or whatever as desired.\\n\\nNote that we have a more specialised function for checking `manifest.yaml` files.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { checkYAMLText } from \\'./yaml-text-check\\';\\nimport { RenderNumberedLines, RenderRawResults } from \\'../demos/RenderProcessedResults\\';\\n\\n// YAML empty, good and bad text samples\\nconst textE = \\'\\';\\nconst textG1 = `dublin_core:\\n  conformsto: \\'rc0.2\\'\\n  contributor:\\n    - \\'Jesse Griffin, BA Biblical Studies, MA Biblical Languages\\'\\n    - \\'Larry Sallee, Th.M Dallas Theological Seminary, D.Min. Columbia Biblical Seminary\\'\\n    - \\'Door43 World Missions Community\\'\\n  creator: \\'unfoldingWord\\'\\n  description: \"An open-licensed update of the ASV, intended to provide a \\'form-centric\\' understanding of the Bible. It increases the translator\\'s understanding of the lexical and grammatical composition of the underlying text by adhering closely to the word order and structure of the originals.\"\\n  format: \\'text/usfm3\\'\\n  identifier: \\'ult\\'\\n  issued: \\'2020-03-25\\'\\n  language:\\n    direction: \\'ltr\\'\\n    identifier: \\'en\\'\\n    title: \\'English\\'\\n  modified: \\'2020-03-25\\'\\n  publisher: \\'unfoldingWord\\'\\n  relation:\\n    - \\'en/tw\\'\\n    - \\'en/tq\\'\\n    - \\'en/tn\\'\\n  rights: \\'CC BY-SA 4.0\\'\\n  source:\\n    -\\n      identifier: \\'asv\\'\\n      language: \\'en\\'\\n      version: \\'1901\\'\\n    -\\n      identifier: \\'ugnt\\'\\n      language: \\'el-x-koine\\'\\n      version: \\'0.12\\'\\n    -\\n      identifier: \\'uhb\\'\\n      language: \\'hbo\\'\\n      version: \\'2.1.12\\'\\n  subject: \\'Aligned Bible\\'\\n  title: \\'unfoldingWord\\xAE Literal Text\\'\\n  type: \\'bundle\\'\\n  version: \\'10\\'\\n\\nchecking:\\n  checking_entity:\\n    - \\'unfoldingWord\\'\\n  checking_level: \\'3\\'\\n\\nprojects:\\n\\n  -\\n    title: \\'Genesis\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'gen\\'\\n    sort: 1\\n    path: \\'./01-GEN.usfm\\'\\n    categories: [ \\'bible-ot\\'  ]\\n\\n  -\\n    title: \\'Exodus\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'exo\\'\\n    sort: 2\\n    path: \\'./02-EXO.usfm\\'\\n    categories: [ \\'bible-ot\\'  ]\\n\\n  -\\n    title: \\'Zechariah\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'zec\\'\\n    sort: 38\\n    path: \\'./38-ZEC.usfm\\'\\n    categories: [ \\'bible-ot\\' ]\\n\\n  -\\n    title: \\'Malachi\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'mal\\'\\n    sort: 39\\n    path: \\'./39-MAL.usfm\\'\\n    categories: [ \\'bible-ot\\' ]\\n\\n  -\\n    title: \\'Matthew\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'mat\\'\\n    sort: 40\\n    path: \\'./41-MAT.usfm\\'\\n    categories: [ \\'bible-nt\\' ]\\n\\n  -\\n    title: \\'Jude\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'jud\\'\\n    sort: 65\\n    path: \\'./66-JUD.usfm\\'\\n    categories: [ \\'bible-nt\\' ]\\n\\n  -\\n    title: \\'Revelation\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'rev\\'\\n    sort: 66\\n    path: \\'./67-REV.usfm\\'\\n    categories: [ \\'bible-nt\\' ]\\n`;\\nconst textB = `dublin_core:\\n  conformsto: \\'rc0.2\\'\\n  contributor:\\n    - \\'Jesse Griffin, BA Biblical Studies, MA Biblical Languages\\'\\n    - \\'Larry Sallee, Th.M Dallas Theological Seminary, D.Min. Columbia Biblical Seminary\\'\\n    - \\'Door43 World Missions Community\\'\\n  creator: \\'unfoldingWord\\'\\n  description: \"An open-licensed update of the ASV, intended to provide a \\'form-centric\\' understanding of the Bible. It increases the translator\\'s understanding of the lexical and grammatical composition of the underlying text by adhering closely to the word order and structure of the originals.\"\\n  format: \\'text/usfm3\\'\\n  identifier: \\'ult\\'\\n  issued: \\'2020-03-25\\'\\n  language:\\n    direction: \\'ltr\\'\\n    identifier: \\'en\\'\\n    title: \\'English\\'\\n  modified: \\'2020-03-25\\'\\n  publisher: \\'unfoldingWord\\'\\n  relation:\\n    - \\'en/tw\\'\\n    - \\'en/tq\\'\\n    - \\'en/tn\\'\\n  rights: \\'CC BY-SA 4.0\\'\\n  source:\\n    -\\n      identifier: \\'asv\\'\\n      language: \\'en\\'\\n      version: \\'1901\\'\\n    -\\n      identifier: \\'ugnt\\'\\n      language: \\'el-x-koine\\'\\n      version: \\'0.12\\'\\n    -\\n      identifier: \\'uhb\\'\\n      language: \\'hbo\\'\\n      version: \\'2.1.12\\'\\n  subject: \\'Aligned Bible\\'\\n  title: \\'unfoldingWord\\xAE Literal Text\\'\\n  type: \\'bundle\\'\\n  version: \\'10\\'\\n\\nchecking:\\n  checking_entity:\\n    - \\'unfoldingWord\\'\\n  checking_level: \\'3\\'\\n\\nprojects:\\n\\n  =\\n    title: \\'Genesis\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'gen\\'\\n    sort: 1\\n    path: \\'./01-GEN.usfm\\'\\n    categories: [ \\'bible-ot\\'  ]\\n\\n  -\\n    title \\'Revelation\\'\\n    versification: \\'ufw\\'\\n    identifier: \\'rev\\'\\n    sort: 66\\n    path: \\'./67-REV.usfm\\'\\n    categories: [ \\'bible-nt\\' ]\\n`;\\n// This is an excerpt from a media.yaml file:\\nconst textG2 = `resource:\\n  version: \\'{latest}\\'\\n  media:\\n    -\\n     identifier: \\'pdf\\'\\n     version: \\'{latest}\\'\\n     contributor: []\\n     url: \\'https://cdn.door43.org/en/ult/v{latest}/pdf/en_ult_v{latest}.pdf\\'\\n\\nprojects:\\n  -\\n    identifier: \\'gen\\'\\n    version: \\'{latest}\\'\\n    media:\\n      -\\n       identifier: \\'pdf\\'\\n       version: \\'{latest}\\'\\n       contributor: []\\n       url: \\'https://cdn.door43.org/en/ult/v{latest}/pdf/en_ult_01-GEN_v{latest}.pdf\\'\\n\\n  -\\n    identifier: \\'rev\\'\\n    version: \\'{latest}\\'\\n    media:\\n      -\\n       identifier: \\'pdf\\'\\n       version: \\'{latest}\\'\\n       contributor: []\\n       url: \\'https://cdn.door43.org/en/ult/v{latest}/pdf/en_ult_67-REV_v{latest}.pdf\\'\\n`;\\n\\n// You can choose any of the above texts here\\n//  (to demonstrate differing results)\\nconst username = \\'unfoldingWord\\';\\nconst chosenText = textG2;\\nconst chosenTextName = \\'textG2\\';\\nconst checkingOptions = {};\\n\\nconst rawResults = checkYAMLText(username, \\'en\\', \\'\\', chosenTextName, chosenText, \\'in YAML data that was supplied\\', checkingOptions);\\n\\n<>\\n<b>YAML contents</b>: <RenderNumberedLines text={chosenText} />\\n<RenderRawResults results={rawResults} />\\n</>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/core/yaml-text-check.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/demos/notice-processing1.md":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/demos/notice-processing1.md ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    '../core/field-text-check': __webpack_require__(/*! ../core/field-text-check */ \"./src/core/field-text-check.js\"),\n    './notice-processing-functions': __webpack_require__(/*! ./notice-processing-functions */ \"./src/demos/notice-processing-functions.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Notice Processing 1 Sandbox\\n\\n### Error and Warning lists\\n\\nThis `processNoticesToErrorsWarnings()` function is passed an object that contains a list of success messages (e.g., \"Checked GEN\", \"Checked MAT\" type stuff) and a list of notices that each contain a priority number. Using the priorities, it processes the notices into a list of errors and a list of warnings.\\n\\nIt should be noted that although the success messages are simple strings, the notices and the returned error and warning lists are lists/arrays of ARRAYS. This is done to allow the encapsulating software to have more flexibility in how the information is used. See the code documentation for the final details, but in general, the error and warning lists contain eight fields:\\n\\n1.  A priority integer (0..999) -- usually 700+ are errors, under 700 are warnings.\\n2.  The book identifier (if relevant, 3-character UPPERCASE string or empty string)\\n3.  The chapter number (if relevant, string or empty string)\\n4.  The verse number (if relevant, string or empty string, can be a range, e.g., \\'22-24\\')\\n5.  The main error/warning message (string)\\n6.  The (zero-based) index of where the error was found on the line. -1 indicates that this field is not helpful/relevant.\\n7.  A text excerpt (typically 10 characters) centred about the error. An empty string indicates that this field is not helpful/relevant.\\n8.  The location of the error, e.g., \"line 2 in file GEN.usfm in unfoldingWord/en_ult repo\".\\n\\nNote below that the optional `processOptions` object allows the user to adjust things like the division point between error and warning priorities, and allows low priority or certain notices to simply be dropped, etc. The system defaults to suppressing multiple cases of similar errors, but this can also be fine-tuned through these parameters.\\n\\nAlthough this demonstration here formats and colours the error and warning lists, it\\u2019s expected that the encapsulating program will format and use the fields as desired. Because they are returned as an array of fields rather than simply strings, it\\u2019s certainly possible for the encapsulating program to sort or filter the messages as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { checkTextField } from \\'../core/field-text-check\\';\\nimport { processNoticesToErrorsWarnings } from \\'./notice-processing-functions\\';\\nimport { RenderRawResults, RenderObject, RenderSuccessesErrorsWarnings } from \\'../demos/RenderProcessedResults\\';\\n\\n// Empty, space, good, and bad, link, and RC text samples\\nconst textE = \"\";\\nconst textS = \" \";\\nconst textG = \"Peace on Earth, good will to all men/people!\";\\nconst textB = \" Peace  on\\xA0Earth,, good will to all) men!\\u202F\";\\nconst textL = \"https://unfoldingWord.org\";\\nconst textRC1 = \"rc://en/obs/book/obs/02/03\";\\nconst textRC2 = \"Compare with rc://en/tw/dict/bible/other/canaan\";\\n\\n// Just change this next two lines to change the text being used (to demonstrate differing results)\\nconst username = \\'unfoldingWord\\';\\nconst chosenTextName = \"textB\";\\nconst chosenText = textB;\\n\\n// The third parameter is \"linksAllowed\"\\nconst rawResults = checkTextField(username, \\'en\\', \\'TN\\', \\'raw\\', \\'Sample\\', chosenText, false, \\'in \\'+chosenTextName+\\' that was supplied\\');\\nif (!rawResults.successList || !rawResults.successList.length)\\n    rawResults.successList = [\"Done basic text checks\"];\\nconst processOptions = {\\n    // Uncomment any of these to test them\\n    // \\'maximumSimilarMessages\\': 3, // default is 2\\n    // \\'errorPriorityLevel\\': 600, // default is 700\\n    // \\'cutoffPriorityLevel\\': 200, // default is 0\\n    // \\'sortBy\\': \\'ByRepo\\', // default is \\'ByPriority\\', also have \\'AsFound\\'\\n    // \\'ignorePriorityNumberList\\': [123, 202], // default is []\\n};\\nconst processedResults = processNoticesToErrorsWarnings(rawResults, processOptions);\\n\\n<>\\n<b>Check</b> \"{chosenText}\"<br/><br/>\\n<RenderRawResults results={rawResults} />\\n<br/>Which after processing{Object.keys(processOptions).length? <> using <b>processOptions</b><RenderObject thisObject={processOptions} /></>:\\'\\'} then becomes:<br/><br/>\\n<RenderSuccessesErrorsWarnings results={processedResults} />\\n</>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/demos/notice-processing1.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/demos/notice-processing2.md":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/demos/notice-processing2.md ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    '../core/field-text-check': __webpack_require__(/*! ../core/field-text-check */ \"./src/core/field-text-check.js\"),\n    './notice-processing-functions': __webpack_require__(/*! ./notice-processing-functions */ \"./src/demos/notice-processing-functions.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Notice Processing 2 Sandbox\\n\\n### Severe, Medium, and Low lists\\n\\nThis `processNoticesToSevereMediumLow()` function is passed an object that contains a list of success messages (e.g., \"Checked GEN\", \"Checked MAT\" type stuff) and a list of notices that each contain a priority number. Using the priorities, it processes the notices into a list of errors and a list of warnings.\\n\\nIt should be noted that although the success messages are simple strings, the notices and the returned error and warning lists are lists/arrays of ARRAYS. This is done to allow the encapsulating software to have more flexibility in how the information is used. See the code documentation for the final details, but in general, the error and warning lists contain eight fields:\\n\\n1.  A priority integer (0..999) -- usually 800+ are severe, 600..799 are medium, under 600 are low.\\n2.  The book identifier (if relevant, 3-character UPPERCASE string or empty string)\\n3.  The chapter number (if relevant, string or empty string)\\n4.  The verse number (if relevant, string or empty string, can be a range, e.g., \\'22-24\\')\\n5.  The main error/warning message (string)\\n6.  The (zero-based) index of where the error was found on the line. -1 indicates that this field is not helpful/relevant.\\n7.  A text excerpt (typically 10 characters) centred about the error. An empty string indicates that this field is not helpful/relevant.\\n8.  The location of the error, e.g., \"line 2 in file GEN.usfm in unfoldingWord/en_ult repo\".\\n\\nNote below that the optional `processOptions` object allows the user to adjust things like the division point between error and warning priorities, and allows low priority or certain notices to simply be dropped, etc. The system defaults to suppressing multiple cases of similar errors, but this can also be fine-tuned through these parameters.\\n\\nAlthough this demonstration here formats and colours the error and warning lists, it\\u2019s expected that the encapsulating program will format and use the fields as desired. Because they are returned as an array of fields rather than simply strings, it\\u2019s certainly possible for the encapsulating program to sort or filter the messages as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { checkTextField } from \\'../core/field-text-check\\';\\nimport { processNoticesToSevereMediumLow } from \\'./notice-processing-functions\\';\\nimport { RenderRawResults, RenderObject, RenderSuccessesSevereMediumLow } from \\'../demos/RenderProcessedResults\\';\\n\\n// Empty, space, good, and bad, link, and RC text samples\\nconst textE = \"\";\\nconst textS = \" \";\\nconst textG = \"Peace on Earth, good will to all men/people!\";\\nconst textB = \" Peace  on\\xA0Earth,, good will to all) men!\\u202F\";\\nconst textL = \"https://unfoldingWord.org\";\\nconst textRC1 = \"rc://en/obs/book/obs/02/03\";\\nconst textRC2 = \"Compare with rc://en/tw/dict/bible/other/canaan\";\\n\\n// Just change this next two lines to change the text being used (to demonstrate differing results)\\nconst username = \\'unfoldingWord\\';\\nconst chosenTextName = \"textB\";\\nconst chosenText = textB;\\n\\n// The third parameter is \"linksAllowed\"\\nconst rawResults = checkTextField(username, \\'en\\', \\'TN\\', \\'raw\\', \\'Sample\\', chosenText, false, \\'in \\'+chosenTextName+\\' that was supplied\\');\\nif (!rawResults.successList || !rawResults.successList.length)\\n    rawResults.successList = [\"Done basic text checks\"];\\nconst processOptions = {\\n    // Uncomment any of these to test them\\n    // \\'maximumSimilarMessages\\': 3, // default is 2\\n    // \\'severePriorityLevel\\': 700, // default is 800\\n    // \\'mediumPriorityLevel\\': 500, // default is 600\\n    // \\'cutoffPriorityLevel\\': 200, // default is 0\\n    // \\'sortBy\\': \\'ByRepo\\', // default is \\'ByPriority\\', also have \\'AsFound\\'\\n    // \\'ignorePriorityNumberList\\': [123, 202], // default is []\\n};\\nconst processedResults = processNoticesToSevereMediumLow(rawResults, processOptions);\\n\\n<>\\n<b>Check</b> \"{chosenText}\"<br/><br/>\\n<RenderRawResults results={rawResults} />\\n<br/>Which after processing{Object.keys(processOptions).length? <> using <b>processOptions</b><RenderObject thisObject={processOptions} /></>:\\'\\'} then becomes:<br/><br/>\\n<RenderSuccessesSevereMediumLow results={processedResults} />\\n</>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/demos/notice-processing2.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/demos/notice-processing3.md":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js!./src/demos/notice-processing3.md ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    '../core/field-text-check': __webpack_require__(/*! ../core/field-text-check */ \"./src/core/field-text-check.js\"),\n    './notice-processing-functions': __webpack_require__(/*! ./notice-processing-functions */ \"./src/demos/notice-processing-functions.js\"),\n    '../demos/RenderProcessedResults': __webpack_require__(/*! ../demos/RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Notice Processing 3 Sandbox\\n\\n### Single colour-graded list sorted by priority\\n\\nThis `processNoticesToSingleList()` function is passed an object that contains a list of success messages (e.g., \"Checked GEN\", \"Checked MAT\" type stuff) and a list of notices that each contain a priority number. Using the priorities, it processes the notices into a list of warnings that can be displayed with the priority indicated by the colour/redness of the message.\\n\\nIt should be noted that although the success messages are simple strings, the notices and the returned warning lists are lists/arrays of ARRAYS. This is done to allow the encapsulating software to have more flexibility in how the information is used. See the code documentation for the final details, but in general, the error and warning lists contain eight fields:\\n\\n1.  A priority integer (0..999)\\n2.  The book identifier (if relevant, 3-character UPPERCASE string or empty string)\\n3.  The chapter number (if relevant, string or empty string)\\n4.  The verse number (if relevant, string or empty string, can be a range, e.g., \\'22-24\\')\\n5.  The main error/warning message (string)\\n6.  The (zero-based) index of where the error was found on the line. -1 indicates that this field is not helpful/relevant.\\n7.  A text excerpt (typically 10 characters) centred about the error. An empty string indicates that this field is not helpful/relevant.\\n8.  The location of the error, e.g., \"line 2 in file GEN.usfm in unfoldingWord/en_ult repo\".\\n\\nNote below that the optional `processOptions` object allows the user to adjust things like the division point between error and warning priorities, and allows low priority or certain notices to simply be dropped, etc. The system defaults to suppressing multiple cases of similar errors, but this can also be fine-tuned through these parameters.\\n\\nAlthough this demonstration here formats and colour the warning list, it\\u2019s expected that the encapsulating program will format and use the fields as desired. Because they are returned as an array of fields rather than simply strings, it\\u2019s certainly possible for the encapsulating program to sort or filter the messages as desired.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { checkTextField } from \\'../core/field-text-check\\';\\nimport { processNoticesToSingleList } from \\'./notice-processing-functions\\';\\nimport { RenderRawResults, RenderObject, RenderSuccessesNoticesGradient } from \\'../demos/RenderProcessedResults\\';\\n\\n// Empty, space, good, and bad, link, and RC text samples\\nconst textE = \"\";\\nconst textS = \" \";\\nconst textG = \"Peace on Earth, good will to all men/people!\";\\nconst textB = \" Peace  on\\xA0Earth,, good will to all) men!\\u202F\";\\nconst textL = \"https://unfoldingWord.org\";\\nconst textRC1 = \"rc://en/obs/book/obs/02/03\";\\nconst textRC2 = \"Compare with rc://en/tw/dict/bible/other/canaan\";\\n\\n// Just change this next two lines to change the text being used (to demonstrate differing results)\\nconst username = \\'unfoldingWord\\';\\nconst chosenTextName = \"textB\";\\nconst chosenText = textB;\\n\\n// The third parameter is \"linksAllowed\"\\nconst rawResults = checkTextField(username, \\'en\\', \\'TN\\', \\'raw\\', \\'Sample\\', chosenText, false, \\'in \\'+chosenTextName+\\' that was supplied\\');\\nif (!rawResults.successList || !rawResults.successList.length)\\n    rawResults.successList = [\"Done basic text checks\"];\\nconst processOptions = {\\n    // Uncomment any of these to test them\\n    // \\'maximumSimilarMessages\\': 3, // default is 2\\n    // \\'cutoffPriorityLevel\\': 200, // default is 0\\n    // \\'sortBy\\': \\'ByRepo\\', // default is \\'ByPriority\\', also have \\'AsFound\\'\\n    // \\'ignorePriorityNumberList\\': [123, 202], // default is []\\n};\\nconst processedResults = processNoticesToSingleList(rawResults, processOptions);\\n\\n<>\\n<b>Check</b> \"{chosenText}\"<br/><br/>\\n<RenderRawResults results={rawResults} />\\n<br/>Which after processing{Object.keys(processOptions).length? <> using <b>processOptions</b><RenderObject thisObject={processOptions} /></>:\\'\\'} then becomes:<br/><br/>\\n<RenderSuccessesNoticesGradient results={processedResults} />\\n</>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/demos/notice-processing3.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=AllBookPackagesCheck&file=.%2FAllBookPackagesCheck.js&shouldShowDefaultExample=false!./src/demos/all-book-packages-check/README.md":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=AllBookPackagesCheck&file=.%2FAllBookPackagesCheck.js&shouldShowDefaultExample=false!./src/demos/all-book-packages-check/README.md ***!
  \***********************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './AllBookPackagesCheck': __webpack_require__(/*! ./AllBookPackagesCheck */ \"./src/demos/all-book-packages-check/AllBookPackagesCheck.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './AllBookPackagesCheck.js': __webpack_require__(/*! ./AllBookPackagesCheck.js */ \"./src/demos/all-book-packages-check/AllBookPackagesCheck.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\\nconst AllBookPackagesCheck$0 = require('./AllBookPackagesCheck.js');\\nconst AllBookPackagesCheck = AllBookPackagesCheck$0['AllBookPackagesCheck'] || (AllBookPackagesCheck$0.default || AllBookPackagesCheck$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Door43 All Book Packages Check - Readme\\n\\nThe code below requests some info and then downloads and checks the requested Bible books\\u2014NT or OT or ALL across several repos. OBS (Open Bible Stories) can also be added. This is convenient to see all these check results collected into one place.\\n\\n`All Book Packages Check` calls `checkBookPackages()` which then calls `checkBookPackage()` for each given book identifier, which in turn calls `checkFileContents()` for the book file in each repo (or calls `checkRepo()` for **OBS**).\\n\\n**Warning**: Some book packages contain many files and/or very large files, and downloading them all and then checking them might slow down your browser\\u2014maybe even causing pop-up messages asking to confirm that you want to keep waiting.\\n\\n**Note**: This demonstration can use saved (cached) copies of files stored inside the local browser. This makes reruns of the checks faster, but it won\\u2019t notice if you have recently updated the files on Door43. If you want to clear the local caches, use either the `reloadAllFilesFirst` variable below, or the `Clear Cache` function from the menu.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport AllBookPackagesCheck from \\'./AllBookPackagesCheck\\';\\n\\n<AllBookPackagesCheck\\n  // Leave as Y while adjusting settings below, then change to N to start the check\\n  wait=\\'Y\\' // \\'Y\\' (for Yes, i.e., to wait) or \\'N\\' (for No, i.e., to start checking)\\n\\n  // Set to N to rerun the check without fetching new copies of the files (slightly faster)\\n  // If you\\'re checking and then editing & saving files, ensure that it\\'s set to Y before you recheck\\n  reloadAllFilesFirst=\\'Y\\' // \\'Y\\' (for Yes -- same as ClearCache in menu) or \\'N\\' (for No)\\n\\n  username=\\'unfoldingWord\\'\\n  languageCode=\\'en\\'\\n  includeOBS=\\'N\\' // \\'Y\\' or \\'N\\' for adding Open Bible Stories (OBS) to check\\n  testament=\\'NT\\' // \\'OT\\' (~3 hrs) or \\'NT\\' (1+ hrs) or \\'ALL\\' (~4 hrs)\\n\\n  // Normally links in files are downloaded to check that they really exist\\n  disableAllLinkFetchingFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  // The next group are only relevant if the above is \\'false\\'\\n  // They control whether the linked articles themselves are also checked or not\\n  disableLinkedTAArticlesCheckFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  disableLinkedTWArticlesCheckFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  disableLexiconLinkFetchingFlag=\\'true\\' // \\'true\\' or \\'false\\' -- there\\'s many thousands of these!\\n  disableLinkedLexiconEntriesCheckFlag=\\'true\\' // \\'true\\' or \\'false\\' -- lexicon entries still have many inconsistencies\\n\\n  // Default displayType is \\'ErrorsWarnings\\'\\n  //  Alternatives are `SevereMediumLow\\', \\'SingleList\\'\\n  displayType=\\'SingleList\\'\\n\\n  // Lines starting with // are ignored -- you can add or remove // as desired\\n  // Specifying maximumSimilarMessages and excerptLength is just to show off options\\n  // \\u2014those fields are not necessary (or normal) here\\n  //maximumSimilarMessages=\\'4\\' // Default is 3 (0 means don\\u2019t suppress any)\\n  // excerptLength=\\'25\\' // Default is 20 characters\\n  cutoffPriorityLevel=\\'200\\' // Default is to detect all errors/warnings\\n  />',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/demos/all-book-packages-check/README.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=AllBookPackagesCheck&file=.%252FAllBookPackagesCheck.js&shouldShowDefaultExample=false");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=BookPackageCheck&file=.%2FBookPackageCheck.js&shouldShowDefaultExample=false!./src/demos/book-package-check/README.md":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=BookPackageCheck&file=.%2FBookPackageCheck.js&shouldShowDefaultExample=false!./src/demos/book-package-check/README.md ***!
  \**********************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './BookPackageCheck': __webpack_require__(/*! ./BookPackageCheck */ \"./src/demos/book-package-check/BookPackageCheck.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './BookPackageCheck.js': __webpack_require__(/*! ./BookPackageCheck.js */ \"./src/demos/book-package-check/BookPackageCheck.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\\nconst BookPackageCheck$0 = require('./BookPackageCheck.js');\\nconst BookPackageCheck = BookPackageCheck$0['BookPackageCheck'] || (BookPackageCheck$0.default || BookPackageCheck$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Door43 Book Package Check - Readme\\n\\nThe code below requests some info and then downloads and checks the single specified Bible book in several repos. This is convenient to see all these check results collected into one place.\\n\\nSee a list of valid book identifiers [here](http://ubsicap.github.io/usfm/identification/books.html), although only `GEN` to `REV` from that list are useful here.\\n\\nNote that `OBS` can also be entered here as a _pseudo book identifier_ in order to check an **Open Bible Stories** repo.\\n\\n`Book Package Check` calls `checkBookPackage()` which then calls `checkFileContents()` for the book file in each repo (or calls `checkRepo()` for **OBS**).\\n\\n**Warning**: Some book packages contain many files and/or very large files, and downloading them all and then checking them might slow down your browser\\u2014maybe even causing pop-up messages asking to confirm that you want to keep waiting.\\n\\n**Note**: This demonstration can use saved (cached) copies of files stored inside the local browser. This makes reruns of the checks faster, but it won\\u2019t notice if you have recently updated the files on Door43. If you want to clear the local caches, use either the `reloadAllFilesFirst` variable below, or the `Clear Cache` function from the menu.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport BookPackageCheck from \\'./BookPackageCheck\\';\\n\\n<BookPackageCheck\\n  // Leave as Y while adjusting settings below, then change to N to start the check\\n  wait=\\'Y\\' // \\'Y\\' (for Yes, i.e., to wait) or \\'N\\' (for No, i.e., to start checking)\\n\\n  // Set to N to rerun the check without fetching new copies of the files (slightly faster)\\n  // If you\\'re checking and then editing & saving files, ensure that it\\'s set to Y before you recheck\\n  reloadAllFilesFirst=\\'Y\\' // \\'Y\\' (for Yes -- same as ClearCache in menu) or \\'N\\' (for No)\\n\\n  username=\\'unfoldingWord\\'\\n  languageCode=\\'en\\'\\n  // bookID can be a USFM bookID, e.g., \\'GEN\\', \\'MAT\\', \\'3JN\\'\\n  //  and can also be \\'OBS\\' (for Open Bible Stories)\\n  bookID=\\'1PE\\'\\n\\n  // We can choose the forthcoming new TSV formats or the existing formats\\n  // dataSet=\\'BOTH\\' // \\'OLD\\' (Markdown TQ1, TSV9 TN, etc.), \\'NEW\\' (TSV7 TQ, TSV7 TN2, etc.), \\'DEFAULT\\', or \\'BOTH\\'\\n\\n  // Normally links in files are downloaded to check that they really exist\\n  disableAllLinkFetchingFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  // The next group are only relevant if the above is \\'false\\'\\n  // They control whether the linked articles themselves are also checked or not\\n  disableLinkedTAArticlesCheckFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  disableLinkedTWArticlesCheckFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  disableLexiconLinkFetchingFlag=\\'true\\' // \\'true\\' or \\'false\\' -- there\\'s many thousands of these!\\n  disableLinkedLexiconEntriesCheckFlag=\\'true\\' // \\'true\\' or \\'false\\' -- lexicon entries still have many inconsistencies\\n\\n  // Default displayType is \\'ErrorsWarnings\\'\\n  //  Alternatives are `SevereMediumLow\\', \\'SingleList\\'\\n  displayType=\\'SingleList\\'\\n\\n  // Lines starting with // are ignored -- you can add or remove // as desired\\n  // Specifying excerptLength and maximumSimilarMessages is just to show off options\\n  // \\u2014those fields are not necessary (or normal) here\\n  excerptLength=\\'25\\' // Default is 20 characters\\n  cutoffPriorityLevel=\\'200\\' // Default is to detect all errors/warnings\\n  //maximumSimilarMessages=\\'5\\' // Default is 3 (0 means don\\u2019t suppress any)\\n  // ignorePriorityNumberList=\\'[]\\'\\n  // sortBy=\\'ByRepo\\' // Default is \\'ByPriority\\'; also have \\'ByRepo\\' and \\'AsFound\\'\\n  showDisabledNoticesFlag=\\'false\\' // Display known specific non-issues: \\'true\\' or \\'false\\'\\n  />',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/demos/book-package-check/README.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=BookPackageCheck&file=.%252FBookPackageCheck.js&shouldShowDefaultExample=false");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=BookPackagesCheck&file=.%2FBookPackagesCheck.js&shouldShowDefaultExample=false!./src/demos/book-packages-check/README.md":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=BookPackagesCheck&file=.%2FBookPackagesCheck.js&shouldShowDefaultExample=false!./src/demos/book-packages-check/README.md ***!
  \*************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './BookPackagesCheck': __webpack_require__(/*! ./BookPackagesCheck */ \"./src/demos/book-packages-check/BookPackagesCheck.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './BookPackagesCheck.js': __webpack_require__(/*! ./BookPackagesCheck.js */ \"./src/demos/book-packages-check/BookPackagesCheck.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\\nconst BookPackagesCheck$0 = require('./BookPackagesCheck.js');\\nconst BookPackagesCheck = BookPackagesCheck$0['BookPackagesCheck'] || (BookPackagesCheck$0.default || BookPackagesCheck$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Door43 Book Packages Check - Readme\\n\\nThe code below requests some info and then downloads and checks the given Bible books across several repos. This is convenient to see all these check results collected into one place.\\n\\nSee a list of valid book identifiers [here](http://ubsicap.github.io/usfm/identification/books.html), although only `GEN` to `REV` from that list are useful here.\\n\\nNote that `OBS` can also be entered here as a _pseudo book identifier_ in order to check an **Open Bible Stories** repo.\\n\\n`Book Packages Check` calls `checkBookPackages()` which then calls `checkBookPackage()` for each given book identifier, which in turn calls `checkFileContents()` for the book file in each repo (or calls `checkRepo()` for **OBS**).\\n\\n**Warning**: Some book packages contain many files and/or very large files, and downloading them all and then checking them might slow down your browser\\u2014maybe even causing pop-up messages asking to confirm that you want to keep waiting.\\n\\n**Note**: This demonstration can use saved (cached) copies of files stored inside the local browser. This makes reruns of the checks faster, but it won\\u2019t notice if you have recently updated the files on Door43. If you want to clear the local caches, use either the `reloadAllFilesFirst` variable below, or the `Clear Cache` function from the menu.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport BookPackagesCheck from \\'./BookPackagesCheck\\';\\n\\n<BookPackagesCheck\\n  // Leave as Y while adjusting settings below, then change to N to start the check\\n  wait=\\'Y\\' // \\'Y\\' (for Yes, i.e., to wait) or \\'N\\' (for No, i.e., to start checking)\\n\\n  // Set to N to rerun the check without fetching new copies of the files (slightly faster)\\n  // If you\\'re checking and then editing & saving files, ensure that it\\'s set to Y before you recheck\\n  reloadAllFilesFirst=\\'Y\\' // \\'Y\\' (for Yes -- same as ClearCache in menu) or \\'N\\' (for No)\\n\\n  username=\\'unfoldingWord\\'\\n  languageCode=\\'en\\'\\n  // Enter a string containing UPPERCASE USFM book identifiers separated only by commas\\n  //  and can also include OBS (for Open Bible Stories)\\n  bookIDs=\\'RUT,EZR,NEH,EST,OBA,JON, LUK,EPH,1TI,2TI,TIT,JAS,1PE,1JN,2JN,3JN, OBS\\'\\n  // The above English book packages should all be finished or well along the way\\n  // bookIDs=\\'RUT,EZR,NEH,EST,OBA,JON\\' // Uncomment if you\\'re interested in OT only\\n  // bookIDs=\\'LUK,EPH,1TI,2TI,TIT,JAS,1PE,1JN,2JN,3JN, OBS\\' // Uncomment if you\\'re interested in NT and OBS only\\n\\n  // We can choose the forthcoming new TSV formats or the existing formats\\n  // dataSet=\\'OLD\\' // \\'OLD\\' (Markdown TQ1, TSV TN, etc.), \\'NEW\\' (TSV TQ, TN2, etc.), \\'DEFAULT\\', or \\'BOTH\\'\\n\\n  // Normally links in files are downloaded to check that they really exist\\n  disableAllLinkFetchingFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  // The next group are only relevant if the above is \\'false\\'\\n  // They control whether the linked articles themselves are also checked or not\\n  disableLinkedTAArticlesCheckFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  disableLinkedTWArticlesCheckFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  disableLexiconLinkFetchingFlag=\\'true\\' // \\'true\\' or \\'false\\' -- there\\'s many thousands of these!\\n  disableLinkedLexiconEntriesCheckFlag=\\'true\\' // \\'true\\' or \\'false\\' -- lexicon entries still have many inconsistencies\\n\\n  // Default displayType is \\'ErrorsWarnings\\'\\n  //  Alternatives are `SevereMediumLow\\', \\'SingleList\\'\\n  displayType=\\'SingleList\\'\\n\\n  // Lines starting with // are ignored -- you can add or remove // as desired\\n  // Specifying maximumSimilarMessages and excerptLength is just to show off options\\n  // \\u2014those fields are not necessary (or normal) here\\n  //maximumSimilarMessages=\\'8\\' // Default is 3 (0 means don\\u2019t suppress any)\\n  // excerptLength=\\'25\\' // Default is 20 characters\\n  cutoffPriorityLevel=\\'200\\' // Default is to detect all errors/warnings\\n  // sortBy=\\'ByRepo\\' // Default is \\'ByPriority\\'; also have \\'ByRepo\\' and \\'AsFound\\'\\n  // showDisabledNoticesFlag=\\'false\\' // Display known specific non-issues: \\'true\\' or \\'false\\'\\n  />',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/demos/book-packages-check/README.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=BookPackagesCheck&file=.%252FBookPackagesCheck.js&shouldShowDefaultExample=false");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=ClearCache&file=.%2FClearCache.js&shouldShowDefaultExample=false!./src/demos/clear-cache/README.md":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=ClearCache&file=.%2FClearCache.js&shouldShowDefaultExample=false!./src/demos/clear-cache/README.md ***!
  \***************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './ClearCache': __webpack_require__(/*! ./ClearCache */ \"./src/demos/clear-cache/ClearCache.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './ClearCache.js': __webpack_require__(/*! ./ClearCache.js */ \"./src/demos/clear-cache/ClearCache.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\\nconst ClearCache$0 = require('./ClearCache.js');\\nconst ClearCache = ClearCache$0['ClearCache'] || (ClearCache$0.default || ClearCache$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Clear Cache - Readme\\n\\nThe code below requests some input and then clears all cached (saved) Door43 file information from the browser\\'s local storage. This is useful if files have been updated on Door43, and you want to validate the most recent version of the files.\\n\\nOf course, this will cause the checks to run slower afterwards, as they will have to refetch all the necessary files from Door43.\\n\\nUnless you use this `ClearCache` function below, these demos can cache files for several hours. This means that reruns of the demos will be significantly faster in most cases.\\n\\n**Note**: Clearing the cache for these demos doesn\\u2019t always mean that the demos reload the very latest Door43 files\\u2014Door43 servers have their own caches and your ISP (Internet Service Provider) might have some as well. Typically the files that are fetched are at least 5-10 minutes behind the latest updates on Door43\\u2014that external caching is totally out of the control of these demos\\u2014all you can do is wait, sorry.\\n\\nSimply change `N` to `Y` below to clear the internal caches.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport ClearCache from \\'./ClearCache\\';\\n\\n<ClearCache\\n  // Change N to Y below to activate the cache clearing\\n  areYouSure=\\'N\\'\\n/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/demos/clear-cache/README.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=ClearCache&file=.%252FClearCache.js&shouldShowDefaultExample=false");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=FileCheck&file=.%2FFileCheck.js&shouldShowDefaultExample=false!./src/demos/file-check/README.md":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=FileCheck&file=.%2FFileCheck.js&shouldShowDefaultExample=false!./src/demos/file-check/README.md ***!
  \************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './FileCheck.js': __webpack_require__(/*! ./FileCheck.js */ \"./src/demos/file-check/FileCheck.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\\nconst FileCheck$0 = require('./FileCheck.js');\\nconst FileCheck = FileCheck$0['FileCheck'] || (FileCheck$0.default || FileCheck$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Door43 File Check - Readme\\n\\nThe code below requests some info to select an online repository\\nand then validates the content of one file selected from the repo.\\n\\n**Note**: This demonstration can use saved (cached) copies of files stored inside the local browser. This makes reruns of the checks faster, but it won\\u2019t notice if you have recently updated the files on Door43. If you want to clear the local caches, use either the `reloadAllFilesFirst` variable below, or the `Clear Cache` function from the menu.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\n<FileCheck\\n  // Leave as Y while adjusting settings below, then change to N to start the check\\n  wait=\\'Y\\' // \\'Y\\' (for Yes, i.e., to wait) or \\'N\\' (for No, i.e., to start checking)\\n\\n  // Set to N to rerun the check without fetching new copies of the files (slightly faster)\\n  // If you\\'re checking and then editing & saving files, ensure that it\\'s set to Y before you recheck\\n  reloadAllFilesFirst=\\'Y\\' // \\'Y\\' (for Yes -- same as ClearCache in menu) or \\'N\\' (for No)\\n\\n  // username=\\'Door43-Catalog\\'\\n  username=\\'unfoldingWord\\'\\n\\n  // Lines starting with // are ignored -- you can add or remove // as desired\\n  // repoName=\\'hbo_uhb\\' // OT books only\\n  // repoName=\\'el-x-koine_ugnt\\' // NT books only\\n  // Of course, other language codes (other than en) can be used in the following lines\\n  // repoName=\\'en_ult\\' // Can use en_ult or en_ust here\\n  repoName=\\'en_tn\\' // Can use en_ta, en_tw, en_tn, en_tq, en_sn, en_sq, en_uhal, or en_ugl here\\n  // NOTE: The filename below must be adjusted depending on the repository selected above\\n\\n  // If we don\\u2019t put the branch or release version here, the default branch is used\\n  // branchOrRelease=\\'master\\'\\n  // branchOrRelease=\\'new Format\\' // for unreleased new TSV files\\n\\n  // Of course, the filename must be correct for the chosen repository\\n  // filename= \\'01-GEN.usfm\\' // e.g., for UHB, LT, or ST\\n  // filename= \\'08-RUT.usfm\\' // e.g., for UHB, LT, or ST\\n  // filename= \\'39-MAL.usfm\\' // e.g., for UHB, LT, or ST\\n  // filename= \\'41-MAT.usfm\\' // e.g., for UGNT, LT, or ST\\n  // filename= \\'42-MRK.usfm\\' // e.g., for UGNT, LT, or ST\\n  // filename= \\'43-LUK.usfm\\' // e.g., for UGNT, LT, or ST\\n  // filename= \\'45-ACT.usfm\\' // e.g., for UGNT, LT, or ST\\n  // filename= \\'48-2CO.usfm\\' // e.g., for UGNT, LT, or ST\\n  // filename= \\'50-EPH.usfm\\' // e.g., for UGNT, LT, or ST\\n  // filename= \\'57-TIT.usfm\\' // e.g., for UGNT, LT, or ST\\n  // filename= \\'65-3JN.usfm\\' // e.g., for UGNT, LT, or ST\\n  // filename= \\'67-REV.usfm\\' // e.g., for UGNT, LT, or ST\\n  // filename= \\'en_tn_01-GEN.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_15-EZR.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_16-NEH.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_17-EST.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_31-OBA.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_39-MAL.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_41-MAT.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_43-LUK.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_50-EPH.tsv\\' // for TSV9 TN\\n filename= \\'en_tn_57-TIT.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_58-PHM.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_61-1PE.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_65-3JN.tsv\\' // for TSV9 TN\\n  // filename= \\'en_tn_67-REV.tsv\\' // for TSV9 TN\\n  // It\\'s actually possible to put a filepath in the filename field\\n  // filename= \\'bible/names/zilpah.md\\' // for TW\\n  //  filename= \\'content/H0612.md\\' // for UHAL\\n  //  filename= \\'content/G14650/01.md\\' // for UGL\\n\\n  // The location field appears in check messages to help the user locate the issue\\n  location=\"as specified in FileCheck demo\"\\n\\n  // Normally links in files are downloaded to check that they really exist\\n  disableAllLinkFetchingFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  // The next group are only relevant if the above is \\'false\\'\\n  // They control whether the linked articles themselves are also checked or not\\n  disableLinkedTAArticlesCheckFlag=\\'true\\' // \\'true\\' or \\'false\\'\\n  disableLinkedTWArticlesCheckFlag=\\'true\\' // \\'true\\' or \\'false\\'\\n  disableLexiconLinkFetchingFlag=\\'true\\' // \\'true\\' or \\'false\\' -- there\\'s many thousands of these!\\n  disableLinkedLexiconEntriesCheckFlag=\\'true\\' // \\'true\\' or \\'false\\' -- lexicon entries still have many inconsistencies\\n\\n  // Default displayType is \\'ErrorsWarnings\\'\\n  //  Alternatives are `SevereMediumLow\\', \\'SingleList\\'\\n  displayType=\\'SingleList\\'\\n\\n  // Specifying excerptLength and cutoffPriorityLevel is just to show off options\\n  // \\u2014those fields are not necessary (or normal) here\\n  excerptLength=\\'25\\' // Default is 20 characters\\n  // cutoffPriorityLevel=\\'200\\' // Default is to detect all errors/warnings\\n  // Specifying maximumSimilarMessages is just to show off options\\n  // \\u2014those fields are not necessary (or normal) here\\n  //maximumSimilarMessages=\\'0\\' // Default is 3 (0 means don\\u2019t suppress any)\\n  />',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/demos/file-check/README.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=FileCheck&file=.%252FFileCheck.js&shouldShowDefaultExample=false");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=GlBookPackageCheck&file=.%2FGlBookPackageCheck.js&shouldShowDefaultExample=false!./src/demos/gl-book-package-check/README.md":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=GlBookPackageCheck&file=.%2FGlBookPackageCheck.js&shouldShowDefaultExample=false!./src/demos/gl-book-package-check/README.md ***!
  \*****************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    '../../core': __webpack_require__(/*! ../../core */ \"./src/core/index.js\"),\n    './GlBookPackageCheck': __webpack_require__(/*! ./GlBookPackageCheck */ \"./src/demos/gl-book-package-check/GlBookPackageCheck.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './GlBookPackageCheck.js': __webpack_require__(/*! ./GlBookPackageCheck.js */ \"./src/demos/gl-book-package-check/GlBookPackageCheck.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\\nconst GlBookPackageCheck$0 = require('./GlBookPackageCheck.js');\\nconst GlBookPackageCheck = GlBookPackageCheck$0['GlBookPackageCheck'] || (GlBookPackageCheck$0.default || GlBookPackageCheck$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Door43 Gateway Language Book Package Check - Readme\\n\\nThe code below requests some info and then downloads and checks the single specified Bible book in several repos. This is convenient to see all these check results collected into one place.\\n\\nSee a list of valid book identifiers [here](http://ubsicap.github.io/usfm/identification/books.html), although only `GEN` to `REV` from that list are useful here.\\n\\nNote that `OBS` can also be entered here as a _pseudo book identifier_ in order to check an **Open Bible Stories** repo.\\n\\n`GL Book Packages Check` calls `checkBookPackage()` for each language and each given book identifier, which in turn calls `checkFileContents()` for the book file in each repo (or calls `checkRepo()` for **OBS**).\\n\\n**Warning**: Some book packages contain many files and/or very large files, and downloading them all and then checking them might slow down your browser\\u2014maybe even causing pop-up messages asking to confirm that you want to keep waiting.\\n\\n**Note**: This demonstration can use saved (cached) copies of files stored inside the local browser. This makes reruns of the checks faster, but it won\\u2019t notice if you have recently updated the files on Door43. If you want to clear the local caches, use either the `reloadAllFilesFirst` variable below, or the `Clear Cache` function from the menu.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport { clearCheckedArticleCache } from \\'../../core\\';\\nimport GlBookPackageCheck from \\'./GlBookPackageCheck\\';\\n\\nclearCheckedArticleCache();\\n\\n<GlBookPackageCheck\\n  // NOTE: originalLanguagesUsername is not yet used by the demonstration\\n  // Uncomment or change ONE of the following lines\\n  // originalLanguagesUsername=\\'Door43-Catalog\\' // repo organisation name for published Door43 UHB and UGNT versions\\n  originalLanguagesUsername=\\'unfoldingWord\\' // repo organisation name for work-in-progress Door43 UHB and UGNT versions\\n\\n  // Uncomment or change ONE of the following lines\\n  // otherLanguageUsername=\\'Door43-Catalog\\' // repo organisation name for all published Door43 LT, ST, TN, etc. versions\\n  // otherLanguageUsername=\\'unfoldingWord\\' // repo organisation name for work-in-progress en Door43 ULT, UST, UTN, etc. versions\\n  // otherLanguageUsername=\\'Es-419_gl\\' // repo organisation name for work-in-progress es-419 Door43 LT, ST, TN, etc. versions\\n  // otherLanguageUsername=\\'translationCore-Create-BCS\\' // repo organisation name for work-in-progress hi/kn Door43 LT, ST, TN, etc. versions\\n  otherLanguageUsername=\\'ru_gl\\' // repo organisation name for work-in-progress ru Door43 LT, ST, TN, etc. versions\\n\\n  // Of course, this languageCode has to match the chosen otherLanguageUsername above\\n  languageCode=\\'ru\\' // Tested with es-419, hi, kn, ru\\n\\n  // bookID can be a USFM bookID, e.g., \\'GEN\\', \\'MAT\\', \\'3JN\\'\\n  //  and can also be \\'OBS\\' (for Open Bible Stories)\\n  bookID=\\'TIT\\'\\n\\n  // Normally links in files are downloaded to check that they really exist\\n  disableAllLinkFetchingFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  // The next group are only relevant if the above is \\'false\\'\\n  // They control whether the linked articles themselves are also checked or not\\n  disableLinkedTAArticlesCheckFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  disableLinkedTWArticlesCheckFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  disableLexiconLinkFetchingFlag=\\'true\\' // \\'true\\' or \\'false\\' -- there\\'s many thousands of these!\\n  disableLinkedLexiconEntriesCheckFlag=\\'true\\' // \\'true\\' or \\'false\\' -- lexicon entries still have many inconsistencies\\n\\n  // Default displayType is \\'ErrorsWarnings\\'\\n  //  Alternatives are `SevereMediumLow\\', \\'SingleList\\'\\n  displayType=\\'SingleList\\'\\n\\n// Lines starting with // are ignored -- you can add or remove // as desired\\n  // Specifying maximumSimilarMessages and excerptLength is just to show off options\\n  // \\u2014those fields are not necessary (or normal) here\\n  //maximumSimilarMessages=\\'4\\' // Default is 3 (0 means don\\u2019t suppress any)\\n  // excerptLength=\\'25\\' // Default is 20 characters\\n  cutoffPriorityLevel=\\'200\\' // Default is to detect all errors/warnings\\n  />',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/demos/gl-book-package-check/README.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=GlBookPackageCheck&file=.%252FGlBookPackageCheck.js&shouldShowDefaultExample=false");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=RepoCheck&file=.%2FRepoCheck.js&shouldShowDefaultExample=false!./src/demos/repo-check/README.md":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=RepoCheck&file=.%2FRepoCheck.js&shouldShowDefaultExample=false!./src/demos/repo-check/README.md ***!
  \************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nvar requireMap = {\n    './RepoCheck': __webpack_require__(/*! ./RepoCheck */ \"./src/demos/repo-check/RepoCheck.js\"),\n    'react': __webpack_require__(/*! react */ \"./node_modules/react/index.js\"),\n    './RepoCheck.js': __webpack_require__(/*! ./RepoCheck.js */ \"./src/demos/repo-check/RepoCheck.js\")\n};\nvar requireInRuntimeBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/requireInRuntime.js\").default;\nvar requireInRuntime = requireInRuntimeBase.bind(null, requireMap);\nvar evalInContextBase = __webpack_require__(/*! ./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext */ \"./node_modules/react-styleguidist/lib/loaders/utils/client/evalInContext.js\").default;\nvar evalInContext = evalInContextBase.bind(null, \"const React$0 = require('react');\\nconst React = React$0['React'] || (React$0.default || React$0);\\nconst RepoCheck$0 = require('./RepoCheck.js');\\nconst RepoCheck = RepoCheck$0['RepoCheck'] || (RepoCheck$0.default || RepoCheck$0);\", requireInRuntime);\n\nmodule.exports = [\n    {\n        'type': 'markdown',\n        'content': '## Door43 Repo Check - Readme\\n\\nThe code below requests some info and then downloads and checks a Door43 repository.You can enter the `repoName`, i.e., the `username/repoName` in the code below. (Unfortunately if you refresh the page from the browser controls, it will return to the default setting. If you want to restart the test without returning to the default repo, just change one letter in a `//` comment line below.)\\n\\n**Warning**: Some repos contain many files and/or very large files, and downloading them all and then checking them might slow down your browser\\u2014maybe even causing pop-up messages asking to confirm that you want to keep waiting.\\n\\n**Note**: This demonstration can use saved (cached) copies of files stored inside the local browser. This makes reruns of the checks faster, but it won\\u2019t notice if you have recently updated the files on Door43. If you want to clear the local caches, use either the `reloadAllFilesFirst` variable below, or the `Clear Cache` function from the menu.'\n    },\n    {\n        'type': 'code',\n        'content': '// The control code in this box is editable for changing settings\\u2014\\n//    simply click inside here and add, change, or delete text as required.\\n// Note that (gray) lines starting with // are \"comments\", i.e., they are ignored by the software\\n//    so if you want to enable those lines, you must remove the // from the beginning of the line.\\n\\nimport RepoCheck from \\'./RepoCheck\\';\\n\\n<RepoCheck\\n  // Leave as Y while adjusting settings below, then change to N to start the check\\n  wait=\\'Y\\' // \\'Y\\' (for Yes, i.e., to wait) or \\'N\\' (for No, i.e., to start checking)\\n\\n  // Set to N to rerun the check without fetching new copies of the files (slightly faster)\\n  // If you\\'re checking and then editing & saving files, ensure that it\\'s set to Y before you recheck\\n  reloadAllFilesFirst=\\'Y\\' // \\'Y\\' (for Yes -- same as ClearCache in menu) or \\'N\\' (for No)\\n\\n  // username = \\'Door43-Catalog\\'\\n  username = \\'unfoldingWord\\'\\n\\n  // Lines starting with // are ignored -- you can add or remove // as desired\\n  // NOTE: Some of these whole repository checks can take a looong time!\\n  // repoName=\\'hbo_uhb\\' // includes OT books only\\u2014some large files when they have x-tw links!\\n  // repoName=\\'el-x-koine_ugnt\\' // includes NT books only\\u2014some large files when they have x-tw links!\\n  // repoName=\\'en_twl\\' // Translation Words (TSV files but looks up 1,000+ markdown files)\\n  // repoName=\\'en_ult\\' // Can use ult or ust here\\u2014some large files with alignment info!\\n  // repoName=\\'en_tn\\' // Translation Notes (TSV tables -- MANY links to check!)\\n  // repoName=\\'en_tq\\' // Translation Questions (17,000+ markdown files!)\\n  // repoName=\\'en_sn\\' // Study Notes (TSV)\\n  // repoName=\\'en_sq\\' // Study Questions (TSV)\\n  // repoName=\\'en_tw\\' // Translation Words (1,000+ markdown files)\\n  // repoName=\\'en_ta\\' // Translation Academy (700+ markdown files)\\n  // repoName=\\'en_obs\\' // Open Bible Stories (50+ markdown files)\\n  // repoName=\\'en_obs-tn\\' // Open Bible Stories Translation Notes (markdown files)\\n  // repoName=\\'en_obs-twl\\' // Open Bible Stories Translation Words Links (TSV)\\n  // repoName=\\'en_obs-tq\\' // Open Bible Stories Translation Questions (markdown)\\n  // repoName=\\'en_obs-sn\\' // Open Bible Stories Study Notes (TSV)\\n  // repoName=\\'en_obs-sq\\' // Open Bible Stories Study Questions (TSV)\\n  // repoName=\\'en_uhal\\' // Hebrew/Aramaic Lexicon (8,000+ markdown files!)\\n  // repoName=\\'en_ugl\\' // Greek Lexicon (24,000 markdown files!)\\n  // repoName=\\'fr_ulb\\' // No alignment so smaller files (faster demo)\\n\\n  // If we don\\u2019t put the branch or release version here, the default branch is used\\n  // branchOrRelease=\\'master\\'\\n\\n  // The location field appears in check messages to help the user locate the issue\\n  location=\"as specified in repo-check/README.md\"\\n\\n  // Normally all books/files are checked for the repo\\n  // NOTE: Setting these for repos not containing Bible books makes no difference\\n  skipOTBooks=\\'false\\' // \\'true\\' or \\'false\\'\\n  skipNTBooks=\\'false\\' // \\'true\\' or \\'false\\'\\n\\n  // Normally links in files are downloaded to check that they really exist\\n  disableAllLinkFetchingFlag=\\'false\\' // \\'true\\' or \\'false\\'\\n  // The next group are only relevant if the above is \\'false\\'\\n  // They control whether the linked articles themselves are also checked or not\\n  disableLinkedTAArticlesCheckFlag=\\'true\\' // \\'true\\' or \\'false\\'\\n  disableLinkedTWArticlesCheckFlag=\\'true\\' // \\'true\\' or \\'false\\'\\n  disableLexiconLinkFetchingFlag=\\'true\\' // \\'true\\' or \\'false\\' -- there\\'s many thousands of these!\\n  disableLinkedLexiconEntriesCheckFlag=\\'true\\' // \\'true\\' or \\'false\\' -- lexicon entries still have many inconsistencies\\n\\n  // Default displayType is \\'ErrorsWarnings\\'\\n  //  Alternatives are `SevereMediumLow\\', \\'SingleList\\'\\n  displayType=\\'SingleList\\'\\n\\n  // Specifying maximumSimilarMessages and excerptLength is just to show off options\\n  // \\u2014those fields are not necessary (or normal) here\\n  //maximumSimilarMessages=\\'4\\' // Default is 3 (0 means don\\u2019t suppress any)\\n  // excerptLength=\\'25\\' // Default is 20 characters\\n  cutoffPriorityLevel=\\'200\\' // Default is to detect all errors/warnings\\n  // sortBy=\\'AsFound\\' // Default is \\'ByPriority\\'; also have \\'AsFound\\' and \\'ByRepo\\' (not relevant here)\\n  showDisabledNoticesFlag=\\'false\\' // Display known specific non-issues: \\'true\\' or \\'false\\'\\n/>',\n        'settings': {},\n        'evalInContext': evalInContext\n    }\n]\n\t\n\n//# sourceURL=webpack:///./src/demos/repo-check/README.md?./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=RepoCheck&file=.%252FRepoCheck.js&shouldShowDefaultExample=false");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/all-book-packages-check/AllBookPackagesCheck.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/all-book-packages-check/AllBookPackagesCheck.js ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nmodule.exports = {\n    'description': '',\n    'displayName': 'AllBookPackagesCheck',\n    'methods': [],\n    'doclets': {},\n    'examples': __webpack_require__(/*! !./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=AllBookPackagesCheck&file=.%2FAllBookPackagesCheck.js&shouldShowDefaultExample=false!./src/demos/all-book-packages-check/README.md */ \"./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=AllBookPackagesCheck&file=.%2FAllBookPackagesCheck.js&shouldShowDefaultExample=false!./src/demos/all-book-packages-check/README.md\")\n}\n\t\n\n//# sourceURL=webpack:///./src/demos/all-book-packages-check/AllBookPackagesCheck.js?./node_modules/react-styleguidist/lib/loaders/props-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/book-package-check/BookPackageCheck.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/book-package-check/BookPackageCheck.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nmodule.exports = {\n    'description': '',\n    'displayName': 'BookPackageCheck',\n    'methods': [],\n    'doclets': {},\n    'examples': __webpack_require__(/*! !./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=BookPackageCheck&file=.%2FBookPackageCheck.js&shouldShowDefaultExample=false!./src/demos/book-package-check/README.md */ \"./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=BookPackageCheck&file=.%2FBookPackageCheck.js&shouldShowDefaultExample=false!./src/demos/book-package-check/README.md\")\n}\n\t\n\n//# sourceURL=webpack:///./src/demos/book-package-check/BookPackageCheck.js?./node_modules/react-styleguidist/lib/loaders/props-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/book-packages-check/BookPackagesCheck.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/book-packages-check/BookPackagesCheck.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nmodule.exports = {\n    'description': '\\n',\n    'displayName': 'BookPackagesCheck',\n    'methods': [],\n    'doclets': { 'param': '{Object} props' },\n    'tags': {\n        'param': [{\n                'title': 'param',\n                'description': null,\n                'type': {\n                    'type': 'NameExpression',\n                    'name': 'Object'\n                },\n                'name': 'props'\n            }]\n    },\n    'examples': __webpack_require__(/*! !./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=BookPackagesCheck&file=.%2FBookPackagesCheck.js&shouldShowDefaultExample=false!./src/demos/book-packages-check/README.md */ \"./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=BookPackagesCheck&file=.%2FBookPackagesCheck.js&shouldShowDefaultExample=false!./src/demos/book-packages-check/README.md\")\n}\n\t\n\n//# sourceURL=webpack:///./src/demos/book-packages-check/BookPackagesCheck.js?./node_modules/react-styleguidist/lib/loaders/props-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/clear-cache/ClearCache.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/clear-cache/ClearCache.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nmodule.exports = {\n    'description': '',\n    'displayName': 'ClearCache',\n    'methods': [],\n    'doclets': {},\n    'examples': __webpack_require__(/*! !./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=ClearCache&file=.%2FClearCache.js&shouldShowDefaultExample=false!./src/demos/clear-cache/README.md */ \"./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=ClearCache&file=.%2FClearCache.js&shouldShowDefaultExample=false!./src/demos/clear-cache/README.md\")\n}\n\t\n\n//# sourceURL=webpack:///./src/demos/clear-cache/ClearCache.js?./node_modules/react-styleguidist/lib/loaders/props-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/file-check/FileCheck.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/file-check/FileCheck.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nmodule.exports = {\n    'description': '',\n    'displayName': 'FileCheck',\n    'methods': [],\n    'doclets': {},\n    'examples': __webpack_require__(/*! !./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=FileCheck&file=.%2FFileCheck.js&shouldShowDefaultExample=false!./src/demos/file-check/README.md */ \"./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=FileCheck&file=.%2FFileCheck.js&shouldShowDefaultExample=false!./src/demos/file-check/README.md\")\n}\n\t\n\n//# sourceURL=webpack:///./src/demos/file-check/FileCheck.js?./node_modules/react-styleguidist/lib/loaders/props-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/gl-book-package-check/GlBookPackageCheck.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/gl-book-package-check/GlBookPackageCheck.js ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nmodule.exports = {\n    'description': '',\n    'displayName': 'GlBookPackageCheck',\n    'methods': [],\n    'doclets': {},\n    'examples': __webpack_require__(/*! !./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=GlBookPackageCheck&file=.%2FGlBookPackageCheck.js&shouldShowDefaultExample=false!./src/demos/gl-book-package-check/README.md */ \"./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=GlBookPackageCheck&file=.%2FGlBookPackageCheck.js&shouldShowDefaultExample=false!./src/demos/gl-book-package-check/README.md\")\n}\n\t\n\n//# sourceURL=webpack:///./src/demos/gl-book-package-check/GlBookPackageCheck.js?./node_modules/react-styleguidist/lib/loaders/props-loader.js");

/***/ }),

/***/ "./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/repo-check/RepoCheck.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/react-styleguidist/lib/loaders/props-loader.js!./src/demos/repo-check/RepoCheck.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nif (false) {}\n\nmodule.exports = {\n    'description': '',\n    'displayName': 'RepoCheck',\n    'methods': [],\n    'doclets': {},\n    'examples': __webpack_require__(/*! !./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=RepoCheck&file=.%2FRepoCheck.js&shouldShowDefaultExample=false!./src/demos/repo-check/README.md */ \"./node_modules/react-styleguidist/lib/loaders/examples-loader.js?displayName=RepoCheck&file=.%2FRepoCheck.js&shouldShowDefaultExample=false!./src/demos/repo-check/README.md\")\n}\n\t\n\n//# sourceURL=webpack:///./src/demos/repo-check/RepoCheck.js?./node_modules/react-styleguidist/lib/loaders/props-loader.js");

/***/ }),

/***/ "./node_modules/regenerate-unicode-properties sync recursive ^\\.\\/.*\\.js$":
/*!**********************************************************************!*\
  !*** ./node_modules/regenerate-unicode-properties sync ^\.\/.*\.js$ ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./Binary_Property/ASCII.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/ASCII.js\",\n\t\"./Binary_Property/ASCII_Hex_Digit.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/ASCII_Hex_Digit.js\",\n\t\"./Binary_Property/Alphabetic.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Alphabetic.js\",\n\t\"./Binary_Property/Any.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Any.js\",\n\t\"./Binary_Property/Assigned.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Assigned.js\",\n\t\"./Binary_Property/Bidi_Control.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Bidi_Control.js\",\n\t\"./Binary_Property/Bidi_Mirrored.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Bidi_Mirrored.js\",\n\t\"./Binary_Property/Case_Ignorable.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Case_Ignorable.js\",\n\t\"./Binary_Property/Cased.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Cased.js\",\n\t\"./Binary_Property/Changes_When_Casefolded.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Changes_When_Casefolded.js\",\n\t\"./Binary_Property/Changes_When_Casemapped.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Changes_When_Casemapped.js\",\n\t\"./Binary_Property/Changes_When_Lowercased.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Changes_When_Lowercased.js\",\n\t\"./Binary_Property/Changes_When_NFKC_Casefolded.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Changes_When_NFKC_Casefolded.js\",\n\t\"./Binary_Property/Changes_When_Titlecased.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Changes_When_Titlecased.js\",\n\t\"./Binary_Property/Changes_When_Uppercased.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Changes_When_Uppercased.js\",\n\t\"./Binary_Property/Dash.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Dash.js\",\n\t\"./Binary_Property/Default_Ignorable_Code_Point.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Default_Ignorable_Code_Point.js\",\n\t\"./Binary_Property/Deprecated.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Deprecated.js\",\n\t\"./Binary_Property/Diacritic.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Diacritic.js\",\n\t\"./Binary_Property/Emoji.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Emoji.js\",\n\t\"./Binary_Property/Emoji_Component.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Emoji_Component.js\",\n\t\"./Binary_Property/Emoji_Modifier.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Emoji_Modifier.js\",\n\t\"./Binary_Property/Emoji_Modifier_Base.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Emoji_Modifier_Base.js\",\n\t\"./Binary_Property/Emoji_Presentation.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Emoji_Presentation.js\",\n\t\"./Binary_Property/Extended_Pictographic.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Extended_Pictographic.js\",\n\t\"./Binary_Property/Extender.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Extender.js\",\n\t\"./Binary_Property/Grapheme_Base.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Grapheme_Base.js\",\n\t\"./Binary_Property/Grapheme_Extend.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Grapheme_Extend.js\",\n\t\"./Binary_Property/Hex_Digit.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Hex_Digit.js\",\n\t\"./Binary_Property/IDS_Binary_Operator.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/IDS_Binary_Operator.js\",\n\t\"./Binary_Property/IDS_Trinary_Operator.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/IDS_Trinary_Operator.js\",\n\t\"./Binary_Property/ID_Continue.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/ID_Continue.js\",\n\t\"./Binary_Property/ID_Start.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/ID_Start.js\",\n\t\"./Binary_Property/Ideographic.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Ideographic.js\",\n\t\"./Binary_Property/Join_Control.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Join_Control.js\",\n\t\"./Binary_Property/Logical_Order_Exception.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Logical_Order_Exception.js\",\n\t\"./Binary_Property/Lowercase.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Lowercase.js\",\n\t\"./Binary_Property/Math.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Math.js\",\n\t\"./Binary_Property/Noncharacter_Code_Point.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Noncharacter_Code_Point.js\",\n\t\"./Binary_Property/Pattern_Syntax.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Pattern_Syntax.js\",\n\t\"./Binary_Property/Pattern_White_Space.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Pattern_White_Space.js\",\n\t\"./Binary_Property/Quotation_Mark.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Quotation_Mark.js\",\n\t\"./Binary_Property/Radical.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Radical.js\",\n\t\"./Binary_Property/Regional_Indicator.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Regional_Indicator.js\",\n\t\"./Binary_Property/Sentence_Terminal.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Sentence_Terminal.js\",\n\t\"./Binary_Property/Soft_Dotted.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Soft_Dotted.js\",\n\t\"./Binary_Property/Terminal_Punctuation.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Terminal_Punctuation.js\",\n\t\"./Binary_Property/Unified_Ideograph.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Unified_Ideograph.js\",\n\t\"./Binary_Property/Uppercase.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Uppercase.js\",\n\t\"./Binary_Property/Variation_Selector.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/Variation_Selector.js\",\n\t\"./Binary_Property/White_Space.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/White_Space.js\",\n\t\"./Binary_Property/XID_Continue.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/XID_Continue.js\",\n\t\"./Binary_Property/XID_Start.js\": \"./node_modules/regenerate-unicode-properties/Binary_Property/XID_Start.js\",\n\t\"./General_Category/Cased_Letter.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Cased_Letter.js\",\n\t\"./General_Category/Close_Punctuation.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Close_Punctuation.js\",\n\t\"./General_Category/Connector_Punctuation.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Connector_Punctuation.js\",\n\t\"./General_Category/Control.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Control.js\",\n\t\"./General_Category/Currency_Symbol.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Currency_Symbol.js\",\n\t\"./General_Category/Dash_Punctuation.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Dash_Punctuation.js\",\n\t\"./General_Category/Decimal_Number.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Decimal_Number.js\",\n\t\"./General_Category/Enclosing_Mark.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Enclosing_Mark.js\",\n\t\"./General_Category/Final_Punctuation.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Final_Punctuation.js\",\n\t\"./General_Category/Format.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Format.js\",\n\t\"./General_Category/Initial_Punctuation.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Initial_Punctuation.js\",\n\t\"./General_Category/Letter.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Letter.js\",\n\t\"./General_Category/Letter_Number.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Letter_Number.js\",\n\t\"./General_Category/Line_Separator.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Line_Separator.js\",\n\t\"./General_Category/Lowercase_Letter.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Lowercase_Letter.js\",\n\t\"./General_Category/Mark.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Mark.js\",\n\t\"./General_Category/Math_Symbol.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Math_Symbol.js\",\n\t\"./General_Category/Modifier_Letter.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Modifier_Letter.js\",\n\t\"./General_Category/Modifier_Symbol.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Modifier_Symbol.js\",\n\t\"./General_Category/Nonspacing_Mark.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Nonspacing_Mark.js\",\n\t\"./General_Category/Number.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Number.js\",\n\t\"./General_Category/Open_Punctuation.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Open_Punctuation.js\",\n\t\"./General_Category/Other.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Other.js\",\n\t\"./General_Category/Other_Letter.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Other_Letter.js\",\n\t\"./General_Category/Other_Number.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Other_Number.js\",\n\t\"./General_Category/Other_Punctuation.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Other_Punctuation.js\",\n\t\"./General_Category/Other_Symbol.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Other_Symbol.js\",\n\t\"./General_Category/Paragraph_Separator.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Paragraph_Separator.js\",\n\t\"./General_Category/Private_Use.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Private_Use.js\",\n\t\"./General_Category/Punctuation.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Punctuation.js\",\n\t\"./General_Category/Separator.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Separator.js\",\n\t\"./General_Category/Space_Separator.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Space_Separator.js\",\n\t\"./General_Category/Spacing_Mark.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Spacing_Mark.js\",\n\t\"./General_Category/Surrogate.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Surrogate.js\",\n\t\"./General_Category/Symbol.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Symbol.js\",\n\t\"./General_Category/Titlecase_Letter.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Titlecase_Letter.js\",\n\t\"./General_Category/Unassigned.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Unassigned.js\",\n\t\"./General_Category/Uppercase_Letter.js\": \"./node_modules/regenerate-unicode-properties/General_Category/Uppercase_Letter.js\",\n\t\"./Script/Adlam.js\": \"./node_modules/regenerate-unicode-properties/Script/Adlam.js\",\n\t\"./Script/Ahom.js\": \"./node_modules/regenerate-unicode-properties/Script/Ahom.js\",\n\t\"./Script/Anatolian_Hieroglyphs.js\": \"./node_modules/regenerate-unicode-properties/Script/Anatolian_Hieroglyphs.js\",\n\t\"./Script/Arabic.js\": \"./node_modules/regenerate-unicode-properties/Script/Arabic.js\",\n\t\"./Script/Armenian.js\": \"./node_modules/regenerate-unicode-properties/Script/Armenian.js\",\n\t\"./Script/Avestan.js\": \"./node_modules/regenerate-unicode-properties/Script/Avestan.js\",\n\t\"./Script/Balinese.js\": \"./node_modules/regenerate-unicode-properties/Script/Balinese.js\",\n\t\"./Script/Bamum.js\": \"./node_modules/regenerate-unicode-properties/Script/Bamum.js\",\n\t\"./Script/Bassa_Vah.js\": \"./node_modules/regenerate-unicode-properties/Script/Bassa_Vah.js\",\n\t\"./Script/Batak.js\": \"./node_modules/regenerate-unicode-properties/Script/Batak.js\",\n\t\"./Script/Bengali.js\": \"./node_modules/regenerate-unicode-properties/Script/Bengali.js\",\n\t\"./Script/Bhaiksuki.js\": \"./node_modules/regenerate-unicode-properties/Script/Bhaiksuki.js\",\n\t\"./Script/Bopomofo.js\": \"./node_modules/regenerate-unicode-properties/Script/Bopomofo.js\",\n\t\"./Script/Brahmi.js\": \"./node_modules/regenerate-unicode-properties/Script/Brahmi.js\",\n\t\"./Script/Braille.js\": \"./node_modules/regenerate-unicode-properties/Script/Braille.js\",\n\t\"./Script/Buginese.js\": \"./node_modules/regenerate-unicode-properties/Script/Buginese.js\",\n\t\"./Script/Buhid.js\": \"./node_modules/regenerate-unicode-properties/Script/Buhid.js\",\n\t\"./Script/Canadian_Aboriginal.js\": \"./node_modules/regenerate-unicode-properties/Script/Canadian_Aboriginal.js\",\n\t\"./Script/Carian.js\": \"./node_modules/regenerate-unicode-properties/Script/Carian.js\",\n\t\"./Script/Caucasian_Albanian.js\": \"./node_modules/regenerate-unicode-properties/Script/Caucasian_Albanian.js\",\n\t\"./Script/Chakma.js\": \"./node_modules/regenerate-unicode-properties/Script/Chakma.js\",\n\t\"./Script/Cham.js\": \"./node_modules/regenerate-unicode-properties/Script/Cham.js\",\n\t\"./Script/Cherokee.js\": \"./node_modules/regenerate-unicode-properties/Script/Cherokee.js\",\n\t\"./Script/Chorasmian.js\": \"./node_modules/regenerate-unicode-properties/Script/Chorasmian.js\",\n\t\"./Script/Common.js\": \"./node_modules/regenerate-unicode-properties/Script/Common.js\",\n\t\"./Script/Coptic.js\": \"./node_modules/regenerate-unicode-properties/Script/Coptic.js\",\n\t\"./Script/Cuneiform.js\": \"./node_modules/regenerate-unicode-properties/Script/Cuneiform.js\",\n\t\"./Script/Cypriot.js\": \"./node_modules/regenerate-unicode-properties/Script/Cypriot.js\",\n\t\"./Script/Cypro_Minoan.js\": \"./node_modules/regenerate-unicode-properties/Script/Cypro_Minoan.js\",\n\t\"./Script/Cyrillic.js\": \"./node_modules/regenerate-unicode-properties/Script/Cyrillic.js\",\n\t\"./Script/Deseret.js\": \"./node_modules/regenerate-unicode-properties/Script/Deseret.js\",\n\t\"./Script/Devanagari.js\": \"./node_modules/regenerate-unicode-properties/Script/Devanagari.js\",\n\t\"./Script/Dives_Akuru.js\": \"./node_modules/regenerate-unicode-properties/Script/Dives_Akuru.js\",\n\t\"./Script/Dogra.js\": \"./node_modules/regenerate-unicode-properties/Script/Dogra.js\",\n\t\"./Script/Duployan.js\": \"./node_modules/regenerate-unicode-properties/Script/Duployan.js\",\n\t\"./Script/Egyptian_Hieroglyphs.js\": \"./node_modules/regenerate-unicode-properties/Script/Egyptian_Hieroglyphs.js\",\n\t\"./Script/Elbasan.js\": \"./node_modules/regenerate-unicode-properties/Script/Elbasan.js\",\n\t\"./Script/Elymaic.js\": \"./node_modules/regenerate-unicode-properties/Script/Elymaic.js\",\n\t\"./Script/Ethiopic.js\": \"./node_modules/regenerate-unicode-properties/Script/Ethiopic.js\",\n\t\"./Script/Georgian.js\": \"./node_modules/regenerate-unicode-properties/Script/Georgian.js\",\n\t\"./Script/Glagolitic.js\": \"./node_modules/regenerate-unicode-properties/Script/Glagolitic.js\",\n\t\"./Script/Gothic.js\": \"./node_modules/regenerate-unicode-properties/Script/Gothic.js\",\n\t\"./Script/Grantha.js\": \"./node_modules/regenerate-unicode-properties/Script/Grantha.js\",\n\t\"./Script/Greek.js\": \"./node_modules/regenerate-unicode-properties/Script/Greek.js\",\n\t\"./Script/Gujarati.js\": \"./node_modules/regenerate-unicode-properties/Script/Gujarati.js\",\n\t\"./Script/Gunjala_Gondi.js\": \"./node_modules/regenerate-unicode-properties/Script/Gunjala_Gondi.js\",\n\t\"./Script/Gurmukhi.js\": \"./node_modules/regenerate-unicode-properties/Script/Gurmukhi.js\",\n\t\"./Script/Han.js\": \"./node_modules/regenerate-unicode-properties/Script/Han.js\",\n\t\"./Script/Hangul.js\": \"./node_modules/regenerate-unicode-properties/Script/Hangul.js\",\n\t\"./Script/Hanifi_Rohingya.js\": \"./node_modules/regenerate-unicode-properties/Script/Hanifi_Rohingya.js\",\n\t\"./Script/Hanunoo.js\": \"./node_modules/regenerate-unicode-properties/Script/Hanunoo.js\",\n\t\"./Script/Hatran.js\": \"./node_modules/regenerate-unicode-properties/Script/Hatran.js\",\n\t\"./Script/Hebrew.js\": \"./node_modules/regenerate-unicode-properties/Script/Hebrew.js\",\n\t\"./Script/Hiragana.js\": \"./node_modules/regenerate-unicode-properties/Script/Hiragana.js\",\n\t\"./Script/Imperial_Aramaic.js\": \"./node_modules/regenerate-unicode-properties/Script/Imperial_Aramaic.js\",\n\t\"./Script/Inherited.js\": \"./node_modules/regenerate-unicode-properties/Script/Inherited.js\",\n\t\"./Script/Inscriptional_Pahlavi.js\": \"./node_modules/regenerate-unicode-properties/Script/Inscriptional_Pahlavi.js\",\n\t\"./Script/Inscriptional_Parthian.js\": \"./node_modules/regenerate-unicode-properties/Script/Inscriptional_Parthian.js\",\n\t\"./Script/Javanese.js\": \"./node_modules/regenerate-unicode-properties/Script/Javanese.js\",\n\t\"./Script/Kaithi.js\": \"./node_modules/regenerate-unicode-properties/Script/Kaithi.js\",\n\t\"./Script/Kannada.js\": \"./node_modules/regenerate-unicode-properties/Script/Kannada.js\",\n\t\"./Script/Katakana.js\": \"./node_modules/regenerate-unicode-properties/Script/Katakana.js\",\n\t\"./Script/Kayah_Li.js\": \"./node_modules/regenerate-unicode-properties/Script/Kayah_Li.js\",\n\t\"./Script/Kharoshthi.js\": \"./node_modules/regenerate-unicode-properties/Script/Kharoshthi.js\",\n\t\"./Script/Khitan_Small_Script.js\": \"./node_modules/regenerate-unicode-properties/Script/Khitan_Small_Script.js\",\n\t\"./Script/Khmer.js\": \"./node_modules/regenerate-unicode-properties/Script/Khmer.js\",\n\t\"./Script/Khojki.js\": \"./node_modules/regenerate-unicode-properties/Script/Khojki.js\",\n\t\"./Script/Khudawadi.js\": \"./node_modules/regenerate-unicode-properties/Script/Khudawadi.js\",\n\t\"./Script/Lao.js\": \"./node_modules/regenerate-unicode-properties/Script/Lao.js\",\n\t\"./Script/Latin.js\": \"./node_modules/regenerate-unicode-properties/Script/Latin.js\",\n\t\"./Script/Lepcha.js\": \"./node_modules/regenerate-unicode-properties/Script/Lepcha.js\",\n\t\"./Script/Limbu.js\": \"./node_modules/regenerate-unicode-properties/Script/Limbu.js\",\n\t\"./Script/Linear_A.js\": \"./node_modules/regenerate-unicode-properties/Script/Linear_A.js\",\n\t\"./Script/Linear_B.js\": \"./node_modules/regenerate-unicode-properties/Script/Linear_B.js\",\n\t\"./Script/Lisu.js\": \"./node_modules/regenerate-unicode-properties/Script/Lisu.js\",\n\t\"./Script/Lycian.js\": \"./node_modules/regenerate-unicode-properties/Script/Lycian.js\",\n\t\"./Script/Lydian.js\": \"./node_modules/regenerate-unicode-properties/Script/Lydian.js\",\n\t\"./Script/Mahajani.js\": \"./node_modules/regenerate-unicode-properties/Script/Mahajani.js\",\n\t\"./Script/Makasar.js\": \"./node_modules/regenerate-unicode-properties/Script/Makasar.js\",\n\t\"./Script/Malayalam.js\": \"./node_modules/regenerate-unicode-properties/Script/Malayalam.js\",\n\t\"./Script/Mandaic.js\": \"./node_modules/regenerate-unicode-properties/Script/Mandaic.js\",\n\t\"./Script/Manichaean.js\": \"./node_modules/regenerate-unicode-properties/Script/Manichaean.js\",\n\t\"./Script/Marchen.js\": \"./node_modules/regenerate-unicode-properties/Script/Marchen.js\",\n\t\"./Script/Masaram_Gondi.js\": \"./node_modules/regenerate-unicode-properties/Script/Masaram_Gondi.js\",\n\t\"./Script/Medefaidrin.js\": \"./node_modules/regenerate-unicode-properties/Script/Medefaidrin.js\",\n\t\"./Script/Meetei_Mayek.js\": \"./node_modules/regenerate-unicode-properties/Script/Meetei_Mayek.js\",\n\t\"./Script/Mende_Kikakui.js\": \"./node_modules/regenerate-unicode-properties/Script/Mende_Kikakui.js\",\n\t\"./Script/Meroitic_Cursive.js\": \"./node_modules/regenerate-unicode-properties/Script/Meroitic_Cursive.js\",\n\t\"./Script/Meroitic_Hieroglyphs.js\": \"./node_modules/regenerate-unicode-properties/Script/Meroitic_Hieroglyphs.js\",\n\t\"./Script/Miao.js\": \"./node_modules/regenerate-unicode-properties/Script/Miao.js\",\n\t\"./Script/Modi.js\": \"./node_modules/regenerate-unicode-properties/Script/Modi.js\",\n\t\"./Script/Mongolian.js\": \"./node_modules/regenerate-unicode-properties/Script/Mongolian.js\",\n\t\"./Script/Mro.js\": \"./node_modules/regenerate-unicode-properties/Script/Mro.js\",\n\t\"./Script/Multani.js\": \"./node_modules/regenerate-unicode-properties/Script/Multani.js\",\n\t\"./Script/Myanmar.js\": \"./node_modules/regenerate-unicode-properties/Script/Myanmar.js\",\n\t\"./Script/Nabataean.js\": \"./node_modules/regenerate-unicode-properties/Script/Nabataean.js\",\n\t\"./Script/Nandinagari.js\": \"./node_modules/regenerate-unicode-properties/Script/Nandinagari.js\",\n\t\"./Script/New_Tai_Lue.js\": \"./node_modules/regenerate-unicode-properties/Script/New_Tai_Lue.js\",\n\t\"./Script/Newa.js\": \"./node_modules/regenerate-unicode-properties/Script/Newa.js\",\n\t\"./Script/Nko.js\": \"./node_modules/regenerate-unicode-properties/Script/Nko.js\",\n\t\"./Script/Nushu.js\": \"./node_modules/regenerate-unicode-properties/Script/Nushu.js\",\n\t\"./Script/Nyiakeng_Puachue_Hmong.js\": \"./node_modules/regenerate-unicode-properties/Script/Nyiakeng_Puachue_Hmong.js\",\n\t\"./Script/Ogham.js\": \"./node_modules/regenerate-unicode-properties/Script/Ogham.js\",\n\t\"./Script/Ol_Chiki.js\": \"./node_modules/regenerate-unicode-properties/Script/Ol_Chiki.js\",\n\t\"./Script/Old_Hungarian.js\": \"./node_modules/regenerate-unicode-properties/Script/Old_Hungarian.js\",\n\t\"./Script/Old_Italic.js\": \"./node_modules/regenerate-unicode-properties/Script/Old_Italic.js\",\n\t\"./Script/Old_North_Arabian.js\": \"./node_modules/regenerate-unicode-properties/Script/Old_North_Arabian.js\",\n\t\"./Script/Old_Permic.js\": \"./node_modules/regenerate-unicode-properties/Script/Old_Permic.js\",\n\t\"./Script/Old_Persian.js\": \"./node_modules/regenerate-unicode-properties/Script/Old_Persian.js\",\n\t\"./Script/Old_Sogdian.js\": \"./node_modules/regenerate-unicode-properties/Script/Old_Sogdian.js\",\n\t\"./Script/Old_South_Arabian.js\": \"./node_modules/regenerate-unicode-properties/Script/Old_South_Arabian.js\",\n\t\"./Script/Old_Turkic.js\": \"./node_modules/regenerate-unicode-properties/Script/Old_Turkic.js\",\n\t\"./Script/Old_Uyghur.js\": \"./node_modules/regenerate-unicode-properties/Script/Old_Uyghur.js\",\n\t\"./Script/Oriya.js\": \"./node_modules/regenerate-unicode-properties/Script/Oriya.js\",\n\t\"./Script/Osage.js\": \"./node_modules/regenerate-unicode-properties/Script/Osage.js\",\n\t\"./Script/Osmanya.js\": \"./node_modules/regenerate-unicode-properties/Script/Osmanya.js\",\n\t\"./Script/Pahawh_Hmong.js\": \"./node_modules/regenerate-unicode-properties/Script/Pahawh_Hmong.js\",\n\t\"./Script/Palmyrene.js\": \"./node_modules/regenerate-unicode-properties/Script/Palmyrene.js\",\n\t\"./Script/Pau_Cin_Hau.js\": \"./node_modules/regenerate-unicode-properties/Script/Pau_Cin_Hau.js\",\n\t\"./Script/Phags_Pa.js\": \"./node_modules/regenerate-unicode-properties/Script/Phags_Pa.js\",\n\t\"./Script/Phoenician.js\": \"./node_modules/regenerate-unicode-properties/Script/Phoenician.js\",\n\t\"./Script/Psalter_Pahlavi.js\": \"./node_modules/regenerate-unicode-properties/Script/Psalter_Pahlavi.js\",\n\t\"./Script/Rejang.js\": \"./node_modules/regenerate-unicode-properties/Script/Rejang.js\",\n\t\"./Script/Runic.js\": \"./node_modules/regenerate-unicode-properties/Script/Runic.js\",\n\t\"./Script/Samaritan.js\": \"./node_modules/regenerate-unicode-properties/Script/Samaritan.js\",\n\t\"./Script/Saurashtra.js\": \"./node_modules/regenerate-unicode-properties/Script/Saurashtra.js\",\n\t\"./Script/Sharada.js\": \"./node_modules/regenerate-unicode-properties/Script/Sharada.js\",\n\t\"./Script/Shavian.js\": \"./node_modules/regenerate-unicode-properties/Script/Shavian.js\",\n\t\"./Script/Siddham.js\": \"./node_modules/regenerate-unicode-properties/Script/Siddham.js\",\n\t\"./Script/SignWriting.js\": \"./node_modules/regenerate-unicode-properties/Script/SignWriting.js\",\n\t\"./Script/Sinhala.js\": \"./node_modules/regenerate-unicode-properties/Script/Sinhala.js\",\n\t\"./Script/Sogdian.js\": \"./node_modules/regenerate-unicode-properties/Script/Sogdian.js\",\n\t\"./Script/Sora_Sompeng.js\": \"./node_modules/regenerate-unicode-properties/Script/Sora_Sompeng.js\",\n\t\"./Script/Soyombo.js\": \"./node_modules/regenerate-unicode-properties/Script/Soyombo.js\",\n\t\"./Script/Sundanese.js\": \"./node_modules/regenerate-unicode-properties/Script/Sundanese.js\",\n\t\"./Script/Syloti_Nagri.js\": \"./node_modules/regenerate-unicode-properties/Script/Syloti_Nagri.js\",\n\t\"./Script/Syriac.js\": \"./node_modules/regenerate-unicode-properties/Script/Syriac.js\",\n\t\"./Script/Tagalog.js\": \"./node_modules/regenerate-unicode-properties/Script/Tagalog.js\",\n\t\"./Script/Tagbanwa.js\": \"./node_modules/regenerate-unicode-properties/Script/Tagbanwa.js\",\n\t\"./Script/Tai_Le.js\": \"./node_modules/regenerate-unicode-properties/Script/Tai_Le.js\",\n\t\"./Script/Tai_Tham.js\": \"./node_modules/regenerate-unicode-properties/Script/Tai_Tham.js\",\n\t\"./Script/Tai_Viet.js\": \"./node_modules/regenerate-unicode-properties/Script/Tai_Viet.js\",\n\t\"./Script/Takri.js\": \"./node_modules/regenerate-unicode-properties/Script/Takri.js\",\n\t\"./Script/Tamil.js\": \"./node_modules/regenerate-unicode-properties/Script/Tamil.js\",\n\t\"./Script/Tangsa.js\": \"./node_modules/regenerate-unicode-properties/Script/Tangsa.js\",\n\t\"./Script/Tangut.js\": \"./node_modules/regenerate-unicode-properties/Script/Tangut.js\",\n\t\"./Script/Telugu.js\": \"./node_modules/regenerate-unicode-properties/Script/Telugu.js\",\n\t\"./Script/Thaana.js\": \"./node_modules/regenerate-unicode-properties/Script/Thaana.js\",\n\t\"./Script/Thai.js\": \"./node_modules/regenerate-unicode-properties/Script/Thai.js\",\n\t\"./Script/Tibetan.js\": \"./node_modules/regenerate-unicode-properties/Script/Tibetan.js\",\n\t\"./Script/Tifinagh.js\": \"./node_modules/regenerate-unicode-properties/Script/Tifinagh.js\",\n\t\"./Script/Tirhuta.js\": \"./node_modules/regenerate-unicode-properties/Script/Tirhuta.js\",\n\t\"./Script/Toto.js\": \"./node_modules/regenerate-unicode-properties/Script/Toto.js\",\n\t\"./Script/Ugaritic.js\": \"./node_modules/regenerate-unicode-properties/Script/Ugaritic.js\",\n\t\"./Script/Vai.js\": \"./node_modules/regenerate-unicode-properties/Script/Vai.js\",\n\t\"./Script/Vithkuqi.js\": \"./node_modules/regenerate-unicode-properties/Script/Vithkuqi.js\",\n\t\"./Script/Wancho.js\": \"./node_modules/regenerate-unicode-properties/Script/Wancho.js\",\n\t\"./Script/Warang_Citi.js\": \"./node_modules/regenerate-unicode-properties/Script/Warang_Citi.js\",\n\t\"./Script/Yezidi.js\": \"./node_modules/regenerate-unicode-properties/Script/Yezidi.js\",\n\t\"./Script/Yi.js\": \"./node_modules/regenerate-unicode-properties/Script/Yi.js\",\n\t\"./Script/Zanabazar_Square.js\": \"./node_modules/regenerate-unicode-properties/Script/Zanabazar_Square.js\",\n\t\"./Script_Extensions/Adlam.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Adlam.js\",\n\t\"./Script_Extensions/Ahom.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Ahom.js\",\n\t\"./Script_Extensions/Anatolian_Hieroglyphs.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Anatolian_Hieroglyphs.js\",\n\t\"./Script_Extensions/Arabic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Arabic.js\",\n\t\"./Script_Extensions/Armenian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Armenian.js\",\n\t\"./Script_Extensions/Avestan.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Avestan.js\",\n\t\"./Script_Extensions/Balinese.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Balinese.js\",\n\t\"./Script_Extensions/Bamum.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Bamum.js\",\n\t\"./Script_Extensions/Bassa_Vah.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Bassa_Vah.js\",\n\t\"./Script_Extensions/Batak.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Batak.js\",\n\t\"./Script_Extensions/Bengali.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Bengali.js\",\n\t\"./Script_Extensions/Bhaiksuki.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Bhaiksuki.js\",\n\t\"./Script_Extensions/Bopomofo.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Bopomofo.js\",\n\t\"./Script_Extensions/Brahmi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Brahmi.js\",\n\t\"./Script_Extensions/Braille.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Braille.js\",\n\t\"./Script_Extensions/Buginese.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Buginese.js\",\n\t\"./Script_Extensions/Buhid.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Buhid.js\",\n\t\"./Script_Extensions/Canadian_Aboriginal.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Canadian_Aboriginal.js\",\n\t\"./Script_Extensions/Carian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Carian.js\",\n\t\"./Script_Extensions/Caucasian_Albanian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Caucasian_Albanian.js\",\n\t\"./Script_Extensions/Chakma.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Chakma.js\",\n\t\"./Script_Extensions/Cham.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Cham.js\",\n\t\"./Script_Extensions/Cherokee.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Cherokee.js\",\n\t\"./Script_Extensions/Chorasmian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Chorasmian.js\",\n\t\"./Script_Extensions/Common.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Common.js\",\n\t\"./Script_Extensions/Coptic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Coptic.js\",\n\t\"./Script_Extensions/Cuneiform.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Cuneiform.js\",\n\t\"./Script_Extensions/Cypriot.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Cypriot.js\",\n\t\"./Script_Extensions/Cypro_Minoan.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Cypro_Minoan.js\",\n\t\"./Script_Extensions/Cyrillic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Cyrillic.js\",\n\t\"./Script_Extensions/Deseret.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Deseret.js\",\n\t\"./Script_Extensions/Devanagari.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Devanagari.js\",\n\t\"./Script_Extensions/Dives_Akuru.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Dives_Akuru.js\",\n\t\"./Script_Extensions/Dogra.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Dogra.js\",\n\t\"./Script_Extensions/Duployan.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Duployan.js\",\n\t\"./Script_Extensions/Egyptian_Hieroglyphs.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Egyptian_Hieroglyphs.js\",\n\t\"./Script_Extensions/Elbasan.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Elbasan.js\",\n\t\"./Script_Extensions/Elymaic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Elymaic.js\",\n\t\"./Script_Extensions/Ethiopic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Ethiopic.js\",\n\t\"./Script_Extensions/Georgian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Georgian.js\",\n\t\"./Script_Extensions/Glagolitic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Glagolitic.js\",\n\t\"./Script_Extensions/Gothic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Gothic.js\",\n\t\"./Script_Extensions/Grantha.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Grantha.js\",\n\t\"./Script_Extensions/Greek.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Greek.js\",\n\t\"./Script_Extensions/Gujarati.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Gujarati.js\",\n\t\"./Script_Extensions/Gunjala_Gondi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Gunjala_Gondi.js\",\n\t\"./Script_Extensions/Gurmukhi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Gurmukhi.js\",\n\t\"./Script_Extensions/Han.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Han.js\",\n\t\"./Script_Extensions/Hangul.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Hangul.js\",\n\t\"./Script_Extensions/Hanifi_Rohingya.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Hanifi_Rohingya.js\",\n\t\"./Script_Extensions/Hanunoo.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Hanunoo.js\",\n\t\"./Script_Extensions/Hatran.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Hatran.js\",\n\t\"./Script_Extensions/Hebrew.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Hebrew.js\",\n\t\"./Script_Extensions/Hiragana.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Hiragana.js\",\n\t\"./Script_Extensions/Imperial_Aramaic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Imperial_Aramaic.js\",\n\t\"./Script_Extensions/Inherited.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Inherited.js\",\n\t\"./Script_Extensions/Inscriptional_Pahlavi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Inscriptional_Pahlavi.js\",\n\t\"./Script_Extensions/Inscriptional_Parthian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Inscriptional_Parthian.js\",\n\t\"./Script_Extensions/Javanese.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Javanese.js\",\n\t\"./Script_Extensions/Kaithi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Kaithi.js\",\n\t\"./Script_Extensions/Kannada.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Kannada.js\",\n\t\"./Script_Extensions/Katakana.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Katakana.js\",\n\t\"./Script_Extensions/Kayah_Li.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Kayah_Li.js\",\n\t\"./Script_Extensions/Kharoshthi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Kharoshthi.js\",\n\t\"./Script_Extensions/Khitan_Small_Script.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Khitan_Small_Script.js\",\n\t\"./Script_Extensions/Khmer.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Khmer.js\",\n\t\"./Script_Extensions/Khojki.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Khojki.js\",\n\t\"./Script_Extensions/Khudawadi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Khudawadi.js\",\n\t\"./Script_Extensions/Lao.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Lao.js\",\n\t\"./Script_Extensions/Latin.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Latin.js\",\n\t\"./Script_Extensions/Lepcha.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Lepcha.js\",\n\t\"./Script_Extensions/Limbu.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Limbu.js\",\n\t\"./Script_Extensions/Linear_A.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Linear_A.js\",\n\t\"./Script_Extensions/Linear_B.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Linear_B.js\",\n\t\"./Script_Extensions/Lisu.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Lisu.js\",\n\t\"./Script_Extensions/Lycian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Lycian.js\",\n\t\"./Script_Extensions/Lydian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Lydian.js\",\n\t\"./Script_Extensions/Mahajani.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Mahajani.js\",\n\t\"./Script_Extensions/Makasar.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Makasar.js\",\n\t\"./Script_Extensions/Malayalam.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Malayalam.js\",\n\t\"./Script_Extensions/Mandaic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Mandaic.js\",\n\t\"./Script_Extensions/Manichaean.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Manichaean.js\",\n\t\"./Script_Extensions/Marchen.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Marchen.js\",\n\t\"./Script_Extensions/Masaram_Gondi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Masaram_Gondi.js\",\n\t\"./Script_Extensions/Medefaidrin.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Medefaidrin.js\",\n\t\"./Script_Extensions/Meetei_Mayek.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Meetei_Mayek.js\",\n\t\"./Script_Extensions/Mende_Kikakui.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Mende_Kikakui.js\",\n\t\"./Script_Extensions/Meroitic_Cursive.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Meroitic_Cursive.js\",\n\t\"./Script_Extensions/Meroitic_Hieroglyphs.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Meroitic_Hieroglyphs.js\",\n\t\"./Script_Extensions/Miao.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Miao.js\",\n\t\"./Script_Extensions/Modi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Modi.js\",\n\t\"./Script_Extensions/Mongolian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Mongolian.js\",\n\t\"./Script_Extensions/Mro.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Mro.js\",\n\t\"./Script_Extensions/Multani.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Multani.js\",\n\t\"./Script_Extensions/Myanmar.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Myanmar.js\",\n\t\"./Script_Extensions/Nabataean.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Nabataean.js\",\n\t\"./Script_Extensions/Nandinagari.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Nandinagari.js\",\n\t\"./Script_Extensions/New_Tai_Lue.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/New_Tai_Lue.js\",\n\t\"./Script_Extensions/Newa.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Newa.js\",\n\t\"./Script_Extensions/Nko.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Nko.js\",\n\t\"./Script_Extensions/Nushu.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Nushu.js\",\n\t\"./Script_Extensions/Nyiakeng_Puachue_Hmong.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Nyiakeng_Puachue_Hmong.js\",\n\t\"./Script_Extensions/Ogham.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Ogham.js\",\n\t\"./Script_Extensions/Ol_Chiki.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Ol_Chiki.js\",\n\t\"./Script_Extensions/Old_Hungarian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Old_Hungarian.js\",\n\t\"./Script_Extensions/Old_Italic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Old_Italic.js\",\n\t\"./Script_Extensions/Old_North_Arabian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Old_North_Arabian.js\",\n\t\"./Script_Extensions/Old_Permic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Old_Permic.js\",\n\t\"./Script_Extensions/Old_Persian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Old_Persian.js\",\n\t\"./Script_Extensions/Old_Sogdian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Old_Sogdian.js\",\n\t\"./Script_Extensions/Old_South_Arabian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Old_South_Arabian.js\",\n\t\"./Script_Extensions/Old_Turkic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Old_Turkic.js\",\n\t\"./Script_Extensions/Old_Uyghur.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Old_Uyghur.js\",\n\t\"./Script_Extensions/Oriya.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Oriya.js\",\n\t\"./Script_Extensions/Osage.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Osage.js\",\n\t\"./Script_Extensions/Osmanya.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Osmanya.js\",\n\t\"./Script_Extensions/Pahawh_Hmong.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Pahawh_Hmong.js\",\n\t\"./Script_Extensions/Palmyrene.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Palmyrene.js\",\n\t\"./Script_Extensions/Pau_Cin_Hau.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Pau_Cin_Hau.js\",\n\t\"./Script_Extensions/Phags_Pa.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Phags_Pa.js\",\n\t\"./Script_Extensions/Phoenician.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Phoenician.js\",\n\t\"./Script_Extensions/Psalter_Pahlavi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Psalter_Pahlavi.js\",\n\t\"./Script_Extensions/Rejang.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Rejang.js\",\n\t\"./Script_Extensions/Runic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Runic.js\",\n\t\"./Script_Extensions/Samaritan.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Samaritan.js\",\n\t\"./Script_Extensions/Saurashtra.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Saurashtra.js\",\n\t\"./Script_Extensions/Sharada.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Sharada.js\",\n\t\"./Script_Extensions/Shavian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Shavian.js\",\n\t\"./Script_Extensions/Siddham.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Siddham.js\",\n\t\"./Script_Extensions/SignWriting.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/SignWriting.js\",\n\t\"./Script_Extensions/Sinhala.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Sinhala.js\",\n\t\"./Script_Extensions/Sogdian.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Sogdian.js\",\n\t\"./Script_Extensions/Sora_Sompeng.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Sora_Sompeng.js\",\n\t\"./Script_Extensions/Soyombo.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Soyombo.js\",\n\t\"./Script_Extensions/Sundanese.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Sundanese.js\",\n\t\"./Script_Extensions/Syloti_Nagri.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Syloti_Nagri.js\",\n\t\"./Script_Extensions/Syriac.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Syriac.js\",\n\t\"./Script_Extensions/Tagalog.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tagalog.js\",\n\t\"./Script_Extensions/Tagbanwa.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tagbanwa.js\",\n\t\"./Script_Extensions/Tai_Le.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tai_Le.js\",\n\t\"./Script_Extensions/Tai_Tham.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tai_Tham.js\",\n\t\"./Script_Extensions/Tai_Viet.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tai_Viet.js\",\n\t\"./Script_Extensions/Takri.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Takri.js\",\n\t\"./Script_Extensions/Tamil.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tamil.js\",\n\t\"./Script_Extensions/Tangsa.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tangsa.js\",\n\t\"./Script_Extensions/Tangut.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tangut.js\",\n\t\"./Script_Extensions/Telugu.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Telugu.js\",\n\t\"./Script_Extensions/Thaana.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Thaana.js\",\n\t\"./Script_Extensions/Thai.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Thai.js\",\n\t\"./Script_Extensions/Tibetan.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tibetan.js\",\n\t\"./Script_Extensions/Tifinagh.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tifinagh.js\",\n\t\"./Script_Extensions/Tirhuta.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Tirhuta.js\",\n\t\"./Script_Extensions/Toto.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Toto.js\",\n\t\"./Script_Extensions/Ugaritic.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Ugaritic.js\",\n\t\"./Script_Extensions/Vai.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Vai.js\",\n\t\"./Script_Extensions/Vithkuqi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Vithkuqi.js\",\n\t\"./Script_Extensions/Wancho.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Wancho.js\",\n\t\"./Script_Extensions/Warang_Citi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Warang_Citi.js\",\n\t\"./Script_Extensions/Yezidi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Yezidi.js\",\n\t\"./Script_Extensions/Yi.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Yi.js\",\n\t\"./Script_Extensions/Zanabazar_Square.js\": \"./node_modules/regenerate-unicode-properties/Script_Extensions/Zanabazar_Square.js\",\n\t\"./index.js\": \"./node_modules/regenerate-unicode-properties/index.js\",\n\t\"./unicode-version.js\": \"./node_modules/regenerate-unicode-properties/unicode-version.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/regenerate-unicode-properties sync recursive ^\\\\.\\\\/.*\\\\.js$\";\n\n//# sourceURL=webpack:///./node_modules/regenerate-unicode-properties_sync_^\\.\\/.*\\.js$?");

/***/ }),

/***/ "./src/core/BCS-usfm-grammar-check.js":
/*!********************************************!*\
  !*** ./src/core/BCS-usfm-grammar-check.js ***!
  \********************************************/
/*! exports provided: runBCSGrammarCheck, checkUSFMGrammar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"runBCSGrammarCheck\", function() { return runBCSGrammarCheck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkUSFMGrammar\", function() { return checkUSFMGrammar; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var usfm_grammar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! usfm-grammar */ \"./node_modules/usfm-grammar/js/main.js\");\n/* harmony import */ var usfm_grammar__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(usfm_grammar__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! . */ \"./src/core/index.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const USFM_GRAMMAR_VALIDATOR_VERSION_STRING = '0.4.5';\n\nvar LINE_COLUMN_NUMBERS_REGEX = new RegExp('Line (\\\\d{1,6}), col (\\\\d{1,4}):'); // e.g., \"Line 1538, col 4: 1537 ...\"\n\n/**\n *\n * @param {string} strictnessString -- 'strict' or 'relaxed'\n * @param {string} bookID -- 3-character book ID\n * @param {string} fileText -- the actual USFM text\n * @param {string} filename -- for error messages\n * @param {string} givenLocation -- for error messages\n * @param {Object} checkingOptions -- optional options\n * @returns {Object} including isValidUSFM flag\n */\n\nfunction runBCSGrammarCheck(strictnessString, bookID, fileText, filename, givenLocation, checkingOptions) {\n  // Runs the BCS USFM Grammar checker\n  //  which can be quite time-consuming on large, complex USFM files\n  // userLog(`Running ${strictnessString} BCS USFM grammar check${givenLocation} (can take quite a while for a large book)…`);\n  //parameterAssert(strictnessString === 'strict' || strictnessString === 'relaxed', `Unexpected strictnessString='${strictnessString}'`);\n  var excerptLength;\n\n  try {\n    excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n  } catch (usfmELerror) {}\n\n  if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n    excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n  } // else\n  // debugLog(`Using supplied excerptLength=${excerptLength} cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n\n\n  var excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n  var excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n  // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n  // Now create the parser and run the check\n\n  var parserToJSONResultObject, parseWarnings;\n\n  try {\n    // debugLog(`${new Date().getTime() / 1000} Setting-up the USFMGrammar checker…`);\n    var ourUsfmParser = new usfm_grammar__WEBPACK_IMPORTED_MODULE_3___default.a.USFMParser(fileText, strictnessString === 'relaxed' ? usfm_grammar__WEBPACK_IMPORTED_MODULE_3___default.a.LEVEL.RELAXED : null); // Returns a Boolean indicating whether the input USFM text satisfies the grammar or not.\n    // This method is available in both default and relaxed modes.\n    // const parserResult = ourUsfmParser.validate();\n    // debugLog(`${new Date().getTime() / 1000} Running the BCS USFMGrammar checker (may take several seconds)…`);\n    // userLog(`Running the BCS USFMGrammar checker for ${bookID} (may take several seconds)…`);\n\n    parserToJSONResultObject = ourUsfmParser.toJSON(); // debugLog(`${new Date().getTime() / 1000} Got the BCS USFMGrammar checker toJSON result: ${Object.keys(parserToJSONResultObject)}`);\n    // debugLog(`${new Date().getTime() / 1000} Got the BCS USFMGrammar checker toJSON _messages: ${Object.keys(parserToJSONResultObject._messages)}`);\n    // debugLog(`${new Date().getTime() / 1000} Got the BCS USFMGrammar checker: ${Object.keys(ourUsfmParser)}`);\n\n    parseWarnings = parserToJSONResultObject._warnings ? parserToJSONResultObject._warnings : ourUsfmParser.warnings; // debugLog(`${new Date().getTime() / 1000} Got warnings from the BCS USFMGrammar checker: (${parseWarnings.length}) ${parseWarnings}`);\n  } catch (parserError) {\n    // This is how the Parser returns USFM errors, i.e., it stops after the first error\n    // debugLog(`${new Date().getTime() / 1000} Got an exception when using the BCS USFMGrammar checker: ${parserError}`);\n    var _ourErrorObject = {\n      priority: 840,\n      message: \"USFMGrammar check failed\",\n      details: parserError,\n      filename: filename,\n      location: givenLocation\n    };\n\n    try {\n      // See if we can improve the result with line and column numbers\n      // NOTE: The following code is quite fragile\n      //  as it depends on the precise format of the error message returned from USFMParser\n      var regexMatchObject = LINE_COLUMN_NUMBERS_REGEX.exec(parserError);\n\n      var _regexMatchObject = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(regexMatchObject, 3),\n          totalLink = _regexMatchObject[0],\n          _lineNumberString = _regexMatchObject[1],\n          columnNumberString = _regexMatchObject[2];\n\n      _ourErrorObject.lineNumber = Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"ourParseInt\"])(_lineNumberString);\n      _ourErrorObject.characterIndex = Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"ourParseInt\"])(columnNumberString) - 1;\n      var errorLineText = fileText.split('\\n')[_ourErrorObject.lineNumber - 1];\n      _ourErrorObject.excerpt = (_ourErrorObject.characterIndex > excerptHalfLength ? '…' : '') + errorLineText.substring(_ourErrorObject.characterIndex - excerptHalfLength, _ourErrorObject.characterIndex + excerptHalfLengthPlus) + (_ourErrorObject.characterIndex + excerptHalfLengthPlus < errorLineText.length ? '…' : ''); // NOTE: Not 100% sure that it’s more helpful to the user if we do this next line ???\n\n      _ourErrorObject.details = _ourErrorObject.details.slice(totalLink.length); // Delete the line and column numbers that we found\n    } catch (secondError) {\n      Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"debugLog\"])(\"USFMGrammar second error: \".concat(secondError));\n    } // if (ourErrorObject.excerpt.startsWith('\\\\va ') || ourErrorObject.excerpt.startsWith('\\\\ca ')) // lower the priority\n\n\n    if (parserError.indexOf('\\\\va ') >= 0 || parserError.indexOf('\\\\ca ') >= 0) _ourErrorObject.priority = 140; // from 840\n\n    return {\n      isValidUSFM: false,\n      error: _ourErrorObject,\n      warnings: []\n    };\n  }\n\n  var parserMessages;\n  parserMessages = parserToJSONResultObject._messages; // Throw away the JSON (if any)\n  // debugLog(`  Finished BCS USFM grammar check with messages: ${JSON.stringify(parserResult)}\\n and warnings: ${JSON.stringify(ourUsfmParser.warnings)}.`);\n  // TODO: I think most of the following code is now obsolete and can be deleted\n\n  var parseError;\n  parseError = parserMessages._error;\n  var ourErrorMessage, lineNumberString, characterIndex, excerpt; // NOTE: The following code is quite fragile\n  //  as it depends on the precise format of the error message returned from USFMParser\n\n  var ourErrorObject = {};\n\n  if (parseError) {\n    Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"debugLog\"])(\"Oh! This USFMGrammar check code IS still needed!!!\");\n    var contextRE = /(\\d+?)\\s\\|\\s(.+)/g;\n\n    var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(parseError.split('\\n')),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var errorLine = _step.value;\n\n        // debugLog(`BCS errorLine=${errorLine}`);\n        if (errorLine.startsWith('>')) {\n          var regexResult = contextRE.exec(errorLine.slice(1).trim()); // debugLog(`  regexResult: ${JSON.stringify(regexResult)}`);\n\n          if (regexResult) {\n            lineNumberString = regexResult[1];\n            excerpt = regexResult[2];\n          }\n        } else if (errorLine.endsWith('^')) {\n          characterIndex = errorLine.indexOf('^') - 8;\n          if (characterIndex < 0) characterIndex = 0; // Just in case\n\n          if (excerpt.length) excerpt = (characterIndex > excerptHalfLength ? '…' : '') + excerpt.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < excerpt.length ? '…' : '');\n        } else ourErrorMessage = errorLine; // We only want the last one\n\n      } // debugLog(`  ourErrorMessage: '${ourErrorMessage}' lineNumberString=${lineNumberString} characterIndex=${characterIndex} excerpt='${excerpt}'`);\n      // Some of these \"errors\" need to be degraded in priority\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var adjustedPriority = 594; // We don’t make these extra high coz the messages are hard for users to interpret\n\n    if (excerpt === '\\\\s5' // Temporarily, even though \\s5 fields are not valid USFM\n    || ourErrorMessage.startsWith('Expected \"f*\", \"+\"') // Might neeed a OHM schema fix?\n    ) adjustedPriority = 294;\n    ourErrorObject = {\n      priority: adjustedPriority,\n      message: \"USFMGrammar: \".concat(ourErrorMessage),\n      filename: filename,\n      characterIndex: characterIndex,\n      excerpt: excerpt,\n      location: givenLocation\n    }; // Save our line number\n\n    if (lineNumberString && lineNumberString.length) {\n      // ourErrorObject.lineNumber = Number(lineNumberString);\n      //  but we need a temporary fix for the BCS bug which doesn’t include blank lines in the count\n      var lineNumber = Number(lineNumberString);\n      var notified = false;\n      var lines = fileText.split('\\n');\n\n      for (var n = 1; n <= lines.length; n++) {\n        if (n >= lineNumber) break; // Gone far enough\n\n        if (!lines[n - 1]) {\n          lineNumber += 1; // Increment error line number for each blank line\n\n          if (!notified) {\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"Temporarily adjusting BCS grammar error line number to account for blank lines\");\n            notified = true;\n          }\n        }\n      }\n\n      ourErrorObject.lineNumber = lineNumber;\n    }\n  } // debugLog(`  Warnings: ${JSON.stringify(parseWarnings)}`);\n\n\n  var ourWarnings = [];\n\n  var _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(parseWarnings),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var warningString = _step2.value;\n      // debugLog(`warningString: '${warningString}'`);\n      // Clean up their warnings a little: Remove trailing spaces and periods\n      var adjustedString = warningString.trim(); // Removes the trailing space\n\n      if (adjustedString.endsWith('.')) adjustedString = adjustedString.slice(0, adjustedString.length - 1);\n      ourWarnings.push(adjustedString);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return {\n    isValidUSFM: !parseError,\n    error: ourErrorObject,\n    warnings: ourWarnings\n  };\n} // end of runBCSGrammarCheck function\n\nfunction checkUSFMGrammar(bookID, strictnessString, filename, givenText, givenLocation, checkingOptions) {\n  /*\n  This function is only used for the demonstration pages -- not for the core!\n   bookID is a three-character UPPERCASE USFM book identifier.\n   filename parameter can be an empty string if we don’t have one.\n    Returns a result object containing a successList and a noticeList\n   */\n  Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"functionLog\"])(\"checkUSFMGrammar(\".concat(givenText.length.toLocaleString(), \" chars, '\").concat(givenLocation, \"')\\u2026\")); //parameterAssert(strictnessString === 'strict' || strictnessString === 'relaxed', `Unexpected strictnessString='${strictnessString}'`);\n\n  var ourLocation = givenLocation;\n  if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n  var cugResult = {\n    successList: [],\n    noticeList: []\n  };\n  /**\n   *\n   * @param {string} successString\n   */\n\n  function addSuccessMessage(successString) {\n    // functionLog(`checkUSFMGrammar success: ${successString}`);\n    cugResult.successList.push(successString);\n  }\n  /**\n   *\n   * @description - adds a new notice entry from the partial fields given -- adding bookID and filename to the given fields\n   * @param {Object} incompleteNoticeObject expected to contain priority, message, characterIndex, exerpt, location\n   */\n\n\n  function addNoticePartial(incompleteNoticeObject) {\n    // functionLog(`checkUSFMGrammar notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n    //parameterAssert(incompleteNoticeObject.priority !== undefined, \"cUSFMgr addNoticePartial: 'priority' parameter should be defined\");\n    //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `cUSFMgr addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n    //parameterAssert(incompleteNoticeObject.message !== undefined, \"cUSFMgr addNoticePartial: 'message' parameter should be defined\");\n    //parameterAssert(typeof incompleteNoticeObject.message === 'string', `cUSFMgr addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n    // parameterAssert(characterIndex !== undefined, \"cUSFMgr addNoticePartial: 'characterIndex' parameter should be defined\");\n    if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `cUSFMgr addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n    } // parameterAssert(excerpt !== undefined, \"cUSFMgr addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n    if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `cUSFMgr addNoticePartial: 'excerpt' parameter should be a string not a '${typeof excerpt}': ${incompleteNoticeObject.excerpt}`);\n    } //parameterAssert(incompleteNoticeObject.location !== undefined, \"cUSFMgr addNoticePartial: 'location' parameter should be defined\");\n    //parameterAssert(typeof incompleteNoticeObject.location === 'string', `cUSFMgr addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n\n\n    Object(___WEBPACK_IMPORTED_MODULE_4__[\"aboutToOverwrite\"])('checkUSFMGrammar', ['bookID', 'filename'], incompleteNoticeObject, {\n      bookID: bookID,\n      filename: filename\n    });\n    cugResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, incompleteNoticeObject), {}, {\n      bookID: bookID,\n      filename: filename\n    }));\n  } // Main code for checkUSFMGrammar function\n\n\n  if (_books_books__WEBPACK_IMPORTED_MODULE_5__[\"isExtraBookID\"](bookID)) // doesn’t work for these\n    return cugResult;\n  var grammarCheckResult = runBCSGrammarCheck(strictnessString, bookID, givenText, filename, ourLocation, checkingOptions); // debugLog(`grammarCheckResult=${JSON.stringify(grammarCheckResult)}`);\n\n  if (!grammarCheckResult.isValidUSFM) addNoticePartial({\n    priority: 944,\n    message: \"USFM3 Grammar Check (\".concat(strictnessString, \" mode) doesn\\u2019t pass\"),\n    filename: filename,\n    location: ourLocation\n  }); // We only get one error if it fails\n\n  if (grammarCheckResult.error && grammarCheckResult.priority) addNoticePartial(grammarCheckResult.error); // Display these warnings but with a lowish priority\n\n  var _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(grammarCheckResult.warnings),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var warningString = _step3.value;\n      addNoticePartial({\n        priority: 101,\n        message: \"USFMGrammar: \".concat(warningString),\n        filename: filename,\n        location: ourLocation\n      });\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  addSuccessMessage(\"Checked USFM Grammar (\".concat(strictnessString, \" mode) \").concat(grammarCheckResult.isValidUSFM ? \"without errors\" : \" (but the USFM DIDN’T validate)\")); // debugLog(`  checkUSFMGrammar returning with ${result.successList.length.toLocaleString()} success(es) and ${result.noticeList.length.toLocaleString()} notice(s).`);\n  // functionLog(`checkUSFMGrammar result is ${JSON.stringify(result)}`);\n\n  return cugResult;\n} // end of checkUSFMGrammar function\n\n//# sourceURL=webpack:///./src/core/BCS-usfm-grammar-check.js?");

/***/ }),

/***/ "./src/core/books/books.js":
/*!*********************************!*\
  !*** ./src/core/books/books.js ***!
  \*********************************/
/*! exports provided: BibleBookData, isValidBookID, isOptionalValidBookID, isExtraBookID, usfmNumberName, expectedVersesPerChapterList, chaptersInBook, isOneChapterBook, versesInChapter, testament, getEnglishBookName, isGoodEnglishBookName, isOftenMissing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BibleBookData\", function() { return BibleBookData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidBookID\", function() { return isValidBookID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isOptionalValidBookID\", function() { return isOptionalValidBookID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isExtraBookID\", function() { return isExtraBookID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"usfmNumberName\", function() { return usfmNumberName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"expectedVersesPerChapterList\", function() { return expectedVersesPerChapterList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"chaptersInBook\", function() { return chaptersInBook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isOneChapterBook\", function() { return isOneChapterBook; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"versesInChapter\", function() { return versesInChapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"testament\", function() { return testament; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEnglishBookName\", function() { return getEnglishBookName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isGoodEnglishBookName\", function() { return isGoodEnglishBookName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isOftenMissing\", function() { return isOftenMissing; });\nvar BibleBookData = {\n  'GEN': {\n    'title': 'Genesis',\n    'usfm': '01-GEN',\n    'testament': 'old',\n    'verseCount': 1533,\n    'verseList': [31, 25, 24, 26, 32, 22, 24, 22, 29, 32, 32, 20, 18, 24, 21, 16, 27, 33, 38, 18, 34, 24, 20, 67, 34, 35, 46, 22, 35, 43, 55, 32, 20, 31, 29, 43, 36, 30, 23, 23, 57, 38, 34, 34, 28, 34, 31, 22, 33, 26]\n  },\n  'EXO': {\n    'title': 'Exodus',\n    'usfm': '02-EXO',\n    'testament': 'old',\n    'verseCount': 1213,\n    'verseList': [22, 25, 22, 31, 23, 30, 25, 32, 35, 29, 10, 51, 22, 31, 27, 36, 16, 27, 25, 26, 36, 31, 33, 18, 40, 37, 21, 43, 46, 38, 18, 35, 23, 35, 35, 38, 29, 31, 43, 38]\n  },\n  'LEV': {\n    'title': 'Leviticus',\n    'usfm': '03-LEV',\n    'testament': 'old',\n    'verseCount': 859,\n    'verseList': [17, 16, 17, 35, 19, 30, 38, 36, 24, 20, 47, 8, 59, 57, 33, 34, 16, 30, 37, 27, 24, 33, 44, 23, 55, 46, 34]\n  },\n  'NUM': {\n    'title': 'Numbers',\n    'usfm': '04-NUM',\n    'testament': 'old',\n    'verseCount': 1288,\n    'verseList': [54, 34, 51, 49, 31, 27, 89, 26, 23, 36, 35, 16, 33, 45, 41, 50, 13, 32, 22, 29, 35, 41, 30, 25, 18, 65, 23, 31, 40, 16, 54, 42, 56, 29, 34, 13]\n  },\n  'DEU': {\n    'title': 'Deuteronomy',\n    'usfm': '05-DEU',\n    'testament': 'old',\n    'verseCount': 959,\n    'verseList': [46, 37, 29, 49, 33, 25, 26, 20, 29, 22, 32, 32, 18, 29, 23, 22, 20, 22, 21, 20, 23, 30, 25, 22, 19, 19, 26, 68, 29, 20, 30, 52, 29, 12]\n  },\n  'JOS': {\n    'title': 'Joshua',\n    'usfm': '06-JOS',\n    'testament': 'old',\n    'verseCount': 658,\n    'verseList': [18, 24, 17, 24, 15, 27, 26, 35, 27, 43, 23, 24, 33, 15, 63, 10, 18, 28, 51, 9, 45, 34, 16, 33]\n  },\n  'JDG': {\n    'title': 'Judges',\n    'usfm': '07-JDG',\n    'testament': 'old',\n    'verseCount': 618,\n    'verseList': [36, 23, 31, 24, 31, 40, 25, 35, 57, 18, 40, 15, 25, 20, 20, 31, 13, 31, 30, 48, 25]\n  },\n  'RUT': {\n    'title': 'Ruth',\n    'usfm': '08-RUT',\n    'testament': 'old',\n    'verseCount': 85,\n    'verseList': [22, 23, 18, 22]\n  },\n  '1SA': {\n    'title': '1 Samuel',\n    'usfm': '09-1SA',\n    'testament': 'old',\n    'verseCount': 810,\n    'verseList': [28, 36, 21, 22, 12, 21, 17, 22, 27, 27, 15, 25, 23, 52, 35, 23, 58, 30, 24, 42, 15, 23, 29, 22, 44, 25, 12, 25, 11, 31, 13]\n  },\n  '2SA': {\n    'title': '2 Samuel',\n    'usfm': '10-2SA',\n    'testament': 'old',\n    'verseCount': 695,\n    'verseList': [27, 32, 39, 12, 25, 23, 29, 18, 13, 19, 27, 31, 39, 33, 37, 23, 29, 33, 43, 26, 22, 51, 39, 25]\n  },\n  '1KI': {\n    'title': '1 Kings',\n    'usfm': '11-1KI',\n    'testament': 'old',\n    'verseCount': 816,\n    'verseList': [53, 46, 28, 34, 18, 38, 51, 66, 28, 29, 43, 33, 34, 31, 34, 34, 24, 46, 21, 43, 29, 53]\n  },\n  '2KI': {\n    'title': '2 Kings',\n    'usfm': '12-2KI',\n    'testament': 'old',\n    'verseCount': 719,\n    'verseList': [18, 25, 27, 44, 27, 33, 20, 29, 37, 36, 21, 21, 25, 29, 38, 20, 41, 37, 37, 21, 26, 20, 37, 20, 30]\n  },\n  '1CH': {\n    'title': '1 Chronicles',\n    'usfm': '13-1CH',\n    'testament': 'old',\n    'verseCount': 942,\n    'verseList': [54, 55, 24, 43, 26, 81, 40, 40, 44, 14, 47, 40, 14, 17, 29, 43, 27, 17, 19, 8, 30, 19, 32, 31, 31, 32, 34, 21, 30]\n  },\n  '2CH': {\n    'title': '2 Chronicles',\n    'usfm': '14-2CH',\n    'testament': 'old',\n    'verseCount': 822,\n    'verseList': [17, 18, 17, 22, 14, 42, 22, 18, 31, 19, 23, 16, 22, 15, 19, 14, 19, 34, 11, 37, 20, 12, 21, 27, 28, 23, 9, 27, 36, 27, 21, 33, 25, 33, 27, 23]\n  },\n  'EZR': {\n    'title': 'Ezra',\n    'usfm': '15-EZR',\n    'testament': 'old',\n    'verseCount': 280,\n    'verseList': [11, 70, 13, 24, 17, 22, 28, 36, 15, 44]\n  },\n  'NEH': {\n    'title': 'Nehemiah',\n    'usfm': '16-NEH',\n    'testament': 'old',\n    'verseCount': 406,\n    'verseList': [11, 20, 32, 23, 19, 19, 73, 18, 38, 39, 36, 47, 31]\n  },\n  'EST': {\n    'title': 'Esther',\n    'usfm': '17-EST',\n    'testament': 'old',\n    'verseCount': 167,\n    'verseList': [22, 23, 15, 17, 14, 14, 10, 17, 32, 3]\n  },\n  'JOB': {\n    'title': 'Job',\n    'usfm': '18-JOB',\n    'testament': 'old',\n    'verseCount': 1070,\n    'verseList': [22, 13, 26, 21, 27, 30, 21, 22, 35, 22, 20, 25, 28, 22, 35, 22, 16, 21, 29, 29, 34, 30, 17, 25, 6, 14, 23, 28, 25, 31, 40, 22, 33, 37, 16, 33, 24, 41, 30, 24, 34, 17]\n  },\n  'PSA': {\n    'title': 'Psalms',\n    'usfm': '19-PSA',\n    'testament': 'old',\n    'verseCount': 2461,\n    'verseList': [6, 12, 8, 8, 12, 10, 17, 9, 20, 18, 7, 8, 6, 7, 5, 11, 15, 50, 14, 9, 13, 31, 6, 10, 22, 12, 14, 9, 11, 12, 24, 11, 22, 22, 28, 12, 40, 22, 13, 17, 13, 11, 5, 26, 17, 11, 9, 14, 20, 23, 19, 9, 6, 7, 23, 13, 11, 11, 17, 12, 8, 12, 11, 10, 13, 20, 7, 35, 36, 5, 24, 20, 28, 23, 10, 12, 20, 72, 13, 19, 16, 8, 18, 12, 13, 17, 7, 18, 52, 17, 16, 15, 5, 23, 11, 13, 12, 9, 9, 5, 8, 28, 22, 35, 45, 48, 43, 13, 31, 7, 10, 10, 9, 8, 18, 19, 2, 29, 176, 7, 8, 9, 4, 8, 5, 6, 5, 6, 8, 8, 3, 18, 3, 3, 21, 26, 9, 8, 24, 13, 10, 7, 12, 15, 21, 10, 20, 14, 9, 6]\n  },\n  'PRO': {\n    'title': 'Proverbs',\n    'usfm': '20-PRO',\n    'testament': 'old',\n    'verseCount': 915,\n    'verseList': [33, 22, 35, 27, 23, 35, 27, 36, 18, 32, 31, 28, 25, 35, 33, 33, 28, 24, 29, 30, 31, 29, 35, 34, 28, 28, 27, 28, 27, 33, 31]\n  },\n  'ECC': {\n    'title': 'Ecclesiastes',\n    'usfm': '21-ECC',\n    'testament': 'old',\n    'verseCount': 222,\n    'verseList': [18, 26, 22, 16, 20, 12, 29, 17, 18, 20, 10, 14]\n  },\n  'SNG': {\n    'title': 'Song of Songs',\n    'usfm': '22-SNG',\n    'testament': 'old',\n    'verseCount': 117,\n    'verseList': [17, 17, 11, 16, 16, 13, 13, 14]\n  },\n  'ISA': {\n    'title': 'Isaiah',\n    'usfm': '23-ISA',\n    'testament': 'old',\n    'verseCount': 1292,\n    'verseList': [31, 22, 26, 6, 30, 13, 25, 22, 21, 34, 16, 6, 22, 32, 9, 14, 14, 7, 25, 6, 17, 25, 18, 23, 12, 21, 13, 29, 24, 33, 9, 20, 24, 17, 10, 22, 38, 22, 8, 31, 29, 25, 28, 28, 25, 13, 15, 22, 26, 11, 23, 15, 12, 17, 13, 12, 21, 14, 21, 22, 11, 12, 19, 12, 25, 24]\n  },\n  'JER': {\n    'title': 'Jeremiah',\n    'usfm': '24-JER',\n    'testament': 'old',\n    'verseCount': 1364,\n    'verseList': [19, 37, 25, 31, 31, 30, 34, 22, 26, 25, 23, 17, 27, 22, 21, 21, 27, 23, 15, 18, 14, 30, 40, 10, 38, 24, 22, 17, 32, 24, 40, 44, 26, 22, 19, 32, 21, 28, 18, 16, 18, 22, 13, 30, 5, 28, 7, 47, 39, 46, 64, 34]\n  },\n  'LAM': {\n    'title': 'Lamentations',\n    'usfm': '25-LAM',\n    'testament': 'old',\n    'verseCount': 154,\n    'verseList': [22, 22, 66, 22, 22]\n  },\n  'EZK': {\n    'title': 'Ezekiel',\n    'usfm': '26-EZK',\n    'testament': 'old',\n    'verseCount': 1273,\n    'verseList': [28, 10, 27, 17, 17, 14, 27, 18, 11, 22, 25, 28, 23, 23, 8, 63, 24, 32, 14, 49, 32, 31, 49, 27, 17, 21, 36, 26, 21, 26, 18, 32, 33, 31, 15, 38, 28, 23, 29, 49, 26, 20, 27, 31, 25, 24, 23, 35]\n  },\n  'DAN': {\n    'title': 'Daniel',\n    'usfm': '27-DAN',\n    'testament': 'old',\n    'verseCount': 357,\n    'verseList': [21, 49, 30, 37, 31, 28, 28, 27, 27, 21, 45, 13]\n  },\n  'HOS': {\n    'title': 'Hosea',\n    'usfm': '28-HOS',\n    'testament': 'old',\n    'verseCount': 197,\n    'verseList': [11, 23, 5, 19, 15, 11, 16, 14, 17, 15, 12, 14, 16, 9]\n  },\n  'JOL': {\n    'title': 'Joel',\n    'usfm': '29-JOL',\n    'testament': 'old',\n    'verseCount': 73,\n    'verseList': [20, 32, 21]\n  },\n  'AMO': {\n    'title': 'Amos',\n    'usfm': '30-AMO',\n    'testament': 'old',\n    'verseCount': 146,\n    'verseList': [15, 16, 15, 13, 27, 14, 17, 14, 15]\n  },\n  'OBA': {\n    'title': 'Obadiah',\n    'usfm': '31-OBA',\n    'testament': 'old',\n    'verseCount': 21,\n    'verseList': [21]\n  },\n  'JON': {\n    'title': 'Jonah',\n    'usfm': '32-JON',\n    'testament': 'old',\n    'verseCount': 48,\n    'verseList': [17, 10, 10, 11]\n  },\n  'MIC': {\n    'title': 'Micah',\n    'usfm': '33-MIC',\n    'testament': 'old',\n    'verseCount': 105,\n    'verseList': [16, 13, 12, 13, 15, 16, 20]\n  },\n  'NAM': {\n    'title': 'Nahum',\n    'usfm': '34-NAM',\n    'testament': 'old',\n    'verseCount': 47,\n    'verseList': [15, 13, 19]\n  },\n  'HAB': {\n    'title': 'Habakkuk',\n    'usfm': '35-HAB',\n    'testament': 'old',\n    'verseCount': 56,\n    'verseList': [17, 20, 19]\n  },\n  'ZEP': {\n    'title': 'Zephaniah',\n    'usfm': '36-ZEP',\n    'testament': 'old',\n    'verseCount': 53,\n    'verseList': [18, 15, 20]\n  },\n  'HAG': {\n    'title': 'Haggai',\n    'usfm': '37-HAG',\n    'testament': 'old',\n    'verseCount': 38,\n    'verseList': [15, 23]\n  },\n  'ZEC': {\n    'title': 'Zechariah',\n    'usfm': '38-ZEC',\n    'testament': 'old',\n    'verseCount': 211,\n    'verseList': [21, 13, 10, 14, 11, 15, 14, 23, 17, 12, 17, 14, 9, 21]\n  },\n  'MAL': {\n    'title': 'Malachi',\n    'usfm': '39-MAL',\n    'testament': 'old',\n    'verseCount': 55,\n    'verseList': [14, 17, 18, 6]\n  },\n  'MAT': {\n    'title': 'Matthew',\n    'usfm': '41-MAT',\n    'testament': 'new',\n    'verseCount': 1071,\n    'verseList': [25, 23, 17, 25, 48, 34, 29, 34, 38, 42, 30, 50, 58, 36, 39, 28, 27, 35, 30, 34, 46, 46, 39, 51, 46, 75, 66, 20]\n  },\n  'MRK': {\n    'title': 'Mark',\n    'usfm': '42-MRK',\n    'testament': 'new',\n    'verseCount': 678,\n    'verseList': [45, 28, 35, 41, 43, 56, 37, 38, 50, 52, 33, 44, 37, 72, 47, 20]\n  },\n  'LUK': {\n    'title': 'Luke',\n    'usfm': '43-LUK',\n    'testament': 'new',\n    'verseCount': 1151,\n    'verseList': [80, 52, 38, 44, 39, 49, 50, 56, 62, 42, 54, 59, 35, 35, 32, 31, 37, 43, 48, 47, 38, 71, 56, 53]\n  },\n  'JHN': {\n    'title': 'John',\n    'usfm': '44-JHN',\n    'testament': 'new',\n    'verseCount': 879,\n    'verseList': [51, 25, 36, 54, 47, 71, 53, 59, 41, 42, 57, 50, 38, 31, 27, 33, 26, 40, 42, 31, 25]\n  },\n  'ACT': {\n    'title': 'Acts',\n    'usfm': '45-ACT',\n    'testament': 'new',\n    'verseCount': 1007,\n    'verseList': [26, 47, 26, 37, 42, 15, 60, 40, 43, 48, 30, 25, 52, 28, 41, 40, 34, 28, 41, 38, 40, 30, 35, 27, 27, 32, 44, 31]\n  },\n  'ROM': {\n    'title': 'Romans',\n    'usfm': '46-ROM',\n    'testament': 'new',\n    'verseCount': 433,\n    'verseList': [32, 29, 31, 25, 21, 23, 25, 39, 33, 21, 36, 21, 14, 23, 33, 27]\n  },\n  '1CO': {\n    'title': '1 Corinthians',\n    'usfm': '47-1CO',\n    'testament': 'new',\n    'verseCount': 437,\n    'verseList': [31, 16, 23, 21, 13, 20, 40, 13, 27, 33, 34, 31, 13, 40, 58, 24]\n  },\n  '2CO': {\n    'title': '2 Corinthians',\n    'usfm': '48-2CO',\n    'testament': 'new',\n    'verseCount': 257,\n    'verseList': [24, 17, 18, 18, 21, 18, 16, 24, 15, 18, 33, 21, 14]\n  },\n  'GAL': {\n    'title': 'Galatians',\n    'usfm': '49-GAL',\n    'testament': 'new',\n    'verseCount': 149,\n    'verseList': [24, 21, 29, 31, 26, 18]\n  },\n  'EPH': {\n    'title': 'Ephesians',\n    'usfm': '50-EPH',\n    'testament': 'new',\n    'verseCount': 155,\n    'verseList': [23, 22, 21, 32, 33, 24]\n  },\n  'PHP': {\n    'title': 'Philippians',\n    'usfm': '51-PHP',\n    'testament': 'new',\n    'verseCount': 104,\n    'verseList': [30, 30, 21, 23]\n  },\n  'COL': {\n    'title': 'Colossians',\n    'usfm': '52-COL',\n    'testament': 'new',\n    'verseCount': 95,\n    'verseList': [29, 23, 25, 18]\n  },\n  '1TH': {\n    'title': '1 Thessalonians',\n    'usfm': '53-1TH',\n    'testament': 'new',\n    'verseCount': 89,\n    'verseList': [10, 20, 13, 18, 28]\n  },\n  '2TH': {\n    'title': '2 Thessalonians',\n    'usfm': '54-2TH',\n    'testament': 'new',\n    'verseCount': 47,\n    'verseList': [12, 17, 18]\n  },\n  '1TI': {\n    'title': '1 Timothy',\n    'usfm': '55-1TI',\n    'testament': 'new',\n    'verseCount': 113,\n    'verseList': [20, 15, 16, 16, 25, 21]\n  },\n  '2TI': {\n    'title': '2 Timothy',\n    'usfm': '56-2TI',\n    'testament': 'new',\n    'verseCount': 83,\n    'verseList': [18, 26, 17, 22]\n  },\n  'TIT': {\n    'title': 'Titus',\n    'usfm': '57-TIT',\n    'testament': 'new',\n    'verseCount': 46,\n    'verseList': [16, 15, 15]\n  },\n  'PHM': {\n    'title': 'Philemon',\n    'usfm': '58-PHM',\n    'testament': 'new',\n    'verseCount': 25,\n    'verseList': [25]\n  },\n  'HEB': {\n    'title': 'Hebrews',\n    'usfm': '59-HEB',\n    'testament': 'new',\n    'verseCount': 303,\n    'verseList': [14, 18, 19, 16, 14, 20, 28, 13, 28, 39, 40, 29, 25]\n  },\n  'JAS': {\n    'title': 'James',\n    'usfm': '60-JAS',\n    'testament': 'new',\n    'verseCount': 108,\n    'verseList': [27, 26, 18, 17, 20]\n  },\n  '1PE': {\n    'title': '1 Peter',\n    'usfm': '61-1PE',\n    'testament': 'new',\n    'verseCount': 105,\n    'verseList': [25, 25, 22, 19, 14]\n  },\n  '2PE': {\n    'title': '2 Peter',\n    'usfm': '62-2PE',\n    'testament': 'new',\n    'verseCount': 61,\n    'verseList': [21, 22, 18]\n  },\n  '1JN': {\n    'title': '1 John',\n    'usfm': '63-1JN',\n    'testament': 'new',\n    'verseCount': 105,\n    'verseList': [10, 29, 24, 21, 21]\n  },\n  '2JN': {\n    'title': '2 John',\n    'usfm': '64-2JN',\n    'testament': 'new',\n    'verseCount': 13,\n    'verseList': [13]\n  },\n  '3JN': {\n    'title': '3 John',\n    'usfm': '65-3JN',\n    'testament': 'new',\n    'verseCount': 15,\n    'verseList': [15]\n  },\n  'JUD': {\n    'title': 'Jude',\n    'usfm': '66-JUD',\n    'testament': 'new',\n    'verseCount': 25,\n    'verseList': [25]\n  },\n  'REV': {\n    'title': 'Revelation',\n    'usfm': '67-REV',\n    'testament': 'new',\n    'verseCount': 404,\n    'verseList': [20, 29, 22, 11, 14, 17, 17, 13, 21, 11, 19, 17, 18, 20, 8, 21, 18, 24, 21, 15, 27, 21]\n  }\n};\nvar oftenMissingBCVList = [// See https://en.wikipedia.org/wiki/List_of_New_Testament_verses_not_included_in_modern_English_translations\n['NEH', 7, 68], // ?\n['MAT', 16, 3], ['MAT', 17, 21], ['MAT', 18, 11], // ['MAT', 20, 16b],\n['MAT', 23, 14], // ['MRK', 6, 11b],\n['MRK', 7, 16], ['MRK', 9, 44], ['MRK', 9, 46], ['MRK', 11, 26], ['MRK', 15, 28], ['MRK', 16, 9], ['MRK', 16, 10], ['MRK', 16, 11], ['MRK', 16, 12], ['MRK', 16, 13], ['MRK', 16, 14], ['MRK', 16, 15], ['MRK', 16, 16], ['MRK', 16, 17], ['MRK', 16, 18], ['MRK', 16, 19], ['MRK', 16, 20], // ['LUK', 4, 8b],\n// ['LUK', 9, 55], ['LUK', 9, 56],\n['LUK', 17, 36], ['LUK', 22, 43], // ?\n['LUK', 22, 44], // ?\n['LUK', 23, 17], ['JHN', 5, 3], ['JHN', 5, 4], ['JHN', 7, 53], // ?\n['JHN', 8, 1], // ?\n['ACT', 8, 37], // ['ACT', 9, 5], ['ACT', 9, 6],\n// ['ACT', 13, 42],\n['ACT', 15, 34], // ['ACT', 23, 9b],\n['ACT', 24, 6], ['ACT', 24, 7], ['ACT', 24, 8], ['ACT', 28, 29], ['ROM', 16, 24], ['2CO', 13, 14], // ?\n['1JN', 5, 7], ['1JN', 5, 8]];\nvar extraBookList = ['FRT', 'BAK'];\nvar isValidBookID = function isValidBookID(bookId) {\n  return bookId.toUpperCase() in BibleBookData || extraBookList.includes(bookId);\n};\nvar isOptionalValidBookID = function isOptionalValidBookID(bookId) {\n  return !bookId || bookId.toUpperCase() in BibleBookData || extraBookList.includes(bookId);\n};\nvar isExtraBookID = function isExtraBookID(bookId) {\n  return extraBookList.includes(bookId);\n};\nvar usfmNumberName = function usfmNumberName(bookId) {\n  try {\n    return BibleBookData[bookId.toUpperCase()].usfm;\n  } catch (err) {\n    throw new Error(\"usfmNumberName() given invalid bookId: '\".concat(bookId, \"'\"));\n  }\n};\nvar expectedVersesPerChapterList = function expectedVersesPerChapterList(bookId) {\n  // parameterAssert(bookId.toUpperCase() !== 'OBS', `expectedVersesPerChapterList shouldn’t be passed '${bookId}'`);\n  var verseList;\n\n  try {\n    verseList = BibleBookData[bookId.toUpperCase()].verseList;\n  } catch (err) {\n    throw new Error(\"expectedVersesPerChapterList() given invalid bookId: '\".concat(bookId, \"'\"));\n  }\n\n  if (verseList === undefined) {\n    throw new Error(\"expectedVersesPerChapterList(): Invalid bookId: '\".concat(bookId, \"'\"));\n  }\n\n  return verseList;\n};\nvar chaptersInBook = function chaptersInBook(bookId) {\n  return expectedVersesPerChapterList(bookId).length;\n};\nvar isOneChapterBook = function isOneChapterBook(bookId) {\n  return chaptersInBook(bookId) === 1;\n};\nvar versesInChapter = function versesInChapter(bookId, chapter) {\n  // parameterAssert(bookId.toUpperCase() !== 'OBS', `versesInChapter shouldn’t be passed '${bookId}'`);\n  var verses = expectedVersesPerChapterList(bookId)[chapter - 1];\n\n  if (verses === undefined) {\n    throw new Error(\"versesInChapter(\".concat(bookId, \") given invalid chapter: \").concat(chapter));\n  }\n\n  return verses;\n};\nvar testament = function testament(bookId) {\n  try {\n    return BibleBookData[bookId.toUpperCase()].testament;\n  } catch (err) {\n    throw new Error(\"testament() given invalid Bible bookId: '\".concat(bookId, \"'\"));\n  }\n};\nfunction getEnglishBookName(bookId) {\n  try {\n    return BibleBookData[bookId.toUpperCase()].title;\n  } catch (err) {\n    throw new Error(\"getEnglishBookName() given invalid Bible bookId: '\".concat(bookId, \"'\"));\n  }\n}\nfunction isGoodEnglishBookName(givenBookName) {\n  // debugLog(`isGoodEnglishBookName(${givenBookName})…`);\n  var partialMatches = [];\n  var givenBookNameLower = givenBookName.toUpperCase();\n\n  for (var bk in BibleBookData) {\n    var thisBookName = BibleBookData[bk].title; // debugLog(\"thisBookName\", thisBookName);\n\n    if (thisBookName === givenBookName) return true;\n    var thisBookNameLower = thisBookName.toUpperCase();\n    if (thisBookNameLower === givenBookNameLower) return 1;\n    if (thisBookNameLower.startsWith(givenBookNameLower)) partialMatches.push(thisBookName);\n  }\n\n  if (partialMatches.length === 1) return 2; // We got an unambiguous partial match, e.g., Gen for Genesis\n\n  return false;\n}\nfunction isOftenMissing(bookID, C, V) {\n  function matchBCV(entry) {\n    return entry[0] === bookID && entry[1] === C && entry[2] === V;\n  }\n\n  return oftenMissingBCVList.find(matchBCV) !== undefined;\n}\n\n//# sourceURL=webpack:///./src/core/books/books.js?");

/***/ }),

/***/ "./src/core/books/index.js":
/*!*********************************!*\
  !*** ./src/core/books/index.js ***!
  \*********************************/
/*! exports provided: BibleBookData, isValidBookID, isOptionalValidBookID, isExtraBookID, usfmNumberName, expectedVersesPerChapterList, chaptersInBook, isOneChapterBook, versesInChapter, testament, getEnglishBookName, isGoodEnglishBookName, isOftenMissing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _books__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./books */ \"./src/core/books/books.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BibleBookData\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"BibleBookData\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isValidBookID\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"isValidBookID\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isOptionalValidBookID\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"isOptionalValidBookID\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isExtraBookID\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"isExtraBookID\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"usfmNumberName\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"usfmNumberName\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"expectedVersesPerChapterList\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"expectedVersesPerChapterList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"chaptersInBook\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"chaptersInBook\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isOneChapterBook\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"isOneChapterBook\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"versesInChapter\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"versesInChapter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"testament\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"testament\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getEnglishBookName\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"getEnglishBookName\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isGoodEnglishBookName\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"isGoodEnglishBookName\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isOftenMissing\", function() { return _books__WEBPACK_IMPORTED_MODULE_0__[\"isOftenMissing\"]; });\n\n\n\n//# sourceURL=webpack:///./src/core/books/index.js?");

/***/ }),

/***/ "./src/core/defaults.js":
/*!******************************!*\
  !*** ./src/core/defaults.js ***!
  \******************************/
/*! exports provided: DEFAULT_EXCERPT_LENGTH, REPO_CODES_LIST, CATALOG_NEXT_ONLY_REPO_CODES_LIST, NUM_OBS_STORIES, MAX_OBS_FRAMES, OBS_FRAME_COUNT_LIST */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_EXCERPT_LENGTH\", function() { return DEFAULT_EXCERPT_LENGTH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"REPO_CODES_LIST\", function() { return REPO_CODES_LIST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CATALOG_NEXT_ONLY_REPO_CODES_LIST\", function() { return CATALOG_NEXT_ONLY_REPO_CODES_LIST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_OBS_STORIES\", function() { return NUM_OBS_STORIES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAX_OBS_FRAMES\", function() { return MAX_OBS_FRAMES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OBS_FRAME_COUNT_LIST\", function() { return OBS_FRAME_COUNT_LIST; });\nvar DEFAULT_EXCERPT_LENGTH = 20;\nvar REPO_CODES_LIST = ['UHB', 'UGNT', 'LT', 'ST', 'TA', 'TW', 'TWL', // The ones with 2 suffix are the 2021 new TSV format repos\n// The ones with 1 suffix are the old markdown repos (e.g., in Door43-Catalog)\n'TN', 'TN2', 'TQ', 'TQ1', 'SN', 'SQ', 'UGL', 'UHAL', 'OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TN1', 'OBS-TQ', 'OBS-TQ1', 'OBS-SN', 'OBS-SN1', 'OBS-SQ', 'OBS-SQ1'];\nvar CATALOG_NEXT_ONLY_REPO_CODES_LIST = ['TWL', 'TN2', 'TQ', 'SN', 'SQ', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];\nvar NUM_OBS_STORIES = 50;\nvar MAX_OBS_FRAMES = 18; // Stories 16, 19, and 49 each have 18 frames\n\nvar OBS_FRAME_COUNT_LIST = [// Starts with count for story #1\n16, 12, 16, 9, 10, 7, 10, 15, 15, 12, 8, 14, 15, 15, 13, 18, 14, 13, 18, 13, 15, 7, 10, 9, 8, 10, 11, 10, 9, 9, 8, 16, 9, 10, 13, 7, 11, 15, 12, 9, 8, 11, 13, 9, 13, 10, 14, 14, 18, 17];\n\n//# sourceURL=webpack:///./src/core/defaults.js?");

/***/ }),

/***/ "./src/core/disabled-notices.js":
/*!**************************************!*\
  !*** ./src/core/disabled-notices.js ***!
  \**************************************/
/*! exports provided: isDisabledNotice, removeDisabledNotices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDisabledNotice\", function() { return isDisabledNotice; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeDisabledNotices\", function() { return removeDisabledNotices; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n// eslint-disable-next-line no-unused-vars\n\n/* This file handles the suppression of notices where we don’t want to disable or remove the actual check,\n    but we just want to disable it for certain resources to handle special cases.\n    In some cases, it’s to handle software deficiencies.\n\n  Some examples:\n    An article about punctuation discusses the use of \"(\" (which would normally cause a warning)\n    An article about how to encode markdown discusses \"#\" (which would normally cause a warning)\n\n    NOTE: This is only recommended for resources which are relatively stable,\n          e.g., completed book packages\n        as it can rely on details like filename and maybe line number.\n*/\n// const DISABLED_NOTICES_VERSION_STRING = '0.3.9';\n\nvar disabledNotices = [// Just enter enough details to disable the required message(s) and no unwanted ones\n//  i.e., you can be as specific as you need about username and/or lineNumber, etc.\n{\n  repoCode: 'TN',\n  priority: 450\n}, // TN \"Resource container link should have '*' language code with (not 'en')\" disabled as tC can’t handle it yet!\n{\n  repoCode: 'OBS-TN',\n  priority: 450\n}, // OBS-TN \"Resource container link should have '*' language code with (not 'en')\" disabled as tS can’t handle it yet!\n{\n  repoCode: 'TW',\n  priority: 450\n}, // TW \"Resource container link should have '*' language code with (not 'en')\" disabled as tC can’t handle it yet!\n{\n  extra: 'TW',\n  priority: 450\n}, // TW \"Resource container link should have '*' language code with (not 'en')\" disabled as tC can’t handle it yet!\n{\n  repoCode: 'ST',\n  message: \"Bad punctuation nesting: } closing character doesn’t match\",\n  bookID: 'NEH'\n}, // 777 - complex { } nesting in direct speech\n{\n  repoCode: 'ST',\n  message: \"Bad punctuation nesting: ” closing character doesn’t match\",\n  bookID: 'NEH'\n}, // 777 - complex { } nesting in direct speech\n{\n  repoCode: 'LT',\n  priority: 638,\n  fieldName: '\\\\p'\n}, // \"Only found whitespace\" tC3 outputs trailing spaces here\n{\n  repoCode: 'ST',\n  priority: 638,\n  fieldName: '\\\\p'\n}, // \"Only found whitespace\" tC3 outputs trailing spaces here\n{\n  repoCode: 'LT',\n  priority: 124,\n  excerpt: '\\\\p␣␣'\n}, // \"Unexpected double spaces\" tC3 outputs trailing spaces here\n{\n  repoCode: 'ST',\n  priority: 124,\n  excerpt: '\\\\p␣␣'\n}, // \"Unexpected double spaces\" tC3 outputs trailing spaces here\n{\n  repoCode: 'LT',\n  message: \"Unexpected space after | character\"\n}, // 192 tC3 outputs an unneeded/unwanted space in \\zaln-s\n{\n  repoCode: 'ST',\n  message: \"Unexpected space after | character\"\n}, // 192 tC3 outputs an unneeded/unwanted space in \\zaln-s\n{\n  repoCode: 'LT',\n  priority: 95\n}, // \"Unexpected trailing space(s)\" tC3 outputs trailing spaces all over the place\n{\n  repoCode: 'ST',\n  priority: 95\n}, // \"Unexpected trailing space(s)\" tC3 outputs trailing spaces all over the place\n{\n  repoCode: 'TA',\n  priority: 104\n}, // \"Unexpected trailing line break\" UTA uses trailing <BR> for (1) (2) (3) style numbered lists\n{\n  repoCode: 'TA',\n  message: \"Unexpected – character after space\"\n}, // 191 -- temp en-dashes\n{\n  repoCode: 'TA',\n  message: \"Unexpected space after – character\"\n}, // 192 -- temp en-dashes\n{\n  repoCode: 'TA',\n  priority: 172\n}, // \"Header levels should only increment by one\" not required for TA\n{\n  repoCode: 'TA',\n  filename: 'translate/translate-alphabet/01.md',\n  message: \"At end of text with unclosed ‘ opening character\"\n}, // 768\n{\n  repoCode: 'TA',\n  filename: 'translate/translate-alphabet/01.md',\n  message: \"Mismatched ‘’ characters\"\n}, // 462\n{\n  repoCode: 'TA',\n  filename: 'translate/translate-textvariants/01.md',\n  message: \"Unexpected space after [ character\"\n}, // 192\n{\n  repoCode: 'TA',\n  filename: 'translate/translate-formatsignals/01.md',\n  message: \"Unexpected space after ( character\"\n}, // 192\n{\n  repoCode: 'TN',\n  excerpt: ' brackets [ ] to ind',\n  message: \"Unexpected space after [ character\"\n}, // 192\n// This file explains how to use markdown headings\n{\n  repoCode: 'TA',\n  filename: 'translate/file-formats/01.md',\n  message: \"Unexpected # character at start of line\"\n}, // 195\n// This file has a space-separated list of typical quotation symbols\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected space after “ character\",\n  lineNumber: 3\n}, // 192\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected space after “ character\",\n  lineNumber: 16\n}, // 192\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected space after ‘ character\",\n  lineNumber: 16\n}, // 192\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected space after « character\"\n}, // 192\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected space after ‹ character\"\n}, // 192\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected space after — character\"\n}, // 192\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected . character after space\",\n  lineNumber: 16\n}, // 191\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected ” character after space\"\n}, // 191\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected ’ character after space\"\n}, // 191\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected » character after space\"\n}, // 191\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected › character after space\"\n}, // 191\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-quotemarks/01.md',\n  message: \"Unexpected — character after space\"\n}, // 191\n{\n  repoCode: 'TA',\n  filename: 'translate/figs-metaphor/01.md',\n  message: \"Possible misplaced ( character\"\n} // 17\n];\n/**\n *\n * @param {Object} givenNotice\n * @returns true if the givenNotice has a match in the disabledNotices list above\n */\n\nfunction isDisabledNotice(givenNotice) {\n  // NOTE: The function will fail if repoCode is not set in the notices passed to this function\n  // NOTE: 'extra' is still valid at this point (not yet prepended to 'message')\n  // functionLog(`isDisabledNotice(${JSON.stringify(givenNotice)})…`);\n  // if (givenNotice.repoCode === undefined) debugLog(`isDisabledNotice() cannot work without repoCode for ${JSON.stringify(givenNotice)}`);\n  var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(disabledNotices),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var disabledNotice = _step.value;\n      var matchedAllSpecifiedFields = true;\n\n      for (var propertyName in disabledNotice) {\n        // if ((propertyName !== 'repoCode' || givenNotice.repoCode !== undefined) // Some individual checks don’t set repoCode\n        // && (givenNotice[propertyName] !== disabledNotice[propertyName])) {\n        if (givenNotice[propertyName] !== disabledNotice[propertyName]) {\n          matchedAllSpecifiedFields = false;\n          break;\n        }\n      }\n\n      if (matchedAllSpecifiedFields) {\n        // debugLog(`  isDisabledNotice() returning true for ${JSON.stringify(disabledNotice)}`);\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return false;\n}\n/**\n *\n * @param {Array} givenNoticeList\n * @returns a new list of notices with disabled ones removed\n */\n\nfunction removeDisabledNotices(givenNoticeList) {\n  // NOTE: The function will fail if repoCode is not set in the notices passed to this function\n  var remainingNoticeList = [];\n  var givenRepoCodeNotice = false;\n\n  var _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(givenNoticeList),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var thisNotice = _step2.value;\n\n      if (thisNotice.repoCode === undefined && !givenRepoCodeNotice) {\n        Object(_utilities__WEBPACK_IMPORTED_MODULE_1__[\"debugLog\"])(\"removeDisabledNotices() cannot work without repoCode for \".concat(JSON.stringify(thisNotice), \" in list of \").concat(givenNoticeList.length, \" notices.\"));\n        givenRepoCodeNotice = true;\n      }\n\n      if (!isDisabledNotice(thisNotice)) remainingNoticeList.push(thisNotice); // else userLog(`  Removing disabled ${JSON.stringify(thisNotice)}`);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  if (givenNoticeList.length > 2 // This stops the msg from being displayed for lots of tests\n  && remainingNoticeList.length !== givenNoticeList.length) Object(_utilities__WEBPACK_IMPORTED_MODULE_1__[\"userLog\"])(\"removeDisabledNotices() returning \".concat(remainingNoticeList.length, \" out of \").concat(givenNoticeList.length, \" notices\"));\n  return remainingNoticeList;\n}\n\n//# sourceURL=webpack:///./src/core/disabled-notices.js?");

/***/ }),

/***/ "./src/core/field-link-check.js":
/*!**************************************!*\
  !*** ./src/core/field-link-check.js ***!
  \**************************************/
/*! exports provided: startLiveLinksCheck, checkFieldLinks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startLiveLinksCheck\", function() { return startLiveLinksCheck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkFieldLinks\", function() { return checkFieldLinks; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _field_text_check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\");\n/* harmony import */ var _getApi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getApi */ \"./src/core/getApi.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n// eslint-disable-next-line no-unused-vars\n\n\n // eslint-disable-next-line no-unused-vars\n\n\nvar LINK_VALIDATOR_VERSION_STRING = '0.4.1';\nfunction startLiveLinksCheck(_x, _x2, _x3) {\n  return _startLiveLinksCheck.apply(this, arguments);\n}\n/**\n *\n * @param {string} username\n * @param {string} languageCode\n * @param {string} repoCode\n * @param {string} fieldName\n * @param {string} fieldText\n * @param {Object} linkOptions\n * @param {string} optionalFieldLocation\n * @param {Object} checkingOptions\n */\n\nfunction _startLiveLinksCheck() {\n  _startLiveLinksCheck = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(linksList, existingNoticeList, callbackFunction) {\n    var result, addNotice, _iterator2, _step2, linkEntry, uri, responseData, responseText;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            addNotice = function _addNotice(_ref2) {\n              var priority = _ref2.priority,\n                  message = _ref2.message,\n                  characterIndex = _ref2.characterIndex,\n                  excerpt = _ref2.excerpt,\n                  location = _ref2.location;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"sLLC Link Notice: (priority=\".concat(priority, \") \").concat(message).concat(characterIndex > 0 ? \" (at character \".concat(characterIndex, \")\") : \"\").concat(excerpt ? \" \".concat(excerpt) : \"\").concat(location)); //parameterAssert(priority !== undefined, \"sLLC addNotice: 'priority' parameter should be defined\");\n              //parameterAssert(typeof priority === 'number', `sLLC addNotice: 'priority' parameter should be a number not a '${typeof priority}': ${priority}`);\n              //parameterAssert(message !== undefined, \"sLLC addNotice: 'message' parameter should be defined\");\n              //parameterAssert(typeof message === 'string', `sLLC addNotice: 'message' parameter should be a string not a '${typeof message}':${message}`);\n              // parameterAssert(characterIndex!==undefined, \"sLLC addNotice: 'characterIndex' parameter should be defined\");\n\n              if (characterIndex) {//parameterAssert(typeof characterIndex === 'number', `sLLC addNotice: 'characterIndex' parameter should be a number not a '${typeof characterIndex}': ${characterIndex}`);\n              } // parameterAssert(excerpt!==undefined, \"sLLC addNotice: 'excerpt' parameter should be defined\");\n\n\n              if (excerpt) {//parameterAssert(typeof excerpt === 'string', `sLLC addNotice: 'excerpt' parameter should be a string not a '${typeof excerpt}': ${excerpt}`);\n              } // parameterAssert(location!==undefined, \"sLLC addNotice: 'location' parameter should be defined\");\n              // parameterAssert(typeof location==='string', `sLLC addNotice: 'location' parameter should be a string not a '${typeof location}': ${location}`);\n\n\n              result.noticeList.push({\n                priority: priority,\n                message: message,\n                characterIndex: characterIndex,\n                excerpt: excerpt,\n                location: location\n              });\n            };\n\n            // This (IO bound) function checks the targets of the given links\n            //  to ensure that they actually exist\n            // NOTE: no caching yet\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"startLiveLinksCheck v\".concat(LINK_VALIDATOR_VERSION_STRING, \" for \").concat(linksList.length, \" link(s)\\u2026\")); // debugLog(`startLiveLinksCheck was given ${existingNoticeList.length} warnings.`)\n\n            result = {\n              noticeList: existingNoticeList\n            };\n            // Now try fetching each link in turn\n            _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(linksList);\n            _context.prev = 4;\n\n            _iterator2.s();\n\n          case 6:\n            if ((_step2 = _iterator2.n()).done) {\n              _context.next = 25;\n              break;\n            }\n\n            linkEntry = _step2.value;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"startLiveLinksCheck linkEntry=\".concat(JSON.stringify(linkEntry)));\n            uri = linkEntry[1] ? linkEntry[1] : linkEntry[2]; // Why ??? !!!\n\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"startLiveLinksCheck attempting to fetch \".concat(uri, \"\\u2026\"));\n            _context.prev = 11;\n            _context.next = 14;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"cachedGetFileUsingFullURL\"])({\n              uri: uri,\n              params: {}\n            });\n\n          case 14:\n            responseData = _context.sent;\n            responseText = responseData;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"startLiveLinksCheck got response: \".concat(responseText.length));\n            _context.next = 23;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](11);\n            console.error(\"startLiveLinksCheck had an error fetching '\".concat(uri, \"': \").concat(_context.t0));\n            addNotice({\n              priority: 439,\n              message: \"Error fetching link\",\n              location: \" \".concat(uri)\n            });\n\n          case 23:\n            _context.next = 6;\n            break;\n\n          case 25:\n            _context.next = 30;\n            break;\n\n          case 27:\n            _context.prev = 27;\n            _context.t1 = _context[\"catch\"](4);\n\n            _iterator2.e(_context.t1);\n\n          case 30:\n            _context.prev = 30;\n\n            _iterator2.f();\n\n            return _context.finish(30);\n\n          case 33:\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"startLiveLinksCheck calling callback function…\");\n            callbackFunction(result);\n\n          case 35:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 27, 30, 33], [11, 19]]);\n  }));\n  return _startLiveLinksCheck.apply(this, arguments);\n}\n\nfunction checkFieldLinks(username, languageCode, repoCode, fieldName, fieldText, linkOptions, optionalFieldLocation, checkingOptions) {\n  // Does basic checks for fields that are links or that contain links\n  // NOTE: This function is currently only called from field-link-check.md!!!\n  //          TODO: Does it need to be deleted (or finished) ???\n  // We assume that checking for compulsory fields is done elsewhere\n  // Returns an error list and a warning list\n  //  Both lists contain lists of two strings:\n  //      1/ the error string\n  //      2/ the detailed location string\n  //  (Returned in this way for more intelligent processing at a higher level)\n  Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"checkFieldLinks('\".concat(languageCode, \"', '\").concat(repoCode, \"', '\").concat(fieldName, \"', '\").concat(fieldText, \"', \").concat(JSON.stringify(linkOptions), \", '\").concat(optionalFieldLocation, \"', \").concat(JSON.stringify(checkingOptions), \")\\u2026\")); // debugLog( \"linkOptions\", JSON.stringify(linkOptions));\n  // debugLog( \"linkOptionsEC\", linkOptions.expectedCount);\n  //parameterAssert(languageCode !== undefined, \"checkFieldLinks: 'languageCode' parameter should be defined\");\n  //parameterAssert(typeof languageCode === 'string', `checkFieldLinks: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n  //parameterAssert(repoCode !== undefined, \"checkFieldLinks: 'repoCode' parameter should be defined\");\n  //parameterAssert(typeof repoCode === 'string', `checkFieldLinks: 'repoCode' parameter should be a string not a '${typeof repoCode}': ${repoCode}`);\n  //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkFieldLinks: 'repoCode' parameter should not be '${repoCode}'`);\n  //parameterAssert(fieldName !== undefined, \"checkFieldLinks: 'fieldName' parameter should be defined\");\n  //parameterAssert(typeof fieldName === 'string', `checkFieldLinks: 'fieldName' parameter should be a string not a '${typeof fieldName}': ${fieldName}`);\n  //parameterAssert(fieldText !== undefined, \"checkFieldLinks: 'fieldText' parameter should be defined\");\n  //parameterAssert(typeof fieldText === 'string', `checkFieldLinks: 'fieldText' parameter should be a string not a '${typeof fieldText}': ${fieldText}`);\n  //parameterAssert(optionalFieldLocation !== undefined, \"checkFieldLinks: 'optionalFieldLocation' parameter should be defined\");\n  //parameterAssert(typeof optionalFieldLocation === 'string', `checkFieldLinks: 'optionalFieldLocation' parameter should be a string not a '${typeof optionalFieldLocation}': ${optionalFieldLocation}`);\n  //parameterAssert(optionalFieldLocation.indexOf('true') === -1, `checkFieldLinks: 'optionalFieldLocation' parameter should not be '${optionalFieldLocation}'`);\n\n  var ourLocation = optionalFieldLocation;\n  if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n  var result = {\n    noticeList: []\n  };\n\n  function addNotice(_ref) {\n    var priority = _ref.priority,\n        message = _ref.message,\n        characterIndex = _ref.characterIndex,\n        excerpt = _ref.excerpt,\n        location = _ref.location;\n    Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"cFLs addNotice: (priority=\".concat(priority, \") \").concat(message).concat(characterIndex > 0 ? \" (at character \".concat(characterIndex, \")\") : \"\").concat(excerpt ? \" \".concat(excerpt) : \"\").concat(location)); //parameterAssert(priority !== undefined, \"cFLs addNotice: 'priority' parameter should be defined\");\n    //parameterAssert(typeof priority === 'number', `cFLs addNotice: 'priority' parameter should be a number not a '${typeof priority}': ${priority}`);\n    //parameterAssert(message !== undefined, \"cFLs addNotice: 'message' parameter should be defined\");\n    //parameterAssert(typeof message === 'string', `cFLs addNotice: 'message' parameter should be a string not a '${typeof message}': ${message}`);\n    // parameterAssert(characterIndex!==undefined, \"cFLs addNotice: 'characterIndex' parameter should be defined\");\n\n    if (characterIndex) {//parameterAssert(typeof characterIndex === 'number', `cFLs addNotice: 'characterIndex' parameter should be a number not a '${typeof characterIndex}': ${characterIndex}`);\n    } // parameterAssert(excerpt!==undefined, \"cFLs addNotice: 'excerpt' parameter should be defined\");\n\n\n    if (excerpt) {//parameterAssert(typeof excerpt === 'string', `cFLs addNotice: 'excerpt' parameter should be a string not a '${typeof excerpt}': ${excerpt}`);\n    } //parameterAssert(location !== undefined, \"cFLs addNotice: 'location' parameter should be defined\");\n    //parameterAssert(typeof location === 'string', `cFLs addNotice: 'location' parameter should be a string not a '${typeof location}': ${location}`);\n\n\n    result.noticeList.push({\n      priority: priority,\n      message: message,\n      characterIndex: characterIndex,\n      excerpt: excerpt,\n      location: location\n    });\n  } // // Create our more detailed location string by prepending the fieldName\n  // let ourAtString = ` in '${fieldName}'`;\n  // if (optionalFieldLocation) {\n  //     if (optionalFieldLocation[0] !== ' ') ourAtString += ' ';\n  //     ourAtString += optionalFieldLocation;\n  // }\n\n\n  if (!fieldText) {\n    // Nothing to check\n    if (linkOptions.expectedCount > 0) addNotice({\n      priority: 438,\n      message: \"Blank field / missing link (expected \".concat(linkOptions.expectedCount, \" link\").concat(linkOptions.expectedCount === 1 ? \"\" : \"s\", \")\"),\n      location: ourLocation\n    });\n    return result;\n  } // Ok, we have something in our field\n\n\n  if (linkOptions.otherTextAllowed) result = Object(_field_text_check__WEBPACK_IMPORTED_MODULE_5__[\"checkTextField\"])(username, languageCode, repoCode, 'link', fieldName, fieldText, true, optionalFieldLocation, checkingOptions); // Parameter nonsense check\n\n  if (linkOptions.allowedCount > 0 && linkOptions.expectedCount > linkOptions.allowedCount) addNotice({\n    priority: 111,\n    message: \"Bad options for checkFieldLinks: expectedCount=\".concat(linkOptions.expectedCount, \" but allowedCount=\").concat(linkOptions.allowedCount)\n  }); // Check for embedded links\n  // First, create our regex from the allowed link types\n\n  var linkRegexParts;\n\n  if (linkOptions.linkTypesAllowed) {\n    linkRegexParts = [];\n\n    var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(linkOptions.linkTypesAllowed),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var linkType = _step.value;\n        // debugLog(\"checkFieldLinks linkType\", linkType);\n        if (linkType === 'RC') linkRegexParts.push('(rc://[^ ]+)');else if (linkType === 'md') {\n          linkRegexParts.push('\\\\[\\\\[(https*://[^ ]+)\\\\]\\\\]'); // [[link]]\n\n          linkRegexParts.push(']\\\\((https*://[^ ]+)\\\\)'); // [this](link)\n        } else if (linkType === 'naked') linkRegexParts.push('(https*://[^ ]+)');else addNotice({\n          priority: 441,\n          message: \"Unknown linkType parameter\",\n          excerpt: linkType\n        });\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    // No link types specified\n    linkRegexParts = [];\n  } // debugLog(\"checkFieldLinks linkRegexParts\", JSON.stringify(linkRegexParts));\n\n\n  var linkRegex = new RegExp(linkRegexParts.join('|'), 'g'); // debugLog(\"linkRegex\", JSON.stringify(linkRegex));\n  // const regexResults = fieldText.matchAll(linkRegex);\n  // debugLog(\"regexResults\", regexResults.length, JSON.stringify(regexResults));\n\n  var regexResultsArray = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(fieldText.matchAll(linkRegex)); // debugLog(\"checkFieldLinks regexResultsArray\", regexResultsArray.length, JSON.stringify(regexResultsArray));\n\n\n  if (regexResultsArray.length < linkOptions.expectedCount) addNotice({\n    priority: 287,\n    message: \"Not enough links (expected \".concat(linkOptions.expectedCount, \" link\").concat(linkOptions.expectedCount === 1 ? \"\" : \"s\", \")\"),\n    location: \" (only found \".concat(regexResultsArray.length, \")\").concat(ourLocation)\n  });\n\n  if (linkOptions.checkTargets && linkOptions.callbackFunction && regexResultsArray) {\n    startLiveLinksCheck(regexResultsArray, result.noticeList.slice(0), linkOptions.callbackFunction);\n    addNotice({\n      priority: 600,\n      message: \"\".concat(regexResultsArray.length, \" link target\").concat(regexResultsArray.length === 1 ? ' is' : 's are', \" still being checked\\u2026\"),\n      location: ourLocation\n    });\n    Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"checkFieldLinks now returning initial result…\");\n  }\n\n  Object(_utilities__WEBPACK_IMPORTED_MODULE_7__[\"userLog\"])(\"  checkFieldLinks v\".concat(LINK_VALIDATOR_VERSION_STRING, \" returning with \").concat(result.noticeList.length, \" notices.\"));\n  return result;\n} // end of checkFieldLinks function\n\n//# sourceURL=webpack:///./src/core/field-link-check.js?");

/***/ }),

/***/ "./src/core/field-text-check.js":
/*!**************************************!*\
  !*** ./src/core/field-text-check.js ***!
  \**************************************/
/*! exports provided: checkTextField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkTextField\", function() { return checkTextField; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _text_handling_functions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./text-handling-functions */ \"./src/core/text-handling-functions.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n// eslint-disable-next-line no-unused-vars\n\n // eslint-disable-next-line no-unused-vars\n\n // const FIELD_TEXT_VALIDATOR_VERSION_STRING = '0.4.2';\n\n/**\n * @description -- Does basic checks for small errors like leading/trailing spaces, etc.\n * @param {string} username\n * @param {string} languageCode -- can be an empty string\n * @param {string} repoCode -- e.g., 'TN' or 'TQ', etc.\n * @param {string} fieldType -- classification, e.g., TSV, USFM, YAML, link, markdown, raw\n * @param {string} fieldName -- used for identification\n * @param {string} fieldText -- the field being checked\n * @param {boolean} allowedLinks -- doesn’t check links -- only checks lack of links\n * @param {string} optionalFieldLocation -- used to inform where this field is located\n * @param {Object} checkingOptions\n */\n\nfunction checkTextField(username, languageCode, repoCode, fieldType, fieldName, fieldText, allowedLinks, optionalFieldLocation, checkingOptions) {\n  // We assume that checking for compulsory fields is done elsewhere\n  // Returns a single notice list\n  //  The list contains objects with the following fields:\n  //      priority (compulsory): the priority number 0..999 (usually 800+ are errors, lower are warnings)\n  //      message (compulsory): the error description string\n  //      characterIndex: the 0-based index for the position in the string\n  //      excerpt: a short excerpt of the string containing the error (or empty-string if irrelevant)\n  //      location: the detailed location string\n  //  (Returned in this way for more intelligent processing at a higher level)\n  // functionLog(`checkTextField(${fieldName}, ${fieldText.length.toLocaleString()} chars, ${allowedLinks}, '${optionalFieldLocation}')…`);\n  //parameterAssert(languageCode !== undefined, \"checkTextField: 'languageCode' parameter should be defined\");\n  //parameterAssert(typeof languageCode === 'string', `checkTextField: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n  //parameterAssert(languageCode !== 'unfoldingWord', `checkTextField: 'languageCode' ${languageCode} parameter should be not be 'unfoldingWord'`);\n  //parameterAssert(repoCode !== undefined, \"checkTextField: 'repoCode' parameter should be defined\");\n  //parameterAssert(typeof repoCode === 'string', `checkTextField: 'repoCode' parameter should be a string not a '${typeof repoCode}': ${repoCode}`);\n  //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkTextField: 'repoCode' parameter should not be '${repoCode}'`);\n  //parameterAssert(fieldType !== undefined, \"checkTextField: 'fieldType' parameter should be defined\");\n  //parameterAssert(typeof fieldType === 'string', `checkTextField: 'fieldType' parameter should be a string not a '${typeof fieldType}': ${fieldType}`);\n  //parameterAssert(fieldType !== '', `checkTextField: 'fieldType' ${fieldType} parameter should be not be an empty string`);\n  //parameterAssert(fieldType === 'markdown' || fieldType === 'USFM line' || fieldType === 'raw USFM line' || fieldType === 'YAML' || fieldType === 'text' || fieldType === 'raw' || fieldType === 'link', `checkTextField: unrecognised 'fieldType' parameter: '${fieldType}'`);\n  //parameterAssert(fieldName !== undefined, \"checkTextField: 'fieldName' parameter should be defined\");\n  //parameterAssert(typeof fieldName === 'string', `checkTextField: 'fieldName' parameter should be a string not a '${typeof fieldName}': ${fieldName}`);\n  // if (!fieldType.startsWith('markdown'))\n  //     //parameterAssert(fieldName !== '', `checkTextField: ${fieldType} 'fieldName' parameter should be not be an empty string`);\n  //parameterAssert(fieldText !== undefined, \"checkTextField: 'fieldText' parameter should be defined\");\n  //parameterAssert(typeof fieldText === 'string', `checkTextField: 'fieldText' parameter should be a string not a '${typeof fieldText}': ${fieldText}`);\n  //parameterAssert(allowedLinks === true || allowedLinks === false, \"checkTextField: allowedLinks parameter must be either true or false\");\n  if (!allowedLinks) {//parameterAssert(fieldText.indexOf('x-tw') < 0, `checkTextField should be allowedLinks for ${fieldType} ${fieldName} ${fieldText}`);\n  } //parameterAssert(optionalFieldLocation !== undefined, \"checkTextField: 'optionalFieldLocation' parameter should be defined\");\n  //parameterAssert(typeof optionalFieldLocation === 'string', `checkTextField: 'optionalFieldLocation' parameter should be a string not a '${typeof optionalFieldLocation}': ${optionalFieldLocation}`);\n  //parameterAssert(optionalFieldLocation.indexOf('true') === -1, `checkTextField: 'optionalFieldLocation' parameter should not be '${optionalFieldLocation}'`);\n\n\n  if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkTextField: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n  }\n\n  var result = {\n    noticeList: []\n  };\n\n  function addNoticePartial(incompleteNoticeObject) {\n    // We add the fieldName here\n    // debugLog(`dBTC Notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n    //parameterAssert(incompleteNoticeObject.priority !== undefined, \"dBTCs addNoticePartial: 'priority' parameter should be defined\");\n    //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `dBTCs addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n    //parameterAssert(incompleteNoticeObject.message !== undefined, \"dBTCs addNoticePartial: 'message' parameter should be defined\");\n    //parameterAssert(typeof incompleteNoticeObject.message === 'string', `dBTCs addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n    // parameterAssert(characterIndex !== undefined, \"dBTCs addNoticePartial: 'characterIndex' parameter should be defined\");\n    if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `dBTCs addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n    } // parameterAssert(excerpt !== undefined, \"dBTCs addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n    if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `dBTCs addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n    } //parameterAssert(incompleteNoticeObject.location !== undefined, \"dBTCs addNoticePartial: 'location' parameter should be defined\");\n    //parameterAssert(typeof incompleteNoticeObject.location === 'string', `dBTCs addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n    // incompleteNoticeObject.debugChain = incompleteNoticeObject.debugChain ? `checkTextField(${fieldType}, ${fieldName}, ${allowedLinks}) ${incompleteNoticeObject.debugChain}` : `checkTextField(${fieldType}, ${fieldName}, ${allowedLinks})`;\n\n\n    if (fieldName.length && !fieldName.endsWith(' line')) incompleteNoticeObject.fieldName = fieldName; // Don’t add the field if it’s blank\n\n    result.noticeList.push(incompleteNoticeObject);\n  } // Main code for checkTextField()\n\n\n  if (!fieldText) // Nothing to check\n    return result; // Create our more detailed location string by prepending the fieldName\n\n  var ourLocation = optionalFieldLocation;\n  if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n  var cutoffPriorityLevel = (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel : 0; // debugLog(`checkTextField: Using cutoffPriorityLevel=${cutoffPriorityLevel} ${typeof cutoffPriorityLevel} ${cutoffPriorityLevel < 200}`);\n\n  var excerptLength;\n\n  try {\n    excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n  } catch (btcError) {}\n\n  if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n    excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_2__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`checkTextField: Using default excerptLength=${excerptLength}`);\n  } // else\n  // debugLog(`checkTextField: Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n\n\n  var excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n  var excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n  // debugLog(`checkTextField: Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n  var suggestion = fieldText.trim();\n  var characterIndex;\n\n  if (cutoffPriorityLevel < 895 && (characterIndex = fieldText.indexOf(\"\\u200B\")) !== -1) {\n    var charCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_3__[\"countOccurrencesInString\"])(fieldText, \"\\u200B\");\n    var excerpt = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus).replace(/\\u200B/g, '‼') + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n    addNoticePartial({\n      priority: 895,\n      message: \"Field contains zero-width space(s)\",\n      details: \"\".concat(charCount, \" occurrence\").concat(charCount === 1 ? '' : 's', \" found\"),\n      characterIndex: characterIndex,\n      excerpt: excerpt,\n      location: ourLocation\n    });\n    suggestion = suggestion.replace(/\\u200B/g, ''); // Or should it be space ???\n  }\n\n  if (cutoffPriorityLevel < 638 && Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_3__[\"isWhitespace\"])(fieldText)) {\n    addNoticePartial({\n      priority: 638,\n      message: \"Only found whitespace\",\n      location: ourLocation\n    });\n    return result;\n  }\n\n  if (cutoffPriorityLevel < 993 && (characterIndex = fieldText.indexOf('<<<<<<<')) !== -1) {\n    var iy = characterIndex + excerptHalfLength; // Want excerpt to focus more on what follows\n\n    var _excerpt = (iy > excerptHalfLength ? '…' : '') + fieldText.substring(iy - excerptHalfLength, iy + excerptHalfLengthPlus).replace(/ /g, '␣') + (iy + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n    addNoticePartial({\n      priority: 993,\n      message: \"Unresolved GIT conflict\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt,\n      location: ourLocation\n    });\n  } else {\n    if (cutoffPriorityLevel < 992 && (characterIndex = fieldText.indexOf('=======')) !== -1) {\n      var _iy = characterIndex + excerptHalfLength; // Want excerpt to focus more on what follows\n\n\n      var _excerpt2 = (_iy > excerptHalfLength ? '…' : '') + fieldText.substring(_iy - excerptHalfLength, _iy + excerptHalfLengthPlus).replace(/ /g, '␣') + (_iy + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n      addNoticePartial({\n        priority: 992,\n        message: \"Unresolved GIT conflict\",\n        characterIndex: characterIndex,\n        excerpt: _excerpt2,\n        location: ourLocation\n      });\n    } else {\n      if (cutoffPriorityLevel < 991 && (characterIndex = fieldText.indexOf('>>>>>>>>')) !== -1) {\n        var _iy2 = characterIndex + excerptHalfLength; // Want excerpt to focus more on what follows\n\n\n        var _excerpt3 = (_iy2 > excerptHalfLength ? '…' : '') + fieldText.substring(_iy2 - excerptHalfLength, _iy2 + excerptHalfLengthPlus).replace(/ /g, '␣') + (_iy2 + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n        addNoticePartial({\n          priority: 991,\n          message: \"Unresolved GIT conflict\",\n          characterIndex: characterIndex,\n          excerpt: _excerpt3,\n          location: ourLocation\n        });\n      }\n    }\n  }\n\n  if (fieldText[0] === ' ') {\n    var _excerpt4 = fieldText.slice(0, excerptLength).replace(/ /g, '␣') + (fieldText.length > excerptLength ? '…' : '');\n\n    if (fieldText[1] === ' ') // spaces plural\n      addNoticePartial({\n        priority: 110,\n        message: \"Unexpected leading spaces\",\n        characterIndex: 0,\n        excerpt: _excerpt4,\n        location: ourLocation\n      });else addNoticePartial({\n      priority: 109,\n      message: \"Unexpected leading space\",\n      characterIndex: 0,\n      excerpt: _excerpt4,\n      location: ourLocation\n    });\n  } else if (fieldText[0] === \"\\u2060\") {\n    var _excerpt5 = fieldText.slice(0, excerptLength).replace(/\\u2060/g, '‼') + (fieldText.length > excerptLength ? '…' : '');\n\n    addNoticePartial({\n      priority: 770,\n      message: \"Unexpected leading word-joiner (u2060) character\",\n      characterIndex: 0,\n      excerpt: _excerpt5,\n      location: ourLocation\n    });\n    if (suggestion[0] === \"\\u2060\") suggestion = suggestion.slice(1);\n  } else if (fieldText[0] === \"\\u200D\") {\n    var _excerpt6 = fieldText.slice(0, excerptLength).replace(/\\u200D/g, '‼') + (fieldText.length > excerptLength ? '…' : '');\n\n    addNoticePartial({\n      priority: 771,\n      message: \"Unexpected leading zero-width joiner (u200D) character\",\n      characterIndex: 0,\n      excerpt: _excerpt6,\n      location: ourLocation\n    });\n    if (suggestion[0] === \"\\u200D\") suggestion = suggestion.slice(1);\n  }\n\n  if (cutoffPriorityLevel < 64 && (characterIndex = fieldText.indexOf('<br> ')) !== -1) {\n    var _excerpt7 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus).replace(/ /g, '␣') + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n    addNoticePartial({\n      priority: 64,\n      message: \"Unexpected leading space(s) after break\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt7,\n      location: ourLocation\n    });\n  }\n\n  if (cutoffPriorityLevel < 63 && (characterIndex = fieldText.indexOf('\\\\n ')) !== -1) {\n    var _excerpt8 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus).replace(/ /g, '␣') + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n    addNoticePartial({\n      priority: 63,\n      message: \"Unexpected leading space(s) after line break\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt8,\n      location: ourLocation\n    });\n  }\n\n  if (cutoffPriorityLevel < 772 && fieldText[fieldText.length - 1] === \"\\u2060\") {\n    var _excerpt9 = fieldText.slice(0, excerptLength).replace(/\\u2060/g, '‼') + (fieldText.length > excerptLength ? '…' : '');\n\n    addNoticePartial({\n      priority: 772,\n      message: \"Unexpected trailing word-joiner (u2060) character\",\n      characterIndex: 0,\n      excerpt: _excerpt9,\n      location: ourLocation\n    });\n    if (suggestion[suggestion.length - 1] === \"\\u2060\") suggestion = suggestion.slice(0, suggestion.length - 1);\n  } else if (cutoffPriorityLevel < 773 && fieldText[fieldText.length - 1] === \"\\u200D\") {\n    var _excerpt10 = fieldText.slice(0, excerptLength).replace(/\\u200D/g, '‼') + (fieldText.length > excerptLength ? '…' : '');\n\n    addNoticePartial({\n      priority: 773,\n      message: \"Unexpected trailing zero-width joiner (u200D) character\",\n      characterIndex: 0,\n      excerpt: _excerpt10,\n      location: ourLocation\n    });\n    if (suggestion[suggestion.length - 1] === \"\\u200D\") suggestion = suggestion.slice(0, suggestion.length - 1);\n  } // Find leading line breaks (but not if the whole line is just the line break sequence)\n\n\n  var fieldTextLower = fieldText.toLowerCase();\n\n  if (cutoffPriorityLevel < 107 && (fieldTextLower.slice(0, 2) === '\\\\n' || fieldTextLower.slice(0, 4) === '<br>' || fieldTextLower.slice(0, 5) === '<br/>' || fieldTextLower.slice(0, 6) === '<br />') && fieldTextLower !== '\\\\n' && fieldTextLower !== '<br>' && fieldTextLower !== '<br/>' && fieldTextLower !== '<br />') {\n    var _excerpt11 = fieldText.slice(0, excerptLength) + (fieldText.length > excerptLength ? '…' : '');\n\n    addNoticePartial({\n      priority: 107,\n      message: \"Unexpected leading line break\",\n      characterIndex: 0,\n      excerpt: _excerpt11,\n      location: ourLocation\n    });\n\n    while (suggestion.toLowerCase().slice(0, 2) === '\\\\n') {\n      suggestion = suggestion.slice(2);\n    }\n\n    while (suggestion.toLowerCase().slice(0, 4) === '<br>') {\n      suggestion = suggestion.slice(4);\n    }\n\n    while (suggestion.toLowerCase().slice(0, 5) === '<br/>') {\n      suggestion = suggestion.slice(5);\n    }\n\n    while (suggestion.toLowerCase().slice(0, 6) === '<br />') {\n      suggestion = suggestion.slice(6);\n    }\n  }\n\n  if (cutoffPriorityLevel < 95 && fieldText[fieldText.length - 1] === ' ') // Markdown gives meaning to two spaces at the end of a line\n    if (!fieldType.startsWith('markdown') || fieldText.length < 3 || fieldText[fieldText.length - 2] !== ' ' || fieldText[fieldText.length - 3] === ' ') {\n      var _excerpt12 = (fieldText.length > excerptLength ? '…' : '') + fieldText.substring(fieldText.length - 10).replace(/ /g, '␣');\n\n      var notice = {\n        priority: 95,\n        message: \"Unexpected trailing space(s)\",\n        excerpt: _excerpt12,\n        location: ourLocation\n      };\n      if (fieldType !== 'raw' && fieldType !== 'text' || fieldName.slice(0, 6) !== 'from \\\\') notice.characterIndex = fieldText.length - 1; // characterIndex means nothing for processed USFM\n\n      addNoticePartial(notice);\n    }\n\n  if (cutoffPriorityLevel < 94 && (characterIndex = fieldText.indexOf(' <br')) !== -1) {\n    var _excerpt13 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus).replace(/ /g, '␣') + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n    addNoticePartial({\n      priority: 94,\n      message: \"Unexpected trailing space(s) before break\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt13,\n      location: ourLocation\n    });\n  }\n\n  if (cutoffPriorityLevel < 93 && (characterIndex = fieldText.indexOf(' \\\\n')) !== -1) {\n    var _excerpt14 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus).replace(/ /g, '␣') + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n    addNoticePartial({\n      priority: 93,\n      message: \"Unexpected trailing space(s) before line break\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt14,\n      location: ourLocation\n    });\n  } // Find trailing line breaks (but not if the whole line is just the line break sequence)\n\n\n  if (cutoffPriorityLevel < 104 && (fieldTextLower.substring(fieldTextLower.length - 2) === '\\\\n' || fieldTextLower.substring(fieldTextLower.length - 4) === '<br>' || fieldTextLower.substring(fieldTextLower.length - 5) === '<br/>' || fieldTextLower.substring(fieldTextLower.length - 6) === '<br />') && fieldTextLower !== '\\\\n' && fieldTextLower !== '<br>' && fieldTextLower !== '<br/>' && fieldTextLower !== '<br />') {\n    var _excerpt15 = (fieldText.length > excerptLength ? '…' : '') + fieldText.substring(fieldText.length - 10);\n\n    addNoticePartial({\n      priority: 104,\n      message: \"Unexpected trailing line break\",\n      characterIndex: fieldText.length - 1,\n      excerpt: _excerpt15,\n      location: ourLocation\n    });\n\n    while (suggestion.toLowerCase().substring(suggestion.length - 2) === '\\\\n') {\n      suggestion = suggestion.substring(0, suggestion.length - 2);\n    }\n\n    while (suggestion.toLowerCase().substring(suggestion.length - 4) === '<br>') {\n      suggestion = suggestion.substring(0, suggestion.length - 4);\n    }\n\n    while (suggestion.toLowerCase().substring(suggestion.length - 5) === '<br/>') {\n      suggestion = suggestion.substring(0, suggestion.length - 5);\n    }\n\n    while (suggestion.toLowerCase().substring(suggestion.length - 6) === '<br />') {\n      suggestion = suggestion.substring(0, suggestion.length - 6);\n    }\n  }\n\n  if (cutoffPriorityLevel < 124 && (characterIndex = fieldText.indexOf('  ')) >= 0 && (!fieldType.startsWith('markdown') || characterIndex !== fieldText.length - 2)) {\n    var _excerpt16 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus).replace(/ /g, '␣') + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n    var doubleCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_3__[\"countOccurrencesInString\"])(fieldText, '  ');\n\n    var _notice;\n\n    if (doubleCount === 1) _notice = {\n      priority: 124,\n      message: \"Unexpected double spaces\",\n      excerpt: _excerpt16,\n      location: ourLocation\n    };else _notice = {\n      priority: 224,\n      message: \"Multiple unexpected double spaces\",\n      details: \"\".concat(doubleCount, \" occurrences\\u2014only first is displayed\"),\n      excerpt: _excerpt16,\n      location: ourLocation\n    };\n    if (fieldType !== 'raw' && fieldType !== 'text' || fieldName.slice(0, 6) !== 'from \\\\') _notice.characterIndex = characterIndex; // characterIndex means nothing for processed USFM\n\n    if (cutoffPriorityLevel < _notice.priority) addNoticePartial(_notice); // Note: replacing double-spaces in the suggestion is done later -- after other suggestion modifications which might affect it\n  }\n\n  if (cutoffPriorityLevel < 583 && (characterIndex = fieldText.indexOf('\\n')) !== -1) {\n    var _excerpt17 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n    addNoticePartial({\n      priority: 583,\n      message: \"Unexpected newLine character\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt17,\n      location: ourLocation\n    });\n    suggestion = suggestion.replace(/\\n/g, ' ');\n  }\n\n  if (cutoffPriorityLevel < 582 && (characterIndex = fieldText.indexOf('\\r')) !== -1) {\n    var _excerpt18 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n    addNoticePartial({\n      priority: 582,\n      message: \"Unexpected carriageReturn character\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt18,\n      location: ourLocation\n    });\n    suggestion = suggestion.replace(/\\r/g, ' ');\n  }\n\n  if (cutoffPriorityLevel < 581 && (characterIndex = fieldText.indexOf('\\xA0')) !== -1) {\n    // non-break space\n    var previousCharacter = characterIndex === 0 ? '' : fieldText.substring(characterIndex - 1, characterIndex);\n    var nextCharacter = characterIndex === fieldText.length - 1 ? '' : fieldText.slice(characterIndex + 1, characterIndex + 2);\n\n    if (previousCharacter !== '«' && previousCharacter !== '‹' && nextCharacter !== '»' && nextCharacter !== '›') {\n      // For French punctuation\n      var _excerpt19 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus).replace(/\\xA0/g, '⍽') + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n      addNoticePartial({\n        priority: 581,\n        message: \"Unexpected non-break space (u00A0) character\",\n        characterIndex: characterIndex,\n        excerpt: _excerpt19,\n        location: ourLocation\n      });\n      suggestion = suggestion.replace(/\\xA0/g, ' ');\n    }\n  }\n\n  if (cutoffPriorityLevel < 580 && (characterIndex = fieldText.indexOf(\"\\u202F\")) !== -1) {\n    // narrow non-break space\n    var _excerpt20 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus).replace(/\\u202F/g, '⍽') + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n    var _notice2 = {\n      priority: 580,\n      message: \"Unexpected narrow non-break space (u202F) character\",\n      excerpt: _excerpt20,\n      location: ourLocation\n    };\n    if (fieldType !== 'raw' && fieldType !== 'text' || fieldName.slice(0, 6) !== 'from \\\\') _notice2.characterIndex = characterIndex; // characterIndex means nothing for processed USFM\n\n    addNoticePartial(_notice2);\n    suggestion = suggestion.replace(/\\u202F/g, ' ');\n  }\n\n  if (fieldName === 'OrigQuote' || fieldName === 'Quote') {\n    if (cutoffPriorityLevel < 179 && (characterIndex = fieldText.indexOf(' …')) !== -1) {\n      var _excerpt21 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n      addNoticePartial({\n        priority: 179,\n        message: \"Unexpected space before ellipse character\",\n        characterIndex: characterIndex,\n        excerpt: _excerpt21,\n        location: ourLocation\n      });\n      suggestion = suggestion.replace(/ …/g, '…');\n    }\n\n    if (cutoffPriorityLevel < 178 && (characterIndex = fieldText.indexOf('… ')) !== -1) {\n      var _excerpt22 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n      addNoticePartial({\n        priority: 178,\n        message: \"Unexpected space after ellipse character\",\n        characterIndex: characterIndex,\n        excerpt: _excerpt22,\n        location: ourLocation\n      });\n      suggestion = suggestion.replace(/… /g, '…');\n    }\n  }\n\n  suggestion = suggestion.replace(/ {2}/g, ' ');\n\n  if (cutoffPriorityLevel < 177) {\n    // Check for doubled punctuation chars (international)\n    // Doesn’t check for doubled forward slash by default coz that might occur in a link, e.g., https://etc…\n    //  or doubled # coz that occurs in markdown\n    var doubledPunctuationCheckList = '({}<>⟨⟩:،、‒–—―…!‹›«»‐?‘’“”\\';⁄·&@•^†‡°¡¿※№÷×ºª%‰+−=‱¶′″‴§|‖¦©℗®℠™¤₳฿₵¢₡₢$₫₯֏₠€ƒ₣₲₴₭₺₾ℳ₥₦₧₱₰£៛₽₹₨₪৳₸₮₩¥';\n    if (!allowedLinks) doubledPunctuationCheckList += '/[].)'; // Double square brackets can be part of markdown links, double periods can be part of a path\n\n    if (!fieldType.startsWith('markdown')) doubledPunctuationCheckList += '_*#~'; // There are used for markdown formatting\n\n    if (fieldType.indexOf('USFM') === -1 || fieldText.indexOf('x-morph') === -1) doubledPunctuationCheckList += ',\"'; // Allowed in original language morphology fields\n\n    if (!fieldType.startsWith('YAML') || !fieldText.startsWith('--')) // NOTE: First hyphen may have been removed in preprocessing\n      doubledPunctuationCheckList += '-';\n\n    var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(doubledPunctuationCheckList),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var punctChar = _step.value;\n\n        if ((characterIndex = fieldText.indexOf(punctChar + punctChar)) !== -1) {\n          var _excerpt23 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n          var _notice3 = {\n            priority: 177,\n            message: \"Unexpected doubled \".concat(punctChar, \" characters\"),\n            excerpt: _excerpt23,\n            location: ourLocation\n          };\n          if (fieldType !== 'raw' && fieldType !== 'text' || fieldName.slice(0, 6) !== 'from \\\\') _notice3.characterIndex = characterIndex; // characterIndex means nothing for processed USFM\n\n          addNoticePartial(_notice3);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  if (cutoffPriorityLevel < 195) {\n    // Check for punctuation chars following space and at start of line\n    //  Removed © and leading currency symbols $€₱\n    // Note that this works for French punctuation, because ?! etc, should be preceded by a non-breaking space (not a regular space)\n    var afterSpaceCheckList = ')}>⟩:,،、‒–—―!.›»‐-?’”;/⁄·@•^†‡°¡¿※#№÷×ºª%‰‱¶′″‴§‖¦℗®℠™¤₳฿₵¢₡₢₫₯֏₠ƒ₣₲₴₭₺₾ℳ₥₦₧₰£៛₽₹₨₪৳₸₮₩¥'; // if (['en','hbo','el-x-koine'].includes(languageCode) ) afterSpaceCheckList += '’'; // These languages don't have words starting with apostrophe/right-single-quotation-mark\n\n    if (!fieldType.startsWith('markdown')) afterSpaceCheckList += '_*~'; // These are used for markdown formatting\n\n    if (fieldType.indexOf('USFM') === -1 || fieldText.indexOf('x-lemma') === -1 && fieldText.indexOf('x-tw') === -1) afterSpaceCheckList += '|';\n    if (!fieldType.startsWith('YAML')) afterSpaceCheckList += '\\'\"'; // These are used for YAML strings, e.g., version: '0.15'\n    // if (fieldName === 'OrigQuote' || fieldName === 'Quote') afterSpaceCheckList += '…'; // NOT NEEDED -- this is specifically checked elsewhere\n\n    var _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(afterSpaceCheckList),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var punctCharBeingChecked = _step2.value;\n\n        if (cutoffPriorityLevel < 191 && (characterIndex = fieldText.indexOf(' ' + punctCharBeingChecked)) >= 0) {\n          var nextChar = fieldText.slice(characterIndex + 1, characterIndex + 2);\n\n          if (punctCharBeingChecked !== '-' || '1234567890'.indexOf(nextChar) === -1) {\n            // Allow negative numbers, e.g., -1\n            var _excerpt24 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : ''); // Lower priority for em-dash in markdown and for forward slash (used to list alternatives, e.g., \"yes / no\")\n\n\n            var _notice4 = {\n              priority: 191\n              /* can be lowered to 71 */\n              ,\n              message: \"Unexpected \".concat(punctCharBeingChecked, \" character after space\"),\n              excerpt: _excerpt24,\n              location: ourLocation\n            };\n            if ((punctCharBeingChecked === '—' || punctCharBeingChecked === '/') && fieldType.startsWith('markdown') || punctCharBeingChecked === '’' && !['en', 'hbo', 'el-x-koine'].includes(languageCode)) // Some other languages allow words to start with apostrophes\n              _notice4.priority = 71; // Lower the priority from 191\n\n            if (fieldType !== 'raw' && fieldType !== 'text' || fieldName.slice(0, 6) !== 'from \\\\') _notice4.characterIndex = characterIndex; // characterIndex means nothing for processed USFM\n\n            addNoticePartial(_notice4);\n          }\n        }\n\n        if (cutoffPriorityLevel < 195 && (punctCharBeingChecked !== '-' || !(fieldType.startsWith('YAML') || fieldType.startsWith('markdown'))) && (punctCharBeingChecked !== '!' || !fieldType.startsWith('markdown')) // image tag\n        && fieldText[0] === punctCharBeingChecked) {\n          characterIndex = 0;\n\n          var _excerpt25 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n          addNoticePartial({\n            priority: 195,\n            message: \"Unexpected \".concat(punctCharBeingChecked, \" character at start of line\"),\n            characterIndex: characterIndex,\n            excerpt: _excerpt25,\n            location: ourLocation\n          });\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    if (fieldType.indexOf('USFM') !== -1) suggestion = suggestion.replace(/| /g, '|');\n  }\n\n  if (cutoffPriorityLevel < 192) {\n    // Check for punctuation chars before space\n    //  Removed ' (can be normal, e.g., Jesus' cloak)\n    //  Removed ©\n    var beforeSpaceCheckList = '({<⟨،、‒–—―‹«‐‘“/⁄·@\\\\•^†‡°¡¿※№×ºª‰‱¶′″‴§|‖¦℗℠™¤₳฿₵¢₡₢$₫₯֏₠€ƒ₣₲₴₭₺₾ℳ₥₦₧₱₰£៛₽₹₨₪৳₸₮₩¥';\n    if (!fieldType.startsWith('markdown')) beforeSpaceCheckList += '_~'; // These are used for markdown formatting\n\n    if (!fieldType.startsWith('markdown') && fieldType.indexOf('USFM') === -1) beforeSpaceCheckList += '*'; // There are used for markdown formatting and USFM closing markers\n\n    if (!fieldType.startsWith('YAML')) beforeSpaceCheckList += '[';\n\n    var _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(beforeSpaceCheckList),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _punctCharBeingChecked = _step3.value;\n\n        if ((characterIndex = fieldText.indexOf(_punctCharBeingChecked + ' ')) !== -1) {\n          var _excerpt26 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : ''); // Lower priority for em-dash in markdown and for forward slash (used to list alternatives, e.g., \"yes / no\")\n          // debugLog(`Got space after ${punctCharBeingChecked} in ${fieldType} around ${excerpt}: priority ${punctCharBeingChecked === '—' && fieldType.startsWith('markdown') ? 72 : 192}`);\n\n\n          var _notice5 = {\n            priority: (_punctCharBeingChecked === '—' || _punctCharBeingChecked === '/') && fieldType.startsWith('markdown') ? 72 : 192,\n            message: \"Unexpected space after \".concat(_punctCharBeingChecked, \" character\"),\n            excerpt: _excerpt26,\n            location: ourLocation\n          };\n          if (fieldType !== 'raw' && fieldType !== 'text' || fieldName.slice(0, 6) !== 'from \\\\') _notice5.characterIndex = characterIndex; // characterIndex means nothing for processed USFM\n\n          addNoticePartial(_notice5);\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  if (cutoffPriorityLevel < 193) {\n    // Check for punctuation chars at end of line\n    //  Removed ' (can be normal, e.g., Jesus' cloak)\n    var beforeEOLCheckList = '([{<⟨،、‒–—―‹«‐‘“/⁄·@©\\\\•^†‡°¡¿※№×ºª‰‱¶′″‴§|‖¦℗℠™¤₳฿₵¢₡₢$₫₯֏₠€ƒ₣₲₴₭₺₾ℳ₥₦₧₱₰£៛₽₹₨₪৳₸₮₩¥';\n    if (!fieldType.startsWith('markdown')) beforeEOLCheckList += '_~'; // These are used for markdown formatting\n\n    if (!fieldType.startsWith('markdown') && fieldType.indexOf('USFM') === -1) beforeEOLCheckList += '*'; // There are used for markdown formatting and USFM closing markers\n\n    var _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(beforeEOLCheckList),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var _punctChar = _step4.value;\n\n        if (_punctChar !== '—' && fieldText[fieldText.length - 1] === _punctChar) {\n          characterIndex = fieldText.length - 1;\n\n          var _excerpt27 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n          var _notice6 = {\n            priority: 193,\n            message: \"Unexpected \".concat(_punctChar, \" character at end of line\"),\n            excerpt: _excerpt27,\n            location: ourLocation\n          };\n          if (fieldType !== 'raw' && fieldType !== 'text' || fieldName.slice(0, 6) !== 'from \\\\') _notice6.characterIndex = characterIndex; // characterIndex means nothing for processed USFM\n\n          addNoticePartial(_notice6);\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n\n  if (cutoffPriorityLevel < 849) {\n    // Check for bad combinations of characters\n    var _iterator5 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_text_handling_functions__WEBPACK_IMPORTED_MODULE_3__[\"BAD_CHARACTER_COMBINATIONS\"]),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var badCharCombination = _step5.value;\n\n        if ((characterIndex = fieldText.indexOf(badCharCombination)) >= 0) {\n          var _excerpt28 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n          addNoticePartial({\n            priority: 849,\n            message: \"Unexpected '\".concat(badCharCombination, \"' character combination\"),\n            characterIndex: characterIndex,\n            excerpt: _excerpt28,\n            location: ourLocation\n          });\n        }\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n  }\n\n  if (cutoffPriorityLevel < 819) {\n    // Check for bad combinations of characters with regex\n    var _iterator6 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_text_handling_functions__WEBPACK_IMPORTED_MODULE_3__[\"BAD_CHARACTER_REGEXES\"]),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var _step6$value = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_step6.value, 2),\n            details = _step6$value[0],\n            badCharCombinationRegex = _step6$value[1];\n\n        if ((characterIndex = fieldText.search(badCharCombinationRegex)) >= 0) {\n          var badChar = fieldText.slice(characterIndex, characterIndex + 1);\n          var badTwoChars = fieldText.slice(characterIndex, characterIndex + 2);\n          var badChars = fieldText.slice(characterIndex);\n\n          var _nextChar = fieldText.slice(characterIndex + 1, characterIndex + 2);\n\n          var nextTwoChars = fieldText.slice(characterIndex + 1, characterIndex + 3);\n          var nextChars = fieldText.slice(characterIndex + 1); // NOTE: The hard part here is getting rid of false alarms\n          //  Is it really worth it when this many exceptions need to be defined -- yes, it does find some genuine errors\n\n          if (nextChars.startsWith('<br>') && (repoCode === 'TN' || repoCode === 'TA')) // allow <br>\n            continue;\n          if (nextTwoChars === '\\\\n' && (repoCode === 'TN2' || repoCode === 'SN' || repoCode === 'SQ')) // allow \\n (2 chars)\n            continue;\n          if (_nextChar === '\\\\' && fieldType === 'USFM line') // probably another USFM marker\n            continue;\n          if (_nextChar === '}' && repoCode === 'ST') // UST uses these\n            continue;\n          if (_nextChar === '…' && fieldName === 'OrigQuote') // discontiguous quote\n            continue;\n          if (nextTwoChars === \"\\xA0\\xBB\" || nextTwoChars === \"\\xA0\\u203A\") // French punctuation\n            continue;\n          if (nextChars.startsWith('<sup>') && fieldType === 'markdown' && repoCode === 'TA') continue;\n          if ((fieldName.startsWith('README') || fieldName.endsWith('.md line') || fieldName.endsWith('Note line') || fieldName === 'Question line' || fieldName === 'Response line') && (_nextChar === '*' || _nextChar === '_' || badTwoChars === '![' || nextTwoChars === '~~')) // allow markdown formatting\n            continue;\n          if (badChars.startsWith('.md') || badChars.startsWith('.usfm') || badChars.startsWith('.tsv') || badChars.startsWith('.yaml') || badChars.startsWith('.org') || badChars.startsWith('.com') || badChars.startsWith('.bible') || badChar === '.' && (fieldText.indexOf('http') !== -1 || fieldText.indexOf('rc:') !== -1 || fieldName.endsWith('manifest line'))) continue; // Skip these known cases\n\n          if (badTwoChars === ':H' && repoCode === 'UHB') // e.g., strong=\"c:H1162\"\n            continue;\n          if (badTwoChars === '.g' && fieldText.toLowerCase().indexOf('e.g.') !== -1 || badTwoChars === '.e' && fieldText.toLowerCase().indexOf('i.e.') !== -1) continue;\n          if (badChar === '.' && (fieldText.indexOf('etc.') !== -1 || fieldText.indexOf('.x.') !== -1)) // Last one is for version numbers\n            continue;\n          if (badTwoChars === '.m' && (fieldText.toLowerCase().indexOf('a.m.') !== -1 || fieldText.toLowerCase().indexOf('p.m.') !== -1)) continue;\n          if (badTwoChars === '.C' && fieldText.indexOf('B.C.') !== -1 || badTwoChars === '.D' && fieldText.indexOf('A.D.') !== -1) continue;\n          if (badTwoChars === '?v' && fieldName.endsWith('manifest line')) // presumably a relation version number\n            continue;\n          if (badChar === '?' && fieldText.indexOf('http') !== -1) // ? can be part of a URL\n            continue;\n          if (['\\\\w', '\\\\zaln-s', '\\\\v', '\\\\p', '\\\\q', '\\\\q1', '\\\\SPECIAL', '\\\\NONE', '\\\\f'].indexOf(fieldName) !== -1 && (badChar === ',' || badChar === ':')) // suppress x-morph formatting false alarms\n            continue; // debugLog(`checkTextField 329 at the bottom with ${badChar} in '${fieldName}' preceding ${nextChars}`);\n\n          var _excerpt29 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : ''); // debugLog(`checkTextField for ${repoCode} '${fieldType}' '${fieldName}' got ${details} badTwoChars='${badTwoChars}' with '${excerpt}' priority 329`);\n\n\n          addNoticePartial({\n            priority: 329,\n            message: \"Unexpected bad character combination\",\n            details: details,\n            characterIndex: characterIndex,\n            excerpt: _excerpt29,\n            location: ourLocation\n          });\n        }\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n  }\n\n  if (cutoffPriorityLevel < 92) {\n    // Check for leading zeroes in numbers\n    var _iterator7 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_text_handling_functions__WEBPACK_IMPORTED_MODULE_3__[\"LEADING_ZERO_COMBINATIONS\"]),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var badZeroCharCombination = _step7.value;\n\n        if ((characterIndex = fieldText.indexOf(badZeroCharCombination)) >= 0 // but not an error perhaps if followed by period, e.g., 0.32\n        && fieldText.slice(characterIndex + badZeroCharCombination.length, characterIndex + badZeroCharCombination.length + 1) !== '.') {\n          // const nextChar = fieldText.slice(characterIndex + 1, characterIndex + 2);\n          var nextNextChar = fieldText.slice(characterIndex + 2, characterIndex + 3); // debugLog(`92 leading zero for fieldType='${fieldType}' fieldName='${fieldName}' with nextChar=${nextChar} and nextNextChar=${nextNextChar}`);\n\n          if (nextNextChar !== '”' && nextNextChar !== '-' // e.g., “0” is ok and 0-2 is ok\n          && (fieldType !== 'YAML' || fieldText.indexOf('sort:') === -1) && (fieldType !== 'USFM line' || fieldName !== '\\\\id') // Some USFM producers put in a date like \"Mar 03 2021\"\n          ) {\n            // \"sort: 0\" is ok in manifests\n            var _excerpt30 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n            addNoticePartial({\n              priority: 92,\n              message: \"Unexpected leading zero\",\n              characterIndex: characterIndex,\n              excerpt: _excerpt30,\n              location: ourLocation\n            });\n          }\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n  } // // Check for problems created by tC Create or something\n  // characterIndex = fieldText.indexOf('\\\\[');\n  // if (characterIndex === -1) characterIndex = fieldText.indexOf('\\\\]');\n  // if (characterIndex !== -1) {\n  //     const excerpt = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n  //     addNoticePartial({ priority: 849, message: \"Unexpected \\\\[ or \\\\] characters\", characterIndex, excerpt, location: ourLocation });\n  // }\n  // if (countOccurrencesInString(fieldText, '(') !== countOccurrencesInString(fieldText, ')')) {\n  //     userLog(`checkTextField(${fieldType}, ${fieldName}, '${fieldText}', ${allowedLinks}, ${ourLocation}) found ${countOccurrencesInString(fieldText, '(')} '(' but ${countOccurrencesInString(fieldText, ')')} ')'`);\n  //     addNoticePartial({ priority: 1, message: `Mismatched ( ) characters`, details: `left=${countOccurrencesInString(fieldText, '(').toLocaleString()}, right=${countOccurrencesInString(fieldText, ')').toLocaleString()}`, location: ourLocation });\n  // }\n\n\n  if (fieldName !== 'GLQuote') {\n    // NOTE: It's normal to have parts of quotes in the GLQuote field\n    // Check matched pairs in the field\n    var _iterator8 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_text_handling_functions__WEBPACK_IMPORTED_MODULE_3__[\"OPEN_CLOSE_PUNCTUATION_PAIRS\"]),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var punctSet = _step8.value;\n        // Can’t check '‘’' coz they might be used as apostrophe\n        var leftChar = punctSet[0],\n            rightChar = punctSet[1]; // if (fieldType === 'markdown' && leftChar === '<') continue; // markdown uses this for block quote\n        // TODO: The following 'continue' might not be doing the 2nd lot of checks\n\n        if ((fieldType.indexOf('USFM') !== -1 // e.g., \"raw USFM line\"\n        || fieldName.startsWith('from \\\\') || fieldType === 'markdown' && fieldName === '') && '([{“‘«‹'.indexOf(leftChar) !== -1) continue; // Start/end can be on different lines for these cases\n\n        if (!fieldType.startsWith('markdown') || leftChar !== '<') {\n          // > is a markdown block marker and also used for HTML, e.g., <br>\n          var leftCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_3__[\"countOccurrencesInString\"])(fieldText, leftChar),\n              rightCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_3__[\"countOccurrencesInString\"])(fieldText, rightChar);\n\n          if (leftCount !== rightCount && (rightChar !== '’' || leftCount > rightCount)) {\n            // Closing single quote is also used as apostrophe in English\n            // NOTE: These are higher priority than similar checks in a whole file which is less specific\n            var thisPriority = leftChar === '“' ? 163 : 563; // debugLog(`checkTextField has ${thisPriority} notice for rC=${repoCode} fN=${fieldName} fT=${fieldType}`);\n\n            if (cutoffPriorityLevel < thisPriority) addNoticePartial({\n              priority: thisPriority,\n              message: \"Mismatched \".concat(leftChar).concat(rightChar, \" characters\"),\n              details: \"left=\".concat(leftCount.toLocaleString(), \", right=\").concat(rightCount.toLocaleString()),\n              location: ourLocation\n            });\n          }\n\n          try {\n            // This regex build fails for some of the characters\n            var leftRegex = new RegExp(\"(\\\\w)\\\\\".concat(leftChar, \"(\\\\w)\"), 'g'),\n                rightRegex = new RegExp(\"(\\\\w)\\\\\".concat(rightChar, \"(\\\\w)\"), 'g'); // debugLog(`leftRegex is ${leftRegex}`);\n\n            var regexMatchObject = void 0;\n\n            while (regexMatchObject = leftRegex.exec(fieldText)) {\n              if ((!fieldType.startsWith('markdown') || regexMatchObject[0][0] !== '_') && (!fieldType.startsWith('YAML') || leftChar !== '{') // TODO: We have to allow for a blank language code until we change checkPlainText()\n              && (languageCode !== 'en' || regexMatchObject[0][2] !== 's' || fieldText.indexOf('(s)') === -1)) {\n                // debugLog(`Got possible misplaced '${languageCode}' left ${leftChar} in ${fieldType} ${fieldName} '${fieldText}': ${JSON.stringify(regexMatchObject)}`);\n                var _thisPriority = 717,\n                    thisMessage = \"Misplaced \".concat(leftChar, \" character\");\n\n                if (leftChar === '(' && regexMatchObject[0][2] === 's') {\n                  _thisPriority = 17;\n                  thisMessage = \"Possible misplaced \".concat(leftChar, \" character\");\n                } // Lower priority for words like 'thing(s)'\n\n\n                if (cutoffPriorityLevel < _thisPriority) addNoticePartial({\n                  priority: _thisPriority,\n                  message: thisMessage,\n                  excerpt: regexMatchObject[0],\n                  location: ourLocation\n                });\n              }\n            }\n\n            if (rightChar !== '’') // Can’t check '‘’' coz they might be used as apostrophe\n              while (regexMatchObject = rightRegex.exec(fieldText)) {\n                if ((!fieldType.startsWith('markdown') || regexMatchObject[0][2] !== '_') && (!fieldType.startsWith('YAML') || rightChar !== '}')) {\n                  // debugLog(`Got misplaced right ${rightChar} in ${fieldType} ${fieldName} '${fieldText}':`, JSON.stringify(regexMatchObject));\n                  if (cutoffPriorityLevel < 716) addNoticePartial({\n                    priority: 716,\n                    message: \"Misplaced \".concat(rightChar, \" character\"),\n                    excerpt: regexMatchObject[0],\n                    location: ourLocation\n                  });\n                }\n              }\n          } catch (_unused) {}\n        }\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n  }\n\n  if (cutoffPriorityLevel < 765 && !allowedLinks) {\n    // Simple check that there aren’t any\n    characterIndex = fieldText.indexOf('://');\n    if (characterIndex === -1) characterIndex = fieldText.indexOf('http');\n    if (characterIndex === -1) characterIndex = fieldText.indexOf('ftp'); // The following might have to be removed if text fields can contain email addresses\n\n    if (characterIndex === -1) characterIndex = fieldText.indexOf('.org');\n    if (characterIndex === -1) characterIndex = fieldText.indexOf('.com');\n    if (characterIndex === -1) characterIndex = fieldText.indexOf('.info');\n    if (characterIndex === -1) characterIndex = fieldText.indexOf('.bible');\n\n    if (characterIndex >= 0) {\n      var _excerpt31 = \"\".concat(characterIndex > excerptHalfLength ? '…' : '').concat(fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus)).concat(characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n\n      addNoticePartial({\n        priority: 765,\n        message: \"Unexpected link\",\n        characterIndex: characterIndex,\n        excerpt: _excerpt31,\n        location: ourLocation\n      });\n    }\n  } // See if we have a suggestion\n\n\n  if (suggestion !== fieldText) {\n    // debugLog(`Had text ${fieldText}`);\n    // debugLog(`Sug text ${suggestion}`);\n    result.suggestion = suggestion;\n  }\n\n  return result;\n} // end of checkTextField function\n\n//# sourceURL=webpack:///./src/core/field-text-check.js?");

/***/ }),

/***/ "./src/core/file-text-check.js":
/*!*************************************!*\
  !*** ./src/core/file-text-check.js ***!
  \*************************************/
/*! exports provided: checkTextfileContents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkTextfileContents\", function() { return checkTextfileContents; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _plain_text_check__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./plain-text-check */ \"./src/core/plain-text-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n// eslint-disable-next-line no-unused-vars\n\n // eslint-disable-next-line no-unused-vars\n\n // const FILE_TEXT_VALIDATOR_VERSION_STRING = '0.4.0';\n\n/**\n *\n * @param {string} languageCode\n * @param {string} repoCode -- e.g., 'TN' or 'TQ', etc.\n * @param {string} fileType\n * @param {string} filename\n * @param {string} fileText\n * @param {string} optionalFileLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkTextfileContents(username, languageCode, repoCode, fileType, filename, fileText, optionalFileLocation, checkingOptions) {\n  // Does basic checks for small errors like mismatched punctuation pairs, etc.\n  //  (Used by ourBasicFileChecks() in checkUSFMText() in usfm-text-check.js)\n  // filename (str): Used for identification\n  // fileText (str): The field being checked\n  // optionalFileLocation (str): Used to inform where this field is located\n  // We assume that checking for compulsory fields is done elsewhere\n  // Returns a single notice list\n  //  The list contains objects with the following fields:\n  //      priority (compulsory): the priority number 0..999 (usually 800+ are errors, lower are warnings)\n  //      message (compulsory): the error description string\n  //      characterIndex: the 0-based index for the position in the string\n  //      excerpt: a short excerpt of the string containing the error (or empty-string if irrelevant)\n  //  (Returned in this way for more intelligent processing at a higher level)\n  // functionLog(`checkTextfileContents(${filename}, ${fileText.length.toLocaleString()} chars, '${optionalFileLocation}')…`);\n  //parameterAssert(languageCode !== undefined, \"checkTextfileContents: 'languageCode' parameter should be defined\");\n  //parameterAssert(typeof languageCode === 'string', `checkTextfileContents: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n  //parameterAssert(repoCode !== undefined, \"checkTextfileContents: 'repoCode' parameter should be defined\");\n  //parameterAssert(typeof repoCode === 'string', `checkTextfileContents: 'repoCode' parameter should be a string not a '${typeof repoCode}': ${repoCode}`);\n  //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkTextfileContents: 'repoCode' parameter should not be '${repoCode}'`);\n  //parameterAssert(fileType !== undefined, \"checkTextfileContents: 'fileType' parameter should be defined\");\n  //parameterAssert(typeof fileType === 'string', `checkTextfileContents: 'fileType' parameter should be a string not a '${typeof fileType}': ${fileType}`);\n  //parameterAssert(fileType !== '', `checkTextfileContents: 'fileType' ${fileType} parameter should be not be an empty string`);\n  //parameterAssert(fileType === 'markdown' || fileType === 'USFM' || fileType === 'YAML' || fileType === 'text', `checkTextfileContents: unrecognised 'fileType' parameter: '${fileType}'`);\n  //parameterAssert(filename !== undefined, \"checkTextfileContents: 'filename' parameter should be defined\");\n  //parameterAssert(typeof filename === 'string', `checkTextfileContents: 'filename' parameter should be a string not a '${typeof filename}': ${filename}`);\n  //parameterAssert(fileText !== undefined, \"checkTextfileContents: 'fileText' parameter should be defined\");\n  //parameterAssert(typeof fileText === 'string', `checkTextfileContents: 'fileText' parameter should be a string not a '${typeof fileText}': ${fileText}`);\n  //parameterAssert(checkingOptions !== undefined, \"checkTextfileContents: 'checkingOptions' parameter should be defined\");\n  var result = {\n    noticeList: []\n  };\n\n  function addNotice(noticeObject) {\n    // debugLog(`dBTC Notice: (priority=${noticeObject.priority}) ${noticeObject.message}${noticeObject.characterIndex > 0 ? ` (at character ${noticeObject.characterIndex})` : \"\"}${noticeObject.excerpt ? ` ${noticeObject.excerpt}` : \"\"}${noticeObject.location}`);\n    //parameterAssert(noticeObject.priority !== undefined, \"dBTCs addNotice: 'priority' parameter should be defined\");\n    //parameterAssert(typeof noticeObject.priority === 'number', `dBTCs addNotice: 'priority' parameter should be a number not a '${typeof noticeObject.priority}': ${noticeObject.priority}`);\n    //parameterAssert(noticeObject.message !== undefined, \"dBTCs addNotice: 'message' parameter should be defined\");\n    //parameterAssert(typeof noticeObject.message === 'string', `dBTCs addNotice: 'message' parameter should be a string not a '${typeof noticeObject.message}': ${noticeObject.message}`);\n    // parameterAssert(characterIndex !== undefined, \"dBTCs addNotice: 'characterIndex' parameter should be defined\");\n    if (noticeObject.characterIndex) {//parameterAssert(typeof noticeObject.characterIndex === 'number', `dBTCs addNotice: 'characterIndex' parameter should be a number not a '${typeof noticeObject.characterIndex}': ${noticeObject.characterIndex}`);\n    } // parameterAssert(excerpt !== undefined, \"dBTCs addNotice: 'excerpt' parameter should be defined\");\n\n\n    if (noticeObject.excerpt) {//parameterAssert(typeof noticeObject.excerpt === 'string', `dBTCs addNotice: 'excerpt' parameter should be a string not a '${typeof noticeObject.excerpt}': ${noticeObject.excerpt}`);\n    } //parameterAssert(noticeObject.location !== undefined, \"dBTCs addNotice: 'location' parameter should be defined\");\n    //parameterAssert(typeof noticeObject.location === 'string', `dBTCs addNotice: 'location' parameter should be a string not a '${typeof noticeObject.location}': ${noticeObject.location}`);\n\n\n    if (noticeObject.debugChain) noticeObject.debugChain = \"checkTextfileContents(\".concat(languageCode, \", \").concat(fileType, \", \").concat(filename, \") \").concat(noticeObject.debugChain);\n    result.noticeList.push(noticeObject);\n  }\n\n  function ourCheckPlainText(textType, textFilename, plainText, givenLocation, checkingOptions) {\n    /**\n    * @description - checks the given text field and processes the returned results\n    * @param {string} plainText - the actual text of the field being checked\n    * @param {string} givenLocation - description of where the field is located\n    * @param {Object} checkingOptions - parameters that might affect the check\n    */\n    // Does basic checks for small errors like leading/trailing spaces, etc.\n    // We assume that checking for compulsory fields is done elsewhere\n    // Updates the global list of notices\n    // debugLog(`cPT ourCheckPlainText(${fieldName}, (${fieldText.length}), ${fieldLocation}, …)`);\n    // parameterAssert(textName !== undefined, \"cPT ourCheckPlainText: 'textName' parameter should be defined\");\n    // parameterAssert(typeof textName === 'string', `cPT ourCheckPlainText: 'fieldName' parameter should be a string not a '${typeof textName}'`);\n    //parameterAssert(plainText !== undefined, \"cPT ourCheckPlainText: 'plainText' parameter should be defined\");\n    //parameterAssert(typeof plainText === 'string', `cPT ourCheckPlainText: 'plainText' parameter should be a string not a '${typeof plainText}'`);\n    //parameterAssert(checkingOptions !== undefined, \"cPT ourCheckPlainText: 'checkingOptions' parameter should be defined\");\n    var resultObject = Object(_plain_text_check__WEBPACK_IMPORTED_MODULE_3__[\"checkPlainText\"])(username, languageCode, repoCode, textType, textFilename, plainText, givenLocation, checkingOptions); // Choose only ONE of the following\n    // This is the fast way of append the results from this field\n    // cptResult.noticeList = cptResult.noticeList.concat(resultObject.noticeList);\n    // If we need to put everything through addNotice, e.g., for debugging or filtering\n    //  process results line by line\n\n    var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(resultObject.noticeList),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var noticeEntry = _step.value;\n        addNotice(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, noticeEntry), {}, {\n          filename: textFilename\n        }));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } // end of ourCheckPlainText function\n  // Main code for checkTextfileContents()\n\n\n  if (!fileText) // Nothing to check\n    return result;\n  var ourLocation = optionalFileLocation;\n  if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n  /*\n  let excerptLength;\n  try {\n      excerptLength = checkingOptions?.excerptLength;\n  } catch (bfcError) { }\n  if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n      excerptLength = DEFAULT_EXCERPT_LENGTH;\n      // debugLog(`Using default excerptLength=${excerptLength}`);\n  }\n  // else\n  // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n  const excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n  const excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n  // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n  */\n\n  /*\n  let textType = 'raw';\n  const filenameLower = filename.toLowerCase();\n  if (filenameLower.endsWith('.usfm')) textType = 'USFM';\n  else if (filenameLower.endsWith('.md')) textType = 'markdown';\n  else if (filenameLower.endsWith('.yaml') || filenameLower.endsWith('.yml')) textType = 'YAML';\n  */\n\n  ourCheckPlainText(fileType, filename, fileText, ourLocation, checkingOptions); //     // Simple check that there aren’t any\n  //     ix = fileText.indexOf('://');\n  //     if (ix === -1) ix = fileText.indexOf('http');\n  //     if (ix === -1) ix = fileText.indexOf('ftp');\n  //     // The following might have to be removed if text fields can contain email addresses\n  //     if (ix === -1) ix = fileText.indexOf('.org');\n  //     if (ix === -1) ix = fileText.indexOf('.com');\n  //     if (ix === -1) ix = fileText.indexOf('.info');\n  //     if (ix === -1) ix = fileText.indexOf('.bible');\n  //     if (ix >= 0) {\n  //         const excerpt = (ix>excerptHalfLength ? '…' : '') + fileText.slice(ix-excerptHalfLength, ix+excerptHalfLengthPlus) + (ix+excerptHalfLengthPlus < fileText.length ? '…' : '')\n  //         addNotice({765, \"Unexpected link\", ix,excerpt, ourAtString});\n  //     }\n  // }\n\n  return result;\n} // end of checkTextfileContents function\n\n//# sourceURL=webpack:///./src/core/file-text-check.js?");

/***/ }),

/***/ "./src/core/getApi.js":
/*!****************************!*\
  !*** ./src/core/getApi.js ***!
  \****************************/
/*! exports provided: clearCheckedArticleCache, markAsChecked, alreadyChecked, clearCaches, formRepoName, cachedGetFile, isFilepathInRepoTree, cachedGetBookFilenameFromManifest, preloadReposIfNecessary, cachedFetchFileFromServerWithTag, repositoryExistsOnDoor43, cachedGetFileUsingFullURL, cachedGetRepositoryZipFile, cachedGetRepositoryTreeFile, getFileListFromZip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearCheckedArticleCache\", function() { return clearCheckedArticleCache; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"markAsChecked\", function() { return markAsChecked; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"alreadyChecked\", function() { return alreadyChecked; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearCaches\", function() { return clearCaches; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formRepoName\", function() { return formRepoName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cachedGetFile\", function() { return cachedGetFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFilepathInRepoTree\", function() { return isFilepathInRepoTree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cachedGetBookFilenameFromManifest\", function() { return cachedGetBookFilenameFromManifest; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"preloadReposIfNecessary\", function() { return preloadReposIfNecessary; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cachedFetchFileFromServerWithTag\", function() { return cachedFetchFileFromServerWithTag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"repositoryExistsOnDoor43\", function() { return repositoryExistsOnDoor43; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cachedGetFileUsingFullURL\", function() { return cachedGetFileUsingFullURL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cachedGetRepositoryZipFile\", function() { return cachedGetRepositoryZipFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cachedGetRepositoryTreeFile\", function() { return cachedGetRepositoryTreeFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFileListFromZip\", function() { return getFileListFromZip; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var yaml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! yaml */ \"./node_modules/yaml/browser/index.js\");\n/* harmony import */ var yaml__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(yaml__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! localforage */ \"./node_modules/localforage/dist/localforage.js\");\n/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(localforage__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var axios_cache_adapter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! axios-cache-adapter */ \"./node_modules/axios-cache-adapter/dist/cache.js\");\n/* harmony import */ var axios_cache_adapter__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(axios_cache_adapter__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! jszip */ \"./node_modules/jszip/dist/jszip.min.js\");\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(jszip__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _books__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./books */ \"./src/core/books/index.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! . */ \"./src/core/index.js\");\n\n\n\n\n\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n\n // const GETAPI_VERSION_STRING = '0.11.4';\n\nvar MAX_INDIVIDUAL_FILES_TO_DOWNLOAD = 5; // More than this and it downloads the zipfile for the entire repo\n\nvar DOOR43_BASE_URL = 'https://git.door43.org/';\nvar API_PATH = 'api/v1';\nvar OBS_PICTURE_ZIP_FILENAME = 'obs-images-360px.zip';\nvar OBS_PICTURE_ZIP_URI = \"https://cdn.door43.org/obs/jpg/\".concat(OBS_PICTURE_ZIP_FILENAME); // caches failed http file fetches so we don’t waste time with repeated attempts\n\nvar failedStore = localforage__WEBPACK_IMPORTED_MODULE_6___default.a.createInstance({\n  driver: [localforage__WEBPACK_IMPORTED_MODULE_6___default.a.INDEXEDDB],\n  name: 'CV-failed-store'\n}); // caches zip file fetches done by cachedGetRepositoryZipFile() and cachedGetRepositoryTreeFile()\n\nvar zipJsonStore = localforage__WEBPACK_IMPORTED_MODULE_6___default.a.createInstance({\n  driver: [localforage__WEBPACK_IMPORTED_MODULE_6___default.a.INDEXEDDB],\n  name: 'CV-zip-json-store'\n}); // caches http file fetches done by cachedFetchFileFromServerWithBranch()\n\nvar cacheStore = localforage__WEBPACK_IMPORTED_MODULE_6___default.a.createInstance({\n  driver: [localforage__WEBPACK_IMPORTED_MODULE_6___default.a.INDEXEDDB],\n  name: 'CV-web-cache'\n}); // caches the unzipped files requested so we don’t do repeated unzipping of the same file which is slow in JS\n\nvar unzipStore = localforage__WEBPACK_IMPORTED_MODULE_6___default.a.createInstance({\n  driver: [localforage__WEBPACK_IMPORTED_MODULE_6___default.a.INDEXEDDB],\n  name: 'CV-unzip-store'\n}); // API for http requests\n// NOTE: Even if data expires in this AxiosCacheAdapter, the localforage caches don’t have the same / any expiry ages\n//        (We expect the users of the demos to manually clear the caches when an update is required.)\n\nvar Door43Api = Object(axios_cache_adapter__WEBPACK_IMPORTED_MODULE_7__[\"setup\"])({\n  baseURL: DOOR43_BASE_URL,\n  cache: {\n    store: cacheStore,\n    maxAge: 1 * 60 * 60 * 1000,\n    // 1 hour (unless they manually clear the cache)\n    exclude: {\n      query: false\n    },\n    key: function key(req) {\n      // if (req.params) debugger\n      var serialized = req.params instanceof URLSearchParams ? req.params.toString() : JSON.stringify(req.params) || '';\n      return req.url + serialized;\n    }\n  }\n}); // Caches the path names of files which have been already checked\n//  Used for storing paths to TA and TW articles and lexicon entries that have already been checked\n//      so that we don’t needlessly check them again each time they're linked to\n\nvar checkedArticleStore = localforage__WEBPACK_IMPORTED_MODULE_6___default.a.createInstance({\n  driver: [localforage__WEBPACK_IMPORTED_MODULE_6___default.a.INDEXEDDB],\n  name: 'CV-checked-path-store'\n}); // Sadly we have to clear this for each run, otherwise we wouldn’t get any warnings that were from these checks\n\nfunction clearCheckedArticleCache() {\n  return _clearCheckedArticleCache.apply(this, arguments);\n}\n/**\n*\n* @param {string} username\n* @param {string} repository name\n* @param {string} path\n* @param {string} branch\n*/\n\nfunction _clearCheckedArticleCache() {\n  _clearCheckedArticleCache = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee() {\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"clearCheckedArticleCache()…\");\n            _context.next = 3;\n            return checkedArticleStore.clear();\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _clearCheckedArticleCache.apply(this, arguments);\n}\n\nfunction markAsChecked(_x) {\n  return _markAsChecked.apply(this, arguments);\n}\n/**\n*\n* @param {string} username\n* @param {string} repository name\n* @param {string} path\n* @param {string} branch\n* @returns true or false\n*/\n\nfunction _markAsChecked() {\n  _markAsChecked = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee2(_ref) {\n    var username, repository, path, branch, dummyPath;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            username = _ref.username, repository = _ref.repository, path = _ref.path, branch = _ref.branch;\n            // debugLog(`markAsChecked(${username}, ${repository}, ${path}, ${branch})…`);\n            dummyPath = path__WEBPACK_IMPORTED_MODULE_4___default.a.join(username, repository, branch, path);\n            _context2.next = 4;\n            return checkedArticleStore.setItem(dummyPath, true);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _markAsChecked.apply(this, arguments);\n}\n\nfunction alreadyChecked(_x2) {\n  return _alreadyChecked.apply(this, arguments);\n}\n/**\n * Clear all the localforage.INDEXEDDB stores\n * @return {Promise<void>}\n */\n\nfunction _alreadyChecked() {\n  _alreadyChecked = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee3(_ref2) {\n    var username, repository, path, branch, dummyPath, alreadyCheckedResult;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            username = _ref2.username, repository = _ref2.repository, path = _ref2.path, branch = _ref2.branch;\n            // functionLog(`alreadyChecked(${username}, ${repository}, ${path}, ${branch})…`);\n            // const numCheckedArticles = await checkedArticleStore.length();\n            // functionLog(`alreadyChecked(${username}, ${repository}, ${path}, ${branch}) with ${numCheckedArticles} already checked articles…`);\n            dummyPath = path__WEBPACK_IMPORTED_MODULE_4___default.a.join(username, repository, branch, path);\n            _context3.next = 4;\n            return checkedArticleStore.getItem(dummyPath);\n\n          case 4:\n            alreadyCheckedResult = _context3.sent;\n            return _context3.abrupt(\"return\", !!alreadyCheckedResult);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _alreadyChecked.apply(this, arguments);\n}\n\nfunction clearCaches() {\n  return _clearCaches.apply(this, arguments);\n}\n/**\n * @description - Forms and returns a Door43 repoName string\n * @param {string} languageCode - the language code, e.g., 'en'\n * @param {string} repoCode - the repo code, e.g., 'TN2'\n * @return {String} - the Door43 repoName string\n */\n\nfunction _clearCaches() {\n  _clearCaches = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee4() {\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"Clearing all four CV localforage.INDEXEDDB caches…\"); // const tasks = [zipJsonStore, cacheStore].map(localforage.clear);\n            // const results = await Promise.all(tasks);\n            // results.forEach(x => userLog(\"Done it\", x));\n\n            _context4.next = 3;\n            return failedStore.clear();\n\n          case 3:\n            _context4.next = 5;\n            return zipJsonStore.clear();\n\n          case 5:\n            _context4.next = 7;\n            return cacheStore.clear();\n\n          case 7:\n            _context4.next = 9;\n            return unzipStore.clear();\n\n          case 9:\n            _context4.next = 11;\n            return clearCheckedArticleCache();\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _clearCaches.apply(this, arguments);\n}\n\nfunction formRepoName(languageCode, repoCode) {\n  //    userLog(`formRepoName('${languageCode}', '${repoCode}')…`);\n  // TODO: Should we also check the username 'unfoldingWord' and/or 'Door43-Catalog' here???\n  //        (We don’t currently have the username available in this function.)\n  if (repoCode === 'LT') repoCode = languageCode === 'en' ? 'ULT' : 'GLT';\n  if (repoCode === 'ST') repoCode = languageCode === 'en' ? 'UST' : 'GST';\n  var repo_languageCode = languageCode;\n  if (repoCode === 'UHB') repo_languageCode = 'hbo';else if (repoCode === 'UGNT') repo_languageCode = 'el-x-koine';\n  var repoName; // if (repoCode.endsWith('2')) repoCode = repoCode.slice(0, repoCode.length - 1);\n\n  repoName = \"\".concat(repo_languageCode, \"_\").concat(repoCode.toLowerCase());\n  return repoName;\n}\n/**\n * add new repo to list if missing\n * @param repos\n * @param newRepo\n */\n\n/*\nfunction addToListIfMissing(repos, newRepo) {\n  if (!repos.includes(newRepo)) {\n    repos.unshift(newRepo);\n  }\n}\n*/\n\n/**\n * try to get previously unzipped file from cache\n * @param {string} path\n * @return {Promise<unknown>} resolves to file contents or null if not found\n */\n\nfunction getUnZippedFile(_x3) {\n  return _getUnZippedFile.apply(this, arguments);\n}\n/**\n * try to get previously unzipped picture file from cache\n * @param {string} uri\n * @return {Promise<unknown>} resolves to file contents or null if not found\n */\n\n\nfunction _getUnZippedFile() {\n  _getUnZippedFile = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee5(path) {\n    var contents;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return unzipStore.getItem(path.toLowerCase());\n\n          case 2:\n            contents = _context5.sent;\n            return _context5.abrupt(\"return\", contents);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getUnZippedFile.apply(this, arguments);\n}\n\nfunction getUnZippedPictureFile(_x4) {\n  return _getUnZippedPictureFile.apply(this, arguments);\n}\n/**\n * searches for files in this order:\n *   - cache of uncompressed files (unzipStore)\n *   - cache of zipped repos (zipJsonStore)\n *   - and finally calls cachedFetchFileFromServerWithBranch() which first checks in cacheStore to see if already fetched. * @param {string} username\n * @param {string} repository\n * @param {string} path\n * @param {string} branch\n * @return {Promise<*>}\n */\n// This is the function that we call the most from the outside\n\n\nfunction _getUnZippedPictureFile() {\n  _getUnZippedPictureFile = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee6(uri) {\n    var contents;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return unzipStore.getItem(uri);\n\n          case 2:\n            contents = _context6.sent;\n            return _context6.abrupt(\"return\", contents);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getUnZippedPictureFile.apply(this, arguments);\n}\n\nfunction cachedGetFile(_x5) {\n  return _cachedGetFile.apply(this, arguments);\n}\n\nfunction _cachedGetFile() {\n  _cachedGetFile = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee7(_ref3) {\n    var username, repository, path, branch, filePath, contents;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            username = _ref3.username, repository = _ref3.repository, path = _ref3.path, branch = _ref3.branch;\n            // functionLog(`cachedGetFile(${username}, ${repository}, ${path}, ${branch})…`);\n            //parameterAssert(typeof username === 'string' && username.length, `cachedGetFile: username parameter should be a non-empty string not ${typeof username}: ${username}`);\n            //parameterAssert(typeof repository === 'string' && repository.length, `cachedGetFile: repository parameter should be a non-empty string not ${typeof repository}: ${repository}`);\n            //parameterAssert(typeof path === 'string' && path.length, `cachedGetFile: path parameter should be a non-empty string not ${typeof path}: ${path}`);\n            //parameterAssert(typeof branch === 'string' && branch.length, `cachedGetFile: branch parameter should be a non-empty string not ${typeof branch}: ${branch}`);\n            filePath = path__WEBPACK_IMPORTED_MODULE_4___default.a.join(username, repository, path, branch);\n            _context7.next = 4;\n            return getUnZippedFile(filePath);\n\n          case 4:\n            contents = _context7.sent;\n\n            if (!contents) {\n              _context7.next = 7;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", contents);\n\n          case 7:\n            _context7.next = 9;\n            return getFileFromZip({\n              username: username,\n              repository: repository,\n              path: path,\n              branchOrRelease: branch\n            });\n\n          case 9:\n            contents = _context7.sent;\n\n            if (contents) {\n              _context7.next = 14;\n              break;\n            }\n\n            _context7.next = 13;\n            return cachedFetchFileFromServerWithBranch({\n              username: username,\n              repository: repository,\n              path: path,\n              branch: branch\n            });\n\n          case 13:\n            contents = _context7.sent;\n\n          case 14:\n            if (!contents) {\n              _context7.next = 17;\n              break;\n            }\n\n            _context7.next = 17;\n            return unzipStore.setItem(filePath.toLowerCase(), contents);\n\n          case 17:\n            return _context7.abrupt(\"return\", contents);\n\n          case 18:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _cachedGetFile.apply(this, arguments);\n}\n\nfunction isFilepathInRepoTree(_x6) {\n  return _isFilepathInRepoTree.apply(this, arguments);\n}\n/**\n * Retrieve manifest.yaml from requested repo\n * @param {string} username\n * @param {string} repository\n * @param {string} branch\n * @return {Promise<[]|*[]>} resolves to manifest contents if downloaded (else undefined)\n */\n\nfunction _isFilepathInRepoTree() {\n  _isFilepathInRepoTree = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee8(_ref4) {\n    var username, repository, path, branch, treeJSON;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            username = _ref4.username, repository = _ref4.repository, path = _ref4.path, branch = _ref4.branch;\n            _context8.next = 3;\n            return getTreeFromStore(username, repository, branch);\n\n          case 3:\n            treeJSON = _context8.sent;\n\n            if (treeJSON) {\n              _context8.next = 8;\n              break;\n            }\n\n            _context8.next = 7;\n            return cachedFetchFileFromServerWithBranch({\n              username: username,\n              repository: repository,\n              path: path,\n              branch: branch\n            });\n\n          case 7:\n            treeJSON = _context8.sent;\n\n          case 8:\n            return _context8.abrupt(\"return\", treeJSON.includes(path));\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _isFilepathInRepoTree.apply(this, arguments);\n}\n\nfunction cachedGetManifest(_x7) {\n  return _cachedGetManifest.apply(this, arguments);\n}\n/**\n * Retrieve manifest.yaml from requested repo\n * @param {string} username\n * @param {string} repository\n * @param {string} branch\n * @param {string} bookID -- 3-character USFM book code\n * @return {Promise<[]|*[]>} resolves to filename from the manifest for the book (else undefined)\n */\n\n\nfunction _cachedGetManifest() {\n  _cachedGetManifest = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee9(_ref5) {\n    var username, repository, branch, manifestContents, formData;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            username = _ref5.username, repository = _ref5.repository, branch = _ref5.branch;\n            _context9.next = 3;\n            return cachedGetFile({\n              username: username,\n              repository: repository,\n              path: 'manifest.yaml',\n              branch: branch\n            });\n\n          case 3:\n            manifestContents = _context9.sent;\n\n            try {\n              formData = yaml__WEBPACK_IMPORTED_MODULE_5___default.a.parse(manifestContents); // debugLog(\"yaml.parse(YAMLText) got formData\", JSON.stringify(formData));\n            } catch (yamlError) {\n              console.error(\"\".concat(username, \" \").concat(repository, \" \").concat(branch, \" manifest yaml parse error: \").concat(yamlError.message));\n            }\n\n            return _context9.abrupt(\"return\", formData);\n\n          case 6:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _cachedGetManifest.apply(this, arguments);\n}\n\nfunction cachedGetBookFilenameFromManifest(_x8) {\n  return _cachedGetBookFilenameFromManifest.apply(this, arguments);\n}\n/**\n * Preloads any necessary repo zips, before running book package checks\n *   This allows the calling app to clear cache and start loading repos in the backgound as soon as it starts up.\n *      In this case it would not need to use await to wait for results.\n *   TRICKY: note that even if the user is super fast in selecting books and clicking next, it will not hurt anything.\n *            cachedGetFileFromZipOrServer() would just be fetching files directly from repo until the zips are loaded.\n *            After that the files would be pulled out of zipJsonStore.\n * @param {string} givenUsername\n * @param {string} givenLanguageCode\n * @param {Array} bookIDList - one or more books that will be checked\n * @param {string} branch - optional, defaults to master\n * @param {Array} repoList - optional, list of repos to pre-load\n * @return {Promise<Boolean>} resolves to true if file loads are successful\n */\n\nfunction _cachedGetBookFilenameFromManifest() {\n  _cachedGetBookFilenameFromManifest = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee10(_ref6) {\n    var username, repository, branch, bookID, manifestJSON, _iterator, _step, projectEntry, bookPath;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            username = _ref6.username, repository = _ref6.repository, branch = _ref6.branch, bookID = _ref6.bookID;\n            _context10.next = 3;\n            return cachedGetManifest({\n              username: username,\n              repository: repository,\n              branch: branch\n            });\n\n          case 3:\n            manifestJSON = _context10.sent;\n            _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(manifestJSON.projects);\n            _context10.prev = 5;\n\n            _iterator.s();\n\n          case 7:\n            if ((_step = _iterator.n()).done) {\n              _context10.next = 15;\n              break;\n            }\n\n            projectEntry = _step.value;\n\n            if (!(projectEntry.identifier === bookID)) {\n              _context10.next = 13;\n              break;\n            }\n\n            bookPath = projectEntry.path;\n            if (bookPath.startsWith('./')) bookPath = bookPath.slice(2);\n            return _context10.abrupt(\"return\", bookPath);\n\n          case 13:\n            _context10.next = 7;\n            break;\n\n          case 15:\n            _context10.next = 20;\n            break;\n\n          case 17:\n            _context10.prev = 17;\n            _context10.t0 = _context10[\"catch\"](5);\n\n            _iterator.e(_context10.t0);\n\n          case 20:\n            _context10.prev = 20;\n\n            _iterator.f();\n\n            return _context10.finish(20);\n\n          case 23:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[5, 17, 20, 23]]);\n  }));\n  return _cachedGetBookFilenameFromManifest.apply(this, arguments);\n}\n\nfunction preloadReposIfNecessary(_x9, _x10, _x11, _x12, _x13) {\n  return _preloadReposIfNecessary.apply(this, arguments);\n}\n/**\n * does http file fetch from server  uses cacheStore to minimize repeated fetches of same file\n * @param {string} username\n * @param {string} repository\n * @param {string} path\n * @param {string} branch\n * @return {Promise<null|any>} resolves to file content\n */\n\nfunction _preloadReposIfNecessary() {\n  _preloadReposIfNecessary = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee11(givenUsername, givenLanguageCode, bookIDList, branchOrRelease, repoList) {\n    var success, repos_, _iterator2, _step2, bookID, whichTestament, origLangRepo, _iterator3, _step3, thisRepoCode, adjustedUsername, fetchFunction, adjustedLanguageCode, adjustedBranchOrRelease, adjustedRepoCode, repoName, zipFetchSucceeded, _zipFetchSucceeded, zipBlob, response, zipArrayBuffer;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            // functionLog(`preloadReposIfNecessary(${givenUsername}, ${givenLanguageCode}, ${bookIDList} (${typeof bookID}), ${branchOrRelease}, [${repoList}])…`);\n            success = true;\n            repos_ = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(repoList);\n\n            if (bookIDList.includes('OBS')) {\n              if (!repos_.includes('OBS')) repos_.unshift('OBS'); // push to beginning of list\n            }\n\n            if (bookIDList && Array.isArray(bookIDList) && bookIDList.length > MAX_INDIVIDUAL_FILES_TO_DOWNLOAD) {\n              // Fetch individually if checking less books\n              // make sure we have the original languages needed\n              _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(bookIDList);\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  bookID = _step2.value;\n\n                  if (bookID !== 'OBS') {\n                    whichTestament = _books__WEBPACK_IMPORTED_MODULE_9__[\"testament\"](bookID); // returns 'old' or 'new'\n\n                    Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"logicAssert\"])(whichTestament === 'old' || whichTestament === 'new', \"preloadReposIfNecessary() couldn\\u2019t find testament for '\".concat(bookID, \"'\"));\n                    origLangRepo = whichTestament === 'old' ? 'UHB' : 'UGNT';\n                    if (!repos_.includes(origLangRepo)) repos_.unshift(origLangRepo);\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            } // debugLog(`  Adjusted repo list: (${repos_.length}) ${JSON.stringify(repos_)}`);\n            // // See if the required repos are there already\n            // debugLog(`Check if need to preload ${repos_.length} repos: ${repos_}`)\n            // const newRepoList = [];\n            // for (const repoCode of repos_) {\n            //   const repoName = formRepoName(languageCode, repoCode);\n            //   // debugLog(`preloadReposIfNecessary: checking zip file for ${repoName}…`);\n            //   const uri = zipUri({ username, repository: repoName, branchOrRelease });\n            //   const zipBlob = await zipJsonStore.getItem(uri.toLowerCase());\n            //   if (!zipBlob) newRepoList.push(repoCode);\n            // }\n            // if (newRepoList.length) { // Fetch zipped versions of all the repos needing to be preloaded\n            //   userLog(`Need to preload ${newRepoList.length} repos: ${newRepoList}`)\n            //   for (const repoCode of newRepoList) {\n            //     const repoName = formRepoName(languageCode, repoCode);\n            //     userLog(`preloadReposIfNecessary: preloading zip file for ${repoName}…`);\n            //     const zipFetchSucceeded = await cachedGetRepositoryZipFile({ username, repository: repoName, branchOrRelease });\n            //     if (!zipFetchSucceeded) {\n            //       userLog(`preloadReposIfNecessary: misfetched zip file for ${repoCode} repo with ${zipFetchSucceeded}`);\n            //       success = false;\n            //     }\n            //   }\n            // }\n            // else userLog(\"All repos were cached already!\");\n\n\n            _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(repos_);\n            _context11.prev = 5;\n\n            _iterator3.s();\n\n          case 7:\n            if ((_step3 = _iterator3.n()).done) {\n              _context11.next = 51;\n              break;\n            }\n\n            thisRepoCode = _step3.value;\n            // debugLog(`preloadReposIfNecessary: looking at repoCode '${repoCode}'…`);\n            adjustedUsername = givenUsername;\n\n            if (givenUsername === 'Door43-Catalog' && _defaults__WEBPACK_IMPORTED_MODULE_10__[\"CATALOG_NEXT_ONLY_REPO_CODES_LIST\"].includes(thisRepoCode) && givenLanguageCode === 'en') {\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"preloadReposIfNecessary: switching \".concat(thisRepoCode, \" username from 'Door43-Catalog' to 'unfoldingWord'\"));\n              adjustedUsername = 'unfoldingWord'; // TODO: Ideally we should also make it get the latest release (rather than master)\n            }\n\n            fetchFunction = cachedGetRepositoryZipFile;\n            adjustedLanguageCode = givenLanguageCode;\n            if (givenLanguageCode === 'hbo' && thisRepoCode !== 'UHB' || givenLanguageCode === 'el-x-koine' && thisRepoCode !== 'UGNT') adjustedLanguageCode = 'en'; // Assume English then\n\n            adjustedBranchOrRelease = branchOrRelease;\n            adjustedRepoCode = thisRepoCode;\n\n            if (thisRepoCode.endsWith('2')) {\n              adjustedRepoCode = adjustedRepoCode.substring(0, adjustedRepoCode.length - 1); // Remove the '2' from the end\n\n              adjustedBranchOrRelease = 'newFormat';\n            }\n\n            if (thisRepoCode.endsWith('tree')) {\n              adjustedRepoCode = adjustedRepoCode.substring(0, adjustedRepoCode.length - 4); // Remove the 'tree' from the end\n\n              fetchFunction = cachedGetRepositoryTreeFile;\n            } // else if (repoCode === 'OBS-TN' || repoCode === 'OBS-TQ' || repoCode === 'OBS-SN' || repoCode === 'OBS-SQ')\n            //   adjustedBranchOrRelease = 'newFormat';\n\n\n            repoName = formRepoName(adjustedLanguageCode, adjustedRepoCode); // debugLog(`preloadReposIfNecessary: preloading zip or JSON file for ${repoName}…`);\n\n            _context11.next = 21;\n            return fetchFunction({\n              username: adjustedUsername,\n              repository: repoName,\n              branchOrRelease: adjustedBranchOrRelease\n            });\n\n          case 21:\n            zipFetchSucceeded = _context11.sent;\n\n            if (!zipFetchSucceeded) {\n              console.error(\"preloadReposIfNecessary: misfetched zip or JSON file for \".concat(adjustedUsername, \" \").concat(thisRepoCode, \" (\").concat(adjustedRepoCode, \") repo with \").concat(zipFetchSucceeded));\n              success = false;\n            }\n\n            if (!(!success && (thisRepoCode === 'UHB' || thisRepoCode === 'UGNT') && adjustedUsername !== 'Door43-Catalog')) {\n              _context11.next = 30;\n              break;\n            }\n\n            // Have a second try\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"preloadReposIfNecessary: trying username='Door43-Catalog' instead of '\".concat(adjustedUsername, \"' for \").concat(repoName, \"\\u2026\"));\n            adjustedUsername = 'Door43-Catalog';\n            _context11.next = 28;\n            return fetchFunction({\n              username: adjustedUsername,\n              repository: repoName,\n              branchOrRelease: adjustedBranchOrRelease\n            });\n\n          case 28:\n            _zipFetchSucceeded = _context11.sent;\n            if (_zipFetchSucceeded) success = true;else {\n              console.error(\"preloadReposIfNecessary: misfetched zip file for \".concat(adjustedUsername, \" \").concat(thisRepoCode, \" (\").concat(adjustedRepoCode, \") repo with \").concat(_zipFetchSucceeded));\n              success = false;\n            }\n\n          case 30:\n            if (!(thisRepoCode === 'OBS')) {\n              _context11.next = 49;\n              break;\n            }\n\n            _context11.next = 33;\n            return zipJsonStore.getItem(OBS_PICTURE_ZIP_FILENAME);\n\n          case 33:\n            zipBlob = _context11.sent;\n\n            if (zipBlob) {\n              _context11.next = 49;\n              break;\n            }\n\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"downloadingOBSPicturesZipFile(\".concat(OBS_PICTURE_ZIP_URI, \")\\u2026\"));\n            _context11.next = 38;\n            return fetch(OBS_PICTURE_ZIP_URI);\n\n          case 38:\n            response = _context11.sent;\n\n            if (!(response.status === 200 || response.status === 0)) {\n              _context11.next = 47;\n              break;\n            }\n\n            _context11.next = 42;\n            return response.arrayBuffer();\n\n          case 42:\n            zipArrayBuffer = _context11.sent;\n            _context11.next = 45;\n            return zipJsonStore.setItem(OBS_PICTURE_ZIP_FILENAME, zipArrayBuffer);\n\n          case 45:\n            _context11.next = 49;\n            break;\n\n          case 47:\n            console.error(\"downloadingOBSPicturesZipFile(\".concat(OBS_PICTURE_ZIP_URI, \") -- got response status: \").concat(response.status));\n            success = false;\n\n          case 49:\n            _context11.next = 7;\n            break;\n\n          case 51:\n            _context11.next = 56;\n            break;\n\n          case 53:\n            _context11.prev = 53;\n            _context11.t0 = _context11[\"catch\"](5);\n\n            _iterator3.e(_context11.t0);\n\n          case 56:\n            _context11.prev = 56;\n\n            _iterator3.f();\n\n            return _context11.finish(56);\n\n          case 59:\n            return _context11.abrupt(\"return\", success);\n\n          case 60:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[5, 53, 56, 59]]);\n  }));\n  return _preloadReposIfNecessary.apply(this, arguments);\n}\n\nfunction cachedFetchFileFromServerWithBranch(_x14) {\n  return _cachedFetchFileFromServerWithBranch.apply(this, arguments);\n}\n\nfunction _cachedFetchFileFromServerWithBranch() {\n  _cachedFetchFileFromServerWithBranch = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee12(_ref7) {\n    var username, repository, path, _ref7$branch, branch, uri;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            username = _ref7.username, repository = _ref7.repository, path = _ref7.path, _ref7$branch = _ref7.branch, branch = _ref7$branch === void 0 ? 'master' : _ref7$branch;\n            // functionLog(`cachedFetchFileFromServerWithBranch(${username}, ${repository}, ${path}, ${branch})…`);\n            // TODO: Check how slow this next call is -- can it be avoided or cached?\n            // RJH removed this 2Oct2020 -- what’s the point -- it just slows things down --\n            //      if it needs to be checked, should be checked before this point\n            // const repositoryExistsOnDoor43 = await repositoryExistsOnDoor43({ username, repository });\n            // let uri;\n            uri = path__WEBPACK_IMPORTED_MODULE_4___default.a.join(username, repository, 'raw/branch', branch, path);\n            _context12.next = 4;\n            return cachedFetchFileFromServerWorker(uri, username, repository, path, branch);\n\n          case 4:\n            return _context12.abrupt(\"return\", _context12.sent);\n\n          case 5:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _cachedFetchFileFromServerWithBranch.apply(this, arguments);\n}\n\n;\n/**\n * does http file fetch from server  uses cacheStore to minimize repeated fetches of same file\n * @param {string} username\n * @param {string} repository\n * @param {string} path\n * @param {string} tag\n * @return {Promise<null|any>} resolves to file content\n */\n\nfunction cachedFetchFileFromServerWithTag(_x15) {\n  return _cachedFetchFileFromServerWithTag.apply(this, arguments);\n}\n\nfunction _cachedFetchFileFromServerWithTag() {\n  _cachedFetchFileFromServerWithTag = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee13(_ref8) {\n    var username, repository, path, tag, uri;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            username = _ref8.username, repository = _ref8.repository, path = _ref8.path, tag = _ref8.tag;\n            // functionLog(`cachedFetchFileFromServerWithTag(${username}, ${repository}, ${path}, ${tag})…`);\n            // TODO: Check how slow this next call is -- can it be avoided or cached?\n            // RJH removed this 2Oct2020 -- what’s the point -- it just slows things down --\n            //      if it needs to be checked, should be checked before this point\n            // const repositoryExistsOnDoor43 = await repositoryExistsOnDoor43({ username, repository });\n            // let uri;\n            uri = path__WEBPACK_IMPORTED_MODULE_4___default.a.join(username, repository, 'raw/tag', tag, path);\n            _context13.next = 4;\n            return cachedFetchFileFromServerWorker(uri, username, repository, path, tag);\n\n          case 4:\n            return _context13.abrupt(\"return\", _context13.sent);\n\n          case 5:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _cachedFetchFileFromServerWithTag.apply(this, arguments);\n}\n\n;\n/**\n * does http file fetch from server  uses cacheStore to minimize repeated fetches of same file\n * @param {string} username\n * @param {string} repository\n * @param {string} path\n * @param {string} branch\n * @return {Promise<null|any>} resolves to file content\n */\n\nfunction cachedFetchFileFromServerWorker(_x16, _x17, _x18, _x19, _x20) {\n  return _cachedFetchFileFromServerWorker.apply(this, arguments);\n}\n\nfunction _cachedFetchFileFromServerWorker() {\n  _cachedFetchFileFromServerWorker = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee14(uri, username, repository, path, branchOrTag) {\n    var failMessage, data;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return failedStore.getItem(uri.toLowerCase());\n\n          case 2:\n            failMessage = _context14.sent;\n\n            if (!failMessage) {\n              _context14.next = 5;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", null);\n\n          case 5:\n            _context14.prev = 5;\n            _context14.next = 8;\n            return cachedGetFileUsingPartialURL({\n              uri: uri\n            });\n\n          case 8:\n            data = _context14.sent;\n            return _context14.abrupt(\"return\", data);\n\n          case 12:\n            _context14.prev = 12;\n            _context14.t0 = _context14[\"catch\"](5);\n            console.error(\"cachedFetchFileFromServerWorker could not fetch \".concat(username, \" \").concat(repository, \" \").concat(branchOrTag, \" \").concat(path, \": \").concat(_context14.t0));\n            /* await */\n\n            failedStore.setItem(uri.toLowerCase(), _context14.t0.message);\n            return _context14.abrupt(\"return\", null);\n\n          case 17:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[5, 12]]);\n  }));\n  return _cachedFetchFileFromServerWorker.apply(this, arguments);\n}\n\n;\n/**\n *  older getFile without that doesn’t use the unzipStore\n * @param {string} username\n * @param {string} repository\n * @param {string} path\n * @param {string} branch\n * @return {Promise<*>}\n */\n\n/*\nasync function cachedGetFileFromZipOrServer({ username, repository, path, branch }) {\n  // functionLog(`cachedGetFileFromZipOrServer(${username}, ${repository}, ${path}, ${branch})…`);\n  let file;\n  file = await getFileFromZip({ username, repository, path, branch });\n  if (!file) {\n    file = await cachedFetchFileFromServerWithBranch({ username, repository, path, branch });\n  }\n  return file;\n}\n*/\n\nfunction getUID(_x21) {\n  return _getUID.apply(this, arguments);\n}\n\nfunction _getUID() {\n  _getUID = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee15(_ref9) {\n    var username, uri, user, uid;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            username = _ref9.username;\n            // functionLog(`getUID(${username})…`);\n            uri = path__WEBPACK_IMPORTED_MODULE_4___default.a.join(API_PATH, 'users', username); // debugLog(`getUID uri=${uri}`);\n\n            _context15.next = 4;\n            return cachedGetFileUsingPartialURL({\n              uri: uri\n            });\n\n          case 4:\n            user = _context15.sent;\n            // debugLog(`getUID user=${user}`);\n            uid = user.id; // debugLog(`  getUID returning: ${uid}`);\n\n            return _context15.abrupt(\"return\", uid);\n\n          case 7:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _getUID.apply(this, arguments);\n}\n\nfunction repositoryExistsOnDoor43(_x22) {\n  return _repositoryExistsOnDoor.apply(this, arguments);\n}\n\nfunction _repositoryExistsOnDoor() {\n  _repositoryExistsOnDoor = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee16(_ref10) {\n    var username, repository, uid, params, uri, retrievedRepoList, _yield$cachedGetFileU, retrievedRepoListData, desiredMatch, filteredRepoList;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            username = _ref10.username, repository = _ref10.repository;\n            _context16.prev = 1;\n            _context16.next = 4;\n            return getUID({\n              username: username\n            });\n\n          case 4:\n            uid = _context16.sent;\n            _context16.next = 11;\n            break;\n\n          case 7:\n            _context16.prev = 7;\n            _context16.t0 = _context16[\"catch\"](1);\n            console.error(\"repositoryExistsOnDoor43(\".concat(username, \", \").concat(repository, \") - invalid username\"), _context16.t0.message);\n            return _context16.abrupt(\"return\", false);\n\n          case 11:\n            // debugLog(`repositoryExistsOnDoor43 uid=${uid}`);\n            // Default limit is 10 -- way too small\n            params = {\n              q: repository,\n              limit: 500,\n              uid: uid\n            }; // Documentation says limit is 50, but larger numbers seem to work ok\n\n            uri = path__WEBPACK_IMPORTED_MODULE_4___default.a.join(API_PATH, 'repos', \"search\"); // debugLog(`repositoryExistsOnDoor43 uri=${uri}`);\n\n            _context16.prev = 13;\n            _context16.next = 16;\n            return cachedGetFileUsingPartialURL({\n              uri: uri,\n              params: params\n            });\n\n          case 16:\n            _yield$cachedGetFileU = _context16.sent;\n            retrievedRepoListData = _yield$cachedGetFileU.data;\n            retrievedRepoList = retrievedRepoListData;\n            _context16.next = 25;\n            break;\n\n          case 21:\n            _context16.prev = 21;\n            _context16.t1 = _context16[\"catch\"](13);\n            console.error(\"repositoryExistsOnDoor43(\".concat(username, \", \").concat(repository, \") - error fetching repo list\"), _context16.t1.message);\n            return _context16.abrupt(\"return\", false);\n\n          case 25:\n            if (!(retrievedRepoList.length < 1)) {\n              _context16.next = 28;\n              break;\n            }\n\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"repositoryExistsOnDoor43(\".concat(username, \", \").concat(repository, \") - no repos found\"));\n            return _context16.abrupt(\"return\", false);\n\n          case 28:\n            // debugLog(`repositoryExistsOnDoor43 retrievedRepoList (${retrievedRepoList.length})=${JSON.stringify(retrievedRepoList)}`);\n            // for (const thisRepo of retrievedRepoList) userLog(`  thisRepo (${JSON.stringify(Object.keys(thisRepo))}) =${JSON.stringify(thisRepo.name)}`);\n            desiredMatch = \"\".concat(username, \"/\").concat(repository).toLowerCase();\n            filteredRepoList = retrievedRepoList.filter(function (repo) {\n              return repo.full_name.toLowerCase() === desiredMatch;\n            });\n\n            if (!(filteredRepoList.length < 1)) {\n              _context16.next = 33;\n              break;\n            }\n\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"repositoryExistsOnDoor43(\".concat(username, \", \").concat(repository, \") - repo not found \").concat(retrievedRepoList.length, \" \").concat(filteredRepoList.length));\n            return _context16.abrupt(\"return\", false);\n\n          case 33:\n            return _context16.abrupt(\"return\", true);\n\n          case 34:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16, null, [[1, 7], [13, 21]]);\n  }));\n  return _repositoryExistsOnDoor.apply(this, arguments);\n}\n\n;\n\nfunction cachedGetFileUsingPartialURL(_x23) {\n  return _cachedGetFileUsingPartialURL.apply(this, arguments);\n}\n\nfunction _cachedGetFileUsingPartialURL() {\n  _cachedGetFileUsingPartialURL = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee17(_ref11) {\n    var uri, params, response;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            uri = _ref11.uri, params = _ref11.params;\n            _context17.next = 3;\n            return Door43Api.get(DOOR43_BASE_URL + uri, {\n              params: params\n            });\n\n          case 3:\n            response = _context17.sent;\n            if (response.request.fromCache !== true) Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"  cachedGetFileUsingPartialURL downloaded Door43 \".concat(uri)); // debugLog(`  cachedGetFileUsingPartialURL returning: ${JSON.stringify(response.data)}`);\n\n            return _context17.abrupt(\"return\", response.data);\n\n          case 6:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n  return _cachedGetFileUsingPartialURL.apply(this, arguments);\n}\n\n;\nfunction cachedGetFileUsingFullURL(_x24) {\n  return _cachedGetFileUsingFullURL.apply(this, arguments);\n}\n\nfunction _cachedGetFileUsingFullURL() {\n  _cachedGetFileUsingFullURL = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee18(_ref12) {\n    var uri, params, pictureContents, zipBlob, zip, zipPath, response;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            uri = _ref12.uri, params = _ref12.params;\n\n            if (!uri.startsWith('https://cdn.door43.org/obs/jpg/360px/obs')) {\n              _context18.next = 29;\n              break;\n            }\n\n            _context18.next = 4;\n            return getUnZippedPictureFile(uri);\n\n          case 4:\n            pictureContents = _context18.sent;\n\n            if (!pictureContents) {\n              _context18.next = 7;\n              break;\n            }\n\n            return _context18.abrupt(\"return\", pictureContents);\n\n          case 7:\n            _context18.next = 9;\n            return zipJsonStore.getItem(OBS_PICTURE_ZIP_FILENAME);\n\n          case 9:\n            zipBlob = _context18.sent;\n            _context18.prev = 10;\n\n            if (!zipBlob) {\n              _context18.next = 19;\n              break;\n            }\n\n            _context18.next = 14;\n            return jszip__WEBPACK_IMPORTED_MODULE_8___default.a.loadAsync(zipBlob);\n\n          case 14:\n            zip = _context18.sent;\n            // zip.forEach(function (relativePath) {\n            // debugLog(`relPath=${relativePath}`); // Displays 'relPath=360px/obs-en-17-09.jpg'\n            // })\n            zipPath = uri.slice(31); // Drop https://cdn.door43.org/obs/jpg/ to get 360px/obs-en-01-05.jpg\n            // debugLog(`  zipPath=${zipPath}`);\n\n            _context18.next = 18;\n            return zip.file(zipPath).async('string');\n\n          case 18:\n            pictureContents = _context18.sent;\n\n          case 19:\n            _context18.next = 25;\n            break;\n\n          case 21:\n            _context18.prev = 21;\n            _context18.t0 = _context18[\"catch\"](10);\n            if (_context18.t0.message.indexOf(' is null') < 0) console.error(\"cachedGetFileUsingPartialURL for \".concat(uri, \" got: \").concat(_context18.t0.message));\n            pictureContents = null;\n\n          case 25:\n            if (!pictureContents) {\n              _context18.next = 29;\n              break;\n            }\n\n            _context18.next = 28;\n            return unzipStore.setItem(uri, pictureContents);\n\n          case 28:\n            return _context18.abrupt(\"return\", pictureContents);\n\n          case 29:\n            _context18.next = 31;\n            return Door43Api.get(uri, {\n              params: params\n            });\n\n          case 31:\n            response = _context18.sent;\n            if (response.request.fromCache !== true) Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"  cachedGetFileUsingFullURL downloaded \".concat(uri)); // debugLog(`  cachedGetFileUsingFullURL returning: ${response.data}`);\n\n            return _context18.abrupt(\"return\", response.data);\n\n          case 34:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18, null, [[10, 21]]);\n  }));\n  return _cachedGetFileUsingFullURL.apply(this, arguments);\n}\n\n;\n/*\nfunction fetchRepositoriesZipFiles({username, languageId, branch}) {\n  const repositories = resourceRepositories({languageId});\n  const promises = Object.values(repositories).map(repository => {\n    return downloadRepositoryZipFile({username, repository, branch});\n  });\n  const zipArray = await Promise.all(promises);\n  return zipArray;\n};\n*/\n\n/**\n * retrieve repo as zip file\n * @param {string} username\n * @param {string} repository\n * @param {string} branch\n * @param {boolean} forceLoad - if not true, then use existing repo in zipstore\n * @return {Promise<[]|*[]>} resolves to true if downloaded\n */\n\nfunction cachedGetRepositoryZipFile(_x25) {\n  return _cachedGetRepositoryZipFile.apply(this, arguments);\n}\n\nfunction _cachedGetRepositoryZipFile() {\n  _cachedGetRepositoryZipFile = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee19(_ref13) {\n    var username,\n        repository,\n        branchOrRelease,\n        forceLoad,\n        zipBlob,\n        _args19 = arguments;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            username = _ref13.username, repository = _ref13.repository, branchOrRelease = _ref13.branchOrRelease;\n            forceLoad = _args19.length > 1 && _args19[1] !== undefined ? _args19[1] : false;\n\n            if (forceLoad) {\n              _context19.next = 8;\n              break;\n            }\n\n            _context19.next = 5;\n            return getZipFromStore(username, repository, branchOrRelease);\n\n          case 5:\n            zipBlob = _context19.sent;\n\n            if (!zipBlob) {\n              _context19.next = 8;\n              break;\n            }\n\n            return _context19.abrupt(\"return\", true);\n\n          case 8:\n            return _context19.abrupt(\"return\", downloadRepositoryZipFile({\n              username: username,\n              repository: repository,\n              branchOrRelease: branchOrRelease\n            }));\n\n          case 9:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19);\n  }));\n  return _cachedGetRepositoryZipFile.apply(this, arguments);\n}\n\n;\nfunction cachedGetRepositoryTreeFile(_x26) {\n  return _cachedGetRepositoryTreeFile.apply(this, arguments);\n}\n\nfunction _cachedGetRepositoryTreeFile() {\n  _cachedGetRepositoryTreeFile = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee20(_ref14) {\n    var username,\n        repository,\n        branchOrRelease,\n        forceLoad,\n        treeJSON,\n        _args20 = arguments;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            username = _ref14.username, repository = _ref14.repository, branchOrRelease = _ref14.branchOrRelease;\n            forceLoad = _args20.length > 1 && _args20[1] !== undefined ? _args20[1] : false;\n\n            if (forceLoad) {\n              _context20.next = 8;\n              break;\n            }\n\n            _context20.next = 5;\n            return getTreeFromStore(username, repository, branchOrRelease);\n\n          case 5:\n            treeJSON = _context20.sent;\n\n            if (!treeJSON) {\n              _context20.next = 8;\n              break;\n            }\n\n            return _context20.abrupt(\"return\", true);\n\n          case 8:\n            return _context20.abrupt(\"return\", downloadRepositoryTreeFile({\n              username: username,\n              repository: repository,\n              branchOrRelease: branchOrRelease\n            }));\n\n          case 9:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20);\n  }));\n  return _cachedGetRepositoryTreeFile.apply(this, arguments);\n}\n\n;\n\nfunction downloadRepositoryZipFile(_x27) {\n  return _downloadRepositoryZipFile.apply(this, arguments);\n}\n\nfunction _downloadRepositoryZipFile() {\n  _downloadRepositoryZipFile = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee21(_ref15) {\n    var username, repository, branchOrRelease, uri, response, zipArrayBuffer;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            username = _ref15.username, repository = _ref15.repository, branchOrRelease = _ref15.branchOrRelease;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"functionLog\"])(\"downloadRepositoryZipFile(\".concat(username, \", \").concat(repository, \", \").concat(branchOrRelease, \")\\u2026\")); // RJH removed this 2Oct2020 -- what’s the point -- it just slows things down --\n            //      if it needs to be checked, should be checked before this point\n            // const repoExists = await repositoryExistsOnDoor43({ username, repository });\n            // if (!repoExists) {\n            //   console.error(`downloadRepositoryZipFile(${username}, ${repository}, ${branchOrRelease}) -- repo doesn’t even exist`);\n            //   return null;\n            // }\n            // Template is https://git.door43.org/{username}/{repository}/archive/{branchOrRelease}.zip\n\n            uri = zipUri({\n              username: username,\n              repository: repository,\n              branchOrRelease: branchOrRelease\n            });\n            _context21.next = 5;\n            return fetch(uri);\n\n          case 5:\n            response = _context21.sent;\n\n            if (!(response.status === 200 || response.status === 0)) {\n              _context21.next = 15;\n              break;\n            }\n\n            _context21.next = 9;\n            return response.arrayBuffer();\n\n          case 9:\n            zipArrayBuffer = _context21.sent;\n            _context21.next = 12;\n            return zipJsonStore.setItem(uri.toLowerCase(), zipArrayBuffer);\n\n          case 12:\n            return _context21.abrupt(\"return\", true);\n\n          case 15:\n            console.error(\"downloadRepositoryZipFile(\".concat(username, \", \").concat(repository, \", \").concat(branchOrRelease, \") -- got response status: \").concat(response.status));\n            return _context21.abrupt(\"return\", false);\n\n          case 17:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21);\n  }));\n  return _downloadRepositoryZipFile.apply(this, arguments);\n}\n\n;\n\nfunction downloadRepositoryTreeFile(_x28) {\n  return _downloadRepositoryTreeFile.apply(this, arguments);\n}\n\nfunction _downloadRepositoryTreeFile() {\n  _downloadRepositoryTreeFile = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee22(_ref16) {\n    var username, repository, branchOrRelease, treeURI, page_number, JSONTree, fetchURI, response, thisPageJSON, thisPageJSONTree;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            username = _ref16.username, repository = _ref16.repository, branchOrRelease = _ref16.branchOrRelease;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"functionLog\"])(\"downloadRepositoryTreeFile(\".concat(username, \", \").concat(repository, \", \").concat(branchOrRelease, \")\\u2026\")); // Template is https://git.door43.org/api/v1/repos/{username}/{repository}/git/trees/{branchOrRelease}?recursive=true&per_page=12345\n\n            treeURI = treeUri({\n              username: username,\n              repository: repository,\n              branchOrRelease: branchOrRelease\n            }); // debugLog(`  downloadRepositoryTreeFile got treeURI ${treeURI}`);\n\n            page_number = 0; // incremented before use\n\n            JSONTree = [];\n\n          case 5:\n            if (false) {}\n\n            ++page_number;\n            fetchURI = page_number === 1 ? treeURI : \"\".concat(treeURI, \"&page=\").concat(page_number); // debugLog(`    downloadRepositoryTreeFile fetching from ${fetchURI}…`);\n\n            _context22.next = 10;\n            return fetch(fetchURI);\n\n          case 10:\n            response = _context22.sent;\n\n            if (!(response.status === 200 || response.status === 0)) {\n              _context22.next = 28;\n              break;\n            }\n\n            _context22.next = 14;\n            return response.json();\n\n          case 14:\n            thisPageJSON = _context22.sent;\n            if (page_number === 1) Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"    downloadRepositoryTreeFile \".concat(repository, \" treeJSON total_count to download is \").concat(thisPageJSON['total_count'].toLocaleString(), \" entries\"));\n            Object(___WEBPACK_IMPORTED_MODULE_12__[\"dataAssert\"])(thisPageJSON['page'] === page_number, \"tree data for \".concat(treeURI, \" should be page \").concat(page_number, \" not \").concat(typeof thisPageJSON['page'], \" \").concat(thisPageJSON['page'], \"!\")); // debugLog(`downloadRepositoryTreeFile got thisPageJSON (${thisPageJSON.length}) ${JSON.stringify(thisPageJSON)}`);\n\n            thisPageJSONTree = thisPageJSON['tree']; // Don't need to store the page (number), truncated, sha, url, or total_count fields\n\n            if (!(thisPageJSONTree === null)) {\n              _context22.next = 20;\n              break;\n            }\n\n            return _context22.abrupt(\"break\", 32);\n\n          case 20:\n            // debugLog(`    downloadRepositoryTreeFile thisPageJSONTree for page ${page_number} is ${thisPageJSONTree.length.toLocaleString()} entries`);\n            JSONTree = JSONTree.concat(thisPageJSONTree);\n            if (JSONTree.length < thisPageJSON['total_count']) Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"    downloadRepositoryTreeFile \".concat(repository, \" only has combined JSONTree of \").concat(JSONTree.length.toLocaleString(), \" entries\"));\n\n            if (thisPageJSON['truncated']) {\n              _context22.next = 24;\n              break;\n            }\n\n            return _context22.abrupt(\"break\", 32);\n\n          case 24:\n            if (!(JSONTree.length === thisPageJSON['total_count'])) {\n              _context22.next = 26;\n              break;\n            }\n\n            return _context22.abrupt(\"break\", 32);\n\n          case 26:\n            _context22.next = 30;\n            break;\n\n          case 28:\n            console.error(\"  downloadRepositoryTreeFile(\".concat(username, \", \").concat(repository, \", \").concat(branchOrRelease, \") page=\").concat(page_number, \" -- got response status: \").concat(response.status));\n            return _context22.abrupt(\"return\", false);\n\n          case 30:\n            _context22.next = 5;\n            break;\n\n          case 32:\n            _context22.next = 34;\n            return zipJsonStore.setItem(treeURI.toLowerCase(), JSONTree.map(function (x) {\n              return x.path;\n            }));\n\n          case 34:\n            return _context22.abrupt(\"return\", true);\n\n          case 35:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22);\n  }));\n  return _downloadRepositoryTreeFile.apply(this, arguments);\n}\n\n;\n/**\n * pull repo from zipstore and get a file list\n * @param {string} username\n * @param {string} repository\n * @param {string} branchOrRelease\n * @param {string} optionalPrefix - to filter by book, etc.\n * @return {Promise<[]|*[]>}  resolves to file list\n */\n\nfunction getFileListFromZip(_x29) {\n  return _getFileListFromZip.apply(this, arguments);\n}\n/**\n * try to get zip file from cache\n * @param {string} username\n * @param {string} repository\n * @param {string} branchOrRelease\n * @return {Promise<unknown>} resolves to null if not found\n */\n\nfunction _getFileListFromZip() {\n  _getFileListFromZip = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee23(_ref17) {\n    var username, repository, branchOrRelease, optionalPrefix, zipBlob, uri, response, zipArrayBuffer, pathList, zip;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee23$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            username = _ref17.username, repository = _ref17.repository, branchOrRelease = _ref17.branchOrRelease, optionalPrefix = _ref17.optionalPrefix;\n            _context23.next = 3;\n            return getZipFromStore(username, repository, branchOrRelease);\n\n          case 3:\n            zipBlob = _context23.sent;\n\n            if (zipBlob) {\n              _context23.next = 20;\n              break;\n            }\n\n            // Seems that we need to load the zip file first\n            uri = zipUri({\n              username: username,\n              repository: repository,\n              branchOrRelease: branchOrRelease\n            });\n            _context23.next = 8;\n            return fetch(uri);\n\n          case 8:\n            response = _context23.sent;\n\n            if (!(response.status === 200 || response.status === 0)) {\n              _context23.next = 18;\n              break;\n            }\n\n            _context23.next = 12;\n            return response.arrayBuffer();\n\n          case 12:\n            zipArrayBuffer = _context23.sent;\n            _context23.next = 15;\n            return zipJsonStore.setItem(uri.toLowerCase(), zipArrayBuffer);\n\n          case 15:\n            zipBlob = _context23.sent;\n            _context23.next = 20;\n            break;\n\n          case 18:\n            console.error(\"getFileListFromZip got response status: \".concat(response.status));\n            return _context23.abrupt(\"return\", []);\n\n          case 20:\n            pathList = [];\n            _context23.prev = 21;\n\n            if (!zipBlob) {\n              _context23.next = 27;\n              break;\n            }\n\n            _context23.next = 25;\n            return jszip__WEBPACK_IMPORTED_MODULE_8___default.a.loadAsync(zipBlob);\n\n          case 25:\n            zip = _context23.sent;\n            // debugLog(`  Got zip`);\n            // Now we need to fetch the list of files from the repo\n            // zip.forEach(function (relativePath, fileObject) {\n            zip.forEach(function (relativePath) {\n              // debugLog(`relPath=${relativePath}`)\n              // consoleLogObject('fileObject', fileObject);\n              if (!relativePath.endsWith('/')) // it’s not a folder\n                {\n                  if (relativePath.startsWith(\"\".concat(repository, \"/\"))) // remove repo name prefix\n                    relativePath = relativePath.slice(repository.length + 1);\n                  if (relativePath.length && !relativePath.startsWith('.git') // skips files in these folders\n                  && !relativePath.startsWith('.apps') // skips files in this folder\n                  && (!optionalPrefix || relativePath.startsWith(optionalPrefix))) // it’s the correct prefix\n                    pathList.push(relativePath);\n                }\n            });\n\n          case 27:\n            _context23.next = 32;\n            break;\n\n          case 29:\n            _context23.prev = 29;\n            _context23.t0 = _context23[\"catch\"](21);\n            console.error(\"getFileListFromZip got: \".concat(_context23.t0.message));\n\n          case 32:\n            return _context23.abrupt(\"return\", pathList);\n\n          case 33:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _callee23, null, [[21, 29]]);\n  }));\n  return _getFileListFromZip.apply(this, arguments);\n}\n\nfunction getZipFromStore(_x30, _x31, _x32) {\n  return _getZipFromStore.apply(this, arguments);\n}\n\nfunction _getZipFromStore() {\n  _getZipFromStore = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee24(username, repository, branchOrRelease) {\n    var uri, zipBlob;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee24$(_context24) {\n      while (1) {\n        switch (_context24.prev = _context24.next) {\n          case 0:\n            // functionLog(`getZipFromStore(${username}, ${repository}, ${branchOrRelease})…`);\n            uri = zipUri({\n              username: username,\n              repository: repository,\n              branchOrRelease: branchOrRelease\n            }); // debugLog(`  uri=${uri}`);\n\n            _context24.next = 3;\n            return zipJsonStore.getItem(uri.toLowerCase());\n\n          case 3:\n            zipBlob = _context24.sent;\n            return _context24.abrupt(\"return\", zipBlob);\n\n          case 5:\n          case \"end\":\n            return _context24.stop();\n        }\n      }\n    }, _callee24);\n  }));\n  return _getZipFromStore.apply(this, arguments);\n}\n\nfunction getTreeFromStore(_x33, _x34, _x35) {\n  return _getTreeFromStore.apply(this, arguments);\n}\n/**\n * pull repo from zipstore and get the unzipped file\n * @param {string} username\n * @param {string} repository\n * @param {string} branchOrRelease\n * @param {object} optionalPrefix\n * @return {Promise<[]|*[]>} resolves to unzipped file if found or null\n */\n\n\nfunction _getTreeFromStore() {\n  _getTreeFromStore = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee25(username, repository, branchOrRelease) {\n    var treeURI, treeJSON;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            // functionLog(`getZipFromStore(${username}, ${repository}, ${branchOrRelease})…`);\n            treeURI = treeUri({\n              username: username,\n              repository: repository,\n              branchOrRelease: branchOrRelease\n            }); // debugLog(`  treeURI=${treeURI}`);\n\n            _context25.next = 3;\n            return zipJsonStore.getItem(treeURI.toLowerCase());\n\n          case 3:\n            treeJSON = _context25.sent;\n            return _context25.abrupt(\"return\", treeJSON);\n\n          case 5:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25);\n  }));\n  return _getTreeFromStore.apply(this, arguments);\n}\n\nfunction getFileFromZip(_x36) {\n  return _getFileFromZip.apply(this, arguments);\n}\n\nfunction _getFileFromZip() {\n  _getFileFromZip = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee26(_ref18) {\n    var username, repository, path, branchOrRelease, file, zipBlob, zip, zipPath;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee26$(_context26) {\n      while (1) {\n        switch (_context26.prev = _context26.next) {\n          case 0:\n            username = _ref18.username, repository = _ref18.repository, path = _ref18.path, branchOrRelease = _ref18.branchOrRelease;\n            _context26.next = 3;\n            return getZipFromStore(username, repository, branchOrRelease);\n\n          case 3:\n            zipBlob = _context26.sent;\n            _context26.prev = 4;\n\n            if (!zipBlob) {\n              _context26.next = 13;\n              break;\n            }\n\n            _context26.next = 8;\n            return jszip__WEBPACK_IMPORTED_MODULE_8___default.a.loadAsync(zipBlob);\n\n          case 8:\n            zip = _context26.sent;\n            zipPath = path__WEBPACK_IMPORTED_MODULE_4___default.a.join(repository.toLowerCase(), path); // debugLog(`  zipPath=${zipPath}`);\n\n            _context26.next = 12;\n            return zip.file(zipPath).async('string');\n\n          case 12:\n            file = _context26.sent;\n\n          case 13:\n            _context26.next = 19;\n            break;\n\n          case 15:\n            _context26.prev = 15;\n            _context26.t0 = _context26[\"catch\"](4);\n            if (_context26.t0.message.indexOf(' is null') < 0) console.error(\"getFileFromZip for \".concat(username, \" \").concat(repository, \" \").concat(path, \" \").concat(branchOrRelease, \" got: \").concat(_context26.t0.message));\n            file = null;\n\n          case 19:\n            return _context26.abrupt(\"return\", file);\n\n          case 20:\n          case \"end\":\n            return _context26.stop();\n        }\n      }\n    }, _callee26, null, [[4, 15]]);\n  }));\n  return _getFileFromZip.apply(this, arguments);\n}\n\n;\n\nfunction zipUri(_ref19) {\n  var username = _ref19.username,\n      repository = _ref19.repository,\n      _ref19$branchOrReleas = _ref19.branchOrRelease,\n      branchOrRelease = _ref19$branchOrReleas === void 0 ? 'master' : _ref19$branchOrReleas;\n  // Template is https://git.door43.org/{username}/{repository}/archive/{branchOrRelease}.zip\n  // functionLog(`zipUri(${username}, ${repository}, ${branchOrRelease})…`);\n  var zipPath = path__WEBPACK_IMPORTED_MODULE_4___default.a.join(username, repository, 'archive', \"\".concat(branchOrRelease, \".zip\"));\n  var zipUri = DOOR43_BASE_URL + zipPath;\n  return zipUri;\n}\n\n;\n\nfunction treeUri(_ref20) {\n  var username = _ref20.username,\n      repository = _ref20.repository,\n      _ref20$branchOrReleas = _ref20.branchOrRelease,\n      branchOrRelease = _ref20$branchOrReleas === void 0 ? 'master' : _ref20$branchOrReleas;\n  // Template is https://git.door43.org/api/v1/repos/{username}/{repository}/git/trees/{branchOrRelease}?recursive=true&per_page=12345\n  // functionLog(`treeUri(${username}, ${repository}, ${branchOrRelease})…`);\n  var treePath = path__WEBPACK_IMPORTED_MODULE_4___default.a.join('api', 'v1', 'repos', username, repository, 'git', 'trees', \"\".concat(branchOrRelease, \"?recursive=true&per_page=12345\"));\n  var treeUri = DOOR43_BASE_URL + treePath;\n  return treeUri;\n}\n\n; // async function fetchTree({ username, repository, sha = 'master' }) {\n//   // functionLog(`fetchTree(${username}, ${repository}, ${sha})…`);\n//   let data;\n//   try {\n//     const uri = Path.join('api/v1/repos', username, repository, 'git/trees', sha);\n//     // debugLog(`  uri='${uri}'`);\n//     data = await cachedGetFileUsingPartialURL({ uri });\n//     // debugLog(`  data (${typeof data})`);\n//     return data;\n//     // const tree = JSON.parse(data); // RJH: Why was this here???\n//     // debugLog(`  tree (${typeof tree})`);\n//     // return tree;\n//   } catch (error) {\n//     console.error(`fetchTree got: ${error.message}`);\n//     userLog(`  Data was: ${JSON.stringify(data)}`);\n//     return null;\n//   }\n// };\n\n/*\nasync function recursiveTree({username, repository, path, sha}) {\n  userLog(\"recurse tree args:\",username,repository,path,sha)\n  let tree = {};\n  const pathArray = path.split();\n  const results = fetchTree({username, repository, sha});\n  const result = results.tree.filter(item => item.path === pathArray[0])[0];\n  if (result) {\n    if (result.type === 'tree') {\n      const childPath = pathArray.slice(1).join('/');\n      const children = recursiveTree({username, repository, path: childPath, sha: result.sha});\n      tree[result.path] = children;\n    } else if (result.type === 'blob') {\n      tree[result.path] = true;\n    }\n  }\n};\n\nasync function fileExists({username, repository, path, branch}) {\n  // get root listing\n  recursiveTree()\n  // get recursive path listing\n}\n*/\n\n//# sourceURL=webpack:///./src/core/getApi.js?");

/***/ }),

/***/ "./src/core/index.js":
/*!***************************!*\
  !*** ./src/core/index.js ***!
  \***************************/
/*! exports provided: BibleBookData, isValidBookID, isOptionalValidBookID, isExtraBookID, usfmNumberName, expectedVersesPerChapterList, chaptersInBook, isOneChapterBook, versesInChapter, testament, getEnglishBookName, isGoodEnglishBookName, isOftenMissing, DEFAULT_EXCERPT_LENGTH, REPO_CODES_LIST, CATALOG_NEXT_ONLY_REPO_CODES_LIST, NUM_OBS_STORIES, MAX_OBS_FRAMES, OBS_FRAME_COUNT_LIST, userLog, debugLog, functionLog, parameterAssert, logicAssert, dataAssert, aboutToOverwrite, consoleLogObject, displayPropertyNames, ourParseInt, clearCheckedArticleCache, markAsChecked, alreadyChecked, clearCaches, formRepoName, cachedGetFile, isFilepathInRepoTree, cachedGetBookFilenameFromManifest, preloadReposIfNecessary, cachedFetchFileFromServerWithTag, repositoryExistsOnDoor43, cachedGetFileUsingFullURL, cachedGetRepositoryZipFile, cachedGetRepositoryTreeFile, getFileListFromZip, PAIRED_PUNCTUATION_OPENERS, PAIRED_PUNCTUATION_CLOSERS, OPEN_CLOSE_PUNCTUATION_PAIRS, CLOSING_PUNCTUATION_CHARACTERS, HEBREW_VOWELS, HEBREW_CANTILLATION_MARKS, HEBREW_CANTILLATION_REGEX, BAD_CHARACTER_COMBINATIONS, LEADING_ZERO_COMBINATIONS, BAD_CHARACTER_REGEXES, isWhitespace, countOccurrencesInList, countOccurrencesInString, ourReplaceAll, ourDeleteAll, checkTN_TSV7Table, checkSN_TSV7Table, checkTQ_TSV7Table, checkSQ_TSV7Table, checkTWL_TSV6Table, checkTA_markdownArticle, checkTW_markdownArticle, checkDeprecatedTN_TSV9Table, checkTextField, checkTextfileContents, checkLexiconFileContents, checkMarkdownText, checkMarkdownFileContents, checkManifestText, checkNotesTSV7DataRow, checkNotesTSV7Table, checkPlainText, checkQuestionsTSV7DataRow, checkQuestionsTSV7Table, checkNotesLinksToOutside, checkTN_TSV9DataRow, internalCheckTN_TSV9Table, checkTWL_TSV6DataRow, internalCheckTWL_TSV6Table, checkUSFMText, checkYAMLText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _books___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./books/ */ \"./src/core/books/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BibleBookData\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"BibleBookData\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isValidBookID\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"isValidBookID\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isOptionalValidBookID\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"isOptionalValidBookID\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isExtraBookID\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"isExtraBookID\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"usfmNumberName\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"usfmNumberName\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"expectedVersesPerChapterList\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"expectedVersesPerChapterList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"chaptersInBook\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"chaptersInBook\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isOneChapterBook\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"isOneChapterBook\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"versesInChapter\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"versesInChapter\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"testament\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"testament\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getEnglishBookName\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"getEnglishBookName\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isGoodEnglishBookName\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"isGoodEnglishBookName\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isOftenMissing\", function() { return _books___WEBPACK_IMPORTED_MODULE_0__[\"isOftenMissing\"]; });\n\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_EXCERPT_LENGTH\", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_EXCERPT_LENGTH\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"REPO_CODES_LIST\", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__[\"REPO_CODES_LIST\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CATALOG_NEXT_ONLY_REPO_CODES_LIST\", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__[\"CATALOG_NEXT_ONLY_REPO_CODES_LIST\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NUM_OBS_STORIES\", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__[\"NUM_OBS_STORIES\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MAX_OBS_FRAMES\", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__[\"MAX_OBS_FRAMES\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OBS_FRAME_COUNT_LIST\", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__[\"OBS_FRAME_COUNT_LIST\"]; });\n\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"userLog\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"userLog\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"debugLog\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"debugLog\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"functionLog\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"functionLog\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parameterAssert\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"parameterAssert\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"logicAssert\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"logicAssert\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"dataAssert\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"dataAssert\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"aboutToOverwrite\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"aboutToOverwrite\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"consoleLogObject\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"consoleLogObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"displayPropertyNames\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"displayPropertyNames\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ourParseInt\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"ourParseInt\"]; });\n\n/* harmony import */ var _getApi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getApi */ \"./src/core/getApi.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clearCheckedArticleCache\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"clearCheckedArticleCache\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"markAsChecked\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"markAsChecked\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"alreadyChecked\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"alreadyChecked\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clearCaches\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"clearCaches\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"formRepoName\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"formRepoName\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cachedGetFile\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"cachedGetFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isFilepathInRepoTree\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"isFilepathInRepoTree\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cachedGetBookFilenameFromManifest\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"cachedGetBookFilenameFromManifest\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"preloadReposIfNecessary\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"preloadReposIfNecessary\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cachedFetchFileFromServerWithTag\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"cachedFetchFileFromServerWithTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"repositoryExistsOnDoor43\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"repositoryExistsOnDoor43\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cachedGetFileUsingFullURL\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"cachedGetFileUsingFullURL\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cachedGetRepositoryZipFile\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"cachedGetRepositoryZipFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cachedGetRepositoryTreeFile\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"cachedGetRepositoryTreeFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getFileListFromZip\", function() { return _getApi__WEBPACK_IMPORTED_MODULE_3__[\"getFileListFromZip\"]; });\n\n/* harmony import */ var _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./text-handling-functions */ \"./src/core/text-handling-functions.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PAIRED_PUNCTUATION_OPENERS\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"PAIRED_PUNCTUATION_OPENERS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PAIRED_PUNCTUATION_CLOSERS\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"PAIRED_PUNCTUATION_CLOSERS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"OPEN_CLOSE_PUNCTUATION_PAIRS\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"OPEN_CLOSE_PUNCTUATION_PAIRS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CLOSING_PUNCTUATION_CHARACTERS\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"CLOSING_PUNCTUATION_CHARACTERS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HEBREW_VOWELS\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"HEBREW_VOWELS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HEBREW_CANTILLATION_MARKS\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"HEBREW_CANTILLATION_MARKS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HEBREW_CANTILLATION_REGEX\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"HEBREW_CANTILLATION_REGEX\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BAD_CHARACTER_COMBINATIONS\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"BAD_CHARACTER_COMBINATIONS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LEADING_ZERO_COMBINATIONS\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"LEADING_ZERO_COMBINATIONS\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BAD_CHARACTER_REGEXES\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"BAD_CHARACTER_REGEXES\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isWhitespace\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"isWhitespace\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"countOccurrencesInList\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"countOccurrencesInList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"countOccurrencesInString\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"countOccurrencesInString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ourReplaceAll\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"ourReplaceAll\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ourDeleteAll\", function() { return _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"ourDeleteAll\"]; });\n\n/* harmony import */ var _wrapper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./wrapper */ \"./src/core/wrapper.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkTN_TSV7Table\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_5__[\"checkTN_TSV7Table\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkSN_TSV7Table\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_5__[\"checkSN_TSV7Table\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkTQ_TSV7Table\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_5__[\"checkTQ_TSV7Table\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkSQ_TSV7Table\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_5__[\"checkSQ_TSV7Table\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkTWL_TSV6Table\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_5__[\"checkTWL_TSV6Table\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkTA_markdownArticle\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_5__[\"checkTA_markdownArticle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkTW_markdownArticle\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_5__[\"checkTW_markdownArticle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkDeprecatedTN_TSV9Table\", function() { return _wrapper__WEBPACK_IMPORTED_MODULE_5__[\"checkDeprecatedTN_TSV9Table\"]; });\n\n/* harmony import */ var _field_text_check__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkTextField\", function() { return _field_text_check__WEBPACK_IMPORTED_MODULE_6__[\"checkTextField\"]; });\n\n/* harmony import */ var _file_text_check__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./file-text-check */ \"./src/core/file-text-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkTextfileContents\", function() { return _file_text_check__WEBPACK_IMPORTED_MODULE_7__[\"checkTextfileContents\"]; });\n\n/* harmony import */ var _lexicon_file_contents_check__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lexicon-file-contents-check */ \"./src/core/lexicon-file-contents-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkLexiconFileContents\", function() { return _lexicon_file_contents_check__WEBPACK_IMPORTED_MODULE_8__[\"checkLexiconFileContents\"]; });\n\n/* harmony import */ var _markdown_text_check__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./markdown-text-check */ \"./src/core/markdown-text-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkMarkdownText\", function() { return _markdown_text_check__WEBPACK_IMPORTED_MODULE_9__[\"checkMarkdownText\"]; });\n\n/* harmony import */ var _markdown_file_contents_check__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./markdown-file-contents-check */ \"./src/core/markdown-file-contents-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkMarkdownFileContents\", function() { return _markdown_file_contents_check__WEBPACK_IMPORTED_MODULE_10__[\"checkMarkdownFileContents\"]; });\n\n/* harmony import */ var _manifest_text_check__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./manifest-text-check */ \"./src/core/manifest-text-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkManifestText\", function() { return _manifest_text_check__WEBPACK_IMPORTED_MODULE_11__[\"checkManifestText\"]; });\n\n/* harmony import */ var _notes_tsv7_row_check__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./notes-tsv7-row-check */ \"./src/core/notes-tsv7-row-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkNotesTSV7DataRow\", function() { return _notes_tsv7_row_check__WEBPACK_IMPORTED_MODULE_12__[\"checkNotesTSV7DataRow\"]; });\n\n/* harmony import */ var _notes_tsv7_table_check__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./notes-tsv7-table-check */ \"./src/core/notes-tsv7-table-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkNotesTSV7Table\", function() { return _notes_tsv7_table_check__WEBPACK_IMPORTED_MODULE_13__[\"checkNotesTSV7Table\"]; });\n\n/* harmony import */ var _plain_text_check__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./plain-text-check */ \"./src/core/plain-text-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkPlainText\", function() { return _plain_text_check__WEBPACK_IMPORTED_MODULE_14__[\"checkPlainText\"]; });\n\n/* harmony import */ var _questions_tsv7_row_check__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./questions-tsv7-row-check */ \"./src/core/questions-tsv7-row-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkQuestionsTSV7DataRow\", function() { return _questions_tsv7_row_check__WEBPACK_IMPORTED_MODULE_15__[\"checkQuestionsTSV7DataRow\"]; });\n\n/* harmony import */ var _questions_tsv7_table_check__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./questions-tsv7-table-check */ \"./src/core/questions-tsv7-table-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkQuestionsTSV7Table\", function() { return _questions_tsv7_table_check__WEBPACK_IMPORTED_MODULE_16__[\"checkQuestionsTSV7Table\"]; });\n\n/* harmony import */ var _notes_links_check__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./notes-links-check */ \"./src/core/notes-links-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkNotesLinksToOutside\", function() { return _notes_links_check__WEBPACK_IMPORTED_MODULE_17__[\"checkNotesLinksToOutside\"]; });\n\n/* harmony import */ var _tn_tsv9_row_check__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./tn-tsv9-row-check */ \"./src/core/tn-tsv9-row-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkTN_TSV9DataRow\", function() { return _tn_tsv9_row_check__WEBPACK_IMPORTED_MODULE_18__[\"checkTN_TSV9DataRow\"]; });\n\n/* harmony import */ var _tn_tsv9_table_check__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./tn-tsv9-table-check */ \"./src/core/tn-tsv9-table-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"internalCheckTN_TSV9Table\", function() { return _tn_tsv9_table_check__WEBPACK_IMPORTED_MODULE_19__[\"internalCheckTN_TSV9Table\"]; });\n\n/* harmony import */ var _twl_tsv6_row_check__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./twl-tsv6-row-check */ \"./src/core/twl-tsv6-row-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkTWL_TSV6DataRow\", function() { return _twl_tsv6_row_check__WEBPACK_IMPORTED_MODULE_20__[\"checkTWL_TSV6DataRow\"]; });\n\n/* harmony import */ var _twl_tsv6_table_check__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./twl-tsv6-table-check */ \"./src/core/twl-tsv6-table-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"internalCheckTWL_TSV6Table\", function() { return _twl_tsv6_table_check__WEBPACK_IMPORTED_MODULE_21__[\"internalCheckTWL_TSV6Table\"]; });\n\n/* harmony import */ var _usfm_text_check__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./usfm-text-check */ \"./src/core/usfm-text-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkUSFMText\", function() { return _usfm_text_check__WEBPACK_IMPORTED_MODULE_22__[\"checkUSFMText\"]; });\n\n/* harmony import */ var _yaml_text_check__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./yaml-text-check */ \"./src/core/yaml-text-check.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"checkYAMLText\", function() { return _yaml_text_check__WEBPACK_IMPORTED_MODULE_23__[\"checkYAMLText\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/core/index.js?");

/***/ }),

/***/ "./src/core/lexicon-file-contents-check.js":
/*!*************************************************!*\
  !*** ./src/core/lexicon-file-contents-check.js ***!
  \*************************************************/
/*! exports provided: checkLexiconFileContents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkLexiconFileContents\", function() { return checkLexiconFileContents; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _markdown_file_contents_check__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./markdown-file-contents-check */ \"./src/core/markdown-file-contents-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n// import { DEFAULT_EXCERPT_LENGTH } from './defaults'\n // eslint-disable-next-line no-unused-vars\n\n\nvar LEXICON_MARKDOWN_FILE_VALIDATOR_VERSION_STRING = '0.2.0';\n/**\n *\n * @param {string} languageCode\n * @param {string} repoCode -- e.g., 'UHAL', or 'UGL', etc.\n * @param {string} lexiconFilename -- used for identification\n * @param {string} lexiconMarkdownText -- the actual text to be checked\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkLexiconFileContents(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n  return _checkLexiconFileContents.apply(this, arguments);\n} // end of checkLexiconFileContents function\n\nfunction _checkLexiconFileContents() {\n  _checkLexiconFileContents = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(username, languageCode, repoCode, lexiconFilename, lexiconMarkdownText, givenLocation, checkingOptions) {\n    var ourLocation, lexiconResultObject, addSuccessMessage, addNoticePartial, ourCheckMarkdownFileContents, _ourCheckMarkdownFileContents, lines, hierarchy, currentLevel, _iterator, _step, line, adjustedLine, colonIndex, compulsoryFields, _loop, _i, _compulsoryFields;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ourCheckMarkdownFileContents = function _ourCheckMarkdownFile2() {\n              _ourCheckMarkdownFileContents = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(lexiconMarkdownText, optionalFieldLocation, checkingOptions) {\n                var cmtResultObject, _iterator2, _step2, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return Object(_markdown_file_contents_check__WEBPACK_IMPORTED_MODULE_4__[\"checkMarkdownFileContents\"])(username, languageCode, repoCode, lexiconFilename, lexiconMarkdownText, optionalFieldLocation, checkingOptions);\n\n                      case 2:\n                        cmtResultObject = _context.sent;\n                        // debugLog(`cmtResultObject=${JSON.stringify(cmtResultObject)}`);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(cmtResultObject.noticeList);\n\n                        try {\n                          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                            noticeEntry = _step2.value;\n                            addNoticePartial(noticeEntry);\n                          }\n                        } catch (err) {\n                          _iterator2.e(err);\n                        } finally {\n                          _iterator2.f();\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _ourCheckMarkdownFileContents.apply(this, arguments);\n            };\n\n            ourCheckMarkdownFileContents = function _ourCheckMarkdownFile(_x8, _x9, _x10) {\n              return _ourCheckMarkdownFileContents.apply(this, arguments);\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkLexiconFileContents addNoticePartial: (priority=${incompleteNoticeObject.priority}) ${incompleteNoticeObject.message}${incompleteNoticeObject.characterIndex > 0 ? ` (at character ${incompleteNoticeObject.characterIndex})` : \"\"}${incompleteNoticeObject.excerpt ? \" \" + incompleteNoticeObject.excerpt : \"\"}${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"checkLexiconFileContents addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `checkLexiconFileContents addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"checkLexiconFileContents addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `checkLexiconFileContents addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(characterIndex !== undefined, \"checkLexiconFileContents addNoticePartial: 'characterIndex' parameter should be defined\");\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `checkLexiconFileContents addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"checkLexiconFileContents addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `checkLexiconFileContents addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"checkLexiconFileContents addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `checkLexiconFileContents addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n\n\n              if (incompleteNoticeObject.debugChain) incompleteNoticeObject.debugChain = \"checkLexiconFileContents \".concat(incompleteNoticeObject.debugChain); // Prepend our name\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_5__[\"aboutToOverwrite\"])('checkLexiconFileContents', ['filename'], incompleteNoticeObject, {\n                filename: lexiconFilename\n              });\n              lexiconResultObject.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, incompleteNoticeObject), {}, {\n                filename: lexiconFilename\n              }));\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // debugLog(\"checkLexiconFileContents success: \" + successString);\n              lexiconResultObject.successList.push(successString);\n            };\n\n            /* This function is optimised for checking the entire markdown file, i.e., all lines.\n              Returns a result object containing a successList and a noticeList\n             */\n            // functionLog(`checkLexiconFileContents(lC=${languageCode}, rC=${repoCode}, fn=${lexiconFilename}, ${lexiconMarkdownText.length}, ${givenLocation})…`);\n            //parameterAssert(languageCode !== undefined, \"checkLexiconFileContents: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkLexiconFileContents: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n            //parameterAssert(repoCode === 'UHAL' || repoCode === 'UGL', `checkLexiconFileContents: 'repoCode' parameter should be 'UHAL' or 'UGL', not '${repoCode}'`);\n            //parameterAssert(lexiconFilename !== undefined, \"checkLexiconFileContents: 'lexiconFilename' parameter should be defined\");\n            //parameterAssert(typeof lexiconFilename === 'string', `checkLexiconFileContents: 'lexiconFilename' parameter should be a string not a '${typeof lexiconFilename}': ${lexiconFilename}`);\n            //parameterAssert(lexiconMarkdownText !== undefined, \"checkLexiconFileContents: 'lexiconMarkdownText' parameter should be defined\");\n            //parameterAssert(typeof lexiconMarkdownText === 'string', `checkLexiconFileContents: 'lexiconMarkdownText' parameter should be a string not a '${typeof lexiconMarkdownText}': ${lexiconMarkdownText}`);\n            //parameterAssert(givenLocation !== undefined, \"checkLexiconFileContents: 'givenLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkLexiconFileContents: 'givenLocation' parameter should be a string not a '${typeof givenLocation}': ${givenLocation}`);\n            //parameterAssert(givenLocation.indexOf('true') === -1, `checkLexiconFileContents: 'givenLocation' parameter should not be '${givenLocation}'`);\n            //parameterAssert(checkingOptions !== undefined, \"checkLexiconFileContents: 'checkingOptions' parameter should be defined\");\n            if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkLexiconFileContents: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n            }\n\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation); // let excerptLength;\n            // try {\n            //     excerptLength = checkingOptions?.excerptLength;\n            // } catch (mdtcError) { }\n            // if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n            //     excerptLength = DEFAULT_EXCERPT_LENGTH;\n            //     // debugLog(\"Using default excerptLength=\" + excerptLength);\n            // }\n            // else\n            // debugLog(\"Using supplied excerptLength=\" + excerptLength, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n            // const excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n            // const excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(\"Using excerptHalfLength=\" + excerptHalfLength, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n            lexiconResultObject = {\n              successList: [],\n              noticeList: []\n            };\n            // end of ourCheckMarkdownFileContents function\n            // Main code for checkLexiconFileContents function\n            lines = lexiconMarkdownText.split('\\n'); // debugLog(`  '${location}' has ${lines.length.toLocaleString()} total lines`);\n            // Create the hierarchy of the headings\n\n            hierarchy = [];\n            _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lines);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                line = _step.value;\n\n                if (line.startsWith('## ')) {\n                  currentLevel = line.slice(3);\n                  hierarchy.push({\n                    level: currentLevel,\n                    sublevels: []\n                  });\n                }\n\n                if (currentLevel && line.startsWith('* ')) {\n                  adjustedLine = line.slice(2);\n                  colonIndex = adjustedLine.indexOf(':');\n                  if (colonIndex !== -1) adjustedLine = adjustedLine.slice(0, colonIndex); // we don’t want the actual data\n\n                  hierarchy[hierarchy.length - 1].sublevels.push(adjustedLine);\n                }\n              } // debugLog(`checkLexiconFileContents hierarchy=${JSON.stringify(hierarchy)}`);\n\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            compulsoryFields = ['## Word data', '## Etymology', '## Senses'];\n\n            if (repoCode === 'UHAL') {} else if (repoCode === 'UGL') {} // This next part is common for UHAL and UGL\n\n\n            if (!lines[0].startsWith('# ') || lines[0].length < 4) addNoticePartial({\n              priority: 630,\n              message: \"Expected lexicon lemma on first line\",\n              except: lines[0],\n              location: ourLocation\n            });\n            if (!lines[2].startsWith('<!-- Status: ')) addNoticePartial({\n              priority: 330,\n              message: \"Expected lexicon entry status on third line\",\n              except: lines[2],\n              location: ourLocation\n            });\n\n            _loop = function _loop() {\n              var compulsoryField = _compulsoryFields[_i];\n              if (!lines.find(function (field) {\n                return field.startsWith(compulsoryField);\n              })) addNoticePartial({\n                priority: 620,\n                message: \"Expected lexicon lemma on first line\",\n                except: lines[0],\n                location: ourLocation\n              });\n            };\n\n            for (_i = 0, _compulsoryFields = compulsoryFields; _i < _compulsoryFields.length; _i++) {\n              _loop();\n            } // Now do the standard markdown checks\n\n\n            _context2.next = 20;\n            return ourCheckMarkdownFileContents(lexiconMarkdownText, givenLocation, checkingOptions);\n\n          case 20:\n            addSuccessMessage(\"Checked lexicon file: \".concat(lexiconFilename));\n            if (lexiconResultObject.noticeList.length) addSuccessMessage(\"checkLexiconFileContents v\".concat(LEXICON_MARKDOWN_FILE_VALIDATOR_VERSION_STRING, \" finished with \").concat(lexiconResultObject.noticeList.length ? lexiconResultObject.noticeList.length.toLocaleString() : \"zero\", \" notice\").concat(lexiconResultObject.noticeList.length === 1 ? '' : 's'));else addSuccessMessage(\"No errors or warnings found by checkLexiconFileContents v\".concat(LEXICON_MARKDOWN_FILE_VALIDATOR_VERSION_STRING)); // debugLog(`  checkLexiconFileContents returning with ${result.successList.length.toLocaleString()} success(es), ${result.noticeList.length.toLocaleString()} notice(s).`);\n            // userLog(`checkLexiconFileContents result is ${JSON.stringify(result)}`);\n\n            return _context2.abrupt(\"return\", lexiconResultObject);\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _checkLexiconFileContents.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/lexicon-file-contents-check.js?");

/***/ }),

/***/ "./src/core/manifest-text-check.js":
/*!*****************************************!*\
  !*** ./src/core/manifest-text-check.js ***!
  \*****************************************/
/*! exports provided: checkManifestText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkManifestText\", function() { return checkManifestText; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _yaml_text_check__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./yaml-text-check */ \"./src/core/yaml-text-check.js\");\n/* harmony import */ var _getApi__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getApi */ \"./src/core/getApi.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ajv */ \"./node_modules/ajv/lib/ajv.js\");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(ajv__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _disabled_notices__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./disabled-notices */ \"./src/core/disabled-notices.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n// eslint-disable-next-line no-unused-vars\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n\nvar MANIFEST_VALIDATOR_VERSION_STRING = '0.5.0'; // Pasted in 2020-10-02 from https://raw.githubusercontent.com/unfoldingWord/dcs/master/options/schema/rc.schema.json\n// Updated 2021-02-19\n// Now March 2021 it’s moved to https://github.com/unfoldingWord/rc-schema/blob/master/rc.schema.json\n// TODO: Load the latest one dynamically\n\nvar MANIFEST_SCHEMA = {\n  \"$schema\": \"http://json-schema.org/draft-07/schema\",\n  \"$id\": \"https://resource-container.readthedocs.io/schema/rc.schema.json\",\n  \"$$target\": [\"rc.schema.json#/definitions/languageTag\", \"rc.schema.json#/definitions/localizedText\"],\n  \"title\": \"Root\",\n  \"type\": \"object\",\n  \"required\": [\"dublin_core\", \"checking\", \"projects\"],\n  \"properties\": {\n    \"dublin_core\": {\n      \"$id\": \"#root/dublin_core\",\n      \"title\": \"Dublin_core\",\n      \"type\": \"object\",\n      \"required\": [\"conformsto\", \"contributor\", \"creator\", \"description\", \"format\", \"identifier\", \"issued\", \"language\", \"modified\", \"publisher\", \"relation\", \"rights\", \"source\", \"subject\", \"title\", \"type\", \"version\"],\n      \"properties\": {\n        \"conformsto\": {\n          \"$id\": \"#root/dublin_core/conformsto\",\n          \"title\": \"Conformsto\",\n          \"type\": \"string\",\n          \"default\": \"rc0.2\",\n          \"enum\": [\"rc0.2\"]\n        },\n        \"contributor\": {\n          \"$id\": \"#root/dublin_core/contributor\",\n          \"title\": \"Contributor\",\n          \"type\": \"array\",\n          \"default\": [],\n          \"items\": {\n            \"$id\": \"#root/dublin_core/contributor/items\",\n            \"title\": \"Items\",\n            \"type\": \"string\",\n            \"default\": \"\",\n            \"examples\": [\"Alrick G. Headley, M.Div., Th.M.\"]\n          }\n        },\n        \"creator\": {\n          \"$id\": \"#root/dublin_core/creator\",\n          \"title\": \"Creator\",\n          \"type\": \"string\",\n          \"default\": \"\",\n          \"examples\": [\"unfoldingWord\"]\n        },\n        \"description\": {\n          \"$id\": \"#root/dublin_core/description\",\n          \"title\": \"Description\",\n          \"type\": \"string\",\n          \"default\": \"\",\n          \"examples\": [\"An open-licensed update of the ASV, intended to provide a 'form-centric' understanding of the Bible. It increases the translator's understanding of the lexical and grammatical composition of the underlying text by adhering closely to the word order and structure of the originals.\"]\n        },\n        \"format\": {\n          \"$id\": \"#root/dublin_core/format\",\n          \"$ref\": \"#/definitions/mimeType\",\n          \"title\": \"Format\",\n          \"default\": \"\"\n        },\n        \"identifier\": {\n          \"$id\": \"#root/dublin_core/identifier\",\n          \"title\": \"Identifier\",\n          \"type\": \"string\",\n          \"default\": \"\",\n          \"examples\": [\"ult\"],\n          \"pattern\": \"^[a-z][a-z0-9-]\"\n        },\n        \"issued\": {\n          \"$id\": \"#root/dublin_core/issued\",\n          \"$ref\": \"#/definitions/timestamp\",\n          \"title\": \"Issued\",\n          \"type\": \"string\",\n          \"default\": \"\",\n          \"examples\": [\"2020-03-25\"]\n        },\n        \"modified\": {\n          \"$id\": \"#root/dublin_core/modified\",\n          \"$ref\": \"#/definitions/timestamp\",\n          \"title\": \"Modified\",\n          \"type\": \"string\",\n          \"default\": \"\",\n          \"examples\": [\"2020-03-25\"]\n        },\n        \"publisher\": {\n          \"$id\": \"#root/dublin_core/publisher\",\n          \"title\": \"Publisher\",\n          \"type\": \"string\",\n          \"default\": \"\",\n          \"examples\": [\"unfoldingWord\"]\n        },\n        \"language\": {\n          \"$id\": \"#root/dublin_core/language\",\n          \"title\": \"Language\",\n          \"type\": \"object\",\n          \"required\": [\"direction\", \"identifier\", \"title\"],\n          \"properties\": {\n            \"identifier\": {\n              \"$id\": \"#root/dublin_core/language/identifier\",\n              \"$ref\": \"#/definitions/languageTag\",\n              \"title\": \"Identifier\",\n              \"examples\": [\"en\", \"hi\", \"es-419\"]\n            },\n            \"title\": {\n              \"$id\": \"#root/dublin_core/language/title\",\n              \"title\": \"Title\",\n              \"type\": \"string\",\n              \"default\": \"\"\n            },\n            \"direction\": {\n              \"$id\": \"#root/dublin_core/language/direction\",\n              \"title\": \"Direction\",\n              \"type\": \"string\",\n              \"default\": \"ltr\",\n              \"enum\": [\"ltr\", \"rtl\"]\n            }\n          }\n        },\n        \"relation\": {\n          \"$id\": \"#root/dublin_core/relation\",\n          \"title\": \"Relation\",\n          \"type\": \"array\",\n          \"default\": [],\n          \"items\": {\n            \"$id\": \"#root/dublin_core/relation/items\",\n            \"$ref\": \"#/definitions/relationItem\",\n            \"title\": \"Items\",\n            \"default\": \"\",\n            \"examples\": [\"en/tw\"]\n          }\n        },\n        \"rights\": {\n          \"$id\": \"#root/dublin_core/rights\",\n          \"title\": \"Rights\",\n          \"type\": \"string\",\n          \"default\": \"CC BY-SA 4.0\",\n          \"enum\": [\"CC BY 3.0\", \"CC BY-SA 3.0\", \"CC BY-SA 4.0\", \"Free Translate 2.0 International Public License\", \"Public Domain\"]\n        },\n        \"source\": {\n          \"$id\": \"#root/dublin_core/source\",\n          \"title\": \"Source\",\n          \"type\": \"array\",\n          \"default\": [],\n          \"items\": {\n            \"$id\": \"#root/dublin_core/source/items\",\n            \"title\": \"Items\",\n            \"type\": \"object\",\n            \"required\": [\"identifier\", \"language\", \"version\"],\n            \"properties\": {\n              \"identifier\": {\n                \"$id\": \"#root/dublin_core/source/items/identifier\",\n                \"title\": \"Identifier\",\n                \"type\": \"string\",\n                \"default\": \"\",\n                \"examples\": [\"asv\"],\n                \"pattern\": \"^[a-z][a-z0-9-]\"\n              },\n              \"language\": {\n                \"$id\": \"#root/dublin_core/source/items/language\",\n                \"$ref\": \"#/definitions/languageTag\",\n                \"title\": \"Language\",\n                \"default\": \"\",\n                \"examples\": [\"en\"]\n              },\n              \"version\": {\n                \"$id\": \"#root/dublin_core/source/items/version\",\n                \"title\": \"Version\",\n                \"type\": \"string\",\n                \"default\": \"\",\n                \"examples\": [\"1901\"]\n              }\n            }\n          }\n        },\n        \"subject\": {\n          \"$id\": \"#root/dublin_core/subject\",\n          \"title\": \"Subject\",\n          \"type\": \"string\",\n          \"enum\": [\"Aligned Bible\", \"Bible\", \"Bible stories\", \"Greek New Testament\", \"Hebrew Old Testament\", \"OBS Study Notes\", \"OBS Study Questions\", \"OBS Translation Notes\", \"OBS Translation Questions\", \"Open Bible Stories\", \"Study Notes\", \"Study Questions\", \"Translation Academy\", \"Translation Notes\", \"Translation Questions\", \"Translation Words\", \"TSV Study Notes\", \"TSV Study Questions\", \"TSV Translation Notes\", \"TSV Translation Questions\", \"TSV Translation Words Links\", \"TSV OBS Study Notes\", \"TSV OBS Study Questions\", \"TSV OBS Translation Notes\", \"TSV OBS Translation Questions\", \"TSV OBS Translation Words Links\"]\n        },\n        \"title\": {\n          \"$id\": \"#root/dublin_core/title\",\n          \"title\": \"Title\",\n          \"type\": \"string\",\n          \"default\": \"\",\n          \"examples\": [\"unfoldingWord® Literal Text\"]\n        },\n        \"type\": {\n          \"$id\": \"#root/dublin_core/type\",\n          \"title\": \"Type\",\n          \"type\": \"string\",\n          \"default\": \"\",\n          \"examples\": [\"bundle\"],\n          \"enum\": [\"book\", \"bundle\", \"dict\", \"help\", \"man\"]\n        },\n        \"version\": {\n          \"$id\": \"#root/dublin_core/version\",\n          \"title\": \"Version\",\n          \"type\": \"string\",\n          \"default\": \"\",\n          \"examples\": [\"10\"]\n        }\n      }\n    },\n    \"checking\": {\n      \"$id\": \"#root/checking\",\n      \"title\": \"Checking\",\n      \"type\": \"object\",\n      \"required\": [\"checking_entity\", \"checking_level\"],\n      \"properties\": {\n        \"checking_entity\": {\n          \"$id\": \"#root/checking/checking_entity\",\n          \"title\": \"Checking_entity\",\n          \"type\": \"array\",\n          \"default\": [],\n          \"items\": {\n            \"$id\": \"#root/checking/checking_entity/items\",\n            \"title\": \"Items\",\n            \"type\": \"string\",\n            \"default\": \"\",\n            \"examples\": [\"unfoldingWord\"]\n          }\n        },\n        \"checking_level\": {\n          \"$id\": \"#root/checking/checking_level\",\n          \"title\": \"Checking_level\",\n          \"type\": [\"integer\", \"string\"],\n          \"default\": \"1\",\n          \"enum\": [\"1\", \"2\", \"3\"]\n        }\n      }\n    },\n    \"projects\": {\n      \"$id\": \"#root/projects\",\n      \"title\": \"Projects\",\n      \"type\": \"array\",\n      \"default\": [],\n      \"items\": {\n        \"$id\": \"#root/projects/items\",\n        \"title\": \"Items\",\n        \"type\": \"object\",\n        \"required\": [\"title\", \"identifier\", \"path\"],\n        \"properties\": {\n          \"title\": {\n            \"$id\": \"#root/projects/items/title\",\n            \"title\": \"Title\",\n            \"type\": \"string\",\n            \"default\": \"\",\n            \"examples\": [\"Genesis\"]\n          },\n          \"versification\": {\n            \"$id\": \"#root/projects/items/versification\",\n            \"title\": \"Versification\",\n            \"type\": [\"string\", \"null\"],\n            \"default\": null,\n            \"examples\": [\"ufw\"],\n            \"enum\": [\"avd\", \"odx\", \"odx-hr\", \"other\", \"rsc\", \"ufw\", \"ufw-bn\", \"ufw-ml\", \"ufw-odx\", \"ufw-rev\", \"obs\", \"\", null]\n          },\n          \"identifier\": {\n            \"$id\": \"#root/projects/items/identifier\",\n            \"$ref\": \"#/definitions/projectIdentifier\",\n            \"title\": \"Identifier\",\n            \"default\": \"\"\n          },\n          \"sort\": {\n            \"$id\": \"#root/projects/items/sort\",\n            \"title\": \"Sort\",\n            \"type\": \"integer\",\n            \"default\": 0\n          },\n          \"path\": {\n            \"$id\": \"#root/projects/items/path\",\n            \"$ref\": \"#/definitions/path\",\n            \"title\": \"Path\",\n            \"examples\": [\"./01-GEN.usfm\"]\n          },\n          \"categories\": {\n            \"$id\": \"#root/projects/items/categories\",\n            \"title\": \"Categories\",\n            \"type\": [\"array\", \"null\"],\n            \"default\": [],\n            \"items\": {\n              \"$id\": \"#root/projects/items/categories/items\",\n              \"title\": \"Items\",\n              \"type\": \"string\",\n              \"enum\": [\"bible-ot\", \"bible-nt\", \"ta\"]\n            }\n          }\n        }\n      }\n    }\n  },\n  \"definitions\": {\n    \"languageTag\": {\n      \"type\": \"string\",\n      \"pattern\": \"^(((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+))$\",\n      \"minLength\": 2,\n      \"description\": \"A valid IETF language tag as specified by BCP 47.\"\n    },\n    \"localizedText\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/trimmedText\"\n      },\n      \"propertyNames\": {\n        \"$ref\": \"#/definitions/languageTag\"\n      },\n      \"minProperties\": 1,\n      \"description\": \"A textual string specified in one or multiple languages, indexed by IETF language tag.\"\n    },\n    \"mimeType\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[\\\\-a-z0-9]+/[\\\\-a-z0-9+]+$\",\n      \"description\": \"An IANA media type (also known as MIME type)\"\n    },\n    \"path\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[^\\\\/:?*\\\"><|]+(/[^\\\\/:?*\\\"><|]+)*$\",\n      \"description\": \"A file path, delimited by forward slashes.\"\n    },\n    \"projectIdentifier\": {\n      \"type\": \"string\",\n      \"enum\": [\"gen\", \"exo\", \"lev\", \"num\", \"deu\", \"jos\", \"jdg\", \"rut\", \"1sa\", \"2sa\", \"1ki\", \"2ki\", \"1ch\", \"2ch\", \"ezr\", \"neh\", \"est\", \"job\", \"psa\", \"pro\", \"ecc\", \"sng\", \"isa\", \"jer\", \"lam\", \"ezk\", \"dan\", \"hos\", \"jol\", \"amo\", \"oba\", \"jon\", \"mic\", \"nam\", \"hab\", \"zep\", \"hag\", \"zec\", \"mal\", \"mat\", \"mrk\", \"luk\", \"jhn\", \"act\", \"rom\", \"1co\", \"2co\", \"gal\", \"eph\", \"php\", \"col\", \"1th\", \"2th\", \"1ti\", \"2ti\", \"tit\", \"phm\", \"heb\", \"jas\", \"1pe\", \"2pe\", \"1jn\", \"2jn\", \"3jn\", \"jud\", \"rev\", \"obs\", \"intro\", \"process\", \"translate\", \"checking\", \"bible\"]\n    },\n    \"relationItem\": {\n      \"type\": \"string\",\n      \"pattern\": \"^(((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+))/[a-z][a-z0-9-]*(\\\\?v=[0-9][a-z0-9\\\\._-]*)*$\",\n      \"minLength\": 4,\n      \"description\": \"A relation has valid IETF language tag as specified by BCP 47 and a valid resource, separated with a slash.\"\n    },\n    \"timestamp\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[12][0-9]{3}(-[01][0-9](-[0123][0-9])?)?$\"\n    },\n    \"trimmedText\": {\n      \"type\": \"string\",\n      \"pattern\": \"^\\\\S(.*\\\\S)?$\",\n      \"description\": \"A string without surrounding whitespace characters.\"\n    },\n    \"url\": {\n      \"type\": \"string\",\n      \"pattern\": \"^((http(s)?|ftp)://)[^\\\\s$]+$\",\n      \"minLength\": 1,\n      \"description\": \"A valid **Uniform Resource Locator**.\",\n      \"examples\": [\"https://example.com\"]\n    }\n  }\n};\nvar ajv = new ajv__WEBPACK_IMPORTED_MODULE_7___default.a();\nvar validate = ajv.compile(MANIFEST_SCHEMA);\n/**\n *\n * @param {string} username -- or orgname -- owner of DCS repo\n * @param {string} languageCode -- language of main thing being checked -- normally the same as the first part of the repoName, e.g., 'en', but may differ for original language repos\n * @param {string} repoCode -- e.g., 'UHB', 'LT', 'TN', 'OBS-SQ2'\n * @param {string} repoName -- e.g., 'en_tn'\n * @param {string} repoBranch -- e.g., 'master'\n * @param {string} manifestText -- contents of manifest.yaml\n * @param {string} givenLocation -- optional description of location of manifest\n * @param {Object} checkingOptions -- optional option key:value pairs\n */\n\nfunction checkManifestText(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n  return _checkManifestText.apply(this, arguments);\n} // end of checkManifestText function\n\nfunction _checkManifestText() {\n  _checkManifestText = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, repoCode, repoName, repoBranch, manifestText, givenLocation, checkingOptions) {\n    var ourLocation, excerptLength, cmtResult, addSuccessMessage, addNotice, ourYAMLTextChecks, formData, formDataKeys, languageIdentifier, valid, _iterator, _step, errorObject, getFile_, haveOTbooks, haveNTbooks, ourProjectPathList, _iterator2, _step2, projectEntry, projectKeys, _i, _arr, keyName, whichTestament, projectFilepath, isBookFolder, _i2, _Object$keys, thisBookID, projectFileContent, repoFileList, _iterator3, _step3, repoFilepath, adjRepoFilepath, relationList, haveUHB, haveUGNT, _iterator4, _step4, relation;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ourYAMLTextChecks = function _ourYAMLTextChecks(textName, manifestText, givenLocation, checkingOptions) {\n              // Does basic checks for small errors like leading/trailing spaces, etc.\n              // We assume that checking for compulsory fields is done elsewhere\n              // Updates the global list of notices\n              // debugLog(`cManT ourYAMLTextChecks(${textName}, (${fieldText.length}), ${allowedLinks}, ${fieldLocation}, …)`);\n              //parameterAssert(textName !== undefined, \"cManT ourYAMLTextChecks: 'textName' parameter should be defined\");\n              //parameterAssert(typeof textName === 'string', `cManT ourYAMLTextChecks: 'textName' parameter should be a string not a '${typeof textName}'`);\n              //parameterAssert(manifestText !== undefined, \"cManT ourYAMLTextChecks: 'manifestText' parameter should be defined\");\n              //parameterAssert(typeof manifestText === 'string', `cManT ourYAMLTextChecks: 'manifestText' parameter should be a string not a '${typeof manifestText}'`);\n              // parameterAssert( allowedLinks===true || allowedLinks===false, \"cManT ourYAMLTextChecks: allowedLinks parameter must be either true or false\");\n              var cYtResultObject = Object(_yaml_text_check__WEBPACK_IMPORTED_MODULE_4__[\"checkYAMLText\"])(username, 'en', repoCode, textName, manifestText, givenLocation, checkingOptions); // Concat is faster if we don’t need to process each notice individually\n\n              cmtResult.successList = cmtResult.successList.concat(cYtResultObject.successList);\n              cmtResult.noticeList = cmtResult.noticeList.concat(cYtResultObject.noticeList);\n              return cYtResultObject.formData;\n            };\n\n            addNotice = function _addNotice(noticeObject) {\n              // functionLog(`checkManifestText Notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n              //parameterAssert(noticeObject.priority !== undefined, \"cManT addNotice: 'priority' parameter should be defined\");\n              //parameterAssert(typeof noticeObject.priority === 'number', `cManT addNotice: 'priority' parameter should be a number not a '${typeof noticeObject.priority}': ${noticeObject.priority}`);\n              //parameterAssert(noticeObject.message !== undefined, \"cManT addNotice: 'message' parameter should be defined\");\n              //parameterAssert(typeof noticeObject.message === 'string', `cManT addNotice: 'message' parameter should be a string not a '${typeof noticeObject.message}': ${noticeObject.message}`);\n              // parameterAssert(characterIndex !== undefined, \"cManT addNotice: 'characterIndex' parameter should be defined\");\n              if (noticeObject.characterIndex) {//parameterAssert(typeof noticeObject.characterIndex === 'number', `cManT addNotice: 'characterIndex' parameter should be a number not a '${typeof noticeObject.characterIndex}': ${noticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"cManT addNotice: 'excerpt' parameter should be defined\");\n\n\n              if (noticeObject.excerpt) {//parameterAssert(typeof noticeObject.excerpt === 'string', `cManT addNotice: 'excerpt' parameter should be a string not a '${typeof noticeObject.excerpt}': ${noticeObject.excerpt}`);\n              } //parameterAssert(noticeObject.location !== undefined, \"cManT addNotice: 'location' parameter should be defined\");\n              //parameterAssert(typeof noticeObject.location === 'string', `cManT addNotice: 'location' parameter should be a string not a '${typeof noticeObject.location}': ${noticeObject.location}`);\n\n\n              if (repoName) noticeObject.repoName = repoName;\n              if (noticeObject.debugChain) noticeObject.debugChain = \"checkManifestText \".concat(noticeObject.debugChain);\n              cmtResult.noticeList.push(noticeObject);\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // functionLog(`checkManifestText success: ${successString}`);\n              cmtResult.successList.push(successString);\n            };\n\n            /* This function is optimised for checking the entire file, i.e., all lines.\n             See the specification at https://resource-container.readthedocs.io/en/latest/manifest.html.\n             Returns a result object containing a successList and a noticeList\n            */\n            // functionLog(`checkManifestText(${username}, ${languageCode}, ${repoCode}, ${repoName}, ${repoBranch}, ${manifestText.length} chars, ${givenLocation}, ${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(username !== undefined, \"checkManifestText: 'username' parameter should be defined\");\n            //parameterAssert(typeof username === 'string', `checkManifestText: 'username' parameter should be a string not a '${typeof username}': ${username}`);\n            //parameterAssert(languageCode !== undefined, \"checkManifestText: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkManifestText: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n            //parameterAssert(repoCode !== undefined, \"checkManifestText: 'repoCode' parameter should be defined\");\n            //parameterAssert(typeof repoCode === 'string', `checkManifestText: 'repoCode' parameter should be a string not a '${typeof repoCode}': ${repoCode}`);\n            //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkManifestText: 'repoCode' parameter should not be '${repoCode}'`);\n            //parameterAssert(repoName !== undefined, \"checkManifestText: 'repoName' parameter should be defined\");\n            //parameterAssert(typeof repoName === 'string', `checkManifestText: 'repoName' parameter should be a string not a '${typeof repoName}': ${repoName}`);\n            if (repoCode !== 'UHB' && repoCode !== 'UGNT') {//parameterAssert(repoName.startsWith(languageCode), `checkManifestText: 'repoName' parameter '${repoName}' should start with language code: '${languageCode}_'`);\n            } //parameterAssert(repoBranch !== undefined, \"checkManifestText: 'repoBranch' parameter should be defined\");\n            //parameterAssert(typeof repoBranch === 'string', `checkManifestText: 'repoBranch' parameter should be a string not a '${typeof repoBranch}': ${repoBranch}`);\n            //parameterAssert(manifestText !== undefined, \"checkManifestText: 'manifestText' parameter should be defined\");\n            //parameterAssert(typeof manifestText === 'string', `checkManifestText: 'manifestText' parameter should be a string not a '${typeof manifestText}': ${manifestText}`);\n            //parameterAssert(givenLocation !== undefined, \"checkManifestText: 'optionalFieldLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkManifestText: 'optionalFieldLocation' parameter should be a string not a '${typeof givenLocation}': ${givenLocation}`);\n            //parameterAssert(givenLocation.indexOf('true') === -1, `checkManifestText: 'optionalFieldLocation' parameter should not be '${givenLocation}'`);\n            //parameterAssert(checkingOptions !== undefined, \"checkManifestText: 'checkingOptions' parameter should be defined\");\n\n\n            if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkManifestText: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n            }\n\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (mfcError) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n            // const excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n            // const excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n\n            cmtResult = {\n              successList: [],\n              noticeList: []\n            };\n            // end of ourYAMLTextChecks function\n            // Main code for checkManifestText function\n            formData = ourYAMLTextChecks(\"\".concat(repoName, \" manifest\"), manifestText, ourLocation, checkingOptions);\n\n            if (!formData) {\n              _context.next = 74;\n              break;\n            }\n\n            // debugLog(\"formData\", JSON.stringify(formData));\n            formDataKeys = Object.keys(formData); // debugLog(\"formData keys\", JSON.stringify(formDataKeys));\n\n            if (formDataKeys.indexOf('dublin_core') < 0) addNotice({\n              priority: 928,\n              message: \"'dublin_core' key is missing\",\n              location: ourLocation\n            });\n            if (formDataKeys.indexOf('projects') < 0) addNotice({\n              priority: 929,\n              message: \"'projects' key is missing\",\n              location: ourLocation\n            });\n            if (formDataKeys.indexOf('checking') < 0) addNotice({\n              priority: 148,\n              message: \"'checking' key is missing\",\n              location: ourLocation\n            }); // Check Dublin Core stuff\n            // const DublinCoreData = formData.dublin_core\n            // debugLog(\"checkManifestText DublinCoreData\", JSON.stringify(DublinCoreData));\n\n            try {\n              languageIdentifier = formData['dublin_core']['language']['identifier'];\n              if (repoCode === 'UHB' && languageIdentifier !== 'hbo' || repoCode === 'UGNT' && languageIdentifier !== 'el-x-koine' || repoCode !== 'UHB' && repoCode !== 'UGNT' && languageIdentifier !== languageCode) // for most repos\n                addNotice({\n                  priority: 933,\n                  message: \"Manifest' language' 'identifier' doesn’t match\",\n                  details: \"expected '\".concat(languageCode, \"' but manifest has '\").concat(languageIdentifier, \"'\"),\n                  location: ourLocation\n                });\n            } catch (e) {\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_9__[\"debugLog\"])(\"checkManifestText got error \".concat(e.message, \" while loading 'language' 'identifier'\"));\n              addNotice({\n                priority: 934,\n                message: \"'language' key or 'idenfier' subkey is missing\",\n                location: ourLocation\n              });\n            } // TODO: We could add a lot more checking here\n            // for (const mainKey in formData) {\n            //     userLog(\"mainKey\", typeof mainKey, mainKey);\n            //     const mainSection = formData[mainKey];\n            //     userLog(\"mainSection\", typeof mainSection, JSON.stringify(mainSection));\n            //     for (const key2 in mainSection) {\n            //         userLog(mainKey, \"key2\", typeof key2, key2);\n            //         const section2 = mainSection[key2];\n            //         userLog(mainKey, \"section2\", typeof section2, JSON.stringify(section2));\n            //     }\n            // }\n            // Validate Resource Container manifest against the schema\n            //  using AJV from https://www.npmjs.com/package/ajv\n\n\n            valid = validate(formData);\n\n            if (!valid) {\n              // debugLog(\"checkManifestText validationResult\", valid, JSON.stringify(validate.errors));\n              // Here’s a typical error entry:\n              //  {\"keyword\":\"pattern\",\n              //   \"dataPath\":\".dublin_core.source[0].identifier\",\n              //   \"schemaPath\":\"#/properties/dublin_core/properties/source/items/properties/identifier/pattern\",\n              //   \"params\":{\"pattern\":\"^[a-z][a-z0-9-]\"},\n              //   \"message\":\"should match pattern \\\"^[a-z][a-z0-9-]\\\"\"}\n              _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(validate.errors);\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  errorObject = _step.value;\n                  // debugLog(\"checkManifestText schema validation errorObject\", JSON.stringify(errorObject));\n                  // Can’t give a lineNumber unfortunately\n                  addNotice({\n                    priority: 985,\n                    message: \"Field does not match schema \".concat(errorObject.keyword),\n                    details: errorObject.message,\n                    fieldName: errorObject.dataPath,\n                    location: ourLocation\n                  });\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            } // Check that the project files in the manifest actually exist\n\n\n            getFile_ = checkingOptions && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile : _getApi__WEBPACK_IMPORTED_MODULE_5__[\"cachedGetFile\"];\n            haveOTbooks = false, haveNTbooks = false;\n            ourProjectPathList = []; // Make a list for the next check\n\n            _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(formData['projects']);\n            _context.prev = 23;\n\n            _iterator2.s();\n\n          case 25:\n            if ((_step2 = _iterator2.n()).done) {\n              _context.next = 60;\n              break;\n            }\n\n            projectEntry = _step2.value;\n            // debugLog(`Manifest project: ${JSON.stringify(projectEntry)}`);\n            projectKeys = Object.keys(projectEntry); // Expect title, versification, identifier, sort, path, categories\n            // debugLog(\"Project keys\", JSON.stringify(projectKeys));\n\n            for (_i = 0, _arr = ['identifier', 'path', 'sort']; _i < _arr.length; _i++) {\n              keyName = _arr[_i];\n              // TODO: What about 'title', 'versification', 'categories' -- are they not compulsory\n              if (projectKeys.indexOf(keyName) === -1) addNotice({\n                priority: 939,\n                message: \"Key is missing for project\",\n                details: keyName,\n                excerpt: JSON.stringify(projectEntry),\n                location: ourLocation\n              });\n            }\n\n            whichTestament = void 0;\n\n            try {\n              whichTestament = Object(_books_books__WEBPACK_IMPORTED_MODULE_6__[\"testament\"])(projectEntry['identifier']); // returns 'old' or 'new' for valid Bible books\n            } catch (_unused) {}\n\n            if (whichTestament === 'old') haveOTbooks = true;else if (whichTestament === 'new') haveNTbooks = true;\n            projectFilepath = projectEntry['path'];\n            ourProjectPathList.push(projectFilepath);\n\n            if (!(repoName && projectFilepath !== './content' // Ignore this common folder path\n            && projectFilepath !== './bible' // Ignore this common folder path\n            && projectFilepath !== './intro' && projectFilepath !== './process' && projectFilepath !== './translate' && projectFilepath !== './checking')) {\n              _context.next = 58;\n              break;\n            }\n\n            if (!(!checkingOptions || (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) !== true)) {\n              _context.next = 58;\n              break;\n            }\n\n            // Try fetching the file maybe\n            isBookFolder = false;\n            _i2 = 0, _Object$keys = Object.keys(_books_books__WEBPACK_IMPORTED_MODULE_6__[\"BibleBookData\"]);\n\n          case 38:\n            if (!(_i2 < _Object$keys.length)) {\n              _context.next = 46;\n              break;\n            }\n\n            thisBookID = _Object$keys[_i2];\n\n            if (!(projectFilepath === \"./\".concat(thisBookID.toLowerCase()))) {\n              _context.next = 43;\n              break;\n            }\n\n            isBookFolder = true;\n            return _context.abrupt(\"break\", 46);\n\n          case 43:\n            _i2++;\n            _context.next = 38;\n            break;\n\n          case 46:\n            if (isBookFolder) {\n              _context.next = 58;\n              break;\n            }\n\n            projectFileContent = void 0;\n            _context.prev = 48;\n            _context.next = 51;\n            return getFile_({\n              username: username,\n              repository: repoName,\n              path: projectFilepath,\n              branch: repoBranch\n            });\n\n          case 51:\n            projectFileContent = _context.sent;\n            // debugLog(\"Fetched manifest project fileContent for\", repoName, projectFilepath, typeof projectFileContent, projectFileContent.length);\n            if (!projectFileContent) addNotice({\n              priority: 938,\n              message: \"Unable to find project file mentioned in manifest\",\n              excerpt: projectFilepath,\n              location: ourLocation\n            });else if (projectFileContent.length < 10) addNotice({\n              priority: 937,\n              message: \"Linked project file seems empty\",\n              excerpt: projectFilepath,\n              location: ourLocation\n            });\n            _context.next = 58;\n            break;\n\n          case 55:\n            _context.prev = 55;\n            _context.t0 = _context[\"catch\"](48);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            addNotice({\n              priority: 936,\n              message: \"Error loading manifest project link\",\n              details: _context.t0,\n              excerpt: projectFilepath,\n              location: ourLocation\n            });\n\n          case 58:\n            _context.next = 25;\n            break;\n\n          case 60:\n            _context.next = 65;\n            break;\n\n          case 62:\n            _context.prev = 62;\n            _context.t1 = _context[\"catch\"](23);\n\n            _iterator2.e(_context.t1);\n\n          case 65:\n            _context.prev = 65;\n\n            _iterator2.f();\n\n            return _context.finish(65);\n\n          case 68:\n            _context.next = 70;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_5__[\"getFileListFromZip\"])({\n              username: username,\n              repository: repoName,\n              branchOrRelease: repoBranch\n            });\n\n          case 70:\n            repoFileList = _context.sent;\n            // not using optionalPrefix\n            // debugLog(`checkManifestText got repoFileList: (${repoFileList.length}) ${repoFileList}`);\n            _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(repoFileList);\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                repoFilepath = _step3.value;\n\n                if (repoFilepath.endsWith('.tsv') || repoFilepath.endsWith('.usfm') || repoFilepath.endsWith('.md') && repoFilepath !== 'LICENSE.md' && repoFilepath !== 'README.md') {\n                  adjRepoFilepath = \"./\".concat(repoFilepath.split('/')[0]); // TQ manifest only lists folders so change '1co/01/02.md' to './1co'\n                  // debugLog(`  Checking ${adjRepoFilepath} from repoFileList`);\n\n                  if (!ourProjectPathList.includes(repoFilepath) && !ourProjectPathList.includes(adjRepoFilepath)) {\n                    // debugLog(`    Seems we couldn’t find ${repoFilepath} in the manifest`);\n                    addNotice({\n                      priority: 832,\n                      message: \"Seems filename is missing from the manifest project list\",\n                      excerpt: repoFilepath,\n                      location: ourLocation\n                    });\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n\n            if (repoCode === 'TWL' || repoCode === 'TN' || repoCode === 'TN2') {\n              // Check that the necessary relation fields are present\n              relationList = []; // Make a list for the next check\n\n              haveUHB = false, haveUGNT = false;\n\n              try {\n                _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(formData['dublin_core']['relation']);\n\n                try {\n                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                    relation = _step4.value;\n                    // debugLog(`${repoCode} manifest relation: ${relation}`);\n                    relationList.push(relation);\n                    if (relation.startsWith('hbo/uhb')) haveUHB = true;\n                    if (relation.startsWith('el-x-koine/ugnt')) haveUGNT = true;\n                  }\n                } catch (err) {\n                  _iterator4.e(err);\n                } finally {\n                  _iterator4.f();\n                }\n              } catch (e) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_9__[\"debugLog\"])(\"checkManifestText got error \".concat(e.message, \" while loading 'relation' fields\"));\n                addNotice({\n                  priority: 930,\n                  message: \"'relation' key is missing\",\n                  location: ourLocation\n                });\n              }\n\n              if (haveOTbooks && !haveUHB) addNotice({\n                priority: 817,\n                message: \"UHB 'relation' is missing\",\n                details: JSON.stringify(relationList),\n                location: ourLocation\n              });\n              if (haveNTbooks && !haveUGNT) addNotice({\n                priority: 816,\n                message: \"UGNT 'relation' is missing\",\n                details: JSON.stringify(relationList),\n                location: ourLocation\n              });\n            }\n\n          case 74:\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              // functionLog(`checkManifestText: calling removeDisabledNotices(${cmtResult.noticeList.length}) having ${JSON.stringify(checkingOptions)}`);\n              cmtResult.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_8__[\"removeDisabledNotices\"])(cmtResult.noticeList);\n            } // addSuccessMessage(`Checked all ${lines.length.toLocaleString()} line${lines.length==1?'':'s'}${ourLocation}`);\n\n\n            if (cmtResult.noticeList.length) addSuccessMessage(\"checkManifestText v\".concat(MANIFEST_VALIDATOR_VERSION_STRING, \" finished with \").concat(cmtResult.noticeList.length ? cmtResult.noticeList.length.toLocaleString() : \"zero\", \" notice\").concat(cmtResult.noticeList.length === 1 ? '' : 's'));else addSuccessMessage(\"No errors or warnings found by checkManifestText v\".concat(MANIFEST_VALIDATOR_VERSION_STRING)); // debugLog(`  checkManifestText returning with ${cmtResult.successList.length.toLocaleString()} success(es), ${cmtResult.noticeList.length.toLocaleString()} notice(s).`);\n            // debugLog(\"checkManifestText result is\", JSON.stringify(cmtResult));\n\n            return _context.abrupt(\"return\", cmtResult);\n\n          case 77:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[23, 62, 65, 68], [48, 55]]);\n  }));\n  return _checkManifestText.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/manifest-text-check.js?");

/***/ }),

/***/ "./src/core/markdown-file-contents-check.js":
/*!**************************************************!*\
  !*** ./src/core/markdown-file-contents-check.js ***!
  \**************************************************/
/*! exports provided: checkMarkdownFileContents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkMarkdownFileContents\", function() { return checkMarkdownFileContents; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _markdown_text_check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./markdown-text-check */ \"./src/core/markdown-text-check.js\");\n/* harmony import */ var _file_text_check__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./file-text-check */ \"./src/core/file-text-check.js\");\n/* harmony import */ var _strongs_field_check__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./strongs-field-check */ \"./src/core/strongs-field-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n\n // and this may call checkLexiconFileContents()\n// eslint-disable-next-line no-unused-vars\n\n\nvar MARKDOWN_FILE_VALIDATOR_VERSION_STRING = '0.6.0';\n/**\n *\n * @param {string} username\n * @param {string} languageCode\n * @param {string} repoCode -- e.g., 'TW', 'TA', 'TQ', or 'OBS', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ', etc.\n * @param {string} markdownFilename -- used for identification\n * @param {string} markdownText -- the actual text to be checked\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkMarkdownFileContents(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n  return _checkMarkdownFileContents.apply(this, arguments);\n} // end of checkMarkdownFileContents function\n\nfunction _checkMarkdownFileContents() {\n  _checkMarkdownFileContents = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee3(username, languageCode, repoCode, markdownFilename, markdownText, givenLocation, checkingOptions) {\n    var ourLocation, excerptLength, mfccResult, addSuccessMessage, addNoticePartial, ourCheckMarkdownText, _ourCheckMarkdownText, ourFileTextCheck, ourCheckStrongsField, _ourCheckStrongsField, lines, n, line, bits, _iterator2, _step2, bit;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _ourCheckStrongsField = function _ourCheckStrongsField3() {\n              _ourCheckStrongsField = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee2(lineNumber, fieldText, location, checkingOptions) {\n                var adjustedLanguageCode, csfResultObject, _iterator4, _step4, coqNoticeEntry, _iterator5, _step5, checkedRepoName, _iterator6, _step6, checkedFilenameExtension;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        // Checks that the Strongs number field is valid\n                        // Updates the global list of notices\n                        // functionLog(`checkMarkdownFileContents ourCheckStrongsField(${lineNumber}, ${C}:${V}, ${marker}, ${fieldName}, (${fieldText.length}) '${fieldText}', ${location}, ${JSON.stringify(checkingOptions)})`);\n                        // parameterAssert(marker !== undefined, \"checkMarkdownFileContents ourCheckStrongsField: 'marker' parameter should be defined\");\n                        // parameterAssert(typeof marker === 'string', `checkMarkdownFileContents ourCheckStrongsField: 'marker' parameter should be a string not a '${typeof marker}': ${marker}`);\n                        // parameterAssert(fieldName !== undefined, \"checkMarkdownFileContents ourCheckStrongsField: 'fieldName' parameter should be defined\");\n                        // parameterAssert(typeof fieldName === 'string', `checkMarkdownFileContents ourCheckStrongsField: 'fieldName' parameter should be a string not a '${typeof fieldName}': ${fieldName}`);\n                        //parameterAssert(fieldText !== undefined, \"checkMarkdownFileContents ourCheckStrongsField: 'fieldText' parameter should be defined\");\n                        //parameterAssert(typeof fieldText === 'string', `checkMarkdownFileContents ourCheckStrongsField: 'fieldText' parameter should be a string not a '${typeof fieldText}': ${fieldText}`);\n                        //parameterAssert(checkingOptions !== undefined, \"checkMarkdownFileContents ourCheckStrongsField: 'checkingOptions' parameter should be defined\");\n                        if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkMarkdownFileContents ourCheckStrongsField: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n                        }\n\n                        adjustedLanguageCode = languageCode; // This is the language code of the resource with the link\n\n                        if (languageCode === 'hbo' || languageCode === 'el-x-koine') adjustedLanguageCode = 'en'; // This is a guess (and won’t be needed for TWs when we switch to TWLs)\n\n                        _context2.next = 5;\n                        return Object(_strongs_field_check__WEBPACK_IMPORTED_MODULE_7__[\"checkStrongsField\"])(username, languageCode, repoCode, 'TWStrongs', fieldText, '', '', '', location, Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, checkingOptions), {}, {\n                          defaultLanguageCode: adjustedLanguageCode\n                        }));\n\n                      case 5:\n                        csfResultObject = _context2.sent;\n                        // debugLog(`csfResultObject=${JSON.stringify(csfResultObject)}`);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(csfResultObject.noticeList);\n\n                        try {\n                          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                            coqNoticeEntry = _step4.value;\n                            // debugLog(`checkMarkdownFileContents ourCheckStrongsField got: ${JSON.stringify(coqNoticeEntry)}`);\n                            Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"logicAssert\"])(coqNoticeEntry.extra ? coqNoticeEntry.extra !== 'UGNT' : true, \"Expected extra to be a lexicon from \".concat(JSON.stringify(coqNoticeEntry)));\n                            if (coqNoticeEntry.extra) // it must be an indirect check on a UHAL or UGL article from a lexicon check\n                              mfccResult.noticeList.push(coqNoticeEntry); // Just copy the complete notice as is\n                            else // For our direct checks, we add the repoCode as an extra value\n                              addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, coqNoticeEntry), {}, {\n                                lineNumber: lineNumber,\n                                fieldName: 'TWStrongs'\n                              }));\n                          } // The following is needed coz we might be checking the linked UHAL and/or UGL lexicon entries\n\n                        } catch (err) {\n                          _iterator4.e(err);\n                        } finally {\n                          _iterator4.f();\n                        }\n\n                        if (csfResultObject.checkedFileCount && csfResultObject.checkedFileCount > 0) if (typeof mfccResult.checkedFileCount === 'number') mfccResult.checkedFileCount += csfResultObject.checkedFileCount;else mfccResult.checkedFileCount = csfResultObject.checkedFileCount;\n                        if (csfResultObject.checkedFilesizes && csfResultObject.checkedFilesizes > 0) if (typeof mfccResult.checkedFilesizes === 'number') mfccResult.checkedFilesizes += csfResultObject.checkedFilesizes;else mfccResult.checkedFilesizes = csfResultObject.checkedFilesizes;\n\n                        if (csfResultObject.checkedRepoNames && csfResultObject.checkedRepoNames.length > 0) {\n                          _iterator5 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(csfResultObject.checkedRepoNames);\n\n                          try {\n                            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                              checkedRepoName = _step5.value;\n\n                              try {\n                                if (mfccResult.checkedRepoNames.indexOf(checkedRepoName) < 0) mfccResult.checkedRepoNames.push(checkedRepoName);\n                              } catch (_unused) {\n                                mfccResult.checkedRepoNames = [checkedRepoName];\n                              }\n                            }\n                          } catch (err) {\n                            _iterator5.e(err);\n                          } finally {\n                            _iterator5.f();\n                          }\n                        }\n\n                        if (csfResultObject.checkedFilenameExtensions && csfResultObject.checkedFilenameExtensions.length > 0) {\n                          _iterator6 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(csfResultObject.checkedFilenameExtensions);\n\n                          try {\n                            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                              checkedFilenameExtension = _step6.value;\n\n                              try {\n                                if (mfccResult.checkedFilenameExtensions.indexOf(checkedFilenameExtension) < 0) mfccResult.checkedFilenameExtensions.push(checkedFilenameExtension);\n                              } catch (_unused2) {\n                                mfccResult.checkedFilenameExtensions = [checkedFilenameExtension];\n                              }\n                            }\n                          } catch (err) {\n                            _iterator6.e(err);\n                          } finally {\n                            _iterator6.f();\n                          }\n                        } // if (result.checkedFilenameExtensions) debugLog(`ourCheckStrongsField result: ${JSON.stringify(result)}`);\n\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              return _ourCheckStrongsField.apply(this, arguments);\n            };\n\n            ourCheckStrongsField = function _ourCheckStrongsField2(_x11, _x12, _x13, _x14) {\n              return _ourCheckStrongsField.apply(this, arguments);\n            };\n\n            ourFileTextCheck = function _ourFileTextCheck(markdownText, optionalFieldLocation, checkingOptions) {\n              // Does basic checks for small errors like leading/trailing spaces, etc.\n              // We assume that checking for compulsory fields is done elsewhere\n              // Updates the global list of notices\n              // debugLog(`cMdFC ourFileTextCheck(${markdownText}, (${markdownText.length}), ${optionalFieldLocation}, ${JSON.stringify(checkingOptions)})`);\n              //parameterAssert(markdownText !== undefined, \"cMdFC ourFileTextCheck: 'markdownText' parameter should be defined\");\n              //parameterAssert(typeof markdownText === 'string', `cMdFC ourFileTextCheck: 'markdownText' parameter should be a string not a '${typeof markdownText}'`);\n              //parameterAssert(checkingOptions !== undefined, \"cMdFC ourFileTextCheck: 'checkingOptions' parameter should be defined\");\n              var ctfcResultObject = Object(_file_text_check__WEBPACK_IMPORTED_MODULE_6__[\"checkTextfileContents\"])(username, languageCode, repoCode, 'markdown', markdownFilename, markdownText, optionalFieldLocation, checkingOptions); // debugLog(`ctfcResultObject=${JSON.stringify(ctfcResultObject)}`);\n              // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n              //  process results line by line\n\n              var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ctfcResultObject.noticeList),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var noticeEntry = _step.value;\n                  addNoticePartial(noticeEntry);\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            };\n\n            _ourCheckMarkdownText = function _ourCheckMarkdownText3() {\n              _ourCheckMarkdownText = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee(markdownText, optionalFieldLocation, checkingOptions) {\n                var cmtResultObject, _iterator3, _step3, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return Object(_markdown_text_check__WEBPACK_IMPORTED_MODULE_5__[\"checkMarkdownText\"])(username, languageCode, repoCode, markdownFilename, markdownText, optionalFieldLocation, checkingOptions);\n\n                      case 2:\n                        cmtResultObject = _context.sent;\n                        // debugLog(`cmtResultObject=${JSON.stringify(cmtResultObject)}`);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cmtResultObject.noticeList);\n\n                        try {\n                          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                            noticeEntry = _step3.value;\n                            addNoticePartial(noticeEntry);\n                          }\n                        } catch (err) {\n                          _iterator3.e(err);\n                        } finally {\n                          _iterator3.f();\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _ourCheckMarkdownText.apply(this, arguments);\n            };\n\n            ourCheckMarkdownText = function _ourCheckMarkdownText2(_x8, _x9, _x10) {\n              return _ourCheckMarkdownText.apply(this, arguments);\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkMarkdownFileContents addNoticePartial: (priority=${incompleteNoticeObject.priority}) ${incompleteNoticeObject.message}${incompleteNoticeObject.characterIndex > 0 ? ` (at character ${incompleteNoticeObject.characterIndex})` : \"\"}${incompleteNoticeObject.excerpt ? \" \" + incompleteNoticeObject.excerpt : \"\"}${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"cMdT addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `cMdT addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"cMdT addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `cMdT addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(characterIndex !== undefined, \"cMdT addNoticePartial: 'characterIndex' parameter should be defined\");\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `cMdT addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"cMdT addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `cMdT addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"cMdT addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `cMdT addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n\n\n              if (!incompleteNoticeObject.repoCode) {\n                // debugLog(`checkMarkdownFileContents addNoticePartial added rC=${repoCode} to ${JSON.stringify(incompleteNoticeObject)}`);\n                incompleteNoticeObject.repoCode = repoCode;\n              } // else if (repoCode !== incompleteNoticeObject.repoCode) debugLog(`checkMarkdownFileContents addNoticePartial DIDN'T ADD rC=${repoCode} to ${JSON.stringify(incompleteNoticeObject)}`);\n\n\n              if (incompleteNoticeObject.debugChain) incompleteNoticeObject.debugChain = \"checkMarkdownFileContents \".concat(incompleteNoticeObject.debugChain); // Prepend our name\n              // aboutToOverwrite('checkMarkdownFileContents', ['filename'], incompleteNoticeObject, { filename: markdownFilename });\n              // Only put in our filename if we didn't already have (a linked) one\n\n              if (!incompleteNoticeObject.filename) incompleteNoticeObject.filename = markdownFilename;\n              mfccResult.noticeList.push(incompleteNoticeObject);\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // debugLog(\"checkMarkdownFileContents success: \" + successString);\n              mfccResult.successList.push(successString);\n            };\n\n            /* This function is optimised for checking the entire markdown file, i.e., all lines.\n                It should not be used for just checking a field within a file, e.g., a markdown field within a TSV file\n             It uses checkMarkdownText() to actually check the markdown formatting.\n            It also then uses checkTextfileContents() for general file check stuff.\n              Returns a result object containing a successList and a noticeList\n             */\n            // functionLog(`checkMarkdownFileContents(${username}, lC=${languageCode}, rC=${repoCode}, fn=${markdownFilename}, (${markdownText.length}), ${givenLocation})…`);\n            //parameterAssert(languageCode !== undefined, \"checkMarkdownFileContents: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkMarkdownFileContents: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n            // TODO: Check if/why we have both forms below\n            if (markdownFilename !== 'LICENSE.md' && markdownFilename !== 'README.md' && markdownFilename !== 'LICENSE' && markdownFilename !== 'README') {//parameterAssert(['TW', 'TA', 'TQ', 'UHAL', 'UGL', 'OBS', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'].indexOf(repoCode) !== -1, `checkMarkdownFileContents: 'repoCode' parameter with '${markdownFilename}' should be 'TW', 'TA', 'TQ', 'UHAL', 'UGL', 'OBS', or 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ' not '${repoCode}'`);\n            } //parameterAssert(markdownFilename !== undefined, \"checkMarkdownFileContents: 'markdownFilename' parameter should be defined\");\n            //parameterAssert(typeof markdownFilename === 'string', `checkMarkdownFileContents: 'markdownFilename' parameter should be a string not a '${typeof markdownFilename}': ${markdownFilename}`);\n            //parameterAssert(markdownText !== undefined, \"checkMarkdownFileContents: 'markdownText' parameter should be defined\");\n            //parameterAssert(typeof markdownText === 'string', `checkMarkdownFileContents: 'markdownText' parameter should be a string not a '${typeof markdownText}': ${markdownText}`);\n            //parameterAssert(givenLocation !== undefined, \"checkMarkdownFileContents: 'givenLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkMarkdownFileContents: 'givenLocation' parameter should be a string not a '${typeof givenLocation}': ${givenLocation}`);\n            //parameterAssert(givenLocation.indexOf('true') === -1, `checkMarkdownFileContents: 'givenLocation' parameter should not be '${givenLocation}'`);\n\n\n            if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkMarkdownFileContents: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n            }\n\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (mdtcError) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_4__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(\"Using default excerptLength=\" + excerptLength);\n            } // else\n            // debugLog(\"Using supplied excerptLength=\" + excerptLength, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n            // const excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n            // const excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(\"Using excerptHalfLength=\" + excerptHalfLength, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n\n            mfccResult = {\n              successList: [],\n              noticeList: []\n            };\n            _context3.next = 16;\n            return ourCheckMarkdownText(markdownText, givenLocation, checkingOptions);\n\n          case 16:\n            // TODO: Should the following line be inside the checkMarkdownText(), i.e., are those checks getting skipped for markdown fields ???\n            ourFileTextCheck(markdownText, givenLocation, checkingOptions);\n\n            if (!(repoCode === 'TW')) {\n              _context3.next = 54;\n              break;\n            }\n\n            // then we need to check Strong's numbers in the articles\n            lines = markdownText.split('\\n');\n            n = 1;\n\n          case 20:\n            if (!(n <= lines.length)) {\n              _context3.next = 54;\n              break;\n            }\n\n            line = lines[n - 1]; // debugLog(`Looking at line of ${repoCode} ${markdownFilename}: ${line}`);\n\n            if (!(line.indexOf('Strong') !== -1)) {\n              _context3.next = 51;\n              break;\n            }\n\n            if (!line.startsWith('* Strong’s: ')) {\n              _context3.next = 50;\n              break;\n            }\n\n            // 12 chars\n            bits = line.slice(12).split(' ');\n            _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(bits);\n            _context3.prev = 26;\n\n            _iterator2.s();\n\n          case 28:\n            if ((_step2 = _iterator2.n()).done) {\n              _context3.next = 40;\n              break;\n            }\n\n            bit = _step2.value;\n\n            if (!bit.length) {\n              _context3.next = 38;\n              break;\n            }\n\n            if (!(bit[0] === 'H' || bit[0] === 'G')) {\n              _context3.next = 37;\n              break;\n            }\n\n            if (bit.slice(-1) === ',') bit = bit.slice(0, bit.length - 1); // Remove any trailing comma\n            // Bit should now be a valid Strong's number\n\n            _context3.next = 35;\n            return ourCheckStrongsField(n, bit, ourLocation, checkingOptions);\n\n          case 35:\n            _context3.next = 38;\n            break;\n\n          case 37:\n            // doesn't start with H or G\n            addNoticePartial({\n              priority: 171,\n              message: \"Possible bad lexicon link in TW Strong's line\",\n              excerpt: bit,\n              location: ourLocation\n            });\n\n          case 38:\n            _context3.next = 28;\n            break;\n\n          case 40:\n            _context3.next = 45;\n            break;\n\n          case 42:\n            _context3.prev = 42;\n            _context3.t0 = _context3[\"catch\"](26);\n\n            _iterator2.e(_context3.t0);\n\n          case 45:\n            _context3.prev = 45;\n\n            _iterator2.f();\n\n            return _context3.finish(45);\n\n          case 48:\n            _context3.next = 51;\n            break;\n\n          case 50:\n            addNoticePartial({\n              priority: 70,\n              message: \"Possible unusual TW Strong's line\",\n              details: \"expected line to start with '* Strong’s: '\",\n              excerpt: line.slice(0, excerptLength - 1),\n              location: ourLocation\n            });\n\n          case 51:\n            n++;\n            _context3.next = 20;\n            break;\n\n          case 54:\n            addSuccessMessage(\"Checked markdown file: \".concat(markdownFilename));\n            if (mfccResult.noticeList.length) addSuccessMessage(\"checkMarkdownFileContents v\".concat(MARKDOWN_FILE_VALIDATOR_VERSION_STRING, \" finished with \").concat(mfccResult.noticeList.length ? mfccResult.noticeList.length.toLocaleString() : \"zero\", \" notice\").concat(mfccResult.noticeList.length === 1 ? '' : 's'));else addSuccessMessage(\"No errors or warnings found by checkMarkdownFileContents v\".concat(MARKDOWN_FILE_VALIDATOR_VERSION_STRING)); // debugLog(`  checkMarkdownFileContents returning with ${result.successList.length.toLocaleString()} success(es), ${result.noticeList.length.toLocaleString()} notice(s).`);\n            // userLog(`checkMarkdownFileContents result is ${JSON.stringify(result)}`);\n\n            return _context3.abrupt(\"return\", mfccResult);\n\n          case 57:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[26, 42, 45, 48]]);\n  }));\n  return _checkMarkdownFileContents.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/markdown-file-contents-check.js?");

/***/ }),

/***/ "./src/core/markdown-text-check.js":
/*!*****************************************!*\
  !*** ./src/core/markdown-text-check.js ***!
  \*****************************************/
/*! exports provided: checkMarkdownText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkMarkdownText\", function() { return checkMarkdownText; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _field_text_check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\");\n/* harmony import */ var _notes_links_check__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./notes-links-check */ \"./src/core/notes-links-check.js\");\n/* harmony import */ var _disabled_notices__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./disabled-notices */ \"./src/core/disabled-notices.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n// eslint-disable-next-line no-unused-vars\n\n\n // import { cachedGetFileUsingFullURL } from './getApi';\n\n // eslint-disable-next-line no-unused-vars\n\n\nvar MARKDOWN_TEXT_VALIDATOR_VERSION_STRING = '0.8.2';\n/**\n *\n * @param {string} languageCode, e.g., 'en'\n * @param {string} repoCode -- e.g., 'TN' or 'TQ', etc.\n * @param {string} textOrFileName -- used for identification\n * @param {string} markdownText -- the actual text to be checked\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkMarkdownText(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n  return _checkMarkdownText.apply(this, arguments);\n} // end of checkMarkdownText function\n\nfunction _checkMarkdownText() {\n  _checkMarkdownText = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(username, languageCode, repoCode, textOrFileName, markdownText, givenLocation, checkingOptions) {\n    var ourLocation, excerptLength, excerptHalfLength, excerptHalfLengthPlus, result, addSuccessMessage, addNoticePartial, ourCheckTextField, ourCheckNotesLinksToOutside, _ourCheckNotesLinksToOutside, checkMarkdownLineContents, _checkMarkdownLineContents, lines, currentHeaderLevel, lastLine, indentLevels, suggestedLines, notifiedBlankLines, n, line, nextLine, notice, _notice, numLeadingSpaces, thisHeaderLevel, excerpt, _notice2, previousIndentLevel, foundPreviousLevel, z, _notice3, suggestedLine, _notice4, _i, _arr, thisSet, thisField, thisRegex, count, characterIndex, iy, _excerpt, suggestion;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _checkMarkdownLineContents = function _checkMarkdownLineCon2() {\n              _checkMarkdownLineContents = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(lineNumber, lineText, lineLocation) {\n                var thisText, suggestion;\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!(lineText.indexOf('[') >= 0)) {\n                          _context2.next = 3;\n                          break;\n                        }\n\n                        _context2.next = 3;\n                        return ourCheckNotesLinksToOutside(lineNumber, lineText, givenLocation, checkingOptions);\n\n                      case 3:\n                        thisText = lineText; // so we can adjust it\n                        // Remove leading and trailing hash signs #\n\n                        thisText = thisText.replace(/^#+|#+$/g, ''); // debugLog(`After removing hashes have '${thisText}'`);\n                        // Remove leading spaces\n\n                        thisText = thisText.replace(/^ +/g, ''); // Remove leading block text markers >\n\n                        while (thisText.startsWith('>')) {\n                          thisText = thisText.replace(/^>+ */g, '');\n                        } // if (thisText.indexOf('>') >= 0) userLog(`After removing leading block text markers from '${lineText}' still have '${thisText}'`);\n                        // Remove leading spaces again\n                        // thisText = thisText.replace(/^ +/g, '');\n                        // debugLog(`After removing leading spaces have '${thisText}'`);\n                        // // Remove leading asterisks\n                        // thisText = thisText.replace(/^\\*/g,'')\n                        // debugLog(`After removing asterisks have '${thisText}'`);\n                        // // Remove leading spaces again now\n                        // thisText = thisText.replace(/^ +/g,'')\n                        // debugLog(`After removing more leading spaces have '${thisText}'`);\n\n\n                        if (thisText && lineText[0] !== '|') // Doesn’t really make sense to check table line entries\n                          suggestion = ourCheckTextField(\"\".concat(textOrFileName, \" line\"), lineNumber, thisText, true, lineLocation, checkingOptions);\n\n                        if (!(thisText === lineText)) {\n                          _context2.next = 10;\n                          break;\n                        }\n\n                        return _context2.abrupt(\"return\", suggestion);\n\n                      case 10:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              return _checkMarkdownLineContents.apply(this, arguments);\n            };\n\n            checkMarkdownLineContents = function _checkMarkdownLineCon(_x12, _x13, _x14) {\n              return _checkMarkdownLineContents.apply(this, arguments);\n            };\n\n            _ourCheckNotesLinksToOutside = function _ourCheckNotesLinksTo2() {\n              _ourCheckNotesLinksToOutside = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(lineNumber, lineText, location, checkingOptions) {\n                var adjustedTextOrFileName, adjustedLanguageCode, coTNlResultObject, _iterator2, _step2, coqNoticeEntry, _iterator3, _step3, checkedRepoName, _iterator4, _step4, checkedFilenameExtension;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        // Checks that the TA/TW/Bible reference can be found\n                        // Updates the global list of notices\n                        // functionLog(`checkUSFMText ourCheckNotesLinksToOutside(${lineNumber}, ${C}:${V}, ${marker}, (${twLinkText.length}) '${twLinkText}', ${location}, ${JSON.stringify(checkingOptions)})`);\n                        //parameterAssert(lineNumber !== undefined, \"checkUSFMText ourCheckNotesLinksToOutside: 'lineNumber' parameter should be defined\");\n                        //parameterAssert(typeof lineNumber === 'number', `checkUSFMText ourCheckNotesLinksToOutside: 'lineNumber' parameter should be a number not a '${typeof lineNumber}': ${lineNumber}`);\n                        //parameterAssert(lineText !== undefined, \"checkUSFMText ourCheckNotesLinksToOutside: 'lineText' parameter should be defined\");\n                        //parameterAssert(typeof lineText === 'string', `checkUSFMText ourCheckNotesLinksToOutside: 'lineText' parameter should be a string not a '${typeof lineText}': ${lineText}`);\n                        //parameterAssert(location !== undefined, \"checkUSFMText ourCheckNotesLinksToOutside: 'location' parameter should be defined\");\n                        //parameterAssert(typeof location === 'string', `checkUSFMText ourCheckNotesLinksToOutside: 'location' parameter should be a string not a '${typeof location}': ${location}`);\n                        // Empty fields on the next line are bookID, C, V (as we don’t have that information here)\n                        adjustedTextOrFileName = textOrFileName;\n                        if (textOrFileName === 'README.md' || textOrFileName === 'LICENSE.md') adjustedTextOrFileName = textOrFileName.slice(0, textOrFileName.length - 3);\n                        adjustedLanguageCode = languageCode; // This is the language code of the resource with the link\n\n                        if (languageCode === 'hbo' || languageCode === 'el-x-koine') adjustedLanguageCode = 'en'; // This is a guess (and won’t be needed for TWs when we switch to TWLs)\n\n                        _context.next = 6;\n                        return Object(_notes_links_check__WEBPACK_IMPORTED_MODULE_6__[\"checkNotesLinksToOutside\"])(username, languageCode, repoCode, '', '', '', adjustedTextOrFileName, lineText, location, Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, checkingOptions), {}, {\n                          defaultLanguageCode: adjustedLanguageCode\n                        }));\n\n                      case 6:\n                        coTNlResultObject = _context.sent;\n                        // debugLog(`coTNlResultObject=${JSON.stringify(coTNlResultObject)}`);\n                        // Choose only ONE of the following\n                        // This is the fast way of append the results from this field\n                        // result.noticeList = result.noticeList.concat(coTNlResultObject.noticeList);\n                        // If we need to put everything through addNoticePartialPartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coTNlResultObject.noticeList);\n\n                        try {\n                          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                            coqNoticeEntry = _step2.value;\n                            if (coqNoticeEntry.extra) // it must be an indirect check on a TA or TW article from a TN2 check\n                              result.noticeList.push(coqNoticeEntry); // Just copy the complete notice as is -- would be confusing to have this lineNumber\n                            else // For our direct checks, we add the repoCode as an extra value\n                              addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, coqNoticeEntry), {}, {\n                                lineNumber: lineNumber\n                              }));\n                          } // The following is needed coz we might be checking the linked TA and/or TW articles\n\n                        } catch (err) {\n                          _iterator2.e(err);\n                        } finally {\n                          _iterator2.f();\n                        }\n\n                        if (coTNlResultObject.checkedFileCount && coTNlResultObject.checkedFileCount > 0) if (typeof result.checkedFileCount === 'number') result.checkedFileCount += coTNlResultObject.checkedFileCount;else result.checkedFileCount = coTNlResultObject.checkedFileCount;\n                        if (coTNlResultObject.checkedFilesizes && coTNlResultObject.checkedFilesizes > 0) if (typeof result.checkedFilesizes === 'number') result.checkedFilesizes += coTNlResultObject.checkedFilesizes;else result.checkedFilesizes = coTNlResultObject.checkedFilesizes;\n\n                        if (coTNlResultObject.checkedRepoNames && coTNlResultObject.checkedRepoNames.length > 0) {\n                          _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coTNlResultObject.checkedRepoNames);\n\n                          try {\n                            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                              checkedRepoName = _step3.value;\n\n                              try {\n                                if (result.checkedRepoNames.indexOf(checkedRepoName) < 0) result.checkedRepoNames.push(checkedRepoName);\n                              } catch (_unused) {\n                                result.checkedRepoNames = [checkedRepoName];\n                              }\n                            }\n                          } catch (err) {\n                            _iterator3.e(err);\n                          } finally {\n                            _iterator3.f();\n                          }\n                        }\n\n                        if (coTNlResultObject.checkedFilenameExtensions && coTNlResultObject.checkedFilenameExtensions.length > 0) {\n                          _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coTNlResultObject.checkedFilenameExtensions);\n\n                          try {\n                            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                              checkedFilenameExtension = _step4.value;\n\n                              try {\n                                if (result.checkedFilenameExtensions.indexOf(checkedFilenameExtension) < 0) result.checkedFilenameExtensions.push(checkedFilenameExtension);\n                              } catch (_unused2) {\n                                result.checkedFilenameExtensions = [checkedFilenameExtension];\n                              }\n                            }\n                          } catch (err) {\n                            _iterator4.e(err);\n                          } finally {\n                            _iterator4.f();\n                          }\n                        } // if (result.checkedFilenameExtensions) debugLog(\"result\", JSON.stringify(result));\n\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _ourCheckNotesLinksToOutside.apply(this, arguments);\n            };\n\n            ourCheckNotesLinksToOutside = function _ourCheckNotesLinksTo(_x8, _x9, _x10, _x11) {\n              return _ourCheckNotesLinksToOutside.apply(this, arguments);\n            };\n\n            ourCheckTextField = function _ourCheckTextField(fieldName, lineNumber, fieldText, allowedLinks, optionalFieldLocation, checkingOptions) {\n              /**\n              * @description - checks the given text field and processes the returned results\n              * @param {string} fieldName - name of the field being checked\n              * @param {string} fieldText - the actual text of the field being checked\n              * @param {boolean} allowedLinks - true if links are allowed in the field, otherwise false\n              * @param {string} optionalFieldLocation - description of where the field is located\n              * @param {Object} checkingOptions - parameters that might affect the check\n              */\n              // Does basic checks for small errors like leading/trailing spaces, etc.\n              // We assume that checking for compulsory fields is done elsewhere\n              // Updates the global list of notices\n              // functionLog(`cMdT ourCheckTextField(${fieldName}, (${fieldText.length}), ${allowedLinks}, ${optionalFieldLocation}, …)`);\n              //parameterAssert(fieldName !== undefined, \"cMdT ourCheckTextField: 'fieldName' parameter should be defined\");\n              //parameterAssert(typeof fieldName === 'string', `cMdT ourCheckTextField: 'fieldName' parameter should be a string not a '${typeof fieldName}'`);\n              //parameterAssert(lineNumber !== undefined, \"cMdT ourCheckTextField: 'lineNumber' parameter should be defined\");\n              //parameterAssert(typeof lineNumber === 'number', `cMdT ourCheckTextField: 'lineNumber' parameter should be a number not a '${typeof lineNumber}'`);\n              //parameterAssert(fieldText !== undefined, \"cMdT ourCheckTextField: 'fieldText' parameter should be defined\");\n              //parameterAssert(typeof fieldText === 'string', `cMdT ourCheckTextField: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n              //parameterAssert(allowedLinks === true || allowedLinks === false, \"cMdT ourCheckTextField: allowedLinks parameter must be either true or false\");\n              //parameterAssert(optionalFieldLocation !== undefined, \"cMdT ourCheckTextField: 'optionalFieldLocation' parameter should be defined\");\n              //parameterAssert(typeof optionalFieldLocation === 'string', `cMdT ourCheckTextField: 'optionalFieldLocation' parameter should be a string not a '${typeof optionalFieldLocation}'`);\n              var dbtcResultObject = Object(_field_text_check__WEBPACK_IMPORTED_MODULE_5__[\"checkTextField\"])(username, languageCode, repoCode, 'markdown', fieldName, fieldText, allowedLinks, optionalFieldLocation, checkingOptions); // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n              //  process results line by line\n\n              var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(dbtcResultObject.noticeList),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var noticeEntry = _step.value;\n                  addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, noticeEntry), {}, {\n                    lineNumber: lineNumber\n                  }));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              return dbtcResultObject.suggestion; // There may or may not be one!\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkMarkdownText addNoticePartial: (priority=${incompleteNoticeObject.priority}) ${incompleteNoticeObject.message}${incompleteNoticeObject.characterIndex > 0 ? ` (at character ${incompleteNoticeObject.characterIndex})` : \"\"}${incompleteNoticeObject.excerpt ? \" \" + excerpt : \"\"}${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"cMdT addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `cMdT addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"cMdT addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `cMdT addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(characterIndex !== undefined, \"cMdT addNoticePartial: 'characterIndex' parameter should be defined\");\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `cMdT addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"cMdT addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `cMdT addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"cMdT addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `cMdT addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n              // incompleteNoticeObject.debugChain = incompleteNoticeObject.debugChain ? `checkMarkdownText(${languageCode}, ${textOrFileName}) ${incompleteNoticeObject.debugChain}` : `checkMarkdownText(${languageCode}, ${textOrFileName})`;\n\n\n              if (incompleteNoticeObject.repoCode === undefined) {\n                // debugLog(`checkMarkdownText addNoticePartial added rC=${repoCode} to ${JSON.stringify(incompleteNoticeObject)}`);\n                incompleteNoticeObject.repoCode = repoCode;\n              } // else if (repoCode !== incompleteNoticeObject.repoCode) debugLog(`checkMarkdownText addNoticePartial DIDN'T ADD rC=${repoCode} to ${JSON.stringify(incompleteNoticeObject)}`);\n\n\n              result.noticeList.push(incompleteNoticeObject); // Used to have filename: textName, but that isn’t always a filename !!!\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // debugLog(\"checkMarkdownText success: \" + successString);\n              result.successList.push(successString);\n            };\n\n            /* This function is optimised for doing general markdown format checks of the entire markdown text, i.e., all lines.\n                It should not be called directly for checking an entire file -- use checkMarkdownFileContents() for that\n             This text may not necessarily be from a file -- it may be from a (multiline) field within a file\n              Returns a result object containing a successList and a noticeList\n             */\n            // functionLog(`checkMarkdownText(${languageCode}, ${repoCode}, ${textOrFileName}, (${markdownText.length}), ${givenLocation}, …)…`);\n            //parameterAssert(languageCode !== undefined, \"checkMarkdownText: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkMarkdownText: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n            //parameterAssert(languageCode !== 'unfoldingWord', `checkMarkdownText: 'languageCode' ${languageCode} parameter should be not be 'unfoldingWord'`);\n            //parameterAssert(repoCode !== undefined, \"checkMarkdownText: 'repoCode' parameter should be defined\");\n            //parameterAssert(typeof repoCode === 'string', `checkMarkdownText: 'repoCode' parameter should be a string not a '${typeof repoCode}': ${repoCode}`);\n            //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkMarkdownText: 'repoCode' parameter should not be '${repoCode}'`);\n            //parameterAssert(textOrFileName !== undefined, \"checkMarkdownText: 'textOrFileName' parameter should be defined\");\n            //parameterAssert(typeof textOrFileName === 'string', `checkMarkdownText: 'textOrFileName' parameter should be a string not a '${typeof textOrFileName}': ${textOrFileName}`);\n            //parameterAssert(textOrFileName !== `${languageCode}_${repoCode.toLowerCase()}`, `checkMarkdownText: 'textOrFileName' parameter should not be the repoName: '${textOrFileName}'`);\n            if (textOrFileName === \"\".concat(languageCode, \"_\").concat(repoCode.toLowerCase())) {\n              console.trace('checkMarkdownText()');\n            } //parameterAssert(markdownText !== undefined, \"checkMarkdownText: 'markdownText' parameter should be defined\");\n            //parameterAssert(typeof markdownText === 'string', `checkMarkdownText: 'markdownText' parameter should be a string not a '${typeof markdownText}': ${markdownText}`);\n            //parameterAssert(markdownText.indexOf('\\\\n') === -1, `checkMarkdownText: given text shouldn't contain \\\\n here: '${markdownText}'`);\n            //parameterAssert(givenLocation !== undefined, \"checkMarkdownText: 'optionalFieldLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkMarkdownText: 'optionalFieldLocation' parameter should be a string not a '${typeof givenLocation}': ${givenLocation}`);\n            //parameterAssert(givenLocation.indexOf('true') === -1, `checkMarkdownText: 'optionalFieldLocation' parameter should not be '${givenLocation}'`);\n            //parameterAssert(checkingOptions !== undefined, \"checkMarkdownText: 'checkingOptions' parameter should be defined\");\n\n\n            if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkMarkdownText: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n            }\n\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (mdtcError) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_4__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(\"Using default excerptLength=\" + excerptLength);\n            } // else\n            // debugLog(\"Using supplied excerptLength=\" + excerptLength, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n\n\n            excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n            excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(\"Using excerptHalfLength=\" + excerptHalfLength, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n            result = {\n              successList: [],\n              noticeList: []\n            };\n            // end of checkMarkdownLineContents function\n            // Main code for checkMarkdownText function\n            lines = markdownText.split('\\n'); // debugLog(`  '${location}' has ${lines.length.toLocaleString()} total lines`);\n\n            currentHeaderLevel = 0;\n            indentLevels = [];\n            suggestedLines = [];\n            notifiedBlankLines = false;\n            n = 1;\n\n          case 22:\n            if (!(n <= lines.length)) {\n              _context3.next = 66;\n              break;\n            }\n\n            line = lines[n - 1];\n            nextLine = n < lines.length - 1 ? lines[n] : undefined; // Markdown headers should be preceded and followed by a blank line\n\n            if (line.startsWith('#')) {\n              if (n > 1 && lastLine.length !== 0) {\n                notice = {\n                  priority: 252,\n                  message: \"Markdown headers should be preceded by a blank line\",\n                  lineNumber: n,\n                  location: ourLocation\n                };\n                if (textOrFileName === 'Note' || textOrFileName === 'OccurrenceNote') notice.details = \"markdown line \".concat(n);\n                addNoticePartial(notice);\n              }\n\n              if ((nextLine === null || nextLine === void 0 ? void 0 : nextLine.length) !== 0) {\n                // debugLog(`251 line is '${line}' nextLine is (${nextLine.length}) '${nextLine}'`);\n                _notice = {\n                  priority: 251,\n                  message: \"Markdown headers should be followed by a blank line\",\n                  lineNumber: n,\n                  location: ourLocation\n                };\n                if (textOrFileName === 'Note' || textOrFileName === 'OccurrenceNote') _notice.details = \"markdown line \".concat(n);\n                addNoticePartial(_notice);\n              }\n            }\n\n            numLeadingSpaces = void 0;\n\n            if (!line) {\n              _context3.next = 59;\n              break;\n            }\n\n            thisHeaderLevel = line.match(/^#*/)[0].length; // if (thisHeaderLevel) debugLog(`checkMarkdownText: Got1 thisHeaderLevel=${thisHeaderLevel} after ${currentHeaderLevel} for line ${n}: ${line}`);\n\n            if (thisHeaderLevel > currentHeaderLevel + 1 && !textOrFileName.startsWith('TA ')) {\n              // Suppress this notice for translationAcademy subsections\n              // debugLog(`checkMarkdownText: Got2 thisHeaderLevel=${thisHeaderLevel} after ${currentHeaderLevel} for line ${n}: ${line}`);\n              excerpt = line.slice(0, excerptLength) + (line.length > excerptLength ? '…' : '');\n              _notice2 = {\n                priority: 172,\n                message: \"Header levels should only increment by one\",\n                details: \"Going from level \".concat(currentHeaderLevel, \" to level \").concat(thisHeaderLevel),\n                lineNumber: n,\n                characterIndex: 0,\n                excerpt: excerpt,\n                location: ourLocation\n              };\n              if (textOrFileName === 'Note' || textOrFileName === 'OccurrenceNote') _notice2.details = \"markdown line \".concat(n);\n              addNoticePartial(_notice2);\n            }\n\n            if (thisHeaderLevel > 0) {\n              currentHeaderLevel = thisHeaderLevel;\n              indentLevels = []; // reset\n            }\n\n            numLeadingSpaces = line.match(/^ */)[0].length; // debugLog(`Got numLeadingSpaces=${numLeadingSpaces} with indentLevels=${JSON.stringify(indentLevels)} for ${line}${ourLocation}`);\n\n            previousIndentLevel = indentLevels.length > 0 ? indentLevels[indentLevels.length - 1] : 0;\n\n            if (!(numLeadingSpaces > previousIndentLevel // We have an indent level increase\n            || numLeadingSpaces === 0 && line.length > 0 && indentLevels.length === 0)) {\n              _context3.next = 37;\n              break;\n            }\n\n            // we have our first zero-level indent\n            indentLevels.push(numLeadingSpaces);\n            _context3.next = 53;\n            break;\n\n          case 37:\n            if (!(numLeadingSpaces < previousIndentLevel)) {\n              _context3.next = 53;\n              break;\n            }\n\n            if (!(indentLevels.length > 1 && indentLevels[indentLevels.length - 2] === numLeadingSpaces)) {\n              _context3.next = 42;\n              break;\n            }\n\n            // We went back to the previous level\n            indentLevels.pop();\n            _context3.next = 53;\n            break;\n\n          case 42:\n            // seems we didn’t go back to the previous level ???\n            foundPreviousLevel = false;\n            z = indentLevels.length - 1;\n\n          case 44:\n            if (!(z >= 0)) {\n              _context3.next = 52;\n              break;\n            }\n\n            if (!(indentLevels[z] === numLeadingSpaces)) {\n              _context3.next = 49;\n              break;\n            }\n\n            // debugLog(`After finding ${numLeadingSpaces} spaces, reducing length of ${JSON.stringify(indentLevels)} to ${z+1}`);\n            indentLevels.length = z + 1;\n            foundPreviousLevel = true;\n            return _context3.abrupt(\"break\", 52);\n\n          case 49:\n            z--;\n            _context3.next = 44;\n            break;\n\n          case 52:\n            if (!foundPreviousLevel) {\n              _notice3 = {\n                priority: 282,\n                message: \"Nesting of header levels seems confused\",\n                details: \"recent indent levels=\".concat(JSON.stringify(indentLevels), \" but now \").concat(numLeadingSpaces),\n                lineNumber: n,\n                characterIndex: 0,\n                location: ourLocation\n              };\n              if (textOrFileName === 'Note' || textOrFileName === 'OccurrenceNote') _notice3.details = \"markdown line \".concat(n);\n              addNoticePartial(_notice3);\n            }\n\n          case 53:\n            _context3.next = 55;\n            return checkMarkdownLineContents(n, line, ourLocation);\n\n          case 55:\n            suggestedLine = _context3.sent;\n            suggestedLines.push(suggestedLine === undefined ? line : suggestedLine);\n            _context3.next = 62;\n            break;\n\n          case 59:\n            // This is a blank line\n            numLeadingSpaces = 0;\n            suggestedLines.push(''); // Should only ever have single blank lines in markdown\n\n            if (n > 1 && lastLine.length === 0 && (nextLine === null || nextLine === void 0 ? void 0 : nextLine.length) === 0 && !notifiedBlankLines) {\n              _notice4 = {\n                priority: 250,\n                message: \"Multiple blank lines are not expected in markdown\",\n                lineNumber: n,\n                location: ourLocation\n              };\n              if (textOrFileName === 'Note' || textOrFileName === 'OccurrenceNote') _notice4.details = \"markdown line \".concat(n);\n              addNoticePartial(_notice4);\n              notifiedBlankLines = true;\n            }\n\n          case 62:\n            lastLine = line; // lastNumLeadingSpaces = numLeadingSpaces;\n\n          case 63:\n            n++;\n            _context3.next = 22;\n            break;\n\n          case 66:\n            _i = 0, _arr = [// Put longest ones first\n            // Seems that the fancy ones (commented out) don’t find occurrences at the start (or end?) of the text\n            ['___', /___/g], // ['___', r'[^_]___[^_]'], // three underlines\n            ['***', /\\*\\*\\*/g], // ['***', r'[^\\*]\\*\\*\\*[^\\*]'], // three asterisks\n            ['__', /__/g], // ['__', r'[^_]__[^_]'], // two underlines\n            ['**', /\\*\\*/g] // ['**', r'[^\\*]\\*\\*[^\\*]'], // two asterisks\n            ];\n\n          case 67:\n            if (!(_i < _arr.length)) {\n              _context3.next = 80;\n              break;\n            }\n\n            thisSet = _arr[_i];\n            thisField = thisSet[0], thisRegex = thisSet[1];\n            count = ((markdownText || '').match(thisRegex) || []).length; // Finds only NON-OVERLAPPING matches hopefully\n\n            if (!(count && count % 2 !== 0)) {\n              _context3.next = 77;\n              break;\n            }\n\n            characterIndex = markdownText.indexOf(thisField);\n            iy = characterIndex + excerptHalfLength; // Want excerpt to focus more on what follows\n\n            _excerpt =\n            /*(iy > excerptHalfLength ? '…' : '') +*/\n            markdownText.substring(iy - excerptHalfLength, iy + excerptHalfLengthPlus) + (iy + excerptHalfLengthPlus < markdownText.length ? '…' : '');\n            addNoticePartial({\n              priority: 378,\n              message: \"Possible mismatched '\".concat(thisField, \"' markdown formatting pairs\"),\n              details: \"\".concat(count.toLocaleString(), \" total occurrence\").concat(count === 1 ? '' : 's'),\n              characterIndex: characterIndex,\n              excerpt: _excerpt,\n              location: ourLocation\n            });\n            return _context3.abrupt(\"break\", 80);\n\n          case 77:\n            _i++;\n            _context3.next = 67;\n            break;\n\n          case 80:\n            suggestion = suggestedLines.join('\\n');\n\n            if (suggestion !== markdownText) {\n              // debugLog(`Had markdown ${markdownText}`);\n              // debugLog(`Sug markdown ${suggestion}`);\n              result.suggestion = suggestion;\n            }\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              // functionLog(`checkMarkdownText: calling removeDisabledNotices(${result.noticeList.length}) having ${JSON.stringify(checkingOptions)}`);\n              result.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_7__[\"removeDisabledNotices\"])(result.noticeList);\n            }\n\n            addSuccessMessage(\"Checked all \".concat(lines.length.toLocaleString(), \" line\").concat(lines.length === 1 ? '' : 's').concat(ourLocation));\n            if (result.noticeList.length) addSuccessMessage(\"checkMarkdownText v\".concat(MARKDOWN_TEXT_VALIDATOR_VERSION_STRING, \" finished with \").concat(result.noticeList.length ? result.noticeList.length.toLocaleString() : \"zero\", \" notice\").concat(result.noticeList.length === 1 ? '' : 's'));else addSuccessMessage(\"No errors or warnings found by checkMarkdownText v\".concat(MARKDOWN_TEXT_VALIDATOR_VERSION_STRING)); // debugLog(`  checkMarkdownText returning with ${result.successList.length.toLocaleString()} success(es), ${result.noticeList.length.toLocaleString()} notice(s).`);\n\n            return _context3.abrupt(\"return\", result);\n\n          case 86:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _checkMarkdownText.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/markdown-text-check.js?");

/***/ }),

/***/ "./src/core/notes-links-check.js":
/*!***************************************!*\
  !*** ./src/core/notes-links-check.js ***!
  \***************************************/
/*! exports provided: checkNotesLinksToOutside */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkNotesLinksToOutside\", function() { return checkNotesLinksToOutside; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _getApi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getApi */ \"./src/core/getApi.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _text_handling_functions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./text-handling-functions */ \"./src/core/text-handling-functions.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core */ \"./src/core/index.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_11__);\n\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n\n // const NOTES_LINKS_VALIDATOR_VERSION_STRING = '0.11.0';\n// const DEFAULT_LANGUAGE_CODE = 'en';\n\nvar DEFAULT_BRANCH = 'master';\nvar GENERAL_MARKDOWN_LINK1_REGEX = new RegExp('\\\\[[^\\\\]]+?\\\\]\\\\([^\\\\)]+?\\\\)', 'g'); // [displayLink](URL)\n\nvar GENERAL_MARKDOWN_LINK2_REGEX = new RegExp('\\\\[\\\\[[^\\\\]]+?\\\\]\\\\]', 'g'); // [[combinedDisplayLink]]\n\nvar TA_DOUBLE_BRACKETED_LINK_REGEX = new RegExp('\\\\[\\\\[rc://([^ /]+?)/ta/man/([^ /]+?)/([^ \\\\]]+?)\\\\]\\\\]', 'g'); // Enclosed in [[  ]]\n\nvar TA_FULL_DISPLAY_LINK_REGEX = new RegExp('\\\\[([^\\\\]]+?)\\\\]\\\\(rc://([^ /]+?)/ta/man/([^ /]+?)/([^ \\\\]]+?)\\\\)', 'g'); // [How to Translate Names](rc://en/ta/man/translate/translate-names)\n\nvar TA_RELATIVE1_DISPLAY_LINK_REGEX = new RegExp('\\\\[([^\\\\]]+?)\\\\]\\\\(\\\\.{2}/([^ /\\\\]]+?)/01\\\\.md\\\\)', 'g'); // [Borrow Words](../translate-transliterate/01.md)\n\nvar TA_RELATIVE2_DISPLAY_LINK_REGEX = new RegExp('\\\\[([^\\\\]]+?)\\\\]\\\\(\\\\.{2}/\\\\.{2}/([^ /\\\\]]+?)/([^ /\\\\]]+?)/01\\\\.md\\\\)', 'g'); // [Borrow Words](../../translate/translate-transliterate/01.md)\n\nvar TW_DOUBLE_BRACKETED_LINK_REGEX = new RegExp('\\\\[\\\\[rc://([^ /]+?)/tw/dict/bible/([^ /]+?)/([^ /\\\\]]+?)\\\\]\\\\]', 'g'); // Enclosed in [[  ]]\n\nvar TWL_RAW_LINK_REGEX = new RegExp('rc://([^ /]+?)/tw/dict/bible/([^ /]+?)/(.+)', 'g'); // Just a raw link\n\nvar TW_INTERNAL_REGEX = new RegExp('\\\\[([-,\\\\w ()]+?)\\\\]\\\\(\\\\.{2}/([a-z]{2,5})/([-A-Za-z12]{2,20})\\\\.md\\\\)', 'g'); // [Asher](../names/asher.md)\n// NOTE: Bible link format is archaic, presumably from pre-USFM days!\n// TODO: Do we need to normalise Bible links, i.e., make sure that the link itself\n//          (we don’t care about the displayed text) doesn’t specify superfluous levels/information\n// TODO: We need a decision on hyphen vs en-dash in verse references\n// TODO: Test to see if \"[2:23](../02/03.md)\" is found by more than one regex below\n\nvar BIBLE_REGEX_OTHER_BOOK_ABSOLUTE = new RegExp('\\\\[((?:1 |2 |3 )?)((?:[\\\\w ]+? )?)(\\\\d{1,3}):(\\\\d{1,3})\\\\]\\\\(([123a-z]{3})/(\\\\d{1,3})/(\\\\d{1,3})\\\\.md\\\\)', 'g'); // [Revelation 3:11](rev/03/11.md)\n// TODO: Is this option with ../../ really valid? Where/Why does it occur?\n\nvar BIBLE_REGEX_OTHER_BOOK_RELATIVE = new RegExp('\\\\[((?:1 |2 |3 )?)((?:[\\\\w ]+? )?)(\\\\d{1,3}):(\\\\d{1,3})\\\\]\\\\((?:\\\\.{2}/)?\\\\.{2}/([123a-z]{3})/(\\\\d{1,3})/(\\\\d{1,3})\\\\.md\\\\)', 'g'); // [Revelation 3:11](../../rev/03/11.md) or (../rev/03/11.md) NOTE: only one of these must theoretically be correct!!!\n\nvar BIBLE_REGEX_THIS_BOOK_RELATIVE = new RegExp('\\\\[((?:1 |2 |3 )?)((?:[\\\\w ]+? )?)(\\\\d{1,3}):(\\\\d{1,3})\\\\]\\\\(\\\\.{2}/(\\\\d{1,3})/(\\\\d{1,3})\\\\.md\\\\)', 'g'); // [Revelation 3:11](../03/11.md) or [Song of Solomon 3:11](../03/11.md)\n\nvar BCV_V_TO_OTHER_BOOK_BIBLE_REGEX = new RegExp('\\\\[((?:1 |2 |3 )?)((?:[\\\\w ]+? )?)(\\\\d{1,3}):(\\\\d{1,3})[–-](\\\\d{1,3})\\\\]\\\\((?:\\\\.{2})/([123a-z]{3})/(\\\\d{1,3})/(\\\\d{1,3})\\\\.md\\\\)', 'g'); // [Genesis 26:12-14](../gen/26/12.md) NOTE en-dash\n\nvar BCV_V_TO_THIS_BOOK_BIBLE_REGEX = new RegExp('\\\\[((?:1 |2 |3 )?)((?:[\\\\w ]+? )?)(\\\\d{1,3}):(\\\\d{1,3})[–-](\\\\d{1,3})\\\\]\\\\((\\\\.{2})/(\\\\d{1,3})/(\\\\d{1,3})\\\\.md\\\\)', 'g'); // [Genesis 26:12-14](../26/12.md) or [4:11–16](../04/11.md) NOTE en-dash\n\nvar BIBLE_REGEX_THIS_CHAPTER_RELATIVE = new RegExp('\\\\[((?:1 |2 |3 )?)((?:[\\\\w ]+? )?)(?:(\\\\d{1,3}):)?(\\\\d{1,3})\\\\]\\\\(\\\\./(\\\\d{1,3})\\\\.md\\\\)', 'g'); // [Exodus 2:7](./07.md)\n\nvar THIS_VERSE_TO_THIS_CHAPTER_BIBLE_REGEX = new RegExp('\\\\[(?:verse )?(\\\\d{1,3})\\\\]\\\\(\\\\.{2}/(\\\\d{1,3})/(\\\\d{1,3})\\\\.md\\\\)', 'g'); // [27](../11/27.md) or [verse 27](../11/27.md)\n\nvar THIS_VERSE_RANGE_TO_THIS_CHAPTER_BIBLE_REGEX = new RegExp('\\\\[(?:verses )?(\\\\d{1,3})[–-](\\\\d{1,3})\\\\]\\\\(\\\\.{2}/(\\\\d{1,3})/(\\\\d{1,3})\\\\.md\\\\)', 'g'); // [2–7](../09/2.md) or [verses 2–7](../09/2.md) NOTE en-dash\n\nvar BCV_V_TO_THIS_CHAPTER_BIBLE_REGEX = new RegExp('\\\\[((?:1 |2 |3 )?)((?:[\\\\w ]+? )?)(\\\\d{1,3}):(\\\\d{1,3})[–-](\\\\d{1,3})\\\\]\\\\(\\\\./(\\\\d{1,3})\\\\.md\\\\)', 'g'); // [Genesis 26:12-14](./12.md) NOTE en-dash\n\nvar BIBLE_FULL_HELP_REGEX = new RegExp('\\\\[((?:1 |2 |3 )?)((?:[\\\\w ]+? )?)(\\\\d{1,3}):(\\\\d{1,3})(?:-\\\\d{1,3})?\\\\]\\\\(rc://([^ /]+?)/tn/help/([123a-z]{3})/(\\\\d{1,3})/(\\\\d{1,3})\\\\)', 'g'); // [Song of Solomon 29:23-24](rc://en/tn/help/sng/29/23)\n\nvar TN_REGEX = new RegExp('\\\\[((?:1 |2 |3 )?)((?:[\\\\w ]+? )?)(\\\\d{1,3}):(\\\\d{1,3})\\\\]\\\\((\\\\.{2})/(\\\\d{1,3})/(\\\\d{1,3})/([a-z][a-z0-9][a-z0-9][a-z0-9])\\\\)', 'g');\nvar SIMPLE_DISPLAY_LINK_REGEX = new RegExp('\\\\[([^\\\\]]+?)\\\\]\\\\((https?://[^\\\\)]+?)\\\\)', 'g'); // [ULT](https://something)\n\nvar SIMPLE_IMAGE_REGEX = new RegExp('!\\\\[([^\\\\]]*?)\\\\]\\\\(([^ \"\\\\)]+?)\\\\)', 'g'); // ![alt](y)\n\nvar TITLED_IMAGE_REGEX = new RegExp('!\\\\[([^\\\\]]*?)\\\\]\\\\(([^ \\\\)]+?) \"([^\"\\\\)]+?)\"\\\\)', 'g'); // ![alt](link \"title\")\n\nvar OBS_LINK_REGEX = new RegExp('\\\\[(\\\\d?\\\\d):(\\\\d?\\\\d)\\\\]\\\\((\\\\d\\\\d)/(\\\\d\\\\d)\\\\)', 'g'); // [7:3](07/03)\n\n/**\n *\n * @param {string} languageCode, e.g., 'en'\n * @param {string} repoCode, e.g., 'TN', 'SN', 'TN2', or even 'UHB', 'UGNT', or 'TWL' for the initial repo for the file being checked\n * @param {string} bookID may be blank\n * @param {string} givenC may be blank\n * @param {string} givenV may be blank\n * @param {string} fieldName, e.g., 'TWLink' or 'OccurrenceNote' or 'Note' or .md filename, etc.\n * @param {string} fieldText\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkNotesLinksToOutside(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10) {\n  return _checkNotesLinksToOutside.apply(this, arguments);\n} // end of checkNotesLinksToOutside function\n\nfunction _checkNotesLinksToOutside() {\n  _checkNotesLinksToOutside = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, repoCode, bookID, givenC, givenV, fieldName, fieldText, givenLocation, checkingOptions) {\n    var ourLocation, ctarResult, addNoticePartial, excerptLength, excerptHalfLength, excerptHalfLengthPlus, getFile_, defaultLanguageCode, adjustedLanguageCode, taRepoUsername, taRepoBranch, twRepoUsername, twRepoBranch, givenVfirstPart, i, givenCint, givenVint, trimStartFieldText, trimEndFieldText, excerpt, _excerpt, regexMatchObject, _regexMatchObject, _regexMatchObject2, totalLink, altText, fetchLink, responseData, _regexMatchObject3, _regexMatchObject4, _totalLink, alt, _fetchLink, title, _responseData, linksList1, linksList2, taLinkCount1, taLinkCount2, twLinkCount1, twLinkCount2, TNLinkCount1, thisChapterBibleLinkCount1, thisVerseBibleLinkCount1, thisBookBibleLinkCount1, otherBookBibleLinkCount1, OBSLinkCount, generalLinkCount1, processedLinkList, _regexMatchObject5, _regexMatchObject6, _totalLink2, _displayName, category, article, twRepoName, filename, filepath, twPathParameters, twFileContent, _regexMatchObject7, _regexMatchObject8, _totalLink3, _displayName2, foundLanguageCode, part, _article, characterIndex, _excerpt2, _characterIndex, _excerpt3, taRepoName, _filepath, taPathParameters, taFileContent, alreadyGaveError, checkTAFileResult, _iterator, _step, noticeObject, _regexMatchObject9, _regexMatchObject10, _totalLink4, _displayName3, _article2, _taRepoName, TAsection, _filepath2, _taPathParameters, _taFileContent, _alreadyGaveError, _regexMatchObject11, _regexMatchObject12, _totalLink5, _displayName4, _TAsection, _article3, _taRepoName2, _filepath3, _taPathParameters2, _taFileContent2, _alreadyGaveError2, _regexMatchObject13, _regexMatchObject14, _totalLink6, _foundLanguageCode, _part, _article4, _characterIndex2, _excerpt4, _characterIndex3, _excerpt5, _taRepoName3, _filepath4, _taPathParameters3, _taFileContent3, _alreadyGaveError3, _checkTAFileResult, _iterator2, _step2, _noticeObject, ourTWRegex, _regexMatchObject15, _regexMatchObject16, _totalLink7, _foundLanguageCode2, _category, _article5, _twRepoName, _filename, _filepath5, _twPathParameters, _twFileContent, checkTWFileResult, _iterator3, _step3, _noticeObject2, _regexMatchObject17, _regexMatchObject18, _totalLink8, optionalN1, optionalB1, C1, V1, Lg, B2, C2, V2, checkResult, linkBookCode, linkChapterInt, linkVerseInt, numStories, numFramesThisStory, numChaptersThisBook, numVersesThisChapter, _regexMatchObject19, _regexMatchObject20, _totalLink9, _optionalN, _optionalB, _C, _V, _V2, _checkResult, _linkBookCode, _linkVerseInt, _numChaptersThisBook, _numVersesThisChapter, _regexMatchObject21, _regexMatchObject22, _totalLink10, _V3, _C2, _V4, _linkBookCode2, _linkChapterInt, _linkVerseInt2, _numChaptersThisBook2, _numVersesThisChapter2, _regexMatchObject23, _regexMatchObject24, _totalLink11, V1a, V1b, _C3, _V5, _linkBookCode3, verseInt1a, verseInt1b, _linkChapterInt2, _linkVerseInt3, _numChaptersThisBook3, _numVersesThisChapter3, _regexMatchObject25, _regexMatchObject26, _totalLink12, _optionalN2, _optionalB2, _C4, _V6, _C5, _V7, _checkResult2, _linkBookCode4, _linkChapterInt3, _linkVerseInt4, _numChaptersThisBook4, _numVersesThisChapter4, _regexMatchObject27, _regexMatchObject28, _totalLink13, _optionalN3, B1, _C6, _V1a, _V1b, _B, _C7, _V8, _checkResult3, _linkBookCode5, _linkChapterInt4, _linkVerseInt5, _numChaptersThisBook5, _numVersesThisChapter5, _regexMatchObject29, _regexMatchObject30, _totalLink14, _optionalN4, _optionalB3, _C8, _V1a2, _V1b2, _B2, _C9, _V9, _checkResult4, _linkBookCode6, _linkChapterInt5, _linkVerseInt6, _numChaptersThisBook6, _numVersesThisChapter6, _regexMatchObject31, _regexMatchObject32, _totalLink15, _optionalN5, _optionalB4, _C10, _V1a3, _V1b3, _V10, _checkResult5, _linkBookCode7, _linkVerseInt7, _numVersesThisChapter7, _regexMatchObject33, _regexMatchObject34, _totalLink16, _optionalN6, _B3, _C11, _V11, _B4, _C12, _V12, _checkResult6, _linkBookCode8, _linkChapterInt6, _linkVerseInt8, _numChaptersThisBook7, _numVersesThisChapter8, _regexMatchObject35, _regexMatchObject36, _totalLink17, _optionalN7, _B5, _C13, _V13, _B6, _C14, _V14, _checkResult7, _linkBookCode9, _linkChapterInt7, _linkVerseInt9, _numChaptersThisBook8, _numVersesThisChapter9, _regexMatchObject37, _regexMatchObject38, _totalLink18, _optionalN8, _optionalB5, _C15, _V15, _B7, _C16, _V16, _noteID2, _checkResult8, _linkBookCode10, _linkChapterInt8, _linkVerseInt10, _numChaptersThisBook9, _numVersesThisChapter10, _regexMatchObject39, _regexMatchObject40, _totalLink19, storyNumberA, frameNumberA, storyNumberB, frameNumberB, storyIntA, frameIntA, storyIntB, frameIntB, _loop, leftoverLinksList1, leftoverLinksList2, leftCount, rightCount, middleCount;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkNotesLinksToOutside Notice: (priority = ${ priority }) ${ message } ${ characterIndex > 0 ? ` (at character ${characterIndex})` : \"\" } ${ excerpt ? ` ${excerpt}` : \"\" } ${ location }`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"cTNlnk addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `cTNlnk addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"cTNlnk addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `cTNlnk addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(incompleteNoticeObject.characterIndex !== undefined, `cTNlnk addNoticePartial: 'characterIndex' parameter should be defined`);\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `cTNlnk addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"cTNlnk addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `cTNlnk addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"cTNlnk addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `cTNlnk addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n              // incompleteNoticeObject.debugChain = incompleteNoticeObject.debugChain ? `checkNotesLinksToOutside ${ incompleteNoticeObject.debugChain } ` : `checkNotesLinksToOutside(${ fieldName })`;\n\n\n              if (bookID.length) incompleteNoticeObject.bookID = bookID; // Don't set the field if we don't have a useful bookID\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"aboutToOverwrite\"])('checkNotesLinksToOutside', ['filename'], incompleteNoticeObject, {\n                fieldName: fieldName\n              });\n              ctarResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                fieldName: fieldName\n              }));\n            };\n\n            /* This is for the case of the OccurrenceNote or Note or TWLink fields containing markdown links\n             bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n             These notes may contain links\n                to TA, e.g., “(See: [[rc://en/ta/man/translate/figs-metaphor]] and …”\n                to TWs, e.g., “(See: [[rc://en/tw/dict/bible/other/death]] and …”\n                To Bibles, e.g., “… how you translated this in [Revelation 3:11](../03/11.md).”\n             // You can supply the function to try to load outside links\n            //      checkingOptions?.getFile takes parameters ({username, repository, path, branch})\n            // and\n            //      checkingOptions?.defaultLanguageCode\n             // We attempt to fetch any TA links to test that the destination is really there\n            //  -- you can control this with:\n            //      checkingOptions?.taRepoUsername\n            //      checkingOptions?.taRepoBranch (or tag)\n            //      checkingOptions?.disableLinkedTAArticlesCheckFlag\n             // We attempt to fetch any TW links to test that the destination is really there\n            //  -- you can control this with:\n            //      checkingOptions.twRepoUsername\n            //      checkingOptions.twRepoBranch (or tag)\n            //      checkingOptions.disableLinkedTWArticlesCheckFlag\n            */\n            // if (fieldText.indexOf('brother') !== -1)\n            // functionLog(`checkNotesLinksToOutside(lC=${languageCode}, rC=${repoCode}', bk=${bookID} ${givenC}:${givenV} fN=${fieldName}, (${fieldText.length}), ${givenLocation}, …)…`);\n            // functionLog(`checkNotesLinksToOutside(lC=${languageCode}, rC=${repoCode}', bk=${bookID} ${givenC}:${givenV} fN=${fieldName}, (${fieldText.length}), ${givenLocation}, ${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(languageCode !== undefined, \"checkNotesLinksToOutside: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkNotesLinksToOutside: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            // parameterAssert(languageCode !== 'hbo' && languageCode !== 'el-x-koine', `checkNotesLinksToOutside: 'languageCode' parameter should not be an original language code: '${languageCode}'`);\n            //parameterAssert(repoCode !== undefined, \"checkNotesLinksToOutside: 'repoCode' parameter should be defined\");\n            //parameterAssert(typeof repoCode === 'string', `checkNotesLinksToOutside: 'repoCode' parameter should be a string not a '${typeof repoCode}'`);\n            //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkNotesLinksToOutside: 'repoCode' parameter should not be '${repoCode}'`);\n            //parameterAssert(bookID !== undefined, \"checkNotesLinksToOutside: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkNotesLinksToOutside: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(typeof givenC === 'string', `checkNotesLinksToOutside: 'givenC' parameter should be a string not a '${typeof givenC}'`);\n            //parameterAssert(typeof givenV === 'string', `checkNotesLinksToOutside: 'givenV' parameter should be a string not a '${typeof givenV}'`);\n            // if (fieldName !== 'MDFile') {\n            //     //parameterAssert(bookID.length === 3, `checkNotesLinksToOutside: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //     //parameterAssert(bookID.toUpperCase() === bookID, `checkNotesLinksToOutside: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //     //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkNotesLinksToOutside: '${bookID}' is not a valid USFM book identifier`);\n            // }\n            //parameterAssert(fieldName !== undefined, \"checkNotesLinksToOutside: 'fieldText' parameter should be defined\");\n            //parameterAssert(typeof fieldName === 'string', `checkNotesLinksToOutside: 'fieldText' parameter should be a string not a '${typeof fieldName}'`);\n            //parameterAssert(fieldName !== `${languageCode}_${repoCode.toLowerCase()}`, `checkNotesLinksToOutside: 'fieldText' parameter should not be the repoName: '${fieldName}'`);\n            // if (fieldName === `${languageCode}_${repoCode.toLowerCase()}`) { console.trace('checkNotesLinksToOutside()'); }\n            if (!fieldName.startsWith('TA ') && !fieldName.startsWith('TW ') && !fieldName.endsWith('.md') && fieldName.indexOf('/') === -1) {//parameterAssert(fieldName === 'OccurrenceNote' || fieldName === 'Note' || fieldName === 'TWLink' || fieldName === 'Response' || fieldName === 'README' || fieldName === 'LICENSE', `checkNotesLinksToOutside: 'fieldName' parameter should be 'OccurrenceNote', 'Note', 'TWLink', 'Response', 'README' or 'LICENSE' not '${fieldName}'`);\n            } //parameterAssert(fieldText !== undefined, \"checkNotesLinksToOutside: 'fieldText' parameter should be defined\");\n            //parameterAssert(typeof fieldText === 'string', `checkNotesLinksToOutside: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n            //parameterAssert(givenLocation !== undefined, \"checkNotesLinksToOutside: 'fieldText' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkNotesLinksToOutside: 'fieldText' parameter should be a string not a '${typeof givenLocation}'`);\n\n            /* // Regex test\n            debugLog(\"Starting TextRegex…\");\n            const testRegex = BCV_V_TO_OTHER_BOOK_BIBLE_REGEX;\n            const testText = 'See [Acts 15:13-21](../act/15/13.md).';\n            let regexTestResultArray;\n            while ((regexTestResultArray = testRegex.exec(testText))) {\n                debugLog(`TestRegex got regexTestResultArray(${regexTestResultArray.length})=${JSON.stringify(regexTestResultArray)} from '${testText}'`);\n            }\n            debugLog(\"Finished TextRegex.\"); */\n\n\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n            ctarResult = {\n              noticeList: [],\n              checkedFileCount: 0,\n              checkedFilenames: [],\n              checkedRepoNames: []\n            };\n            /**\n             *\n             * @description - adds a new notice entry from the partial fields given -- adding bookID and fieldName to the given fields\n             * @param {Object} incompleteNoticeObject expected to contain priority, message, characterIndex, exerpt, location\n             */\n\n            // Main code for checkNotesLinksToOutside\n            // Get any options that were suppplied, or else set default values\n            excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_7__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength = ${ excerptLength }`);\n            } // else debugLog(`Using supplied excerptLength = ${ excerptLength } `, `cf.default = ${ DEFAULT_EXCERPT_LENGTH }`);\n\n\n            excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n            excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength = ${ excerptHalfLength } `, `excerptHalfLengthPlus = ${ excerptHalfLengthPlus }`);\n\n            getFile_ = checkingOptions && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile : _core__WEBPACK_IMPORTED_MODULE_9__[\"cachedGetFile\"];\n            defaultLanguageCode = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.defaultLanguageCode; // if (!defaultLanguageCode) defaultLanguageCode = DEFAULT_LANGUAGE_CODE;\n\n            adjustedLanguageCode = languageCode; // This is the language code of the resource with the link\n\n            if (languageCode === 'hbo' || languageCode === 'el-x-koine') adjustedLanguageCode = 'en'; // This is a guess (and won’t be needed for TWs when we switch to TWLs)\n\n            if (!defaultLanguageCode) defaultLanguageCode = adjustedLanguageCode; // debugLog(`checkNotesLinksToOutside defaultLanguageCode=${defaultLanguageCode}`);\n\n            taRepoUsername = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.taRepoUsername;\n            if (!taRepoUsername) taRepoUsername = defaultLanguageCode === 'en' ? 'unfoldingWord' : 'Door43-Catalog';\n            taRepoBranch = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.taRepoBranch;\n            if (!taRepoBranch) taRepoBranch = DEFAULT_BRANCH;\n            twRepoUsername = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.twRepoUsername;\n            if (!twRepoUsername) twRepoUsername = defaultLanguageCode === 'en' ? 'unfoldingWord' : 'Door43-Catalog';\n            twRepoBranch = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.twRepoBranch;\n            if (!twRepoBranch) twRepoBranch = DEFAULT_BRANCH; // debugLog(`checkNotesLinksToOutside ended up with taRepoUsername=${taRepoUsername} taRepoBranch=${taRepoBranch} twRepoUsername=${twRepoUsername} twRepoBranch=${twRepoBranch}`);\n            // Convert our given C:V strings to integers\n\n            givenVfirstPart = '';\n            i = 0;\n\n          case 24:\n            if (!(i < givenV.length)) {\n              _context2.next = 33;\n              break;\n            }\n\n            if (!/^\\d$/.test(givenV[i])) {\n              _context2.next = 29;\n              break;\n            }\n\n            givenVfirstPart += givenV[i];\n            _context2.next = 30;\n            break;\n\n          case 29:\n            return _context2.abrupt(\"break\", 33);\n\n          case 30:\n            i++;\n            _context2.next = 24;\n            break;\n\n          case 33:\n            if (givenC && givenV) {\n              try {\n                givenCint = givenC === 'front' ? 0 : Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(givenC);\n                givenVint = givenV === 'intro' ? 0 : Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(givenVfirstPart);\n                if (givenVfirstPart !== givenV && givenV !== 'intro') Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"From '\".concat(givenC, \"': '\").concat(givenV, \"' got '\").concat(givenC, \"': '\").concat(givenVfirstPart, \"' then integers \").concat(givenCint, \": \").concat(givenVint));\n              } catch (cvError) {\n                console.error(\"TN Link Check couldn\\u2019t parse given chapter and verse numbers for \".concat(bookID, \" \").concat(givenC, \": \").concat(givenV, \" \").concat(fieldName, \" ' via \").concat(givenC, \":\").concat(givenVfirstPart, \" got \").concat(givenCint, \":\").concat(givenVint, \" with \").concat(cvError));\n              }\n            }\n\n            if (fieldName === 'x-tw' || fieldName === 'TWLink' || fieldName === 'SupportReference') {\n              // The link should be the entire field (not just a string inside the field), so check for leading/trailing spaces\n              trimStartFieldText = fieldText.trimStart(), trimEndFieldText = fieldText.trimEnd();\n\n              if (trimStartFieldText !== fieldText) {\n                excerpt = fieldText.slice(0, excerptLength).replace(/ /g, '␣') + (fieldText.length > excerptLength ? '…' : '');\n                addNoticePartial({\n                  priority: 784,\n                  message: \"Unexpected leading whitespace in link field\",\n                  excerpt: excerpt,\n                  characterIndex: 0,\n                  location: ourLocation\n                });\n              } else if (trimEndFieldText !== fieldText) {\n                _excerpt = (fieldText.length > excerptLength ? '…' : '') + fieldText.substring(fieldText.length - 10).replace(/ /g, '␣');\n                addNoticePartial({\n                  priority: 785,\n                  message: \"Unexpected trailing whitespace in link field\",\n                  excerpt: _excerpt,\n                  characterIndex: fieldText.length - 1,\n                  location: ourLocation\n                });\n              }\n            }\n\n          case 35:\n            if (!(regexMatchObject = SIMPLE_IMAGE_REGEX.exec(fieldText))) {\n              _context2.next = 56;\n              break;\n            }\n\n            // debugLog(`Got markdown image in line ${lineNumber}:`, JSON.stringify(regexMatchObject));\n            _regexMatchObject = regexMatchObject, _regexMatchObject2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject, 3), totalLink = _regexMatchObject2[0], altText = _regexMatchObject2[1], fetchLink = _regexMatchObject2[2]; // if (altText !== 'OBS Image') userLog(\"This code was only checked for 'OBS Image' links\");\n\n            if (!altText) addNoticePartial({\n              priority: 199,\n              message: \"Markdown image link has no alternative text\",\n              excerpt: totalLink,\n              location: ourLocation\n            });\n\n            if (fetchLink.startsWith('https://')) {\n              _context2.next = 42;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 749,\n              message: \"Markdown image link seems faulty\",\n              excerpt: fetchLink,\n              location: ourLocation\n            });\n            _context2.next = 54;\n            break;\n\n          case 42:\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) !== true)) {\n              _context2.next = 54;\n              break;\n            }\n\n            _context2.prev = 43;\n            _context2.next = 46;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_9__[\"cachedGetFileUsingFullURL\"])({\n              uri: fetchLink\n            });\n\n          case 46:\n            responseData = _context2.sent;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"dataAssert\"])(responseData.length > 10, \"Expected \".concat(fetchLink, \" image file to be longer: \").concat(responseData.length)); // debugLog(\"Markdown link fetch got response: \", responseData.length);\n\n            _context2.next = 54;\n            break;\n\n          case 50:\n            _context2.prev = 50;\n            _context2.t0 = _context2[\"catch\"](43);\n            console.error(\"Markdown image link fetch had an error fetching '\".concat(fetchLink, \"': \").concat(_context2.t0));\n            addNoticePartial({\n              priority: 748,\n              message: \"Error fetching markdown image link\",\n              excerpt: fetchLink,\n              location: ourLocation\n            });\n\n          case 54:\n            _context2.next = 35;\n            break;\n\n          case 56:\n            if (!(regexMatchObject = TITLED_IMAGE_REGEX.exec(fieldText))) {\n              _context2.next = 78;\n              break;\n            }\n\n            // debugLog(`Got markdown image in line ${lineNumber}:`, JSON.stringify(regexMatchObject));\n            _regexMatchObject3 = regexMatchObject, _regexMatchObject4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject3, 4), _totalLink = _regexMatchObject4[0], alt = _regexMatchObject4[1], _fetchLink = _regexMatchObject4[2], title = _regexMatchObject4[3];\n            if (!alt) addNoticePartial({\n              priority: 199,\n              message: \"Markdown image link has no alternative text\",\n              excerpt: _totalLink,\n              location: ourLocation\n            });\n            if (!title) addNoticePartial({\n              priority: 348,\n              message: \"Markdown image link has no title text\",\n              excerpt: _totalLink,\n              location: ourLocation\n            });\n\n            if (_fetchLink.startsWith('https://')) {\n              _context2.next = 64;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 749,\n              message: \"Markdown image link seems faulty\",\n              excerpt: _fetchLink,\n              location: ourLocation\n            });\n            _context2.next = 76;\n            break;\n\n          case 64:\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) !== true)) {\n              _context2.next = 76;\n              break;\n            }\n\n            _context2.prev = 65;\n            _context2.next = 68;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_9__[\"cachedGetFileUsingFullURL\"])({\n              uri: _fetchLink\n            });\n\n          case 68:\n            _responseData = _context2.sent;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"dataAssert\"])(_responseData.length > 10, \"Expected \".concat(_fetchLink, \" image file to be longer: \").concat(_responseData.length)); // debugLog(\"Markdown link fetch got response: \", responseData.length);\n\n            _context2.next = 76;\n            break;\n\n          case 72:\n            _context2.prev = 72;\n            _context2.t1 = _context2[\"catch\"](65);\n            console.error(\"Markdown image link fetch had an error fetching '\".concat(_fetchLink, \"': \").concat(_context2.t1));\n            addNoticePartial({\n              priority: 748,\n              message: \"Error fetching markdown image link\",\n              excerpt: _fetchLink,\n              location: ourLocation\n            });\n\n          case 76:\n            _context2.next = 56;\n            break;\n\n          case 78:\n            // Find total regular (non-image) links\n            linksList1 = fieldText.match(GENERAL_MARKDOWN_LINK1_REGEX) || []; // [[something]]\n            // if (linksList1.length) debugLog(`linksList1 (${linksList1.length}) = ${JSON.stringify(linksList1)}`);\n\n            linksList2 = fieldText.match(GENERAL_MARKDOWN_LINK2_REGEX) || []; // [display](link)\n            // if (linksList2.length) debugLog(`linksList2 (${linksList2.length}) = ${JSON.stringify(linksList2)}`);\n            // const totalLinks1 = linksList1.length;\n            // const totalLinks2 = linksList2.length;\n            // eslint-disable-next-line no-unused-vars\n\n            taLinkCount1 = 0, taLinkCount2 = 0, twLinkCount1 = 0, twLinkCount2 = 0, TNLinkCount1 = 0, thisChapterBibleLinkCount1 = 0, thisVerseBibleLinkCount1 = 0, thisBookBibleLinkCount1 = 0, otherBookBibleLinkCount1 = 0, OBSLinkCount = 0, generalLinkCount1 = 0;\n            processedLinkList = []; // Check for internal TW links like [Asher](../names/asher.md)\n\n          case 82:\n            if (!(regexMatchObject = TW_INTERNAL_REGEX.exec(fieldText))) {\n              _context2.next = 117;\n              break;\n            }\n\n            // debugLog(`  checkNotesLinksToOutside TW_INTERNAL_REGEX regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n            twLinkCount1 += 1;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 4, \"TW_INTERNAL_REGEX expected 4 fields (not \".concat(regexMatchObject.length, \")\")); // eslint-disable-next-line no-unused-vars\n\n            _regexMatchObject5 = regexMatchObject, _regexMatchObject6 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject5, 4), _totalLink2 = _regexMatchObject6[0], _displayName = _regexMatchObject6[1], category = _regexMatchObject6[2], article = _regexMatchObject6[3];\n            processedLinkList.push(_totalLink2); // Save the full link\n\n            twRepoName = \"\".concat(defaultLanguageCode, \"_tw\"); // debugLog(`Got twRepoName=${twRepoName}`);\n\n            filename = \"\".concat(article.trim(), \".md\");\n            filepath = \"bible/\".concat(category, \"/\").concat(filename); // debugLog(`Got tW filepath=${filepath}`);\n\n            if (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) {\n              _context2.next = 115;\n              break;\n            }\n\n            // if (regexMatchObject[3] === 'brother') debugLog(`Need to check ${fieldName} TW link ${regexMatchObject} against ${twRepoName}`);\n            twPathParameters = {\n              username: twRepoUsername,\n              repository: twRepoName,\n              path: filepath,\n              branch: twRepoBranch\n            };\n            _context2.next = 94;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"alreadyChecked\"])(twPathParameters);\n\n          case 94:\n            if (_context2.sent) {\n              _context2.next = 115;\n              break;\n            }\n\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedTWArticlesCheckFlag) === true)) {\n              _context2.next = 102;\n              break;\n            }\n\n            _context2.next = 98;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"isFilepathInRepoTree\"])(twPathParameters);\n\n          case 98:\n            if (_context2.sent) {\n              _context2.next = 100;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 883,\n              message: \"Unable to find linked TW article\",\n              details: \"\".concat(twRepoUsername, \" \").concat(twRepoName, \" \").concat(twRepoBranch, \" \").concat(filepath),\n              excerpt: _totalLink2,\n              location: ourLocation\n            });\n\n          case 100:\n            _context2.next = 114;\n            break;\n\n          case 102:\n            twFileContent = void 0;\n            _context2.prev = 103;\n            _context2.next = 106;\n            return getFile_(twPathParameters);\n\n          case 106:\n            twFileContent = _context2.sent;\n            _context2.next = 113;\n            break;\n\n          case 109:\n            _context2.prev = 109;\n            _context2.t2 = _context2[\"catch\"](103);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            console.error(\"checkNotesLinksToOutside(\".concat(bookID, \", \").concat(fieldName, \", \\u2026) failed to load TW \").concat(twRepoUsername, \" \").concat(twRepoName, \", \").concat(filepath, \", \").concat(twRepoBranch, \": \").concat(_context2.t2.message));\n            addNoticePartial({\n              priority: 882,\n              message: \"Error loading TW article\",\n              details: \"\".concat(twRepoUsername, \" \").concat(twRepoName, \" \").concat(twRepoBranch, \" \").concat(filepath),\n              excerpt: _totalLink2,\n              location: \"\".concat(ourLocation, \" \").concat(filepath, \": \").concat(_context2.t2)\n            });\n\n          case 113:\n            if (!twFileContent) addNoticePartial({\n              priority: 883,\n              message: \"Unable to find/load linked TW article\",\n              details: \"\".concat(twRepoUsername, \" \").concat(twRepoName, \" \").concat(twRepoBranch, \" \").concat(filepath),\n              excerpt: _totalLink2,\n              location: ourLocation\n            });else {\n              // we got the content of the TW article\n              if (twFileContent.length < 10) addNoticePartial({\n                priority: 881,\n                message: \"TW article seems empty\",\n                details: \"\".concat(twRepoUsername, \" \").concat(twRepoName, \" \").concat(twRepoBranch, \" \").concat(filepath),\n                excerpt: _totalLink2,\n                location: ourLocation\n              }); // THIS IS DISABLED COZ IT CAN GIVE AN INFINITE LOOP !!!\n              // else if (checkingOptions?.disableLinkedTWArticlesCheckFlag !== true) {\n              //     // functionLog(`checkNotesLinksToOutside got ${checkingOptions?.disableLinkedTWArticlesCheckFlag} so checking TW article: ${filepath}`);\n              //     if (!await alreadyChecked(twPathParameters)) {\n              //         // functionLog(`checkNotesLinksToOutside needs to check TW article: ${filepath}`);\n              //         const checkTWFileResult = await checkMarkdownFileContents(username, languageCode, repoCode, `TW ${filename}`, twFileContent, ourLocation, checkingOptions);\n              //         for (const noticeObject of checkTWFileResult.noticeList)\n              //             ctarResult.noticeList.push({ ...noticeObject, username: twRepoUsername, repoCode: 'TW', repoName: twRepoName, filename: filepath, location: ` linked to${ourLocation}`, extra: 'TW' });\n              //         ctarResult.checkedFileCount += 1;\n              //         ctarResult.checkedFilenames.push(filename);\n              //         ctarResult.checkedFilesizes = twFileContent.length;\n              //         ctarResult.checkedFilenameExtensions = ['md'];\n              //         ctarResult.checkedRepoNames.push(twRepoName);\n              //         markAsChecked(twPathParameters); // don’t bother waiting for the result of this async call\n              //     }\n              // }\n              // else debugLog(\"checkNotesLinksToOutside: disableLinkedTWArticlesCheckFlag is set to TRUE!\");\n            }\n\n          case 114:\n            Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"markAsChecked\"])(twPathParameters); // don’t bother waiting for the result of this async call\n\n          case 115:\n            _context2.next = 82;\n            break;\n\n          case 117:\n            if (!(regexMatchObject = TA_FULL_DISPLAY_LINK_REGEX.exec(fieldText))) {\n              _context2.next = 172;\n              break;\n            }\n\n            // debugLog(`  checkNotesLinksToOutside TA_FULL_DISPLAY_LINK_REGEX resultArray=${JSON.stringify(regexMatchObject)}`);\n            taLinkCount1 += 1;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 5, \"TA_FULL_DISPLAY_LINK_REGEX expected 5 fields (not \".concat(regexMatchObject.length, \")\")); // eslint-disable-next-line no-unused-vars\n\n            _regexMatchObject7 = regexMatchObject, _regexMatchObject8 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject7, 5), _totalLink3 = _regexMatchObject8[0], _displayName2 = _regexMatchObject8[1], foundLanguageCode = _regexMatchObject8[2], part = _regexMatchObject8[3], _article = _regexMatchObject8[4];\n            processedLinkList.push(_totalLink3); // Save the full link\n\n            if (foundLanguageCode !== '*') {\n              characterIndex = TA_FULL_DISPLAY_LINK_REGEX.lastIndex - _totalLink3.length + 7; // lastIndex points to the end of the field that was found\n\n              _excerpt2 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n              addNoticePartial({\n                priority: 450,\n                message: \"Resource container link should have '*' language code\",\n                details: \"not '\".concat(foundLanguageCode, \"'\"),\n                characterIndex: characterIndex,\n                excerpt: _excerpt2,\n                location: ourLocation\n              });\n            } else if (repoCode === 'TN') {\n              // but not TN2\n              // At the moment, tC can’t handle these links with * so we have to ensure that they're not there\n              _characterIndex = TA_FULL_DISPLAY_LINK_REGEX.lastIndex - _totalLink3.length + 7; // lastIndex points to the end of the field that was found\n\n              _excerpt3 = (_characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(_characterIndex - excerptHalfLength, _characterIndex + excerptHalfLengthPlus) + (_characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n              addNoticePartial({\n                priority: 950,\n                message: \"tC cannot yet process '*' language code\",\n                characterIndex: _characterIndex,\n                excerpt: _excerpt3,\n                location: ourLocation\n              });\n            }\n\n            if (!foundLanguageCode || foundLanguageCode === '*') foundLanguageCode = defaultLanguageCode;\n            taRepoName = \"\".concat(foundLanguageCode, \"_ta\"); // debugLog(`Got taRepoName=${taRepoName}`);\n\n            _filepath = \"\".concat(part, \"/\").concat(_article, \"/01.md\"); // Other files are title.md, sub-title.md\n            // debugLog(`Got tA filepath=${filepath}`);\n\n            if (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) {\n              _context2.next = 170;\n              break;\n            }\n\n            // functionLog(`checkNotesLinksToOutside: need to check against ${taRepoName}`);\n            taPathParameters = {\n              username: taRepoUsername,\n              repository: taRepoName,\n              path: _filepath,\n              branch: taRepoBranch\n            };\n            _context2.next = 130;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"alreadyChecked\"])(taPathParameters);\n\n          case 130:\n            if (_context2.sent) {\n              _context2.next = 170;\n              break;\n            }\n\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedTAArticlesCheckFlag) === true)) {\n              _context2.next = 138;\n              break;\n            }\n\n            _context2.next = 134;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"isFilepathInRepoTree\"])(taPathParameters);\n\n          case 134:\n            if (_context2.sent) {\n              _context2.next = 136;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 886,\n              message: \"Unable to find linked TA article\",\n              details: \"\".concat(taRepoUsername, \" \").concat(taRepoName, \" \").concat(taRepoBranch, \" \").concat(_filepath),\n              excerpt: _totalLink3,\n              location: ourLocation\n            });\n\n          case 136:\n            _context2.next = 169;\n            break;\n\n          case 138:\n            taFileContent = void 0, alreadyGaveError = false;\n            _context2.prev = 139;\n            _context2.next = 142;\n            return getFile_(taPathParameters);\n\n          case 142:\n            taFileContent = _context2.sent;\n            _context2.next = 149;\n            break;\n\n          case 145:\n            _context2.prev = 145;\n            _context2.t3 = _context2[\"catch\"](139);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            // console.error(`checkNotesLinksToOutside(${bookID}, ${fieldName}, …) failed to load TA for '${taRepoUsername}', '${taRepoName}', '${filepath}', '${taRepoBranch}', ${trcGCerror.message}`);\n            addNoticePartial({\n              priority: 885,\n              message: \"Error loading TA article\",\n              details: \"\".concat(taRepoUsername, \" \").concat(taRepoName, \" \").concat(taRepoBranch, \" \").concat(_filepath),\n              excerpt: _totalLink3,\n              location: \"\".concat(ourLocation, \" \").concat(_filepath, \": \").concat(_context2.t3)\n            });\n            alreadyGaveError = true;\n\n          case 149:\n            if (alreadyGaveError) {\n              _context2.next = 169;\n              break;\n            }\n\n            if (taFileContent) {\n              _context2.next = 154;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 886,\n              message: \"Unable to find/load linked TA article\",\n              details: \"\".concat(taRepoUsername, \" \").concat(taRepoName, \" \").concat(taRepoBranch, \" \").concat(_filepath),\n              excerpt: _totalLink3,\n              location: ourLocation\n            });\n            _context2.next = 169;\n            break;\n\n          case 154:\n            if (!(taFileContent.length < 10)) {\n              _context2.next = 158;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 884,\n              message: \"TA article seems empty\",\n              details: \"\".concat(taRepoUsername, \" \").concat(taRepoName, \" \").concat(taRepoBranch, \" \").concat(_filepath),\n              excerpt: _totalLink3,\n              location: ourLocation\n            });\n            _context2.next = 169;\n            break;\n\n          case 158:\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedTAArticlesCheckFlag) !== true)) {\n              _context2.next = 169;\n              break;\n            }\n\n            _context2.next = 161;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_9__[\"checkMarkdownFileContents\"])(username, foundLanguageCode, 'TA', _filepath, taFileContent, ourLocation, checkingOptions);\n\n          case 161:\n            checkTAFileResult = _context2.sent;\n            _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkTAFileResult.noticeList);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                noticeObject = _step.value;\n\n                // Why don’t we use addNoticePartial() here? (It adds bookID and fieldName.) Maybe it would be misleading???\n                if (noticeObject.repoCode === undefined) {\n                  // debugLog(`checkMarkdownText 378 added rC=TA to ${JSON.stringify(noticeObject)}`);\n                  noticeObject.repoCode = 'TA';\n                } // else if (noticeObject.repoCode !== 'TA') debugLog(`checkMarkdownText 378 DIDN'T ADD rC=TA to ${JSON.stringify(noticeObject)}`);\n\n\n                ctarResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeObject), {}, {\n                  username: taRepoUsername,\n                  repoName: taRepoName,\n                  filename: _filepath,\n                  location: \" linked to\".concat(ourLocation),\n                  extra: 'TA'\n                }));\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            ctarResult.checkedFileCount += 1;\n            ctarResult.checkedFilenames.push(_filepath);\n            ctarResult.checkedFilesizes = taFileContent.length;\n            ctarResult.checkedFilenameExtensions = ['md'];\n            ctarResult.checkedRepoNames.push(taRepoName);\n\n          case 169:\n            Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"markAsChecked\"])(taPathParameters); // don’t bother waiting for the result of this async call\n\n          case 170:\n            _context2.next = 117;\n            break;\n\n          case 172:\n            if (!(repoCode === 'TA' || fieldName.startsWith('TA '))) {\n              _context2.next = 246;\n              break;\n            }\n\n          case 173:\n            if (!(regexMatchObject = TA_RELATIVE1_DISPLAY_LINK_REGEX.exec(fieldText))) {\n              _context2.next = 212;\n              break;\n            }\n\n            // debugLog(`  checkNotesLinksToOutside TA_RELATIVE1_DISPLAY_LINK_REGEX resultArray=${JSON.stringify(regexMatchObject)}`);\n            taLinkCount1 += 1;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 3, \"TA_RELATIVE1_DISPLAY_LINK_REGEX expected 3 fields (not \".concat(regexMatchObject.length, \")\")); // eslint-disable-next-line no-unused-vars\n\n            _regexMatchObject9 = regexMatchObject, _regexMatchObject10 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject9, 3), _totalLink4 = _regexMatchObject10[0], _displayName3 = _regexMatchObject10[1], _article2 = _regexMatchObject10[2];\n            processedLinkList.push(_totalLink4); // Save the full link\n\n            _taRepoName = \"\".concat(defaultLanguageCode, \"_ta\"); // debugLog(`Got taRepoName=${taRepoName}`);\n\n            TAsection = 'translate';\n            if (fieldName.startsWith('checking/')) TAsection = 'checking';else if (fieldName.startsWith('process/')) TAsection = 'process';\n            if (fieldName.startsWith('intro/')) TAsection = 'intro';\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"dataAssert\"])(TAsection === 'translate' || TAsection === 'checking' || TAsection === 'process' || TAsection === 'intro', \"Unexpected TA section name = '\".concat(TAsection, \"'\"));\n            _filepath2 = \"\".concat(TAsection, \"/\").concat(_article2, \"/01.md\"); // Other files are title.md, sub-title.md\n            // debugLog(`checkNotesLinksToOutside TA_RELATIVE1_DISPLAY_LINK_REGEX got tA filepath=${filepath}`);\n\n            if (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) {\n              _context2.next = 210;\n              break;\n            }\n\n            // debugLog(`checkNotesLinksToOutside TA_RELATIVE1_DISPLAY_LINK_REGEX need to check ${filepath} against ${taRepoName}`);\n            _taPathParameters = {\n              username: taRepoUsername,\n              repository: _taRepoName,\n              path: _filepath2,\n              branch: taRepoBranch\n            };\n            _context2.next = 188;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"alreadyChecked\"])(_taPathParameters);\n\n          case 188:\n            if (_context2.sent) {\n              _context2.next = 210;\n              break;\n            }\n\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedTAArticlesCheckFlag) === true)) {\n              _context2.next = 196;\n              break;\n            }\n\n            _context2.next = 192;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"isFilepathInRepoTree\"])(_taPathParameters);\n\n          case 192:\n            if (_context2.sent) {\n              _context2.next = 194;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 886,\n              message: \"Unable to find linked TA article\",\n              details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName, \" \").concat(taRepoBranch, \" \").concat(_filepath2),\n              excerpt: _totalLink4,\n              location: ourLocation\n            });\n\n          case 194:\n            _context2.next = 209;\n            break;\n\n          case 196:\n            _taFileContent = void 0, _alreadyGaveError = false;\n            _context2.prev = 197;\n            _context2.next = 200;\n            return getFile_(_taPathParameters);\n\n          case 200:\n            _taFileContent = _context2.sent;\n            _context2.next = 208;\n            break;\n\n          case 203:\n            _context2.prev = 203;\n            _context2.t4 = _context2[\"catch\"](197);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            console.error(\"checkNotesLinksToOutside(\".concat(bookID, \", \").concat(fieldName, \", \\u2026) failed to load TA for '\").concat(taRepoUsername, \"', '\").concat(_taRepoName, \"', '\").concat(_filepath2, \"', '\").concat(taRepoBranch, \"', \").concat(_context2.t4.message));\n            addNoticePartial({\n              priority: 885,\n              message: \"Error loading TA article\",\n              details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName, \" \").concat(taRepoBranch, \" \").concat(_filepath2),\n              excerpt: _totalLink4,\n              location: \"\".concat(ourLocation, \" \").concat(_filepath2, \": \").concat(_context2.t4)\n            });\n            _alreadyGaveError = true;\n\n          case 208:\n            if (!_alreadyGaveError) {\n              if (!_taFileContent) addNoticePartial({\n                priority: 886,\n                message: \"Unable to find/load linked TA article\",\n                details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName, \" \").concat(taRepoBranch, \" \").concat(_filepath2),\n                excerpt: _totalLink4,\n                location: ourLocation\n              });else if (_taFileContent.length < 10) addNoticePartial({\n                priority: 884,\n                message: \"Linked TA article seems empty\",\n                details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName, \" \").concat(taRepoBranch, \" \").concat(_filepath2),\n                excerpt: _totalLink4,\n                location: ourLocation\n              }); // Don’t do this or it gets infinite recursion!!!\n              // else if (checkingOptions?.disableLinkedTAArticlesCheckFlag !== true) {\n              //     // functionLog(`checkNotesLinksToOutside got ${checkingOptions?.disableLinkedTAArticlesCheckFlag} so checking TA article: ${filepath}`);\n              //     if (!await alreadyChecked(taPathParameters)) {\n              //         // functionLog(`checkNotesLinksToOutside needs to check TA article: ${filepath}`);\n              //         const checkTAFileResult = await checkMarkdownFileContents(username, languageCode, repoCode, `TA ${article.trim()}/01.md`, taFileContent, ourLocation, checkingOptions);\n              //         for (const noticeObject of checkTAFileResult.noticeList)\n              //             ctarResult.noticeList.push({ ...noticeObject, username: taRepoUsername, repoCode: 'TA', repoName: taRepoName, filename: filepath, location: ` linked to${ourLocation}`, extra: 'TA' });\n              //         ctarResult.checkedFileCount += 1;\n              //         ctarResult.checkedFilenames.push(`${article.trim()}/01.md`);\n              //         ctarResult.checkedFilesizes = taFileContent.length;\n              //         ctarResult.checkedFilenameExtensions = ['md'];\n              //         ctarResult.checkedRepoNames.push(taRepoName);\n              //         markAsChecked(taPathParameters); // don’t bother waiting for the result of this async call\n              //     }\n              // }\n            }\n\n          case 209:\n            Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"markAsChecked\"])(_taPathParameters); // don’t bother waiting for the result of this async call\n\n          case 210:\n            _context2.next = 173;\n            break;\n\n          case 212:\n            if (!(regexMatchObject = TA_RELATIVE2_DISPLAY_LINK_REGEX.exec(fieldText))) {\n              _context2.next = 246;\n              break;\n            }\n\n            // debugLog(`  checkNotesLinksToOutside TA_RELATIVE2_DISPLAY_LINK_REGEX resultArray=${JSON.stringify(regexMatchObject)}`);\n            taLinkCount1 += 1;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 4, \"TA_RELATIVE2_DISPLAY_LINK_REGEX expected 4 fields (not \".concat(regexMatchObject.length, \")\")); // eslint-disable-next-line no-unused-vars\n\n            _regexMatchObject11 = regexMatchObject, _regexMatchObject12 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject11, 4), _totalLink5 = _regexMatchObject12[0], _displayName4 = _regexMatchObject12[1], _TAsection = _regexMatchObject12[2], _article3 = _regexMatchObject12[3];\n            processedLinkList.push(_totalLink5); // Save the full link\n\n            _taRepoName2 = \"\".concat(defaultLanguageCode, \"_ta\"); // debugLog(`Got taRepoName=${taRepoName}`);\n\n            _filepath3 = \"\".concat(_TAsection, \"/\").concat(_article3, \"/01.md\"); // Other files are title.md, sub-title.md\n            // debugLog(`Got tA filepath=${filepath}`);\n\n            if (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) {\n              _context2.next = 244;\n              break;\n            }\n\n            // functionLog(`checkNotesLinksToOutside: need to check against ${taRepoName}`);\n            _taPathParameters2 = {\n              username: taRepoUsername,\n              repository: _taRepoName2,\n              path: _filepath3,\n              branch: taRepoBranch\n            };\n            _context2.next = 223;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"alreadyChecked\"])(_taPathParameters2);\n\n          case 223:\n            if (_context2.sent) {\n              _context2.next = 244;\n              break;\n            }\n\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedTAArticlesCheckFlag) === true)) {\n              _context2.next = 231;\n              break;\n            }\n\n            _context2.next = 227;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"isFilepathInRepoTree\"])(_taPathParameters2);\n\n          case 227:\n            if (_context2.sent) {\n              _context2.next = 229;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 886,\n              message: \"Unable to find linked TA article\",\n              details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName2, \" \").concat(taRepoBranch, \" \").concat(_filepath3),\n              excerpt: _totalLink5,\n              location: ourLocation\n            });\n\n          case 229:\n            _context2.next = 243;\n            break;\n\n          case 231:\n            _taFileContent2 = void 0, _alreadyGaveError2 = false;\n            _context2.prev = 232;\n            _context2.next = 235;\n            return getFile_(_taPathParameters2);\n\n          case 235:\n            _taFileContent2 = _context2.sent;\n            _context2.next = 242;\n            break;\n\n          case 238:\n            _context2.prev = 238;\n            _context2.t5 = _context2[\"catch\"](232);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            // console.error(`checkNotesLinksToOutside(${bookID}, ${fieldName}, …) failed to load TA for '${taRepoUsername}', '${taRepoName}', '${filepath}', '${taRepoBranch}', ${trcGCerror.message}`);\n            addNoticePartial({\n              priority: 885,\n              message: \"Error loading TA article\",\n              details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName2, \" \").concat(taRepoBranch, \" \").concat(_filepath3),\n              excerpt: _totalLink5,\n              location: \"\".concat(ourLocation, \" \").concat(_filepath3, \": \").concat(_context2.t5)\n            });\n            _alreadyGaveError2 = true;\n\n          case 242:\n            if (!_alreadyGaveError2) {\n              if (!_taFileContent2) addNoticePartial({\n                priority: 886,\n                message: \"Unable to find/load linked TA article\",\n                details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName2, \" \").concat(taRepoBranch, \" \").concat(_filepath3),\n                excerpt: _totalLink5,\n                location: ourLocation\n              });else if (_taFileContent2.length < 10) addNoticePartial({\n                priority: 884,\n                message: \"Linked TA article seems empty\",\n                details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName2, \" \").concat(taRepoBranch, \" \").concat(_filepath3),\n                excerpt: _totalLink5,\n                location: ourLocation\n              }); // Don’t do this or it gets infinite recursion!!!\n              // else if (checkingOptions?.disableLinkedTAArticlesCheckFlag !== true) {\n              //     // functionLog(`checkNotesLinksToOutside got ${checkingOptions?.disableLinkedTAArticlesCheckFlag} so checking TA article: ${filepath}`);\n              //     if (!await alreadyChecked(taPathParameters)) {\n              //         // functionLog(`checkNotesLinksToOutside needs to check TA article: ${filepath}`);\n              //         const checkTAFileResult = await checkMarkdownFileContents(username, languageCode, repoCode, `TA ${filepath}`, taFileContent, ourLocation, checkingOptions);\n              //         for (const noticeObject of checkTAFileResult.noticeList)\n              //             ctarResult.noticeList.push({ ...noticeObject, username: taRepoUsername, repoCode: 'TA', repoName: taRepoName, filename: filepath, location: ` linked to${ourLocation}`, extra: 'TA' });\n              //         ctarResult.checkedFileCount += 1;\n              //         ctarResult.checkedFilenames.push(filepath);\n              //         ctarResult.checkedFilesizes = taFileContent.length;\n              //         ctarResult.checkedFilenameExtensions = ['md'];\n              //         ctarResult.checkedRepoNames.push(taRepoName);\n              //         markAsChecked(taPathParameters); // don’t bother waiting for the result of this async call\n              //     }\n              // }\n            }\n\n          case 243:\n            Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"markAsChecked\"])(_taPathParameters2); // don’t bother waiting for the result of this async call\n\n          case 244:\n            _context2.next = 212;\n            break;\n\n          case 246:\n            if (!(regexMatchObject = TA_DOUBLE_BRACKETED_LINK_REGEX.exec(fieldText))) {\n              _context2.next = 304;\n              break;\n            }\n\n            // debugLog(`  checkNotesLinksToOutside TA_DOUBLE_BRACKETED_LINK_REGEX resultArray=${JSON.stringify(regexMatchObject)}`);\n            taLinkCount2 += 1;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 4, \"TA_DOUBLE_BRACKETED_LINK_REGEX expected 4 fields (not \".concat(regexMatchObject.length, \")\"));\n            _regexMatchObject13 = regexMatchObject, _regexMatchObject14 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject13, 4), _totalLink6 = _regexMatchObject14[0], _foundLanguageCode = _regexMatchObject14[1], _part = _regexMatchObject14[2], _article4 = _regexMatchObject14[3];\n            processedLinkList.push(_totalLink6); // Save the full link\n\n            if (_foundLanguageCode !== '*') {\n              _characterIndex2 = TA_DOUBLE_BRACKETED_LINK_REGEX.lastIndex - _totalLink6.length + 7; // lastIndex points to the end of the field that was found\n\n              _excerpt4 = (_characterIndex2 > excerptHalfLength ? '…' : '') + fieldText.substring(_characterIndex2 - excerptHalfLength, _characterIndex2 + excerptHalfLengthPlus) + (_characterIndex2 + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n              addNoticePartial({\n                priority: 450,\n                message: \"Resource container link should have '*' language code\",\n                details: \"not '\".concat(_foundLanguageCode, \"'\"),\n                characterIndex: _characterIndex2,\n                excerpt: _excerpt4,\n                location: ourLocation\n              });\n            } else if (repoCode === 'TN') {\n              // but not TN2\n              // At the moment, tC can’t handle these links with * so we have to ensure that they're not there\n              _characterIndex3 = TA_DOUBLE_BRACKETED_LINK_REGEX.lastIndex - _totalLink6.length + 7; // lastIndex points to the end of the field that was found\n\n              _excerpt5 = (_characterIndex3 > excerptHalfLength ? '…' : '') + fieldText.substring(_characterIndex3 - excerptHalfLength, _characterIndex3 + excerptHalfLengthPlus) + (_characterIndex3 + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n              addNoticePartial({\n                priority: 950,\n                message: \"tC cannot yet process '*' language code\",\n                characterIndex: _characterIndex3,\n                excerpt: _excerpt5,\n                location: ourLocation\n              });\n            }\n\n            if (!_foundLanguageCode || _foundLanguageCode === '*') _foundLanguageCode = defaultLanguageCode;\n            _taRepoName3 = \"\".concat(_foundLanguageCode, \"_ta\"); // debugLog(`Got taRepoName=${taRepoName}`);\n\n            _filepath4 = \"\".concat(_part, \"/\").concat(_article4, \"/01.md\"); // Other files are title.md, sub-title.md\n            // debugLog(`Got tA filepath=${filepath}`);\n\n            if (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) {\n              _context2.next = 302;\n              break;\n            }\n\n            // functionLog(`checkNotesLinksToOutside: need to check against ${taRepoName}`);\n            _taPathParameters3 = {\n              username: taRepoUsername,\n              repository: _taRepoName3,\n              path: _filepath4,\n              branch: taRepoBranch\n            };\n            _context2.next = 259;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"alreadyChecked\"])(_taPathParameters3);\n\n          case 259:\n            if (_context2.sent) {\n              _context2.next = 302;\n              break;\n            }\n\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedTAArticlesCheckFlag) === true)) {\n              _context2.next = 267;\n              break;\n            }\n\n            _context2.next = 263;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"isFilepathInRepoTree\"])(_taPathParameters3);\n\n          case 263:\n            if (_context2.sent) {\n              _context2.next = 265;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 886,\n              message: \"Unable to find linked TA article\",\n              details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName3, \" \").concat(taRepoBranch, \" \").concat(_filepath4),\n              excerpt: _totalLink6,\n              location: ourLocation\n            });\n\n          case 265:\n            _context2.next = 301;\n            break;\n\n          case 267:\n            _context2.next = 269;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"alreadyChecked\"])(_taPathParameters3);\n\n          case 269:\n            if (_context2.sent) {\n              _context2.next = 301;\n              break;\n            }\n\n            _taFileContent3 = void 0, _alreadyGaveError3 = false;\n            _context2.prev = 271;\n            _context2.next = 274;\n            return getFile_(_taPathParameters3);\n\n          case 274:\n            _taFileContent3 = _context2.sent;\n            _context2.next = 281;\n            break;\n\n          case 277:\n            _context2.prev = 277;\n            _context2.t6 = _context2[\"catch\"](271);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            // console.error(`checkNotesLinksToOutside(${bookID}, ${fieldName}, …) failed to load TA for '${taRepoUsername}', '${taRepoName}', '${filepath}', '${taRepoBranch}', ${trcGCerror.message}`);\n            addNoticePartial({\n              priority: 885,\n              message: \"Error loading TA article\",\n              details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName3, \" \").concat(taRepoBranch, \" \").concat(_filepath4),\n              excerpt: _totalLink6,\n              location: \"\".concat(ourLocation, \" \").concat(_filepath4, \": \").concat(_context2.t6)\n            });\n            _alreadyGaveError3 = true;\n\n          case 281:\n            if (_alreadyGaveError3) {\n              _context2.next = 301;\n              break;\n            }\n\n            if (_taFileContent3) {\n              _context2.next = 286;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 886,\n              message: \"Unable to find/load linked TA article\",\n              details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName3, \" \").concat(taRepoBranch, \" \").concat(_filepath4),\n              excerpt: _totalLink6,\n              location: ourLocation\n            });\n            _context2.next = 301;\n            break;\n\n          case 286:\n            if (!(_taFileContent3.length < 10)) {\n              _context2.next = 290;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 884,\n              message: \"Linked TA article seems empty\",\n              details: \"\".concat(taRepoUsername, \" \").concat(_taRepoName3, \" \").concat(taRepoBranch, \" \").concat(_filepath4),\n              excerpt: _totalLink6,\n              location: ourLocation\n            });\n            _context2.next = 301;\n            break;\n\n          case 290:\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedTAArticlesCheckFlag) !== true)) {\n              _context2.next = 301;\n              break;\n            }\n\n            _context2.next = 293;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_9__[\"checkMarkdownFileContents\"])(username, _foundLanguageCode, 'TA', _filepath4, _taFileContent3, ourLocation, checkingOptions);\n\n          case 293:\n            _checkTAFileResult = _context2.sent;\n            _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_checkTAFileResult.noticeList);\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                _noticeObject = _step2.value;\n\n                // Why don’t we use addNoticePartial() here? (It adds bookID and fieldName.) Maybe it would be misleading???\n                if (_noticeObject.repoCode === undefined) {\n                  // debugLog(`checkMarkdownText 554 added rC=TA to ${JSON.stringify(noticeObject)}`);\n                  _noticeObject.repoCode = 'TA';\n                } // else if (noticeObject.repoCode !== 'TA') debugLog(`checkMarkdownText 554 DIDN'T ADD rC=TA to ${JSON.stringify(noticeObject)}`);\n\n\n                ctarResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, _noticeObject), {}, {\n                  username: taRepoUsername,\n                  repoName: _taRepoName3,\n                  filename: _filepath4,\n                  location: \" linked to\".concat(ourLocation),\n                  extra: 'TA'\n                }));\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            ctarResult.checkedFileCount += 1;\n            ctarResult.checkedFilenames.push(_filepath4);\n            ctarResult.checkedFilesizes = _taFileContent3.length;\n            ctarResult.checkedFilenameExtensions = ['md'];\n            ctarResult.checkedRepoNames.push(_taRepoName3);\n\n          case 301:\n            Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"markAsChecked\"])(_taPathParameters3); // don’t bother waiting for the result of this async call\n\n          case 302:\n            _context2.next = 246;\n            break;\n\n          case 304:\n            // Check for external TW links like [[rc://en/tw/dict/bible/other/death]] in TN or rc://en/tw/dict/bible/other/death in TWLinks\n            //  (These are not nearly as many as TA links.)\n            ourTWRegex = fieldName === 'TWLink' ? TWL_RAW_LINK_REGEX : TW_DOUBLE_BRACKETED_LINK_REGEX; // if (fieldText.indexOf('brother') !== -1) debugLog(`checkNotesLinksToOutside: ${bookID} ${givenC}:${givenV} Search for TW links with ${ourTWRegex}`)\n\n          case 305:\n            if (!(regexMatchObject = ourTWRegex.exec(fieldText))) {\n              _context2.next = 362;\n              break;\n            }\n\n            // debugLog(`  checkNotesLinksToOutside ${languageCode} ${repoCode} ${fieldName} ${givenC}:${givenV} found TW resultArray=${JSON.stringify(regexMatchObject)}`);\n            twLinkCount2 += 1;\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 4, \"TW_REGEX expected 4 fields (not \".concat(regexMatchObject.length, \")\"));\n            _regexMatchObject15 = regexMatchObject, _regexMatchObject16 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject15, 4), _totalLink7 = _regexMatchObject16[0], _foundLanguageCode2 = _regexMatchObject16[1], _category = _regexMatchObject16[2], _article5 = _regexMatchObject16[3];\n            processedLinkList.push(_totalLink7); // Save the full link\n\n            if (!_foundLanguageCode2 || _foundLanguageCode2 === '*') _foundLanguageCode2 = defaultLanguageCode;\n            _twRepoName = \"\".concat(_foundLanguageCode2, \"_tw\"); // debugLog(`Got twRepoName=${twRepoName}`);\n\n            _filename = \"\".concat(_article5.trim(), \".md\");\n            _filepath5 = \"bible/\".concat(_category, \"/\").concat(_filename); // debugLog(`Got tW filepath=${filepath}`);\n\n            if (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) {\n              _context2.next = 360;\n              break;\n            }\n\n            // if (article === 'brother') debugLog(`Need to check ${fieldName} TW link ${regexMatchObject} against ${twRepoName}`);\n            _twPathParameters = {\n              username: twRepoUsername,\n              repository: _twRepoName,\n              path: _filepath5,\n              branch: twRepoBranch\n            };\n            _context2.next = 318;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"alreadyChecked\"])(_twPathParameters);\n\n          case 318:\n            if (_context2.sent) {\n              _context2.next = 360;\n              break;\n            }\n\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedTWArticlesCheckFlag) === true)) {\n              _context2.next = 326;\n              break;\n            }\n\n            _context2.next = 322;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"isFilepathInRepoTree\"])(_twPathParameters);\n\n          case 322:\n            if (_context2.sent) {\n              _context2.next = 324;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 883,\n              message: \"Unable to find linked TW article\",\n              details: \"\".concat(twRepoUsername, \" \").concat(_twRepoName, \" \").concat(twRepoBranch, \" \").concat(_filepath5),\n              excerpt: _totalLink7,\n              location: ourLocation\n            });\n\n          case 324:\n            _context2.next = 359;\n            break;\n\n          case 326:\n            _context2.next = 328;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"alreadyChecked\"])(_twPathParameters);\n\n          case 328:\n            if (_context2.sent) {\n              _context2.next = 359;\n              break;\n            }\n\n            _twFileContent = void 0;\n            _context2.prev = 330;\n            _context2.next = 333;\n            return getFile_(_twPathParameters);\n\n          case 333:\n            _twFileContent = _context2.sent;\n            _context2.next = 340;\n            break;\n\n          case 336:\n            _context2.prev = 336;\n            _context2.t7 = _context2[\"catch\"](330);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            console.error(\"checkNotesLinksToOutside(\".concat(bookID, \", \").concat(fieldName, \", \\u2026) failed to load TW \").concat(twRepoUsername, \" \").concat(_twRepoName, \", \").concat(_filepath5, \", \").concat(twRepoBranch, \": \").concat(_context2.t7.message));\n            addNoticePartial({\n              priority: 882,\n              message: \"Error loading TW article\",\n              details: \"\".concat(twRepoUsername, \" \").concat(_twRepoName, \" \").concat(twRepoBranch, \" \").concat(_filepath5, \": \").concat(_context2.t7),\n              excerpt: _totalLink7,\n              location: ourLocation\n            });\n\n          case 340:\n            if (_twFileContent) {\n              _context2.next = 344;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 883,\n              message: \"Unable to find/load linked TW article\",\n              details: \"\".concat(twRepoUsername, \" \").concat(_twRepoName, \" \").concat(twRepoBranch, \" \").concat(_filepath5),\n              excerpt: _totalLink7,\n              location: ourLocation\n            });\n            _context2.next = 359;\n            break;\n\n          case 344:\n            if (!(_twFileContent.length < 10)) {\n              _context2.next = 348;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 881,\n              message: \"TW article seems empty\",\n              details: \"\".concat(twRepoUsername, \" \").concat(_twRepoName, \" \").concat(twRepoBranch, \" \").concat(_filepath5),\n              excerpt: _totalLink7,\n              location: ourLocation\n            });\n            _context2.next = 359;\n            break;\n\n          case 348:\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedTWArticlesCheckFlag) !== true)) {\n              _context2.next = 359;\n              break;\n            }\n\n            _context2.next = 351;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_9__[\"checkMarkdownFileContents\"])(username, _foundLanguageCode2, 'TW', \"\".concat(_filename), _twFileContent, ourLocation, checkingOptions);\n\n          case 351:\n            checkTWFileResult = _context2.sent;\n            _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkTWFileResult.noticeList);\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                _noticeObject2 = _step3.value;\n\n                // Why don’t we use addNoticePartial() here? (It adds bookID and fieldName.) Maybe it would be misleading???\n                if (_noticeObject2.repoCode === undefined) {\n                  // debugLog(`checkMarkdownText 600 added rC=TW to ${JSON.stringify(noticeObject)}`);\n                  _noticeObject2.repoCode = 'TW';\n                } // else if (noticeObject.repoCode !== 'TW') debugLog(`checkMarkdownText 600 DIDN'T ADD rC=TW to ${JSON.stringify(noticeObject)}`);\n\n\n                ctarResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, _noticeObject2), {}, {\n                  username: twRepoUsername,\n                  repoName: _twRepoName,\n                  filename: _filepath5,\n                  location: \" linked to\".concat(ourLocation),\n                  extra: 'TW'\n                }));\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n\n            ctarResult.checkedFileCount += 1;\n            ctarResult.checkedFilenames.push(_filename);\n            ctarResult.checkedFilesizes = _twFileContent.length;\n            ctarResult.checkedFilenameExtensions = ['md'];\n            ctarResult.checkedRepoNames.push(_twRepoName);\n\n          case 359:\n            Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"markAsChecked\"])(_twPathParameters); // don’t bother waiting for the result of this async call\n            // else debugLog(\"checkNotesLinksToOutside: disableLinkedTWArticlesCheckFlag is set to TRUE!\");\n\n          case 360:\n            _context2.next = 305;\n            break;\n\n          case 362:\n            // debugLog(\"checkNotesLinksToOutside: Search for Bible links\")\n            // Check for other book Bible links like [Genesis 29:23](rc://en/tn/help/gen/29/23)\n            while (regexMatchObject = BIBLE_FULL_HELP_REGEX.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside BIBLE_FULL_HELP_REGEX regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              otherBookBibleLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 9, \"BIBLE_FULL_HELP_REGEX expected 9 fields (not \".concat(regexMatchObject.length, \")\"));\n              _regexMatchObject17 = regexMatchObject, _regexMatchObject18 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject17, 9), _totalLink8 = _regexMatchObject18[0], optionalN1 = _regexMatchObject18[1], optionalB1 = _regexMatchObject18[2], C1 = _regexMatchObject18[3], V1 = _regexMatchObject18[4], Lg = _regexMatchObject18[5], B2 = _regexMatchObject18[6], C2 = _regexMatchObject18[7], V2 = _regexMatchObject18[8]; // debugLog(`Lg='${Lg}' B2='${B2}' C2='${C2}' V2='${V2}'`);\n\n              processedLinkList.push(_totalLink8); // Save the full link\n\n              if (Lg !== '*' && Lg !== languageCode) addNoticePartial({\n                priority: 669,\n                message: \"Unexpected language code in link\",\n                details: \"resource language code is '\".concat(languageCode, \"'\"),\n                excerpt: Lg,\n                location: ourLocation\n              });\n\n              if (optionalN1) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(optionalB1, \"Should have book name as well as number '\".concat(optionalN1, \"' in '\").concat(_totalLink8, \"'\"));\n              }\n\n              if (optionalB1) {\n                optionalB1 = \"\".concat(optionalN1).concat(optionalB1).trim(); // e.g., 1 Timothy\n\n                if (defaultLanguageCode === 'en') {\n                  // should be able to check the book name\n                  checkResult = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"isGoodEnglishBookName\"](optionalB1); // debugLog(optionalB1, \"isGoodEnglishBookName checkResult\", checkResult);\n\n                  if (checkResult === undefined || checkResult === false) addNoticePartial(optionalB1 === 'Song of Solomon' ? {\n                    priority: 43,\n                    message: \"Unexpected Bible book name in TN RC link\",\n                    details: \"expected 'Song of Songs' in \".concat(_totalLink8),\n                    excerpt: optionalB1,\n                    location: ourLocation\n                  } : {\n                    priority: 143,\n                    message: \"Unknown Bible book name in TN RC link\",\n                    details: _totalLink8,\n                    excerpt: optionalB1,\n                    location: ourLocation\n                  });\n                }\n              }\n\n              linkBookCode = B2 === '..' ? bookID : B2;\n              linkChapterInt = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(C2), linkVerseInt = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(V2);\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(C1) !== linkChapterInt) addNoticePartial({\n                  priority: 743,\n                  message: \"Chapter numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(C1, \" vs \").concat(linkChapterInt),\n                  excerpt: _totalLink8,\n                  location: ourLocation\n                });\n              } catch (ccError) {\n                console.error(\"TN Link CheckA couldn\\u2019t compare chapter numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(C1, \" from '\").concat(fieldText, \"': \").concat(ccError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(V1) !== linkVerseInt) addNoticePartial({\n                  priority: 742,\n                  message: \"Verse numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(V1, \" vs \").concat(linkVerseInt),\n                  excerpt: _totalLink8,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link CheckA couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(C1, \":\").concat(V1, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (linkBookCode === 'obs') {\n                numStories = 50, numFramesThisStory = 99;\n                if (!linkChapterInt || linkChapterInt < 1 || linkChapterInt > numStories) addNoticePartial({\n                  priority: 655,\n                  message: \"Bad story number in markdown OBS help link\",\n                  details: \"\".concat(linkBookCode, \" \").concat(linkChapterInt, \" vs \").concat(numStories, \" chapters\"),\n                  excerpt: _totalLink8,\n                  location: ourLocation\n                });else if (!linkVerseInt || linkVerseInt < 0 || linkVerseInt > numFramesThisStory) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad frame number in markdown OBS help link\",\n                  details: \"\".concat(linkBookCode, \" \").concat(linkChapterInt, \":\").concat(linkVerseInt, \" vs \").concat(numFramesThisStory, \" verses\"),\n                  excerpt: _totalLink8,\n                  location: ourLocation\n                });\n              } else if (linkBookCode.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                numChaptersThisBook = void 0, numVersesThisChapter = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(linkBookCode.toLowerCase() !== 'obs', \"BIBLE_FULL_HELP_REGEX linkBookCode shouldn\\u2019t be '\".concat(linkBookCode, \"' in notes-links-check\"));\n\n                try {\n                  numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](linkBookCode);\n                } catch (tlcNCerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"checkNotesLinksToOutside1 with linkBookCode '\".concat(linkBookCode, \"' got error: \").concat(tlcNCerror));\n                  numChaptersThisBook = 0;\n                }\n\n                try {\n                  numVersesThisChapter = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](linkBookCode, linkChapterInt);\n                } catch (tlcNVerror) {}\n\n                if (!linkChapterInt || linkChapterInt < 1 || linkChapterInt > numChaptersThisBook) addNoticePartial({\n                  priority: 655,\n                  message: \"Bad chapter number in markdown Bible help link\",\n                  details: \"\".concat(linkBookCode, \" \").concat(linkChapterInt, \" vs \").concat(numChaptersThisBook, \" chapters\"),\n                  excerpt: _totalLink8,\n                  location: ourLocation\n                });else if (!linkVerseInt || linkVerseInt < 0 || linkVerseInt > numVersesThisChapter) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad verse number in markdown Bible help link\",\n                  details: \"\".concat(linkBookCode, \" \").concat(linkChapterInt, \":\").concat(linkVerseInt, \" vs \").concat(numVersesThisChapter, \" verses\"),\n                  excerpt: _totalLink8,\n                  location: ourLocation\n                });\n              } else Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"Seems BIBLE_FULL_HELP_REGEX '\".concat(_totalLink8, \"' didn\\u2019t have a link book code!\"));\n            } // Check for this-chapter Bible links like [Revelation 3:11](./11.md)\n\n\n            while (regexMatchObject = BIBLE_REGEX_THIS_CHAPTER_RELATIVE.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside BIBLE_REGEX_THIS_CHAPTER_RELATIVE regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              thisChapterBibleLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 6, \"BIBLE_REGEX_THIS_CHAPTER_RELATIVE expected 6 fields (not \".concat(regexMatchObject.length, \")\"));\n              _regexMatchObject19 = regexMatchObject, _regexMatchObject20 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject19, 6), _totalLink9 = _regexMatchObject20[0], _optionalN = _regexMatchObject20[1], _optionalB = _regexMatchObject20[2], _C = _regexMatchObject20[3], _V = _regexMatchObject20[4], _V2 = _regexMatchObject20[5];\n              processedLinkList.push(_totalLink9); // Save the full link\n\n              if (_optionalN) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_optionalB, \"Should have book name as well as number '\".concat(_optionalN, \"'\"));\n              }\n\n              if (_optionalB) {\n                _optionalB = \"\".concat(_optionalN).concat(_optionalB).trim(); // e.g., 1 Timothy\n\n                if (defaultLanguageCode === 'en') {\n                  // should be able to check the book name\n                  _checkResult = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"isGoodEnglishBookName\"](_optionalB); // debugLog(optionalB1, \"isGoodEnglishBookName checkResult\", checkResult);\n\n                  if (_checkResult === undefined || _checkResult === false) addNoticePartial(_optionalB === 'Song of Solomon' ? {\n                    priority: 43,\n                    message: \"Unexpected Bible book name in Bible link\",\n                    details: \"expected 'Song of Songs' in \".concat(_totalLink9),\n                    excerpt: _optionalB,\n                    location: ourLocation\n                  } : {\n                    priority: 143,\n                    message: \"Unknown Bible book name in Bible link\",\n                    details: _totalLink9,\n                    excerpt: _optionalB,\n                    location: ourLocation\n                  });\n                }\n              }\n\n              _linkBookCode = bookID;\n              _linkVerseInt = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V2);\n\n              if (_C === undefined) {\n                if (_linkBookCode.length === 0 || !_books_books__WEBPACK_IMPORTED_MODULE_5__[\"isOneChapterBook\"](_linkBookCode)) {\n                  // debugLog(`  checkNotesLinksToOutside C1 missing in BIBLE_REGEX_THIS_CHAPTER_RELATIVE regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n                  addNoticePartial({\n                    priority: 555,\n                    message: \"Possible missing chapter number in markdown Bible link\",\n                    excerpt: _totalLink9,\n                    location: ourLocation\n                  });\n                }\n\n                _C = '0'; // Try to avoid consequential errors\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C) !== givenCint) addNoticePartial({\n                  priority: 743,\n                  message: \"Chapter numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_C, \" vs \").concat(givenCint),\n                  excerpt: _totalLink9,\n                  location: ourLocation\n                });\n              } catch (ccError) {\n                console.error(\"TN Link Check1 couldn\\u2019t compare chapter numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C, \" from '\").concat(fieldText, \"': \").concat(ccError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V) !== _linkVerseInt) addNoticePartial({\n                  priority: 742,\n                  message: \"Verse numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_V, \" vs \").concat(_linkVerseInt),\n                  excerpt: _totalLink9,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check1 couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C, \":\").concat(_V, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (_linkBookCode.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                _numChaptersThisBook = void 0, _numVersesThisChapter = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_linkBookCode.toLowerCase() !== 'obs', \"BIBLE_REGEX_THIS_CHAPTER_RELATIVE linkBookCode shouldn\\u2019t be '\".concat(_linkBookCode, \"' in notes-links-check\"));\n\n                try {\n                  _numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](_linkBookCode);\n                } catch (tlcNCerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"checkNotesLinksToOutside2 with linkBookCode '\".concat(_linkBookCode, \"' got error: \").concat(tlcNCerror));\n                  _numChaptersThisBook = 0;\n                }\n\n                try {\n                  _numVersesThisChapter = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](_linkBookCode, givenCint);\n                } catch (tlcNVerror) {}\n\n                if (!givenCint || givenCint < 1 || givenCint > _numChaptersThisBook) addNoticePartial({\n                  priority: 655,\n                  message: \"Bad chapter number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode, \" \").concat(givenCint, \" vs \").concat(_numChaptersThisBook, \" chapters\"),\n                  excerpt: _totalLink9,\n                  location: ourLocation\n                });else if (!_linkVerseInt || _linkVerseInt < 0 || _linkVerseInt > _numVersesThisChapter) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad verse number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode, \" \").concat(givenCint, \":\").concat(_linkVerseInt, \" vs \").concat(_numVersesThisChapter, \" verses\"),\n                  excerpt: _totalLink9,\n                  location: ourLocation\n                });\n              }\n            } // Check for this-verse Bible links like [11](../03/11.md)\n\n\n            while (regexMatchObject = THIS_VERSE_TO_THIS_CHAPTER_BIBLE_REGEX.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside THIS_VERSE_TO_THIS_CHAPTER_BIBLE_REGEX regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              thisVerseBibleLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 4, \"THIS_VERSE_TO_THIS_CHAPTER_BIBLE_REGEX expected 4 fields (not \".concat(regexMatchObject.length, \")\"));\n              _regexMatchObject21 = regexMatchObject, _regexMatchObject22 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject21, 4), _totalLink10 = _regexMatchObject22[0], _V3 = _regexMatchObject22[1], _C2 = _regexMatchObject22[2], _V4 = _regexMatchObject22[3];\n              processedLinkList.push(_totalLink10); // Save the full link\n\n              _linkBookCode2 = bookID;\n              _linkChapterInt = void 0, _linkVerseInt2 = void 0;\n\n              try {\n                _linkChapterInt = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C2);\n                _linkVerseInt2 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V4);\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V3) !== _linkVerseInt2) addNoticePartial({\n                  priority: 742,\n                  message: \"Verse numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_V3, \" vs \").concat(_V4),\n                  excerpt: _totalLink10,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check1b couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" \").concat(_V3, \" with \").concat(_C2, \":\").concat(_V4, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (_linkBookCode2.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                _numChaptersThisBook2 = void 0, _numVersesThisChapter2 = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_linkBookCode2.toLowerCase() !== 'obs', \"THIS_VERSE_TO_THIS_CHAPTER_BIBLE_REGEX linkBookCode shouldn\\u2019t be '\".concat(_linkBookCode2, \"' in notes-links-check\"));\n\n                try {\n                  _numChaptersThisBook2 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](_linkBookCode2);\n                } catch (tlcNCerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"checkNotesLinksToOutside3 with linkBookCode '\".concat(_linkBookCode2, \"' got error: \").concat(tlcNCerror));\n                  _numChaptersThisBook2 = 0;\n                }\n\n                try {\n                  _numVersesThisChapter2 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](_linkBookCode2, _linkChapterInt);\n                } catch (tlcNVerror) {}\n\n                if (!_linkChapterInt || _linkChapterInt < 1 || _linkChapterInt > _numChaptersThisBook2) addNoticePartial({\n                  priority: 655,\n                  message: \"Bad chapter number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode2, \" \").concat(_linkChapterInt, \" vs \").concat(_numChaptersThisBook2, \" chapters\"),\n                  excerpt: _totalLink10,\n                  location: ourLocation\n                });else if (!_linkVerseInt2 || _linkVerseInt2 < 0 || _linkVerseInt2 > _numVersesThisChapter2) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad verse number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode2, \" \").concat(_linkChapterInt, \":\").concat(_linkVerseInt2, \" vs \").concat(_numVersesThisChapter2, \" verses\"),\n                  excerpt: _totalLink10,\n                  location: ourLocation\n                });\n              }\n            } // Check for this-verse Bible links like [11](../03/11.md)\n\n\n            while (regexMatchObject = THIS_VERSE_RANGE_TO_THIS_CHAPTER_BIBLE_REGEX.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside THIS_VERSE_RANGE_TO_THIS_CHAPTER_BIBLE_REGEX regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              thisVerseBibleLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 5, \"THIS_VERSE_RANGE_TO_THIS_CHAPTER_BIBLE_REGEX expected 5 fields (not \".concat(regexMatchObject.length, \")\"));\n              _regexMatchObject23 = regexMatchObject, _regexMatchObject24 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject23, 5), _totalLink11 = _regexMatchObject24[0], V1a = _regexMatchObject24[1], V1b = _regexMatchObject24[2], _C3 = _regexMatchObject24[3], _V5 = _regexMatchObject24[4];\n              processedLinkList.push(_totalLink11); // Save the full link\n\n              _linkBookCode3 = bookID;\n              verseInt1a = void 0, verseInt1b = void 0, _linkChapterInt2 = void 0, _linkVerseInt3 = void 0;\n\n              try {\n                verseInt1a = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(V1a);\n                verseInt1b = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(V1b);\n                _linkChapterInt2 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C3);\n                _linkVerseInt3 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V5);\n                if (verseInt1a !== _linkVerseInt3) addNoticePartial({\n                  priority: 742,\n                  message: \"Verse numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(V1a, \" vs \").concat(_V5),\n                  excerpt: _totalLink11,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check1c couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" \").concat(V1a, \" with \").concat(_C3, \":\").concat(_V5, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (verseInt1b <= verseInt1a) addNoticePartial({\n                priority: 741,\n                message: \"Verse numbers of markdown Bible link range out of order\",\n                details: \"\".concat(V1a, \" to \").concat(V1b),\n                excerpt: _totalLink11,\n                location: ourLocation\n              });\n\n              if (_linkBookCode3.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                _numChaptersThisBook3 = void 0, _numVersesThisChapter3 = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_linkBookCode3.toLowerCase() !== 'obs', \"THIS_VERSE_RANGE_TO_THIS_CHAPTER_BIBLE_REGEX linkBookCode shouldn\\u2019t be '\".concat(_linkBookCode3, \"' in notes-links-check\"));\n\n                try {\n                  _numChaptersThisBook3 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](_linkBookCode3);\n                } catch (tlcNCerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"checkNotesLinksToOutside4 with linkBookCode '\".concat(_linkBookCode3, \"' got error: \").concat(tlcNCerror));\n                  _numChaptersThisBook3 = 0;\n                }\n\n                try {\n                  _numVersesThisChapter3 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](_linkBookCode3, _linkChapterInt2);\n                } catch (tlcNVerror) {}\n\n                if (!_linkChapterInt2 || _linkChapterInt2 < 1 || _linkChapterInt2 > _numChaptersThisBook3) addNoticePartial({\n                  priority: 655,\n                  message: \"Bad chapter number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode3, \" \").concat(_linkChapterInt2, \" vs \").concat(_numChaptersThisBook3, \" chapters\"),\n                  excerpt: _totalLink11,\n                  location: ourLocation\n                });else if (!_linkVerseInt3 || _linkVerseInt3 < 0 || _linkVerseInt3 > _numVersesThisChapter3) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad verse number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode3, \" \").concat(_linkChapterInt2, \":\").concat(_linkVerseInt3, \" vs \").concat(_numVersesThisChapter3, \" verses\"),\n                  excerpt: _totalLink11,\n                  location: ourLocation\n                });\n              }\n            } // Check for this-book Bible links like [Revelation 3:11](../03/11.md)\n\n\n            while (regexMatchObject = BIBLE_REGEX_THIS_BOOK_RELATIVE.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside BIBLE_REGEX_THIS_BOOK_RELATIVE regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              thisBookBibleLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 7, \"BIBLE_REGEX_THIS_BOOK_RELATIVE expected 7 fields (not \".concat(regexMatchObject.length, \")\"));\n              _regexMatchObject25 = regexMatchObject, _regexMatchObject26 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject25, 7), _totalLink12 = _regexMatchObject26[0], _optionalN2 = _regexMatchObject26[1], _optionalB2 = _regexMatchObject26[2], _C4 = _regexMatchObject26[3], _V6 = _regexMatchObject26[4], _C5 = _regexMatchObject26[5], _V7 = _regexMatchObject26[6];\n              processedLinkList.push(_totalLink12); // Save the full link\n\n              if (_optionalN2) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_optionalB2, \"Should have book name as well as number '\".concat(_optionalN2, \"'\"));\n              }\n\n              if (_optionalB2) {\n                _optionalB2 = \"\".concat(_optionalN2).concat(_optionalB2).trim(); // e.g., 1 Timothy\n\n                if (defaultLanguageCode === 'en') {\n                  // should be able to check the book name\n                  _checkResult2 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"isGoodEnglishBookName\"](_optionalB2); // debugLog(optionalB1, \"isGoodEnglishBookName checkResult\", checkResult);\n\n                  if (_checkResult2 === undefined || _checkResult2 === false) addNoticePartial(_optionalB2 === 'Song of Solomon' ? {\n                    priority: 43,\n                    message: \"Unexpected Bible book name in relative Bible link\",\n                    details: \"expected 'Song of Songs' in \".concat(_totalLink12),\n                    excerpt: _optionalB2,\n                    location: ourLocation\n                  } : {\n                    priority: 143,\n                    message: \"Unknown Bible book name in relative Bible link\",\n                    details: _totalLink12,\n                    excerpt: _optionalB2,\n                    location: ourLocation\n                  });\n                }\n              }\n\n              _linkBookCode4 = bookID;\n              _linkChapterInt3 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C5), _linkVerseInt4 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V7);\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C4) !== _linkChapterInt3) addNoticePartial({\n                  priority: 743,\n                  message: \"Chapter numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_C4, \" vs \").concat(_linkChapterInt3),\n                  excerpt: _totalLink12,\n                  location: ourLocation\n                });\n              } catch (ccError) {\n                console.error(\"TN Link Check2 couldn\\u2019t compare chapter numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C5, \" from '\").concat(fieldText, \"': \").concat(ccError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V6) !== _linkVerseInt4) addNoticePartial({\n                  priority: 742,\n                  message: \"Verse numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_V6, \" vs \").concat(_linkVerseInt4),\n                  excerpt: _totalLink12,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check2 couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C5, \":\").concat(_V7, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (_linkBookCode4.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                _numChaptersThisBook4 = void 0, _numVersesThisChapter4 = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_linkBookCode4.toLowerCase() !== 'obs', \"BIBLE_REGEX_THIS_BOOK_RELATIVE linkBookCode shouldn\\u2019t be '\".concat(_linkBookCode4, \"' in notes-links-check\"));\n\n                try {\n                  _numChaptersThisBook4 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](_linkBookCode4);\n                } catch (tlcNCerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"checkNotesLinksToOutside5 with linkBookCode '\".concat(_linkBookCode4, \"' got error: \").concat(tlcNCerror));\n                  _numChaptersThisBook4 = 0;\n                }\n\n                try {\n                  _numVersesThisChapter4 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](_linkBookCode4, _linkChapterInt3);\n                } catch (tlcNVerror) {}\n\n                if (!_linkChapterInt3 || _linkChapterInt3 < 1 || _linkChapterInt3 > _numChaptersThisBook4) addNoticePartial({\n                  priority: 655,\n                  message: \"Bad chapter number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode4, \" \").concat(_linkChapterInt3, \" vs \").concat(_numChaptersThisBook4, \" chapters\"),\n                  excerpt: _totalLink12,\n                  location: ourLocation\n                });else if (!_linkVerseInt4 || _linkVerseInt4 < 0 || _linkVerseInt4 > _numVersesThisChapter4) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad verse number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode4, \" \").concat(_linkChapterInt3, \":\").concat(_linkVerseInt4, \" vs \").concat(_numVersesThisChapter4, \" verses\"),\n                  excerpt: _totalLink12,\n                  location: ourLocation\n                });\n              }\n            } // Check for other-book Bible links like [Revelation 3:11-12](../rev/03/11.md)\n\n\n            while (regexMatchObject = BCV_V_TO_OTHER_BOOK_BIBLE_REGEX.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside BCV_V_TO_OTHER_BOOK_BIBLE_REGEX regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              thisBookBibleLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 9, \"BCV_V_TO_OTHER_BOOK_BIBLE_REGEX expected 9 fields (not \".concat(regexMatchObject.length, \")\"));\n              _regexMatchObject27 = regexMatchObject, _regexMatchObject28 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject27, 9), _totalLink13 = _regexMatchObject28[0], _optionalN3 = _regexMatchObject28[1], B1 = _regexMatchObject28[2], _C6 = _regexMatchObject28[3], _V1a = _regexMatchObject28[4], _V1b = _regexMatchObject28[5], _B = _regexMatchObject28[6], _C7 = _regexMatchObject28[7], _V8 = _regexMatchObject28[8];\n              processedLinkList.push(_totalLink13); // Save the full link\n\n              if (_optionalN3) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(B1.length, \"Should have book name as well as number '\".concat(_optionalN3, \"'\"));\n              }\n\n              B1 = \"\".concat(_optionalN3).concat(B1).trim(); // e.g., 1 Timothy\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"dataAssert\"])(B1.length, \"BCV_V_TO_OTHER_BOOK_BIBLE_REGEX should have B1 with '\".concat(_totalLink13, \"'\"));\n\n              if (defaultLanguageCode === 'en') {\n                // should be able to check the book name\n                _checkResult3 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"isGoodEnglishBookName\"](B1); // debugLog(optionalB1, \"isGoodEnglishBookName checkResult\", checkResult);\n\n                if (_checkResult3 === undefined || _checkResult3 === false) addNoticePartial(B1 === 'Song of Solomon' ? {\n                  priority: 43,\n                  message: \"Unexpected Bible book name in Bible link\",\n                  details: \"expected 'Song of Songs' in \".concat(_totalLink13),\n                  excerpt: B1,\n                  location: ourLocation\n                } : {\n                  priority: 143,\n                  message: \"Unknown Bible book name in Bible link\",\n                  details: _totalLink13,\n                  excerpt: B1,\n                  location: ourLocation\n                });\n              }\n\n              _linkBookCode5 = _B === '..' ? bookID : _B;\n              _linkChapterInt4 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C7), _linkVerseInt5 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V8);\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C6) !== _linkChapterInt4) addNoticePartial({\n                  priority: 743,\n                  message: \"Chapter numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_C6, \" vs \").concat(_linkChapterInt4),\n                  excerpt: _totalLink13,\n                  location: ourLocation\n                });\n              } catch (ccError) {\n                console.error(\"TN Link Check2b couldn\\u2019t compare chapter numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C7, \" from '\").concat(fieldText, \"': \").concat(ccError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V1a) !== _linkVerseInt5) addNoticePartial({\n                  priority: 742,\n                  message: \"Verse numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_V1a, \" vs \").concat(_linkVerseInt5),\n                  excerpt: _totalLink13,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check2b couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C7, \":\").concat(_V8, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V1b) <= Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V1a)) addNoticePartial({\n                  priority: 741,\n                  message: \"Verse numbers of markdown Bible link range out of order\",\n                  details: \"\".concat(_V1a, \" to \").concat(_V1b),\n                  excerpt: _totalLink13,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check2c couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C7, \":\").concat(_V8, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (_linkBookCode5.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                _numChaptersThisBook5 = void 0, _numVersesThisChapter5 = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_linkBookCode5.toLowerCase() !== 'obs', \"BCV_V_TO_OTHER_BOOK_BIBLE_REGEX linkBookCode shouldn\\u2019t be '\".concat(_linkBookCode5, \"' in notes-links-check\"));\n\n                try {\n                  _numChaptersThisBook5 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](_linkBookCode5);\n                } catch (tlcNCerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"checkNotesLinksToOutside6 with linkBookCode '\".concat(_linkBookCode5, \"' got error: \").concat(tlcNCerror));\n                  _numChaptersThisBook5 = 0;\n                }\n\n                try {\n                  _numVersesThisChapter5 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](_linkBookCode5, _linkChapterInt4);\n                } catch (tlcNVerror) {}\n\n                if (!_linkChapterInt4 || _linkChapterInt4 < 1 || _linkChapterInt4 > _numChaptersThisBook5) addNoticePartial({\n                  priority: 655,\n                  message: \"Bad chapter number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode5, \" \").concat(_linkChapterInt4, \" vs \").concat(_numChaptersThisBook5, \" chapters\"),\n                  excerpt: _totalLink13,\n                  location: ourLocation\n                });else if (!_linkVerseInt5 || _linkVerseInt5 < 0 || _linkVerseInt5 > _numVersesThisChapter5) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad verse number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode5, \" \").concat(_linkChapterInt4, \":\").concat(_linkVerseInt5, \" vs \").concat(_numVersesThisChapter5, \" verses\"),\n                  excerpt: _totalLink13,\n                  location: ourLocation\n                });\n              }\n            } // Check for this-book Bible links like [Revelation 3:11-12](../03/11.md)\n\n\n            while (regexMatchObject = BCV_V_TO_THIS_BOOK_BIBLE_REGEX.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside BCV_V_TO_THIS_BOOK_BIBLE_REGEX regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              thisBookBibleLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 9, \"BCV_V_TO_THIS_BOOK_BIBLE_REGEX expected 9 fields (not \".concat(regexMatchObject.length, \")\"));\n              _regexMatchObject29 = regexMatchObject, _regexMatchObject30 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject29, 9), _totalLink14 = _regexMatchObject30[0], _optionalN4 = _regexMatchObject30[1], _optionalB3 = _regexMatchObject30[2], _C8 = _regexMatchObject30[3], _V1a2 = _regexMatchObject30[4], _V1b2 = _regexMatchObject30[5], _B2 = _regexMatchObject30[6], _C9 = _regexMatchObject30[7], _V9 = _regexMatchObject30[8];\n              processedLinkList.push(_totalLink14); // Save the full link\n\n              if (_optionalN4) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_optionalB3, \"Should have book name as well as number '\".concat(_optionalN4, \"'\"));\n              }\n\n              if (_optionalB3) {\n                _optionalB3 = \"\".concat(_optionalN4).concat(_optionalB3).trim(); // e.g., 1 Timothy\n\n                if (defaultLanguageCode === 'en') {\n                  // should be able to check the book name\n                  _checkResult4 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"isGoodEnglishBookName\"](_optionalB3); // debugLog(optionalB1, \"isGoodEnglishBookName checkResult\", checkResult);\n\n                  if (_checkResult4 === undefined || _checkResult4 === false) addNoticePartial(_optionalB3 === 'Song of Solomon' ? {\n                    priority: 43,\n                    message: \"Unexpected Bible book name in Bible link\",\n                    details: \"expected 'Song of Songs' in \".concat(_totalLink14),\n                    excerpt: _optionalB3,\n                    location: ourLocation\n                  } : {\n                    priority: 143,\n                    message: \"Unknown Bible book name in Bible link\",\n                    details: _totalLink14,\n                    excerpt: _optionalB3,\n                    location: ourLocation\n                  });\n                }\n              }\n\n              _linkBookCode6 = _B2 === '..' ? bookID : _B2;\n              _linkChapterInt5 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C9), _linkVerseInt6 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V9);\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C8) !== _linkChapterInt5) addNoticePartial({\n                  priority: 743,\n                  message: \"Chapter numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_C8, \" vs \").concat(_linkChapterInt5),\n                  excerpt: _totalLink14,\n                  location: ourLocation\n                });\n              } catch (ccError) {\n                console.error(\"TN Link Check2b couldn\\u2019t compare chapter numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C9, \" from '\").concat(fieldText, \"': \").concat(ccError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V1a2) !== _linkVerseInt6) addNoticePartial({\n                  priority: 742,\n                  message: \"Verse numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_V1a2, \" vs \").concat(_linkVerseInt6),\n                  excerpt: _totalLink14,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check2b couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C9, \":\").concat(_V9, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V1b2) <= Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V1a2)) addNoticePartial({\n                  priority: 741,\n                  message: \"Verse numbers of markdown Bible link range out of order\",\n                  details: \"\".concat(_V1a2, \" to \").concat(_V1b2),\n                  excerpt: _totalLink14,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check2c couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C9, \":\").concat(_V9, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (_linkBookCode6.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                _numChaptersThisBook6 = void 0, _numVersesThisChapter6 = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_linkBookCode6.toLowerCase() !== 'obs', \"BCV_V_TO_THIS_BOOK_BIBLE_REGEX linkBookCode shouldn\\u2019t be '\".concat(_linkBookCode6, \"' in notes-links-check\"));\n\n                try {\n                  _numChaptersThisBook6 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](_linkBookCode6);\n                } catch (tlcNCerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"checkNotesLinksToOutside6 with linkBookCode '\".concat(_linkBookCode6, \"' got error: \").concat(tlcNCerror));\n                  _numChaptersThisBook6 = 0;\n                }\n\n                try {\n                  _numVersesThisChapter6 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](_linkBookCode6, _linkChapterInt5);\n                } catch (tlcNVerror) {}\n\n                if (!_linkChapterInt5 || _linkChapterInt5 < 1 || _linkChapterInt5 > _numChaptersThisBook6) addNoticePartial({\n                  priority: 655,\n                  message: \"Bad chapter number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode6, \" \").concat(_linkChapterInt5, \" vs \").concat(_numChaptersThisBook6, \" chapters\"),\n                  excerpt: _totalLink14,\n                  location: ourLocation\n                });else if (!_linkVerseInt6 || _linkVerseInt6 < 0 || _linkVerseInt6 > _numVersesThisChapter6) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad verse number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode6, \" \").concat(_linkChapterInt5, \":\").concat(_linkVerseInt6, \" vs \").concat(_numVersesThisChapter6, \" verses\"),\n                  excerpt: _totalLink14,\n                  location: ourLocation\n                });\n              }\n            } // Check for this-book Bible links like [Revelation 3:11-12](../03/11.md)\n\n\n            while (regexMatchObject = BCV_V_TO_THIS_CHAPTER_BIBLE_REGEX.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside BCV_V_TO_THIS_CHAPTER_BIBLE_REGEX regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              thisChapterBibleLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 7, \"BCV_V_TO_THIS_CHAPTER_BIBLE_REGEX expected 7 fields (not \".concat(regexMatchObject.length, \")\"));\n              _regexMatchObject31 = regexMatchObject, _regexMatchObject32 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject31, 7), _totalLink15 = _regexMatchObject32[0], _optionalN5 = _regexMatchObject32[1], _optionalB4 = _regexMatchObject32[2], _C10 = _regexMatchObject32[3], _V1a3 = _regexMatchObject32[4], _V1b3 = _regexMatchObject32[5], _V10 = _regexMatchObject32[6];\n              processedLinkList.push(_totalLink15); // Save the full link\n\n              if (_optionalN5) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_optionalB4, \"Should have book name as well as number '\".concat(_optionalN5, \"'\"));\n              }\n\n              if (_optionalB4) {\n                _optionalB4 = \"\".concat(_optionalN5).concat(_optionalB4).trim(); // e.g., 1 Timothy\n\n                if (defaultLanguageCode === 'en') {\n                  // should be able to check the book name\n                  _checkResult5 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"isGoodEnglishBookName\"](_optionalB4); // debugLog(optionalB1, \"isGoodEnglishBookName checkResult\", checkResult);\n\n                  if (_checkResult5 === undefined || _checkResult5 === false) addNoticePartial(_optionalB4 === 'Song of Solomon' ? {\n                    priority: 43,\n                    message: \"Unexpected Bible book name in Bible link\",\n                    details: \"expected 'Song of Songs' in \".concat(_totalLink15),\n                    excerpt: _optionalB4,\n                    location: ourLocation\n                  } : {\n                    priority: 143,\n                    message: \"Unknown Bible book name in Bible link\",\n                    details: _totalLink15,\n                    excerpt: _optionalB4,\n                    location: ourLocation\n                  });\n                }\n              }\n\n              _linkBookCode7 = bookID;\n              _linkVerseInt7 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V10);\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V1a3) !== _linkVerseInt7) addNoticePartial({\n                  priority: 742,\n                  message: \"Verse numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_V1a3, \" vs \").concat(_linkVerseInt7),\n                  excerpt: _totalLink15,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check2d couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C10, \":\").concat(_V10, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V1b3) <= Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V1a3)) addNoticePartial({\n                  priority: 741,\n                  message: \"Verse numbers of markdown Bible link range out of order\",\n                  details: \"\".concat(_V1a3, \" to \").concat(_V1b3),\n                  excerpt: _totalLink15,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check2e couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C10, \":\").concat(_V10, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (_linkBookCode7.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                _numVersesThisChapter7 = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_linkBookCode7.toLowerCase() !== 'obs', \"BCV_V_TO_THIS_CHAPTER_BIBLE_REGEX linkBookCode shouldn\\u2019t be '\".concat(_linkBookCode7, \"' in notes-links-check\")); // try {\n                //     numChaptersThisBook = books.chaptersInBook(linkBookCode);\n                // } catch (tlcNCerror) { }\n\n                try {\n                  _numVersesThisChapter7 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](_linkBookCode7, givenC);\n                } catch (tlcNVerror) {}\n\n                if (!_linkVerseInt7 || _linkVerseInt7 < 0 || _linkVerseInt7 > _numVersesThisChapter7) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad verse number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode7, \" \").concat(givenC, \":\").concat(_linkVerseInt7, \" vs \").concat(_numVersesThisChapter7, \" verses\"),\n                  excerpt: _totalLink15,\n                  location: ourLocation\n                });\n              }\n            } // Check for other book Bible links like [Revelation 3:11](rev/03/11.md)\n\n\n            while (regexMatchObject = BIBLE_REGEX_OTHER_BOOK_ABSOLUTE.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside BIBLE_REGEX_OTHER_BOOK_ABSOLUTE regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              otherBookBibleLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 8, \"BIBLE_REGEX_OTHER_BOOK_ABSOLUTE expected 8 fields (not \".concat(regexMatchObject.length, \")\"));\n              _regexMatchObject33 = regexMatchObject, _regexMatchObject34 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject33, 8), _totalLink16 = _regexMatchObject34[0], _optionalN6 = _regexMatchObject34[1], _B3 = _regexMatchObject34[2], _C11 = _regexMatchObject34[3], _V11 = _regexMatchObject34[4], _B4 = _regexMatchObject34[5], _C12 = _regexMatchObject34[6], _V12 = _regexMatchObject34[7];\n              processedLinkList.push(_totalLink16); // Save the full link\n\n              if (_optionalN6) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_B3.length, \"Should have book name as well as number '\".concat(_optionalN6, \"'\"));\n              }\n\n              _B3 = \"\".concat(_optionalN6).concat(_B3).trim(); // e.g., 1 Timothy\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"dataAssert\"])(_B3.length, \"BIBLE_REGEX_OTHER_BOOK_ABSOLUTE should have B1 with '\".concat(_totalLink16, \"'\"));\n\n              if (defaultLanguageCode === 'en') {\n                // should be able to check the book name\n                _checkResult6 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"isGoodEnglishBookName\"](_B3); // debugLog(optionalB1, \"isGoodEnglishBookName checkResult\", checkResult);\n\n                if (_checkResult6 === undefined || _checkResult6 === false) addNoticePartial(_B3 === 'Song of Solomon' ? {\n                  priority: 43,\n                  message: \"Unexpected Bible book name in Bible link\",\n                  details: \"expected 'Song of Songs' in \".concat(_totalLink16),\n                  excerpt: _B3,\n                  location: ourLocation\n                } : {\n                  priority: 143,\n                  message: \"Unknown Bible book name in Bible link\",\n                  details: _totalLink16,\n                  excerpt: _B3,\n                  location: ourLocation\n                });\n              }\n\n              _linkBookCode8 = _B4 === '..' ? bookID : _B4;\n              _linkChapterInt6 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C12), _linkVerseInt8 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V12);\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C11) !== _linkChapterInt6) addNoticePartial({\n                  priority: 743,\n                  message: \"Chapter numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_C11, \" vs \").concat(_linkChapterInt6),\n                  excerpt: _totalLink16,\n                  location: ourLocation\n                });\n              } catch (ccError) {\n                console.error(\"TN Link Check3 couldn\\u2019t compare chapter numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C11, \" from '\").concat(fieldText, \"': \").concat(ccError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V11) !== _linkVerseInt8) addNoticePartial({\n                  priority: 742,\n                  message: \"Verse numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_V11, \" vs \").concat(_linkVerseInt8),\n                  excerpt: _totalLink16,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check3 couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C11, \":\").concat(_V11, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (_linkBookCode8.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                _numChaptersThisBook7 = void 0, _numVersesThisChapter8 = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_linkBookCode8.toLowerCase() !== 'obs', \"BIBLE_REGEX_OTHER_BOOK_ABSOLUTE linkBookCode shouldn\\u2019t be '\".concat(_linkBookCode8, \"' in notes-links-check\"));\n\n                try {\n                  _numChaptersThisBook7 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](_linkBookCode8);\n                } catch (tlcNCerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"checkNotesLinksToOutside8 with linkBookCode '\".concat(_linkBookCode8, \"' got error: \").concat(tlcNCerror));\n                  _numChaptersThisBook7 = 0;\n                }\n\n                try {\n                  _numVersesThisChapter8 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](_linkBookCode8, _linkChapterInt6);\n                } catch (tlcNVerror) {}\n\n                if (!_linkChapterInt6 || _linkChapterInt6 < 1 || _linkChapterInt6 > _numChaptersThisBook7) addNoticePartial({\n                  priority: 655,\n                  message: \"Bad chapter number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode8, \" \").concat(_linkChapterInt6, \" vs \").concat(_numChaptersThisBook7, \" chapters\"),\n                  excerpt: _totalLink16,\n                  location: ourLocation\n                });else if (!_linkVerseInt8 || _linkVerseInt8 < 0 || _linkVerseInt8 > _numVersesThisChapter8) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad verse number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode8, \" \").concat(_linkChapterInt6, \":\").concat(_linkVerseInt8, \" vs \").concat(_numVersesThisChapter8, \" verses\"),\n                  excerpt: _totalLink16,\n                  location: ourLocation\n                });\n              }\n            } // Check for other book Bible links like [Revelation 3:11](../../rev/03/11.md)\n\n\n            while (regexMatchObject = BIBLE_REGEX_OTHER_BOOK_RELATIVE.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside BIBLE_REGEX_OTHER_BOOK_RELATIVE regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              otherBookBibleLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 8, \"BIBLE_REGEX_OTHER_BOOK_RELATIVE expected 8 fields (not \".concat(regexMatchObject.length, \")\"));\n              _regexMatchObject35 = regexMatchObject, _regexMatchObject36 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject35, 8), _totalLink17 = _regexMatchObject36[0], _optionalN7 = _regexMatchObject36[1], _B5 = _regexMatchObject36[2], _C13 = _regexMatchObject36[3], _V13 = _regexMatchObject36[4], _B6 = _regexMatchObject36[5], _C14 = _regexMatchObject36[6], _V14 = _regexMatchObject36[7];\n              processedLinkList.push(_totalLink17); // Save the full link\n\n              if (_optionalN7) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_B5.length, \"Should have book name as well as number '\".concat(_optionalN7, \"'\"));\n              }\n\n              _B5 = \"\".concat(_optionalN7).concat(_B5).trim(); // e.g., 1 Timothy\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"dataAssert\"])(_B5.length, \"BIBLE_REGEX_OTHER_BOOK_RELATIVE should have B1 with '\".concat(_totalLink17, \"'\"));\n\n              if (defaultLanguageCode === 'en') {\n                // should be able to check the book name\n                _checkResult7 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"isGoodEnglishBookName\"](_B5); // debugLog(optionalB1, \"isGoodEnglishBookName checkResult\", checkResult);\n\n                if (_checkResult7 === undefined || _checkResult7 === false) addNoticePartial(_B5 === 'Song of Solomon' ? {\n                  priority: 43,\n                  message: \"Unexpected Bible book name in Bible link\",\n                  details: \"expected 'Song of Songs' in \".concat(_totalLink17),\n                  excerpt: _B5,\n                  location: ourLocation\n                } : {\n                  priority: 143,\n                  message: \"Unknown Bible book name in Bible link\",\n                  details: _totalLink17,\n                  excerpt: _B5,\n                  location: ourLocation\n                });\n              }\n\n              _linkBookCode9 = _B6 === '..' ? bookID : _B6;\n              _linkChapterInt7 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C14), _linkVerseInt9 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V14);\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C13) !== _linkChapterInt7) addNoticePartial({\n                  priority: 743,\n                  message: \"Chapter numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_C13, \" vs \").concat(_linkChapterInt7),\n                  excerpt: _totalLink17,\n                  location: ourLocation\n                });\n              } catch (ccError) {\n                console.error(\"TN Link Check3 couldn\\u2019t compare chapter numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C13, \" from '\").concat(fieldText, \"': \").concat(ccError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V13) !== _linkVerseInt9) addNoticePartial({\n                  priority: 742,\n                  message: \"Verse numbers of markdown Bible link don’t match\",\n                  details: \"\".concat(_V13, \" vs \").concat(_linkVerseInt9),\n                  excerpt: _totalLink17,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check3 couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C13, \":\").concat(_V13, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (_linkBookCode9.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                _numChaptersThisBook8 = void 0, _numVersesThisChapter9 = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_linkBookCode9.toLowerCase() !== 'obs', \"BIBLE_REGEX_OTHER_BOOK_RELATIVE linkBookCode shouldn\\u2019t be '\".concat(_linkBookCode9, \"' in notes-links-check\"));\n\n                try {\n                  _numChaptersThisBook8 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](_linkBookCode9);\n                } catch (tlcNCerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"checkNotesLinksToOutside9 with linkBookCode '\".concat(_linkBookCode9, \"' got error: \").concat(tlcNCerror));\n                  _numChaptersThisBook8 = 0;\n                }\n\n                try {\n                  _numVersesThisChapter9 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](_linkBookCode9, _linkChapterInt7);\n                } catch (tlcNVerror) {}\n\n                if (!_linkChapterInt7 || _linkChapterInt7 < 1 || _linkChapterInt7 > _numChaptersThisBook8) addNoticePartial({\n                  priority: 655,\n                  message: \"Bad chapter number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode9, \" \").concat(_linkChapterInt7, \" vs \").concat(_numChaptersThisBook8, \" chapters\"),\n                  excerpt: _totalLink17,\n                  location: ourLocation\n                });else if (!_linkVerseInt9 || _linkVerseInt9 < 0 || _linkVerseInt9 > _numVersesThisChapter9) addNoticePartial({\n                  priority: 653,\n                  message: \"Bad verse number in markdown Bible link\",\n                  details: \"\".concat(_linkBookCode9, \" \").concat(_linkChapterInt7, \":\").concat(_linkVerseInt9, \" vs \").concat(_numVersesThisChapter9, \" verses\"),\n                  excerpt: _totalLink17,\n                  location: ourLocation\n                });\n              }\n            } // Check for TN links like [Titus 3:11](../03/11/zd2d)\n\n\n            while (regexMatchObject = TN_REGEX.exec(fieldText)) {\n              // debugLog(`  checkNotesLinksToOutside TN_REGEX regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n              TNLinkCount1 += 1;\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 9, \"TN_REGEX expected 9 fields (not \".concat(regexMatchObject.length, \")\")); // eslint-disable-next-line no-unused-vars\n\n              _regexMatchObject37 = regexMatchObject, _regexMatchObject38 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject37, 9), _totalLink18 = _regexMatchObject38[0], _optionalN8 = _regexMatchObject38[1], _optionalB5 = _regexMatchObject38[2], _C15 = _regexMatchObject38[3], _V15 = _regexMatchObject38[4], _B7 = _regexMatchObject38[5], _C16 = _regexMatchObject38[6], _V16 = _regexMatchObject38[7], _noteID2 = _regexMatchObject38[8];\n              processedLinkList.push(_totalLink18); // Save the full link\n\n              if (_optionalN8) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_optionalB5, \"Should have book name as well as number '\".concat(_optionalN8, \"'\"));\n              }\n\n              if (_optionalB5) {\n                _optionalB5 = \"\".concat(_optionalN8).concat(_optionalB5).trim(); // e.g., 1 Timothy\n\n                if (defaultLanguageCode === 'en') {\n                  // should be able to check the book name\n                  _checkResult8 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"isGoodEnglishBookName\"](_optionalB5); // debugLog(optionalB1, \"isGoodEnglishBookName checkResult\", checkResult);\n\n                  if (_checkResult8 === undefined || _checkResult8 === false) addNoticePartial({\n                    priority: 144,\n                    message: \"Unknown Bible book name in TN link\",\n                    details: _totalLink18,\n                    excerpt: _optionalB5,\n                    location: ourLocation\n                  });\n                }\n              }\n\n              _linkBookCode10 = _B7 === '..' ? bookID : _B7;\n              _linkChapterInt8 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C16), _linkVerseInt10 = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V16);\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_C15) !== _linkChapterInt8) addNoticePartial({\n                  priority: 743,\n                  message: \"Chapter numbers of markdown TN link don’t match\",\n                  details: \"\".concat(_C15, \" vs \").concat(_linkChapterInt8),\n                  excerpt: _totalLink18,\n                  location: ourLocation\n                });\n              } catch (ccError) {\n                console.error(\"TN Link Check3b couldn\\u2019t compare chapter numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C15, \" from '\").concat(fieldText, \"': \").concat(ccError));\n              }\n\n              try {\n                if (Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(_V15) !== _linkVerseInt10) addNoticePartial({\n                  priority: 752,\n                  message: \"Verse numbers of markdown TN link don’t match\",\n                  details: \"\".concat(_V15, \" vs \").concat(_linkVerseInt10),\n                  excerpt: _totalLink18,\n                  location: ourLocation\n                });\n              } catch (vvError) {\n                console.error(\"TN Link Check3b couldn\\u2019t compare verse numbers for \".concat(bookID, \" \").concat(givenC, \":\").concat(givenV, \" \").concat(fieldName, \" with \").concat(_C15, \":\").concat(_V15, \" from '\").concat(fieldText, \"': \").concat(vvError));\n              }\n\n              if (_linkBookCode10.length) {\n                // then we know which Bible book this link is to\n                // So we can check for valid C:V numbers\n                _numChaptersThisBook9 = void 0, _numVersesThisChapter10 = void 0;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(_linkBookCode10.toLowerCase() !== 'obs', \"TN_REGEX linkBookCode shouldn\\u2019t be '\".concat(_linkBookCode10, \"' in notes-links-check\"));\n\n                try {\n                  _numChaptersThisBook9 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](_linkBookCode10);\n                } catch (tlcNCerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"debugLog\"])(\"checkNotesLinksToOutside10 with linkBookCode '\".concat(_linkBookCode10, \"' got error: \").concat(tlcNCerror));\n                  _numChaptersThisBook9 = 0;\n                }\n\n                try {\n                  _numVersesThisChapter10 = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](_linkBookCode10, _linkChapterInt8);\n                } catch (tlcNVerror) {}\n\n                if (!_linkChapterInt8 || _linkChapterInt8 < 1 || _linkChapterInt8 > _numChaptersThisBook9) addNoticePartial({\n                  priority: 656,\n                  message: \"Bad chapter number in markdown TN link\",\n                  details: \"\".concat(_linkBookCode10, \" \").concat(_linkChapterInt8, \" vs \").concat(_numChaptersThisBook9, \" chapters\"),\n                  excerpt: _totalLink18,\n                  location: ourLocation\n                });else if (!_linkVerseInt10 || _linkVerseInt10 < 0 || _linkVerseInt10 > _numVersesThisChapter10) addNoticePartial({\n                  priority: 654,\n                  message: \"Bad verse number in markdown TN link\",\n                  details: \"\".concat(_linkBookCode10, \" \").concat(_linkChapterInt8, \":\").concat(_linkVerseInt10, \" vs \").concat(_numVersesThisChapter10, \" verses\"),\n                  excerpt: _totalLink18,\n                  location: ourLocation\n                });\n              } // TODO: We should see if we can find the correct note\n\n            }\n\n            if (repoCode.startsWith('OBS-')) {\n              // Check for OBS links like [03:04](03/04)\n              while (regexMatchObject = OBS_LINK_REGEX.exec(fieldText)) {\n                // debugLog(`  checkNotesLinksToOutside OBS_LINK_REGEX resultArray=${JSON.stringify(regexMatchObject)}`);\n                OBSLinkCount += 1;\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 5, \"OBS_LINK_REGEX expected 5 fields (not \".concat(regexMatchObject.length, \")\")); // eslint-disable-next-line no-unused-vars\n\n                _regexMatchObject39 = regexMatchObject, _regexMatchObject40 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject39, 5), _totalLink19 = _regexMatchObject40[0], storyNumberA = _regexMatchObject40[1], frameNumberA = _regexMatchObject40[2], storyNumberB = _regexMatchObject40[3], frameNumberB = _regexMatchObject40[4];\n                processedLinkList.push(_totalLink19); // Save the full link\n\n                storyIntA = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(storyNumberA), frameIntA = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(frameNumberA);\n                storyIntB = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(storyNumberB), frameIntB = Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"ourParseInt\"])(frameNumberB);\n                if (storyIntA !== storyIntB || frameIntA !== frameIntB) addNoticePartial({\n                  priority: 731,\n                  message: \"OBS link has internal mismatch\",\n                  details: \"\".concat(storyNumberA, \":\").concat(frameNumberA, \" should equal \").concat(storyNumberB, \"/\").concat(frameNumberA),\n                  excerpt: _totalLink19,\n                  location: ourLocation\n                });else {\n                  if (storyIntB < 1 || storyIntB > _defaults__WEBPACK_IMPORTED_MODULE_7__[\"NUM_OBS_STORIES\"] || frameIntB < 1 || frameIntB > _defaults__WEBPACK_IMPORTED_MODULE_7__[\"MAX_OBS_FRAMES\"]) addNoticePartial({\n                    priority: 730,\n                    message: \"OBS link has out-of-range values\",\n                    details: \"\".concat(_defaults__WEBPACK_IMPORTED_MODULE_7__[\"NUM_OBS_STORIES\"], \" stories, max of \").concat(_defaults__WEBPACK_IMPORTED_MODULE_7__[\"MAX_OBS_FRAMES\"], \" frames\"),\n                    excerpt: \"\".concat(storyNumberA, \"/\").concat(frameNumberA),\n                    location: ourLocation\n                  });\n                } // const OBSRepoName = `${defaultLanguageCode}_obs`;\n                // // debugLog(`Got taRepoName=${taRepoName}`);\n                // let TAsection = 'translate';\n                // if (fieldName.startsWith('checking/')) TAsection = 'checking';\n                // else if (fieldName.startsWith('process/')) TAsection = 'process';\n                // if (fieldName.startsWith('intro/')) TAsection = 'intro';\n                // dataAssert(TAsection === 'translate' || TAsection === 'checking' || TAsection === 'process' || TAsection === 'intro', `Unexpected TA section name = '${TAsection}'`);\n                // const filepath = `${TAsection}/${article}/01.md`; // Other files are title.md, sub-title.md\n                // // debugLog(`checkNotesLinksToOutside OBS_LINK_REGEX got tA filepath=${filepath}`);\n\n                /*\n                if (!checkingOptions?.disableAllLinkFetchingFlag) {\n                    // debugLog(`checkNotesLinksToOutside OBS_LINK_REGEX need to check ${filepath} against ${taRepoName}`);\n                    const taPathParameters = { username: taRepoUsername, repository: taRepoName, path: filepath, branch: taRepoBranch };\n                    let taFileContent, alreadyGaveError = false;\n                    try {\n                        taFileContent = await getFile_(taPathParameters);\n                        // debugLog(\"Fetched fileContent for\", taRepoName, filepath, typeof fileContent, fileContent.length);\n                    } catch (trcGCerror) { // NOTE: The error can depend on whether the zipped repo is cached or not\n                        console.error(`checkNotesLinksToOutside(${bookID}, ${fieldName}, …) failed to load TA for '${taRepoUsername}', '${taRepoName}', '${filepath}', '${taRepoBranch}', ${trcGCerror.message}`);\n                        addNoticePartial({ priority: 885, message: `Error loading TA article`, details: `${taRepoUsername} ${taRepoName} ${taRepoBranch} ${filepath}`, excerpt: totalLink, location: `${ourLocation} ${filepath}: ${trcGCerror}` });\n                        alreadyGaveError = true;\n                    }\n                    if (!alreadyGaveError) {\n                        if (!taFileContent)\n                            addNoticePartial({ priority: 886, message: \"Unable to find/load linked TA article\", details: `${taRepoUsername} ${taRepoName} ${taRepoBranch} ${filepath}`, excerpt: totalLink, location: `${ourLocation} ${filepath}` });\n                        else if (taFileContent.length < 10)\n                            addNoticePartial({ priority: 884, message: \"Linked TA article seems empty\", details: `${taRepoUsername} ${taRepoName} ${taRepoBranch} ${filepath}`, excerpt: totalLink, location: `${ourLocation} ${filepath}` });\n                        // Don’t do this or it gets infinite recursion!!!\n                        // else if (checkingOptions?.disableLinkedTAArticlesCheckFlag !== true) {\n                        //     // functionLog(`checkNotesLinksToOutside got ${checkingOptions?.disableLinkedTAArticlesCheckFlag} so checking TA article: ${filepath}`);\n                        //     if (!await alreadyChecked(taPathParameters)) {\n                        //         // functionLog(`checkNotesLinksToOutside needs to check TA article: ${filepath}`);\n                        //         const checkTAFileResult = await checkMarkdownFileContents(username, languageCode, repoCode, `TA ${article.trim()}/01.md`, taFileContent, ourLocation, checkingOptions);\n                        //         for (const noticeObject of checkTAFileResult.noticeList)\n                        //             ctarResult.noticeList.push({ ...noticeObject, username: taRepoUsername, repoCode: 'TA', repoName: taRepoName, filename: filepath, location: ` linked to${ourLocation}`, extra: 'TA' });\n                        //         ctarResult.checkedFileCount += 1;\n                        //         ctarResult.checkedFilenames.push(`${article.trim()}/01.md`);\n                        //         ctarResult.checkedFilesizes = taFileContent.length;\n                        //         ctarResult.checkedFilenameExtensions = ['md'];\n                        //         ctarResult.checkedRepoNames.push(taRepoName);\n                        //         markAsChecked(taPathParameters); // don’t bother waiting for the result of this async call\n                        //     }\n                        // }\n                    } */\n              }\n            } // Check for simple display links like [ULT](https://something)\n            // if (fieldText.indexOf('http') !== -1) debugLog(`Checking for http links in '${fieldName}' '${fieldText}'`);\n\n\n            _loop = /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop() {\n              var _regexMatchObject41, _regexMatchObject42, totalLink, displayText, uri, dummyPathParameters, serverString, isUW;\n\n              return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      // debugLog(`  checkNotesLinksToOutside SIMPLE_DISPLAY_LINK_REGEX regexMatchObject(${regexMatchObject.length})=${JSON.stringify(regexMatchObject)}`);\n                      generalLinkCount1 += 1;\n                      Object(_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(regexMatchObject.length === 3, \"SIMPLE_DISPLAY_LINK_REGEX expected 3 fields (not \".concat(regexMatchObject.length, \")\")); // eslint-disable-next-line no-unused-vars\n\n                      _regexMatchObject41 = regexMatchObject, _regexMatchObject42 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_regexMatchObject41, 3), totalLink = _regexMatchObject42[0], displayText = _regexMatchObject42[1], uri = _regexMatchObject42[2];\n                      processedLinkList.push(totalLink); // Save the full link\n\n                      if (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) {\n                        _context.next = 14;\n                        break;\n                      }\n\n                      dummyPathParameters = {\n                        username: uri,\n                        repository: '',\n                        path: '',\n                        branch: ''\n                      };\n                      _context.next = 8;\n                      return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"alreadyChecked\"])(dummyPathParameters);\n\n                    case 8:\n                      if (_context.sent) {\n                        _context.next = 13;\n                        break;\n                      }\n\n                      // debugLog(`checkNotesLinksToOutside general link check needs to check: ${uri}`);\n                      // Set as checked so that we only check this particular URL once\n                      Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"markAsChecked\"])(dummyPathParameters); // don’t bother waiting for the result of this async call\n\n                      serverString = uri.replace('://', '!!!').split('/')[0].replace('!!!', '://').toLowerCase(); // Get the bit before any forward slashes\n\n                      isUW = serverString.endsWith('door43.org') || serverString.endsWith('unfoldingword.org') || serverString.endsWith('ufw.io'); // debugLog(`checkNotesLinksToOutside general link check needs to check: ${uri} on server ${serverString}`);\n\n                      jquery__WEBPACK_IMPORTED_MODULE_11___default.a.ajax({\n                        // Calling this way seems to avoid CORS (cross-origin) issues (although they still appear in the console)\n                        // See https://stackoverflow.com/questions/59116711/how-to-check-or-validate-if-url-exists-cors-error-returned\n                        url: uri,\n                        dataType: 'text',\n                        statusCode: {\n                          // 200: function () {\n                          //     console.log(`Status code 200 OK returned for ${uri}`);\n                          // },\n                          404: function _() {\n                            console.log(\"Status code 404 NOT FOUND returned for \".concat(uri));\n                            addNoticePartial({\n                              priority: isUW ? 782 : 182,\n                              message: \"Error loading link\",\n                              details: \"please double-check link—there may be no problem\",\n                              excerpt: totalLink,\n                              location: ourLocation\n                            });\n                          }\n                        },\n                        success: function success(data) {\n                          // console.log(`Received ${data.length} bytes for ${uri}`);\n                          if (data.length < 10) addNoticePartial({\n                            priority: isUW ? 781 : 181,\n                            message: \"Linked web page seems empty\",\n                            excerpt: totalLink,\n                            location: ourLocation\n                          });\n                        },\n                        error: function error(ts) {\n                          if (ts.responseText) console.log(\"Error for \".concat(uri, \" is '\").concat(ts.responseText, \"'\"));\n                        }\n                      });\n                      /* Re-written as above 20Sep2021\n                      // NOTE: These message strings must match RenderProcessedResults.js\n                      let fetchedFileContent, hadError = false;\n                      // Don’t try to fetch general links\n                      // addNoticePartial({ priority: 32, message: `Untested general/outside link`, details: \"please manually double-check link—probably no problem\", excerpt: totalLink, location: ourLocation });\n                      } else { // Try to fetch uW links\n                      try {\n                      // generalFileContent = await cachedGetFileUsingFullURL({ uri });\n                      // debugLog(`${displayText} ${uri} got: (${generalFileContent.length}) ${generalFileContent.slice(0, 10)}...`);\n                      // debugLog(`uri='${uri}', serverString='${serverString}'`);\n                      // NOTE: The following line (with or without the mode) doesn’t help -- actually makes things slightly worse\n                      // const response = await fetch(uri, {headers:{'Access-Control-Allow-Origin': serverString}});\n                      // const response = await fetch(uri, {mode: 'cors'});\n                      // const response = await fetch(uri, {mode: 'cors', headers:{'Access-Control-Allow-Origin': serverString}});\n                      const response = await fetch(uri);\n                      if (response.ok) {// if HTTP-status is 200-299\n                          fetchedFileContent = await response.text();\n                          // debugLog(`General link ${displayText} @ ${uri} got: (${generalFileContent.length}) ${generalFileContent.slice(0, 10)}...`);\n                      } else throw new Error(`Our Network error: ${response.statusCode}`);\n                      } catch (trcGCerror) {\n                      // debugLog(`checkNotesLinksToOutside(${bookID}, ${fieldName}, …) failed to load general ${uri}: ${trcGCerror}`);\n                      // TODO: Put back up to 882 if we can solve cross-origin (CORS) problems\n                      jQuery.ajax({ // try again without CORS checking\n                          url: uri,\n                          dataType: 'text',\n                          statusCode: {\n                              200: function () {\n                                  console.log(`Status code 200 OK returned for uW ${uri}`);\n                              },\n                              404: function () {\n                                  console.log(`Status code 404 NOT FOUND returned for uW ${uri}`);\n                                  addNoticePartial({ priority: 82, message: `Error loading unfoldingWord link`, details: \"please double-check link—there may be no problem\", excerpt: totalLink, location: ourLocation });\n                                  hadError = true;\n                              }\n                          },\n                          success: function(data) {\n                              console.log(`Got ${data.length} bytes for uW ${uri}`);\n                              fetchedFileContent = data;\n                          },\n                          error: function (ts) {\n                              if (ts.responseText) console.log(`Error for uW ${uri} is '${ts.responseText}'`);\n                          }\n                      });\n                      // addNoticePartial({ priority: 82, message: `Error loading unfoldingWord link`, details: \"please double-check link—there may be no problem\", excerpt: totalLink, location: `${ourLocation}: ${trcGCerror}` });\n                      // hadError = true;\n                      }\n                      if (!hadError && !fetchedFileContent)\n                      addNoticePartial({ priority: 783, message: \"Unable to find/load unfoldingWord link\", excerpt: totalLink, location: ourLocation });\n                      else if (fetchedFileContent) { // we got the content of the general article\n                      if (fetchedFileContent.length < 10)\n                          addNoticePartial({ priority: 781, message: \"Linked unfoldingWord article seems empty\", excerpt: totalLink, location: ourLocation });\n                      }\n                      }\n                      */\n                      // markAsChecked(dummyPathParameters); // don’t bother waiting for the result of this async call\n\n                    case 13:\n                      // else debugLog(`Had already checked '${displayText}' ${uri}`);\n                      if (uri.startsWith('http:')) addNoticePartial({\n                        priority: 152,\n                        message: \"Should http link be https\",\n                        excerpt: totalLink,\n                        location: ourLocation\n                      });\n\n                    case 14:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _loop);\n            });\n\n          case 375:\n            if (!(regexMatchObject = SIMPLE_DISPLAY_LINK_REGEX.exec(fieldText))) {\n              _context2.next = 379;\n              break;\n            }\n\n            return _context2.delegateYield(_loop(), \"t8\", 377);\n\n          case 377:\n            _context2.next = 375;\n            break;\n\n          case 379:\n            // Check for additional links that we can’t explain\n            // if (processedLinkList.length || linksList1.length || linksList2.length) {\n            //     debugLog(`processedLinkList (${processedLinkList.length}) = ${JSON.stringify(processedLinkList)}`);\n            //     if (linksList1.length) {\n            //         debugLog(`   ${thisChapterBibleLinkCount1? 'thisChapterBibleLinkCount1='+thisChapterBibleLinkCount1:''} ${thisVerseBibleLinkCount1?'thisVerseBibleLinkCount1='+thisVerseBibleLinkCount1:''} ${thisBookBibleLinkCount1?'thisBookBibleLinkCount1='+thisBookBibleLinkCount1:''} ${otherBookBibleLinkCount1?'otherBookBibleLinkCount1='+otherBookBibleLinkCount1:''} ${TNLinkCount1?'TNLinkCount1='+TNLinkCount1:''} ${twLinkCount1?'twLinkCount1='+twLinkCount1:''} ${taLinkCount1?'taLinkCount1='+taLinkCount1:''} ${generalLinkCount1?'generalLinkCount1='+generalLinkCount1:''}`);\n            //         debugLog(`   linksList1 (${linksList1.length}) = ${JSON.stringify(linksList1)}`);\n            //     }\n            //     if (linksList2.length) {\n            //         debugLog(`   ${twLinkCount2?'twLinkCount2='+twLinkCount2:''} ${taLinkCount2?'taLinkCount2='+taLinkCount2:''}`);\n            //         debugLog(`   linksList2 (${linksList2.length}) = ${JSON.stringify(linksList2)}`);\n            //     }\n            // }\n            // NOTE: This additional check using counts would fail if a link was found by more than one RegEx\n            // const linkCount1 = thisChapterBibleLinkCount1 + thisVerseBibleLinkCount1 + thisBookBibleLinkCount1 + otherBookBibleLinkCount1 + TNLinkCount1 + twLinkCount1 + taLinkCount1 + generalLinkCount1;\n            // if (totalLinks1 > linkCount1) {\n            leftoverLinksList1 = linksList1.filter(function (x) {\n              return !processedLinkList.includes(x);\n            }); // Delete links that we processed above\n\n            if (leftoverLinksList1.length) // if (leftoverLinksList1.length) debugLog(`'${languageCode}', ${repoCode}, '${bookID}', '${fieldName}' processedLinkList (${processedLinkList.length}) = ${JSON.stringify(processedLinkList)}\\n        linksList1(${linksList1.length})=${JSON.stringify(linksList1)}\\nleftoverLinksList1(${leftoverLinksList1.length})=${JSON.stringify(leftoverLinksList1)}`);\n              // if (leftoverLinksList1.length) debugLog(`'${languageCode}', ${repoCode}, '${bookID}', '${fieldName}' leftoverLinksList1 (${leftoverLinksList1.length}) = ${JSON.stringify(leftoverLinksList1)}`);\n              addNoticePartial({\n                priority: 648,\n                message: \"Unusual [ ]( ) link(s)—not a recognized Bible, OBS, or TA, TN, or TW link\",\n                details: \"need to carefully check \".concat(leftoverLinksList1.length === 1 ? '\"' + leftoverLinksList1[0] + '\"' : JSON.stringify(leftoverLinksList1)),\n                location: ourLocation\n              }); // }\n            // const linkCount2 = twLinkCount2 + taLinkCount2; // These are double-bracketed links, e.g., [[something]]\n            // debugLog(`twLinkCount2 ${twLinkCount2} + taLinkCount2 ${taLinkCount2} = linkCount2 ${linkCount2}`);\n            // if (totalLinks2 > linkCount2) {\n\n            leftoverLinksList2 = linksList2.filter(function (x) {\n              return !processedLinkList.includes(x);\n            }); // Delete links that we processed above\n\n            if (leftoverLinksList2.length) // if (leftoverLinksList2.length) debugLog(`'${languageCode}', ${repoCode}, '${bookID}', '${fieldName}' processedLinkList (${processedLinkList.length}) = ${JSON.stringify(processedLinkList)}\\n        linksList2(${linksList2.length})=${JSON.stringify(linksList2)}\\nleftoverLinksList2(${leftoverLinksList2.length})=${JSON.stringify(leftoverLinksList2)}`);\n              // if (leftoverLinksList2.length) debugLog(`'${languageCode}', ${repoCode}, '${bookID}', '${fieldName}' leftoverLinksList2 (${leftoverLinksList2.length}) = ${JSON.stringify(leftoverLinksList2)}`);\n              addNoticePartial({\n                priority: 649,\n                message: \"Unusual [[ ]] link(s)—not a recognized TA or TW link\",\n                details: \"need to carefully check \".concat(leftoverLinksList2.length === 1 ? '\"' + leftoverLinksList2[0] + '\"' : JSON.stringify(leftoverLinksList2)),\n                location: ourLocation\n              }); // }\n            // Check for badly formed links (not processed by the above code)\n            // Check for badly formed [[ ]] links\n\n            leftCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_8__[\"countOccurrencesInString\"])(fieldText, '[[');\n            rightCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_8__[\"countOccurrencesInString\"])(fieldText, ']]');\n            if (leftCount !== rightCount) addNoticePartial({\n              priority: 845,\n              message: \"Mismatched [[ ]] link characters\",\n              details: \"left=\".concat(leftCount.toLocaleString(), \", right=\").concat(rightCount.toLocaleString()),\n              location: ourLocation\n            });else {\n              leftCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_8__[\"countOccurrencesInString\"])(fieldText, '[[rc://');\n              if (leftCount !== rightCount) addNoticePartial({\n                priority: 844,\n                message: \"Mismatched [[rc:// ]] link characters\",\n                details: \"left=\".concat(leftCount.toLocaleString(), \", right=\").concat(rightCount.toLocaleString()),\n                location: ourLocation\n              });\n            } // Check for badly formed [ ]( ) links\n\n            leftCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_8__[\"countOccurrencesInString\"])(fieldText, '[');\n            middleCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_8__[\"countOccurrencesInString\"])(fieldText, '](');\n            rightCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_8__[\"countOccurrencesInString\"])(fieldText, ')');\n            if (leftCount < middleCount || rightCount < middleCount) addNoticePartial({\n              priority: 843,\n              message: \"Mismatched [ ]( ) link characters\",\n              details: \"left=\".concat(leftCount.toLocaleString(), \", middle=\").concat(middleCount.toLocaleString(), \", right=\").concat(rightCount.toLocaleString()),\n              location: ourLocation\n            }); // functionLog(`checkNotesLinksToOutside is returning ${JSON.stringify(ctarResult)}`);\n\n            return _context2.abrupt(\"return\", ctarResult);\n\n          case 391:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee, null, [[43, 50], [65, 72], [103, 109], [139, 145], [197, 203], [232, 238], [271, 277], [330, 336]]);\n  }));\n  return _checkNotesLinksToOutside.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/notes-links-check.js?");

/***/ }),

/***/ "./src/core/notes-tsv7-row-check.js":
/*!******************************************!*\
  !*** ./src/core/notes-tsv7-row-check.js ***!
  \******************************************/
/*! exports provided: checkNotesTSV7DataRow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkNotesTSV7DataRow\", function() { return checkNotesTSV7DataRow; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./text-handling-functions */ \"./src/core/text-handling-functions.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _field_text_check__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\");\n/* harmony import */ var _markdown_text_check__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./markdown-text-check */ \"./src/core/markdown-text-check.js\");\n/* harmony import */ var _ta_reference_check__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ta-reference-check */ \"./src/core/ta-reference-check.js\");\n/* harmony import */ var _orig_quote_check__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./orig-quote-check */ \"./src/core/orig-quote-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n// eslint-disable-next-line no-unused-vars\n\n\n\n\n\n // import { checkNotesLinksToOutside } from './notes-links-check';\n\n // eslint-disable-next-line no-unused-vars\n\n // const NOTES_TABLE_ROW_VALIDATOR_VERSION_STRING = '0.6.16';\n\nvar NUM_EXPECTED_NOTES_TSV_FIELDS = 7; // so expects 6 tabs per line\n\nvar EXPECTED_NOTES_HEADING_LINE = 'Reference\\tID\\tTags\\tSupportReference\\tQuote\\tOccurrence\\tNote';\nvar LC_ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\nvar LC_ALPHABET_PLUS_DIGITS = 'abcdefghijklmnopqrstuvwxyz0123456789';\nvar LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN = 'abcdefghijklmnopqrstuvwxyz0123456789-';\nvar TA_REGEX = new RegExp('\\\\[\\\\[rc://[^ /]+?/ta/man/[^ /]+?/([^ \\\\]]+?)\\\\]\\\\]', 'g');\n/**\n *\n * @description - Checks one TSV data row of translation notes (TN2)\n * @param {string} languageCode - the language code, e.g., 'en'\n * @param {string} repoCode - TN2, or SN -- allows more specific checks\n * @param {string} line - the TSV line to be checked\n * @param {string} bookID - 3-character UPPERCASE USFM book identifier or 'OBS'\n * @param {string} givenC - chapter number or (for OBS) story number string\n * @param {string} givenV - verse number or (for OBS) frame number string\n * @param {string} givenRowLocation - description of where the line is located\n * @param {Object} checkingOptions - may contain excerptLength parameter\n * @return {Object} - containing noticeList\n */\n\nfunction checkNotesTSV7DataRow(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9) {\n  return _checkNotesTSV7DataRow.apply(this, arguments);\n} // end of checkNotesTSV7DataRow function\n\nfunction _checkNotesTSV7DataRow() {\n  _checkNotesTSV7DataRow = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(username, languageCode, repoCode, line, bookID, givenC, givenV, givenRowLocation, checkingOptions) {\n    var ourRowLocation, linkCheckingOptions, drResult, addNoticePartial, ourMarkdownTextChecks, _ourMarkdownTextChecks, ourCheckTextField, ourCheckSupportReferenceInTA, _ourCheckSupportReferenceInTA, ourCheckTNOriginalLanguageQuoteAndOccurrence, _ourCheckTNOriginalLanguageQuoteAndOccurrence, excerptLength, excerptHalfLength, excerptHalfLengthPlus, lowercaseBookID, numChaptersThisBook, haveGoodBookID, fields, RIDSuggestion, SRSuggestion, QSuggestion, OSuggestion, ASuggestion, _fields, reference, rowID, tags, supportReference, quote, occurrence, note, characterIndex, _reference$split, _reference$split2, C, V, numVersesThisChapter, haveGoodChapterNumber, intC, intV, excerpt, tagsList, _iterator2, _step2, thisTag, _excerpt, supportReferenceArticlePart, charCount, _excerpt2, _excerpt3, _charCount, _charCount2, adjustedNote, regexMatchObject, linksList, foundSR, adjustedLink, details, _excerpt4, suggestion, _rowID;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _ourCheckTNOriginalLanguageQuoteAndOccurrence = function _ourCheckTNOriginalLa2() {\n              _ourCheckTNOriginalLanguageQuoteAndOccurrence = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(rowID, fieldName, fieldText, occurrence, rowLocation, checkingOptions) {\n                var coqResultObject, _iterator5, _step5, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return Object(_orig_quote_check__WEBPACK_IMPORTED_MODULE_11__[\"checkOriginalLanguageQuoteAndOccurrence\"])(username, languageCode, repoCode, fieldName, fieldText, occurrence, bookID, givenC, givenV, rowLocation, checkingOptions);\n\n                      case 2:\n                        coqResultObject = _context3.sent;\n                        // Choose only ONE of the following\n                        // This is the fast way of append the results from this field\n                        // result.noticeList = result.noticeList.concat(coqResultObject.noticeList);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator5 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coqResultObject.noticeList);\n\n                        try {\n                          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                            noticeEntry = _step5.value;\n                            // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourCheckTNOriginalLanguageQuoteAndOccurrence notice length=${Object.keys(noticeEntry).length}`);\n                            addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                              rowID: rowID,\n                              fieldName: fieldName\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator5.e(err);\n                        } finally {\n                          _iterator5.f();\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n              return _ourCheckTNOriginalLanguageQuoteAndOccurrence.apply(this, arguments);\n            };\n\n            ourCheckTNOriginalLanguageQuoteAndOccurrence = function _ourCheckTNOriginalLa(_x21, _x22, _x23, _x24, _x25, _x26) {\n              return _ourCheckTNOriginalLanguageQuoteAndOccurrence.apply(this, arguments);\n            };\n\n            _ourCheckSupportReferenceInTA = function _ourCheckSupportRefer2() {\n              _ourCheckSupportReferenceInTA = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(rowID, fieldName, taLinkText, rowLocation, checkingOptions) {\n                var coqResultObject, _iterator4, _step4, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return Object(_ta_reference_check__WEBPACK_IMPORTED_MODULE_10__[\"checkSupportReferenceInTA\"])(fieldName, taLinkText, rowLocation, Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, checkingOptions), {}, {\n                          taRepoLanguageCode: languageCode,\n                          expectFullLink: true\n                        }));\n\n                      case 2:\n                        coqResultObject = _context2.sent;\n                        // Choose only ONE of the following\n                        // This is the fast way of append the results from this field\n                        // result.noticeList = result.noticeList.concat(coqResultObject.noticeList);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coqResultObject.noticeList);\n\n                        try {\n                          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                            noticeEntry = _step4.value;\n                            // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourCheckSupportReferenceInTA notice length=${Object.keys(noticeEntry).length}`);\n                            addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                              rowID: rowID,\n                              fieldName: fieldName\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator4.e(err);\n                        } finally {\n                          _iterator4.f();\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              return _ourCheckSupportReferenceInTA.apply(this, arguments);\n            };\n\n            ourCheckSupportReferenceInTA = function _ourCheckSupportRefer(_x16, _x17, _x18, _x19, _x20) {\n              return _ourCheckSupportReferenceInTA.apply(this, arguments);\n            };\n\n            ourCheckTextField = function _ourCheckTextField(rowID, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions) {\n              /**\n              * @description - checks the given text field and processes the returned results\n              * @param {string} rowID - 4-character row ID field\n              * @param {string} fieldName - name of the field being checked\n              * @param {string} fieldText - the actual text of the field being checked\n              * @param {boolean} allowedLinks - true if links are allowed in the field, otherwise false\n              * @param {string} rowLocation - description of where the line is located\n              * @param {Object} checkingOptions - parameters that might affect the check\n              */\n              // Does basic checks for small errors like leading/trailing spaces, etc.\n              // We assume that checking for compulsory fields is done elsewhere\n              // Updates the global list of notices\n              // functionLog(`checkNotesTSV7DataRow ourCheckTextField(${fieldName}, (${fieldText.length}), ${allowedLinks}, ${rowLocation}, …)`);\n              //parameterAssert(rowID !== undefined, \"checkNotesTSV7DataRow ourCheckTextField: 'rowID' parameter should be defined\");\n              //parameterAssert(typeof rowID === 'string', `checkNotesTSV7DataRow ourCheckTextField: 'rowID' parameter should be a string not a '${typeof rowID}'`);\n              //parameterAssert(fieldName !== undefined, \"checkNotesTSV7DataRow ourCheckTextField: 'fieldName' parameter should be defined\");\n              //parameterAssert(typeof fieldName === 'string', `checkNotesTSV7DataRow ourCheckTextField: 'fieldName' parameter should be a string not a '${typeof fieldName}'`);\n              //parameterAssert(fieldText !== undefined, \"checkNotesTSV7DataRow ourCheckTextField: 'fieldText' parameter should be defined\");\n              //parameterAssert(typeof fieldText === 'string', `checkNotesTSV7DataRow ourCheckTextField: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n              //parameterAssert(allowedLinks === true || allowedLinks === false, \"checkNotesTSV7DataRow ourCheckTextField: allowedLinks parameter must be either true or false\");\n              //parameterAssert(rowLocation !== undefined, \"checkNotesTSV7DataRow ourCheckTextField: 'rowLocation' parameter should be defined\");\n              //parameterAssert(typeof rowLocation === 'string', `checkNotesTSV7DataRow ourCheckTextField: 'rowLocation' parameter should be a string not a '${typeof rowLocation}'`);\n              //parameterAssert(rowLocation.indexOf(fieldName) < 0, `checkNotesTSV7DataRow ourCheckTextField: 'rowLocation' parameter should be not contain fieldName=${fieldName}`);\n              var fieldType = fieldName === 'Note' ? 'markdown' : 'raw';\n              var octfResultObject = Object(_field_text_check__WEBPACK_IMPORTED_MODULE_8__[\"checkTextField\"])(username, languageCode, repoCode, fieldType, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions); // Choose only ONE of the following\n              // This is the fast way of append the results from this field\n              // result.noticeList = result.noticeList.concat(dbtcResultObject.noticeList);\n              // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n              //  process results line by line\n\n              var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(octfResultObject.noticeList),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var noticeEntry = _step.value;\n                  // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourCheckTextField notice length=${Object.keys(noticeEntry).length}`);\n                  addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                    rowID: rowID,\n                    fieldName: fieldName\n                  }));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              return octfResultObject.suggestion; // There may or may not be one!\n            };\n\n            _ourMarkdownTextChecks = function _ourMarkdownTextCheck2() {\n              _ourMarkdownTextChecks = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(rowID, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions) {\n                var omtcResultObject, _iterator3, _step3, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return Object(_markdown_text_check__WEBPACK_IMPORTED_MODULE_9__[\"checkMarkdownText\"])(username, languageCode, repoCode, fieldName, fieldText, rowLocation, checkingOptions);\n\n                      case 2:\n                        omtcResultObject = _context.sent;\n                        // Choose only ONE of the following\n                        // This is the fast way of append the results from this field\n                        // result.noticeList = result.noticeList.concat(cmtResultObject.noticeList);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(omtcResultObject.noticeList);\n\n                        try {\n                          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                            noticeEntry = _step3.value;\n                            // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourMarkdownTextChecks notice length=${Object.keys(noticeEntry).length}`);\n                            // NOTE: Ellipses in Note have the normal meaning\n                            //          not like the specialised meaning in the Quote snippet fields\n                            if (noticeEntry.priority !== 178 && noticeEntry.priority !== 179 // unexpected space after ellipse, ellipse after space\n                            && !noticeEntry.message.startsWith(\"Unexpected … character after space\") // 191\n                            ) addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                              rowID: rowID,\n                              fieldName: fieldName\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator3.e(err);\n                        } finally {\n                          _iterator3.f();\n                        }\n\n                        return _context.abrupt(\"return\", omtcResultObject.suggestion);\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _ourMarkdownTextChecks.apply(this, arguments);\n            };\n\n            ourMarkdownTextChecks = function _ourMarkdownTextCheck(_x10, _x11, _x12, _x13, _x14, _x15) {\n              return _ourMarkdownTextChecks.apply(this, arguments);\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkNotesTSV7DataRow addNoticePartial(priority=${incompleteNoticeObject.priority}) ${incompleteNoticeObject.message}, ${incompleteNoticeObject.characterIndex}, ${incompleteNoticeObject.excerpt}, ${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"checkNotesTSV7DataRow addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `checkNotesTSV7DataRow addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"checkNotesTSV7DataRow addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `checkNotesTSV7DataRow addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(lineNumber !== undefined, \"checkNotesTSV7DataRow addNoticePartial: 'lineNumber' parameter should be defined\");\n              // parameterAssert(typeof lineNumber === 'number', `checkNotesTSV7DataRow addNoticePartial: 'lineNumber' parameter should be a number not a '${typeof lineNumber}': ${lineNumber}`);\n              // parameterAssert(characterIndex !== undefined, \"checkNotesTSV7DataRow addNoticePartial: 'characterIndex' parameter should be defined\");\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `checkNotesTSV7DataRow addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"checkNotesTSV7DataRow addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `checkNotesTSV7DataRow addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"checkNotesTSV7DataRow addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `checkNotesTSV7DataRow addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n              // Also uses the given bookID,C,V, parameters from the main function call\n              // incompleteNoticeObject.debugChain = incompleteNoticeObject.debugChain ? `checkNotesTSV7DataRow ${incompleteNoticeObject.debugChain}` : `checkNotesTSV7DataRow(${repoCode})`;\n\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_12__[\"aboutToOverwrite\"])('checkNotesTSV7DataRow', ['bookID', 'C', 'V'], incompleteNoticeObject, {\n                bookID: bookID,\n                C: givenC,\n                V: givenV\n              });\n              drResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                C: givenC,\n                V: givenV\n              }));\n            };\n\n            /* This function is only for checking one data row\n                  and the function doesn’t assume that it has any previous context.\n                 TN2, or SN\n                    being translation or study notes.\n                 bookID is a three-character UPPERCASE USFM book identifier or 'OBS'\n                    so givenC and givenV are usually chapter number and verse number\n                        but can be story number and frame number for OBS.\n                 It’s designed to be able to quickly show errors for a single row being displayed/edited.\n                 Returns an object containing the noticeList.\n            */\n            // functionLog(`checkNotesTSV7DataRow(${languageCode}, ${repoCode}, ${line}, ${bookID}, ${givenRowLocation}, ${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(languageCode !== undefined, \"checkNotesTSV7DataRow: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkNotesTSV7DataRow: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode !== undefined, \"checkNotesTSV7DataRow: 'repoCode' parameter should be defined\");\n            //parameterAssert(typeof repoCode === 'string', `checkNotesTSV7DataRow: 'repoCode' parameter should be a string not a '${typeof repoCode}'`);\n            // parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkNotesTSV7DataRow: 'repoCode' parameter should not be '${repoCode}'`);\n            //parameterAssert(repoCode === 'TN2' || repoCode === 'SN', `checkNotesTSV7DataRow: 'repoCode' parameter should be 'TN2' or 'SN', not '${repoCode}'`);\n            //parameterAssert(line !== undefined, \"checkNotesTSV7DataRow: 'line' parameter should be defined\");\n            //parameterAssert(typeof line === 'string', `checkNotesTSV7DataRow: 'line' parameter should be a string not a '${typeof line}'`);\n            //parameterAssert(bookID !== undefined, \"checkNotesTSV7DataRow: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkNotesTSV7DataRow: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(bookID.length === 3, `checkNotesTSV7DataRow: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkNotesTSV7DataRow: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkNotesTSV7DataRow: '${bookID}' is not a valid USFM book identifier`);\n            // parameterAssert(givenC !== undefined, \"checkNotesTSV7DataRow: 'givenC' parameter should be defined\");\n            if (givenC) {//parameterAssert(typeof givenC === 'string', `checkNotesTSV7DataRow: 'givenC' parameter should be a string not a '${typeof givenC}'`);\n            } // parameterAssert(givenV !== undefined, \"checkNotesTSV7DataRow: 'givenV' parameter should be defined\");\n\n\n            if (givenV) {//parameterAssert(typeof givenV === 'string', `checkNotesTSV7DataRow: 'givenV' parameter should be a string not a '${typeof givenV}'`);\n            } //parameterAssert(givenRowLocation !== undefined, \"checkNotesTSV7DataRow: 'givenRowLocation' parameter should be defined\");\n            //parameterAssert(typeof givenRowLocation === 'string', `checkNotesTSV7DataRow: 'givenRowLocation' parameter should be a string not a '${typeof givenRowLocation}'`);\n            //parameterAssert(givenRowLocation.indexOf('true') === -1, \"checkNotesTSV7DataRow: 'givenRowLocation' parameter should not be 'true'\");\n\n\n            ourRowLocation = givenRowLocation;\n            if (ourRowLocation && ourRowLocation[0] !== ' ') ourRowLocation = \" \".concat(ourRowLocation);\n            linkCheckingOptions = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, checkingOptions);\n            linkCheckingOptions.taRepoLanguageCode = languageCode;\n            drResult = {\n              noticeList: []\n            };\n            /**\n             *\n             * @description - adds a new notice entry, adding bookID,C,V to the given fields\n             * @param {*} incompleteNoticeObject\n             */\n\n            if (!(line === EXPECTED_NOTES_HEADING_LINE)) {\n              _context4.next = 17;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", drResult);\n\n          case 17:\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (tlcELerror) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n\n\n            excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n            excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n            lowercaseBookID = bookID.toLowerCase();\n            if (bookID === 'OBS') numChaptersThisBook = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"NUM_OBS_STORIES\"]; // There’s 50 Open Bible Stories\n            else {\n              //parameterAssert(lowercaseBookID !== 'obs', \"Shouldn’t happen in checkNotesTSV7DataRow\");\n              try {\n                numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"chaptersInBook\"](bookID);\n              } catch (tlcNCerror) {\n                addNoticePartial({\n                  priority: 979,\n                  message: \"Invalid book identifier passed to checkNotesTSV7DataRow\",\n                  location: \" '\".concat(bookID, \"' in first parameter: \").concat(tlcNCerror)\n                });\n              }\n            }\n            haveGoodBookID = numChaptersThisBook !== undefined;\n            fields = line.split('\\t');\n\n            if (!(fields.length === NUM_EXPECTED_NOTES_TSV_FIELDS)) {\n              _context4.next = 85;\n              break;\n            }\n\n            _fields = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(fields, 7), reference = _fields[0], rowID = _fields[1], tags = _fields[2], supportReference = _fields[3], quote = _fields[4], occurrence = _fields[5], note = _fields[6]; // let withString = ` with '${rowID}'${inString}`;\n            // let CV_withString = ` ${C}:${V}${withString}`;\n            // let atString = ` at ${B} ${C}:${V} (${rowID})${inString}`;\n\n            // Check the fields one-by-one\n            _reference$split = reference.split(':'), _reference$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_reference$split, 2), C = _reference$split2[0], V = _reference$split2[1];\n\n            if (C.length) {\n              if (C !== givenC) addNoticePartial({\n                priority: 976,\n                message: \"Wrong chapter number\",\n                details: \"expected '\".concat(givenC, \"'\"),\n                fieldName: 'Reference',\n                rowID: rowID,\n                excerpt: C,\n                location: ourRowLocation\n              });\n\n              if (C === 'front') {} else if (/^\\d+$/.test(C)) {\n                intC = Number(C);\n\n                if (intC === 0) {\n                  addNoticePartial({\n                    priority: 824,\n                    message: \"Invalid zero chapter number\",\n                    excerpt: C,\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    location: ourRowLocation\n                  });\n                  haveGoodChapterNumber = false;\n                } // TODO: Does this next section need rewriting (see verse check below)???\n                else if (intC > numChaptersThisBook) {\n                  addNoticePartial({\n                    priority: 823,\n                    message: \"Invalid large chapter number\",\n                    excerpt: C,\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    location: ourRowLocation\n                  });\n                  haveGoodChapterNumber = false;\n                }\n\n                if (lowercaseBookID === 'obs') numVersesThisChapter = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"MAX_OBS_FRAMES\"]; // Set to maximum expected number of frames\n                else {\n                  try {\n                    numVersesThisChapter = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"versesInChapter\"](lowercaseBookID, intC);\n                    haveGoodChapterNumber = true;\n                  } catch (tlcNVerror) {\n                    if (!haveGoodBookID) // addNoticePartial({priority:500, \"Invalid chapter number\", rowLocation);\n                      // else\n                      addNoticePartial({\n                        priority: 822,\n                        message: \"Unable to check chapter number\",\n                        excerpt: C,\n                        rowID: rowID,\n                        fieldName: 'Reference',\n                        location: ourRowLocation\n                      });\n                    haveGoodChapterNumber = false;\n                  }\n                }\n              } else addNoticePartial({\n                priority: 821,\n                message: \"Bad chapter number\",\n                excerpt: C,\n                rowID: rowID,\n                fieldName: 'Reference',\n                location: ourRowLocation\n              });\n            } else addNoticePartial({\n              priority: 820,\n              message: \"Missing chapter number\",\n              rowID: rowID,\n              fieldName: 'Reference',\n              location: \" ?:\".concat(V).concat(ourRowLocation)\n            });\n\n            if (V === null || V === void 0 ? void 0 : V.length) {\n              // can be undefined if no colon at split above\n              if (V !== givenV) addNoticePartial({\n                priority: 975,\n                message: \"Wrong verse number\",\n                details: \"expected '\".concat(givenV, \"'\"),\n                rowID: rowID,\n                fieldName: 'Reference',\n                excerpt: V,\n                location: ourRowLocation\n              });\n\n              if (bookID === 'OBS' || V === 'intro') {} else if (/^\\d+$/.test(V)) {\n                intV = Number(V);\n                if (intV === 0 && bookID !== 'PSA') // Psalms have \\d as verse zero\n                  addNoticePartial({\n                    priority: 814,\n                    message: \"Invalid zero verse number\",\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    excerpt: V,\n                    location: ourRowLocation\n                  });else {\n                  if (haveGoodChapterNumber) {\n                    if (intV > numVersesThisChapter) addNoticePartial({\n                      priority: 813,\n                      message: \"Invalid large verse number\",\n                      details: \"\".concat(bookID, \" chapter \").concat(C, \" only has \").concat(numVersesThisChapter, \" verses\"),\n                      rowID: rowID,\n                      fieldName: 'Reference',\n                      excerpt: V,\n                      location: ourRowLocation\n                    });\n                  } else addNoticePartial({\n                    priority: 812,\n                    message: \"Unable to check verse number\",\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    location: ourRowLocation\n                  });\n                }\n              } else addNoticePartial({\n                priority: 811,\n                message: \"Bad verse number\",\n                rowID: rowID,\n                fieldName: 'Reference',\n                location: \" '\".concat(V, \"'\").concat(ourRowLocation)\n              });\n            } else addNoticePartial({\n              priority: 810,\n              message: \"Missing verse number\",\n              rowID: rowID,\n              fieldName: 'Reference',\n              location: \" after \".concat(C, \":?\").concat(ourRowLocation)\n            });\n\n            if (!rowID.length) addNoticePartial({\n              priority: 931,\n              message: \"Missing row ID field\",\n              fieldName: 'Reference',\n              location: ourRowLocation\n            });else {\n              if (rowID.length !== 4) {\n                addNoticePartial({\n                  priority: 778,\n                  message: \"Row ID should be exactly 4 characters\",\n                  details: \"not \".concat(rowID.length),\n                  rowID: rowID,\n                  fieldName: 'ID',\n                  excerpt: rowID,\n                  location: ourRowLocation\n                });\n                if (rowID.length > 4) RIDSuggestion = rowID.slice(0, 5);else {\n                  // must be < 4\n                  RIDSuggestion = rowID;\n\n                  while (RIDSuggestion.length < 4) {\n                    RIDSuggestion += LC_ALPHABET_PLUS_DIGITS[Math.floor(Math.random() * LC_ALPHABET_PLUS_DIGITS.length)];\n                  }\n\n                  ;\n                }\n              } else if (LC_ALPHABET.indexOf(rowID[0]) < 0) addNoticePartial({\n                priority: 176,\n                message: \"Row ID should start with a lowercase letter\",\n                characterIndex: 0,\n                rowID: rowID,\n                fieldName: 'ID',\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS.indexOf(rowID[3]) < 0) addNoticePartial({\n                priority: 175,\n                message: \"Row ID should end with a lowercase letter or digit\",\n                characterIndex: 3,\n                rowID: rowID,\n                fieldName: 'ID',\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN.indexOf(rowID[1]) < 0) addNoticePartial({\n                priority: 174,\n                message: \"Row ID characters should only be lowercase letters, digits, or hypen\",\n                fieldName: 'ID',\n                characterIndex: 1,\n                rowID: rowID,\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN.indexOf(rowID[2]) < 0) addNoticePartial({\n                priority: 173,\n                message: \"Row ID characters should only be lowercase letters, digits, or hypen\",\n                fieldName: 'ID',\n                characterIndex: 2,\n                rowID: rowID,\n                excerpt: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (tags.length) {\n              if ((characterIndex = tags.indexOf('\\\\n')) !== -1) {\n                excerpt = (characterIndex > excerptHalfLength ? '…' : '') + tags.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < tags.length ? '…' : '');\n                addNoticePartial({\n                  priority: 971,\n                  message: \"Unexpected line break in single-line field\",\n                  fieldName: 'GLQuote',\n                  rowID: rowID,\n                  characterIndex: characterIndex,\n                  excerpt: excerpt,\n                  location: ourRowLocation\n                });\n              }\n\n              tagsList = tags.split('; ');\n              _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(tagsList);\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  thisTag = _step2.value;\n                  if (thisTag !== 'title') // for TNs or SNs\n                    addNoticePartial({\n                      priority: 740,\n                      message: \"Unrecognized tag\",\n                      details: thisTag,\n                      excerpt: tags,\n                      fieldName: 'Tags',\n                      rowID: rowID,\n                      location: ourRowLocation\n                    });\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n\n            if (!supportReference.length) {\n              _context4.next = 51;\n              break;\n            }\n\n            if (!Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"isWhitespace\"])(supportReference)) {\n              _context4.next = 37;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 373,\n              message: \"Field is only whitespace\",\n              fieldName: 'SupportReference',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n            _context4.next = 50;\n            break;\n\n          case 37:\n            if (!((characterIndex = supportReference.indexOf('\\\\n')) !== -1)) {\n              _context4.next = 42;\n              break;\n            }\n\n            _excerpt = (characterIndex > excerptHalfLength ? '…' : '') + supportReference.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < supportReference.length ? '…' : '');\n            addNoticePartial({\n              priority: 971,\n              message: \"Unexpected line break in single-line field\",\n              fieldName: 'GLQuote',\n              rowID: rowID,\n              characterIndex: characterIndex,\n              excerpt: _excerpt,\n              location: ourRowLocation\n            });\n            _context4.next = 50;\n            break;\n\n          case 42:\n            if (!(repoCode === 'TN2')) {\n              _context4.next = 50;\n              break;\n            }\n\n            // More than just whitespace\n            supportReferenceArticlePart = supportReference.replace('rc://*/ta/man/translate/', ''); // debugLog(\"supportReferenceArticlePart\", supportReferenceArticlePart);\n\n            if (!supportReferenceArticlePart.startsWith('figs-') && !supportReferenceArticlePart.startsWith('grammar-') && !supportReferenceArticlePart.startsWith('translate-') && !supportReferenceArticlePart.startsWith('writing-') && supportReferenceArticlePart !== 'guidelines-sonofgodprinciples') addNoticePartial({\n              priority: 788,\n              message: \"Only 'Just-In-Time Training' TA articles allowed here\",\n              fieldName: 'SupportReference',\n              excerpt: supportReference,\n              rowID: rowID,\n              location: ourRowLocation\n            });\n            SRSuggestion = ourCheckTextField(rowID, 'SupportReference', supportReference, true, ourRowLocation, checkingOptions);\n\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) !== true)) {\n              _context4.next = 49;\n              break;\n            }\n\n            _context4.next = 49;\n            return ourCheckSupportReferenceInTA(rowID, 'SupportReference', supportReference, ourRowLocation, checkingOptions);\n\n          case 49:\n            if (note.indexOf(supportReference) < 0) addNoticePartial({\n              priority: 787,\n              message: \"Link to TA should also be in Note\",\n              fieldName: 'SupportReference',\n              excerpt: supportReference,\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 50:\n            if (characterIndex = supportReference.indexOf(\"\\u200B\") !== -1) {\n              charCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(supportReference, \"\\u200B\");\n              addNoticePartial({\n                priority: 374,\n                message: \"Field contains zero-width space(s)\",\n                details: \"\".concat(charCount, \" occurrence\").concat(charCount === 1 ? '' : 's', \" found\"),\n                fieldName: 'SupportReference',\n                characterIndex: characterIndex,\n                rowID: rowID,\n                location: ourRowLocation\n              });\n            }\n\n          case 51:\n            if (!quote.length) {\n              _context4.next = 62;\n              break;\n            }\n\n            // need to check UTN against UHB and UGNT\n            if ((characterIndex = quote.indexOf('\\\\n')) !== -1) {\n              _excerpt2 = (characterIndex > excerptHalfLength ? '…' : '') + quote.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < quote.length ? '…' : '');\n              addNoticePartial({\n                priority: 971,\n                message: \"Unexpected line break in single-line field\",\n                fieldName: 'GLQuote',\n                rowID: rowID,\n                characterIndex: characterIndex,\n                excerpt: _excerpt2,\n                location: ourRowLocation\n              });\n            }\n\n            QSuggestion = ourCheckTextField(rowID, 'Quote', quote, false, ourRowLocation, checkingOptions);\n\n            if (!occurrence.length) {\n              _context4.next = 59;\n              break;\n            }\n\n            _context4.next = 57;\n            return ourCheckTNOriginalLanguageQuoteAndOccurrence(rowID, 'Quote', quote, occurrence, ourRowLocation, checkingOptions);\n\n          case 57:\n            _context4.next = 60;\n            break;\n\n          case 59:\n            addNoticePartial({\n              priority: 750,\n              message: \"Missing occurrence field when we have an original quote\",\n              fieldName: 'Occurrence',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 60:\n            _context4.next = 63;\n            break;\n\n          case 62:\n            // TODO: Find more details about when these fields are really compulsory (and when they're not, e.g., for 'intro') ???\n            if (repoCode === 'TN2' && V !== 'intro' && occurrence !== '0') addNoticePartial({\n              priority: 919,\n              message: \"Missing Quote field\",\n              fieldName: 'Quote',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 63:\n            if (occurrence.length) {\n              // This should usually be a digit\n              if ((characterIndex = occurrence.indexOf('\\\\n')) !== -1) {\n                _excerpt3 = (characterIndex > excerptHalfLength ? '…' : '') + occurrence.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < occurrence.length ? '…' : '');\n                addNoticePartial({\n                  priority: 971,\n                  message: \"Unexpected line break in single-line field\",\n                  fieldName: 'GLQuote',\n                  rowID: rowID,\n                  characterIndex: characterIndex,\n                  excerpt: _excerpt3,\n                  location: ourRowLocation\n                });\n              }\n\n              if (occurrence === '0') {\n                // zero means that it doesn’t occur\n                if (quote.length) {\n                  addNoticePartial({\n                    priority: 751,\n                    message: \"Invalid zero occurrence field when we have an original quote\",\n                    fieldName: 'Occurrence',\n                    rowID: rowID,\n                    excerpt: occurrence,\n                    location: ourRowLocation\n                  });\n                  OSuggestion = '1';\n                } // if (V !== 'intro')\n                //     addNoticePartial({priority:500, message:\"Invalid zero occurrence field\", rowID, location:rowLocation);\n\n              } else if (occurrence === '-1') {} // TODO check the special conditions when this can occur???\n              else if ('12345678'.indexOf(occurrence) < 0) {\n                // it’s not one of these integers\n                addNoticePartial({\n                  priority: 792,\n                  message: \"Invalid occurrence field\",\n                  fieldName: 'Occurrence',\n                  rowID: rowID,\n                  excerpt: occurrence,\n                  location: ourRowLocation\n                });\n                OSuggestion = '1';\n              }\n            } else if (quote.length) {\n              addNoticePartial({\n                priority: 791,\n                message: \"Missing occurrence field\",\n                fieldName: 'Occurrence',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n              OSuggestion = '1';\n            }\n\n            if (!note.length) {\n              _context4.next = 80;\n              break;\n            }\n\n            if (note.indexOf('<br>') >= 0) {\n              _charCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(note, '<br>');\n              addNoticePartial({\n                priority: 674,\n                message: \"Field contains HTML <br> field(s)\",\n                details: \"\".concat(_charCount, \" occurrence\").concat(_charCount === 1 ? '' : 's', \" found\\u2014should be '\\\\n' instead\"),\n                fieldName: 'Note',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (note.indexOf(\"\\u200B\") >= 0) {\n              _charCount2 = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(note, \"\\u200B\");\n              addNoticePartial({\n                priority: 374,\n                message: \"Field contains zero-width space(s)\",\n                details: \"\".concat(_charCount2, \" occurrence\").concat(_charCount2 === 1 ? '' : 's', \" found\"),\n                fieldName: 'Note',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (!Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"isWhitespace\"])(note)) {\n              _context4.next = 71;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 373,\n              message: \"Field is only whitespace\",\n              fieldName: 'Note',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n            _context4.next = 78;\n            break;\n\n          case 71:\n            // More than just whitespace\n            adjustedNote = note.replace(/\\\\n/g, '\\n');\n            _context4.next = 74;\n            return ourMarkdownTextChecks(rowID, 'Note', adjustedNote, true, ourRowLocation, checkingOptions);\n\n          case 74:\n            ASuggestion = _context4.sent;\n            // await ourCheckNotesLinksToOutside(rowID, 'Note', adjustedNote, ourRowLocation, linkCheckingOptions);\n            linksList = [], foundSR = false;\n\n            while (regexMatchObject = TA_REGEX.exec(adjustedNote)) {\n              // debugLog(\"Got TA Regex in Note\", JSON.stringify(regexMatchObject));\n              linksList.push(regexMatchObject[1]);\n              adjustedLink = regexMatchObject[0].slice(2, regexMatchObject[0].length - 2);\n              if (adjustedLink === supportReference) foundSR = true;\n            }\n\n            if (linksList.length && V !== 'intro') {\n              details = supportReference ? \"SR='\".concat(supportReference, \"'\") : \"empty SR field\";\n              if (linksList.length > 1) details += \"\\u2014found \".concat(linksList.length, \" TA links\");\n              _excerpt4 = linksList.length > 1 ? JSON.stringify(linksList) : linksList[0];\n\n              if (foundSR) {\n                if (linksList.length > 1) addNoticePartial({\n                  priority: 786,\n                  message: \"Shouldn’t have multiple TA links in Note\",\n                  details: details,\n                  rowID: rowID,\n                  fieldName: 'OccurrenceNote',\n                  excerpt: _excerpt4,\n                  location: ourRowLocation\n                });\n              } else // didn’t find SR\n                addNoticePartial({\n                  priority: 789,\n                  message: \"Should have a SupportReference when Note has a TA link\",\n                  details: details,\n                  rowID: rowID,\n                  fieldName: 'OccurrenceNote',\n                  excerpt: _excerpt4,\n                  location: ourRowLocation\n                });\n            }\n\n          case 78:\n            _context4.next = 81;\n            break;\n\n          case 80:\n            // TODO: Find out if these fields are really compulsory (and when they're not, e.g., for 'intro') ???\n            if (repoCode === 'TN2') addNoticePartial({\n              priority: 274,\n              message: \"Missing Note field\",\n              fieldName: 'Note',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 81:\n            // 7 [reference, rowID, tags, supportReference, quote, occurrence, note]\n            suggestion = \"\".concat(reference, \"\\t\").concat(RIDSuggestion === undefined ? rowID : RIDSuggestion, \"\\t\").concat(tags, \"\\t\").concat(SRSuggestion === undefined ? supportReference : SRSuggestion, \"\\t\").concat(QSuggestion === undefined ? quote : QSuggestion, \"\\t\").concat(OSuggestion === undefined ? occurrence : OSuggestion, \"\\t\").concat(ASuggestion === undefined ? note : ASuggestion);\n\n            if (suggestion !== line) {\n              // debugLog(`Had note ${line}`);\n              // debugLog(`Sug note ${suggestion}`);\n              drResult.suggestion = suggestion;\n            }\n\n            _context4.next = 88;\n            break;\n\n          case 85:\n            // wrong number of fields in the row\n            // Have a go at getting some of the first fields out of the row\n            _rowID = '????';\n\n            try {\n              _rowID = fields[1];\n            } catch (_unused) {}\n\n            addNoticePartial({\n              priority: 984,\n              message: \"Found wrong number of TSV fields (expected \".concat(NUM_EXPECTED_NOTES_TSV_FIELDS, \")\"),\n              details: \"found \".concat(fields.length, \" field\").concat(fields.length === 1 ? '' : 's'),\n              rowID: _rowID,\n              location: ourRowLocation\n            });\n\n          case 88:\n            return _context4.abrupt(\"return\", drResult);\n\n          case 89:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _checkNotesTSV7DataRow.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/notes-tsv7-row-check.js?");

/***/ }),

/***/ "./src/core/notes-tsv7-table-check.js":
/*!********************************************!*\
  !*** ./src/core/notes-tsv7-table-check.js ***!
  \********************************************/
/*! exports provided: checkNotesTSV7Table */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkNotesTSV7Table\", function() { return checkNotesTSV7Table; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _notes_tsv7_row_check__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./notes-tsv7-row-check */ \"./src/core/notes-tsv7-row-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n\n // import { removeDisabledNotices } from './disabled-notices';\n// eslint-disable-next-line no-unused-vars\n\n\nvar NOTES_TABLE_VALIDATOR_VERSION_STRING = '0.4.2';\nvar NUM_EXPECTED_NOTES_TSV_FIELDS = 7; // so expects 6 tabs per line\n\nvar EXPECTED_NOTES_HEADING_LINE = 'Reference\\tID\\tTags\\tSupportReference\\tQuote\\tOccurrence\\tNote';\n/**\n *\n * @param {string} languageCode\n * @param {string} repoCode -- 'TN' or 'SN'\n * @param {string} bookID\n * @param {string} filename\n * @param {string} tableText\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkNotesTSV7Table(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n  return _checkNotesTSV7Table.apply(this, arguments);\n} // end of checkNotesTSV7Table function\n\nfunction _checkNotesTSV7Table() {\n  _checkNotesTSV7Table = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, repoCode, bookID, filename, tableText, givenLocation, checkingOptions) {\n    var ourLocation, cutoffPriorityLevel, excerptLength, carResult, addSuccessMessage, addNoticePartial, lowercaseBookID, numChaptersThisBook, lines, lastC, lastV, rowIDListForVerse, uniqueRowListForVerse, numVersesThisChapter, n, fields, _fields, reference, rowID, tags, supportReference, quote, occurrence, note, _reference$split, _reference$split2, C, V, drResultObject, _iterator, _step, drNoticeEntry, _iterator2, _step2, checkedRepoName, _iterator3, _step3, checkedFilenameExtension, uniqueID, intC, lastintC, intV, lastintV, _V$split, _V$split2, V1, V2, intV1, intV2, _lastintV, _reference, _C, _V, _rowID, _reference$split3, _reference$split4;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkNotesTSV7Table notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"ATSV addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `TSV addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"ATSV addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `TSV addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(C !== undefined, \"ATSV addNoticePartial: 'C' parameter should be defined\");\n              if (incompleteNoticeObject.C) {//parameterAssert(typeof incompleteNoticeObject.C === 'string', `TSV addNoticePartial: 'C' parameter should be a string not a '${typeof incompleteNoticeObject.C}': ${incompleteNoticeObject.C}`);\n              } // parameterAssert(V !== undefined, \"ATSV addNoticePartial: 'V' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.V) {//parameterAssert(typeof incompleteNoticeObject.V === 'string', `TSV addNoticePartial: 'V' parameter should be a string not a '${typeof incompleteNoticeObject.V}': ${incompleteNoticeObject.V}`);\n              } // parameterAssert(characterIndex !== undefined, \"ATSV addNoticePartial: 'characterIndex' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `TSV addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"ATSV addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `TSV addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"ATSV addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `TSV addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n\n\n              if (incompleteNoticeObject.debugChain) incompleteNoticeObject.debugChain = \"checkNotesTSV7Table \".concat(incompleteNoticeObject.debugChain);\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"aboutToOverwrite\"])('checkNotesTSV7Table', ['bookID', 'filename', 'repoCode'], incompleteNoticeObject, {\n                bookID: bookID,\n                filename: filename,\n                repoCode: repoCode\n              });\n              carResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                filename: filename,\n                repoCode: repoCode\n              }));\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // functionLog(`checkNotesTSV7Table success: ${successString}`);\n              carResult.successList.push(successString);\n            };\n\n            /* This function is optimised for checking the entire file, i.e., all rows.\n               It also has the advantage of being able to compare one row with the previous one.\n              bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n              Returns a result object containing a successList and a noticeList\n             */\n            // functionLog(`checkNotesTSV7Table(${languageCode}, ${repoCode}, ${bookID}, ${tableText.length}, ${givenLocation},${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(languageCode !== undefined, \"checkNotesTSV7Table: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkNotesTSV7Table: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode.endsWith('TN') || repoCode.endsWith('TN2') || repoCode.endsWith('SN'), `checkNotesTSV7Table: repoCode expected to end with 'TN', 'TN2', or 'SN' not '${repoCode}'`);\n            //parameterAssert(bookID !== undefined, \"checkNotesTSV7Table: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkNotesTSV7Table: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(bookID.length === 3, `checkNotesTSV7Table: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkNotesTSV7Table: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkNotesTSV7Table: '${bookID}' is not a valid USFM book identifier`);\n            //parameterAssert(givenLocation !== undefined, \"checkNotesTSV7Table: 'givenLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkNotesTSV7Table: 'givenLocation' parameter should be a string not a '${typeof givenLocation}'`);\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n            cutoffPriorityLevel = (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel : 0;\n\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (ttcError) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n            // const excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n            // const excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n\n            carResult = {\n              successList: [],\n              noticeList: []\n            };\n            // Main code for checkNotesTSV7Table\n            lowercaseBookID = bookID.toLowerCase();\n            numChaptersThisBook = 0;\n            if (bookID === 'OBS') numChaptersThisBook = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"NUM_OBS_STORIES\"]; // There’s 50 Open Bible Stories\n            else {\n              //parameterAssert(lowercaseBookID !== 'obs', \"Shouldn’t happen in checkNotesTSV7Table\");\n              try {\n                numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](bookID);\n              } catch (_unused) {\n                if (!_books_books__WEBPACK_IMPORTED_MODULE_5__[\"isValidBookID\"](bookID)) // must not be in FRT, BAK, etc.\n                  addNoticePartial({\n                    priority: 747,\n                    message: \"Bad function call: should be given a valid book abbreviation\",\n                    excerpt: bookID,\n                    location: \" (not '\".concat(bookID, \"')\").concat(ourLocation)\n                  });\n              }\n            }\n            lines = tableText.split('\\n'); // debugLog(`  '${location}' has ${lines.length.toLocaleString()} total lines (expecting ${NUM_EXPECTED_TN_FIELDS} fields in each line)`);\n\n            lastC = '', lastV = '';\n            rowIDListForVerse = [], uniqueRowListForVerse = [];\n            numVersesThisChapter = 0;\n            n = 0;\n\n          case 16:\n            if (!(n < lines.length)) {\n              _context.next = 48;\n              break;\n            }\n\n            if (!(n === 0)) {\n              _context.next = 21;\n              break;\n            }\n\n            if (lines[0] === EXPECTED_NOTES_HEADING_LINE) addSuccessMessage(\"Checked TSV header \".concat(ourLocation));else addNoticePartial({\n              priority: 988,\n              message: \"Bad TSV header\",\n              details: \"expected '\".concat(EXPECTED_NOTES_HEADING_LINE, \"'\"),\n              excerpt: lines[0],\n              lineNumber: 1,\n              location: ourLocation\n            });\n            _context.next = 45;\n            break;\n\n          case 21:\n            fields = lines[n].split('\\t');\n\n            if (!(fields.length === NUM_EXPECTED_NOTES_TSV_FIELDS)) {\n              _context.next = 44;\n              break;\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            _fields = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(fields, 7), reference = _fields[0], rowID = _fields[1], tags = _fields[2], supportReference = _fields[3], quote = _fields[4], occurrence = _fields[5], note = _fields[6];\n            _reference$split = reference.split(':'), _reference$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_reference$split, 2), C = _reference$split2[0], V = _reference$split2[1]; // Use the row check to do most basic checks\n\n            _context.next = 27;\n            return Object(_notes_tsv7_row_check__WEBPACK_IMPORTED_MODULE_7__[\"checkNotesTSV7DataRow\"])(username, languageCode, repoCode, lines[n], bookID, C, V, ourLocation, checkingOptions);\n\n          case 27:\n            drResultObject = _context.sent;\n            // Choose only ONE of the following\n            // This is the fast way of append the results from this field\n            // result.noticeList = result.noticeList.concat(firstResult.noticeList);\n            // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n            //  process results line by line\n            _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.noticeList);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                drNoticeEntry = _step.value;\n                if (drNoticeEntry.extra) // it must be an indirect check on a TA or TW article from a TN2 check\n                  carResult.noticeList.push(drNoticeEntry); // Just copy the complete notice as is\n                else if (drNoticeEntry.priority !== 931) // We already caught Missing row ID\n                  addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, drNoticeEntry), {}, {\n                    lineNumber: n + 1\n                  }));\n              } // The following is needed coz we might be checking the linked TA and/or TW articles\n\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            if (drResultObject.checkedFileCount && drResultObject.checkedFileCount > 0) if (typeof carResult.checkedFileCount === 'number') carResult.checkedFileCount += drResultObject.checkedFileCount;else carResult.checkedFileCount = drResultObject.checkedFileCount;\n            if (drResultObject.checkedFilesizes && drResultObject.checkedFilesizes > 0) if (typeof carResult.checkedFilesizes === 'number') carResult.checkedFilesizes += drResultObject.checkedFilesizes;else carResult.checkedFilesizes = drResultObject.checkedFilesizes;\n\n            if (drResultObject.checkedRepoNames && drResultObject.checkedRepoNames.length > 0) {\n              _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.checkedRepoNames);\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  checkedRepoName = _step2.value;\n\n                  try {\n                    if (carResult.checkedRepoNames.indexOf(checkedRepoName) < 0) carResult.checkedRepoNames.push(checkedRepoName);\n                  } catch (_unused2) {\n                    carResult.checkedRepoNames = [checkedRepoName];\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n\n            if (drResultObject.checkedFilenameExtensions && drResultObject.checkedFilenameExtensions.length > 0) {\n              _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.checkedFilenameExtensions);\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  checkedFilenameExtension = _step3.value;\n\n                  try {\n                    if (carResult.checkedFilenameExtensions.indexOf(checkedFilenameExtension) < 0) carResult.checkedFilenameExtensions.push(checkedFilenameExtension);\n                  } catch (_unused3) {\n                    carResult.checkedFilenameExtensions = [checkedFilenameExtension];\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            } // if (ttResult.checkedFilenameExtensions) debugLog(\"ttResult\", JSON.stringify(ttResult));\n            // So here we only have to check against the previous and next fields for out-of-order problems and duplicate problems\n\n\n            if (C !== lastC || V !== lastV) {\n              rowIDListForVerse = []; // ID's only need to be unique within each verse\n\n              uniqueRowListForVerse = []; // Same for these\n            } // TODO: Check if we need this at all (even though tC 3.0 can’t display these \"duplicate\" notes)\n            // Check for duplicate notes\n\n\n            uniqueID = C + V + supportReference + quote + occurrence; // This combination should not be repeated\n            // if (uniqueRowListForVerse.includes(uniqueID))\n            //     addNoticePartial({ priority: 880, C, V, message: `Duplicate note`, rowID, lineNumber: n + 1, location: ourLocation });\n            // if (uniqueRowListForVerse.includes(uniqueID))\n            //     addNoticePartial({ priority: 80, C, V, message: `Note: tC 3.0 won’t display duplicate note`, rowID, lineNumber: n + 1, location: ourLocation });\n\n            uniqueRowListForVerse.push(uniqueID);\n\n            if (C) {\n              if (C === 'front') {} else if (/^\\d+$/.test(C)) {\n                intC = Number(C);\n                if (C !== lastC) if (lowercaseBookID === 'obs') numVersesThisChapter = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"MAX_OBS_FRAMES\"]; // Set to maximum expected number of frames\n                else numVersesThisChapter = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](lowercaseBookID, intC);\n                if (intC === 0) addNoticePartial({\n                  priority: 551,\n                  C: C,\n                  V: V,\n                  message: \"Invalid zero chapter number\",\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n                if (intC > numChaptersThisBook) addNoticePartial({\n                  priority: 737,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large chapter number\",\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastC)) {\n                  lastintC = Number(lastC);\n                  if (intC < lastintC) addNoticePartial({\n                    priority: 736,\n                    C: C,\n                    V: V,\n                    message: \"Receding chapter number\",\n                    details: \"'\".concat(C, \"' after '\").concat(lastC, \"'\"),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    location: ourLocation\n                  });else if (intC > lastintC + 1) addNoticePartial({\n                    priority: 735,\n                    C: C,\n                    V: V,\n                    message: \"Advancing chapter number\",\n                    details: \"'\".concat(C, \"' after '\").concat(lastC, \"'\").rowID,\n                    lineNumber: n + 1,\n                    location: ourLocation\n                  });\n                }\n              } else addNoticePartial({\n                priority: 734,\n                C: C,\n                V: V,\n                message: \"Bad chapter number\",\n                rowID: rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n            } else addNoticePartial({\n              priority: 739,\n              C: C,\n              V: V,\n              message: \"Missing chapter number\",\n              rowID: rowID,\n              lineNumber: n + 1,\n              location: \" after \".concat(lastC, \":\").concat(V).concat(ourLocation)\n            });\n\n            if (V) {\n              if (V === 'intro') {} else if (/^\\d+$/.test(V)) {\n                // all digits\n                intV = Number(V);\n                if (intV === 0 && bookID !== 'PSA' && repoCode !== 'OBS-TN') // Psalms have \\d titles\n                  addNoticePartial({\n                    priority: 552,\n                    C: C,\n                    V: V,\n                    message: \"Invalid zero verse number\",\n                    details: \"for chapter \".concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  });\n                if (intV > numVersesThisChapter) addNoticePartial({\n                  priority: 734,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large verse number\",\n                  details: \"for chapter \".concat(C),\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastV)) {\n                  lastintV = Number(lastV);\n                  if (C === lastC && intV < lastintV) addNoticePartial({\n                    priority: 733,\n                    C: C,\n                    V: V,\n                    message: \"Receding verse number\",\n                    details: \"'\".concat(V, \"' after '\").concat(lastV, \" for chapter \").concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  }); // else if (intV > lastintV + 1)\n                  //   addNoticePartial({priority:556, `Skipped verses with '${V}' verse number after '${lastV}'${withString}`);\n                }\n              } else if (/^[-\\d]+$/.test(V)) {\n                // all digits and hyphen, i.e., a verse range\n                _V$split = V.split('-'), _V$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_V$split, 2), V1 = _V$split2[0], V2 = _V$split2[1];\n                intV1 = Number(V1), intV2 = Number(V2);\n                if (intV1 >= intV2) // in the wrong order\n                  addNoticePartial({\n                    priority: 732,\n                    C: C,\n                    V: V,\n                    message: \"Verse range in wrong order\",\n                    details: \"detected \".concat(intV1, \" before \").concat(intV2),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  });\n                if (intV2 > numVersesThisChapter) addNoticePartial({\n                  priority: 734,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large verse number\",\n                  details: \"for chapter \".concat(C),\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastV)) {\n                  _lastintV = Number(lastV);\n                  if (C === lastC && intV1 < _lastintV) addNoticePartial({\n                    priority: 733,\n                    C: C,\n                    V: V,\n                    message: \"Receding verse number\",\n                    details: \"'\".concat(V, \"' after '\").concat(lastV, \" for chapter \").concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  }); // else if (intV > lastintV + 1)\n                  //   addNoticePartial({priority:556, `Skipped verses with '${V}' verse number after '${lastV}'${withString}`);\n                }\n              } else addNoticePartial({\n                priority: 738,\n                C: C,\n                V: V,\n                message: \"Bad verse number\",\n                rowID: rowID,\n                lineNumber: n + 1,\n                excerpt: reference,\n                location: ourLocation\n              });\n            } else addNoticePartial({\n              priority: 790,\n              C: C,\n              V: V,\n              message: \"Missing verse number\",\n              rowID: rowID,\n              lineNumber: n + 1,\n              excerpt: reference,\n              location: \" after \".concat(C, \":\").concat(lastV).concat(ourLocation)\n            });\n\n            if (rowID) {\n              if (rowIDListForVerse.includes(rowID)) addNoticePartial({\n                priority: 831,\n                C: C,\n                V: V,\n                message: \"Duplicate '\".concat(rowID, \"' ID\"),\n                fieldName: 'ID',\n                rowID: rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n              rowIDListForVerse.push(rowID);\n            } else addNoticePartial({\n              priority: 932,\n              C: C,\n              V: V,\n              message: \"Missing row ID\",\n              fieldName: 'ID',\n              lineNumber: n + 1,\n              location: ourLocation\n            });\n\n            lastC = C;\n            lastV = V;\n            _context.next = 45;\n            break;\n\n          case 44:\n            // wrong number of fields in the row\n            // if (n === lines.length - 1) // it’s the last line\n            //     userLog(`  Line ${n}: Has ${fields.length} field(s) instead of ${NUM_EXPECTED_TN_FIELDS}: ${EXPECTED_TN_HEADING_LINE.replace(/\\t/g, ', ')}`);\n            // else\n            if (n !== lines.length - 1) {\n              // it’s not the last line\n              // Have a go at getting some of the first fields out of the line\n              _reference = '?:?', _C = '?', _V = '?', _rowID = '????';\n\n              try {\n                _reference = fields[0];\n              } catch (_unused4) {}\n\n              try {\n                _rowID = fields[1];\n              } catch (_unused5) {}\n\n              try {\n                _reference$split3 = _reference.split(':');\n                _reference$split4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_reference$split3, 2);\n                _C = _reference$split4[0];\n                _V = _reference$split4[1];\n              } catch (_unused6) {}\n\n              addNoticePartial({\n                priority: 983,\n                message: \"Wrong number of tabbed fields (expected \".concat(NUM_EXPECTED_NOTES_TSV_FIELDS, \")\"),\n                excerpt: \"Found \".concat(fields.length, \" field\").concat(fields.length === 1 ? '' : 's'),\n                C: _C,\n                V: _V,\n                rowID: _rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n            }\n\n          case 45:\n            n++;\n            _context.next = 16;\n            break;\n\n          case 48:\n            // if (!checkingOptions?.suppressNoticeDisablingFlag) {\n            //     // functionLog(`checkNotesTSV7Table: calling removeDisabledNotices(${carResult.noticeList.length}) having ${JSON.stringify(checkingOptions)}`);\n            //     carResult.noticeList = removeDisabledNotices(carResult.noticeList);\n            // }\n            if (cutoffPriorityLevel < 20 && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag)) addNoticePartial({\n              priority: 20,\n              message: \"Note that 'disableAllLinkFetchingFlag' was set so link targets were not checked\",\n              location: ourLocation\n            });\n            addSuccessMessage(\"Checked all \".concat((lines.length - 1).toLocaleString(), \" data line\").concat(lines.length - 1 === 1 ? '' : 's').concat(ourLocation));\n            if (carResult.noticeList.length) addSuccessMessage(\"checkNotesTSV7Table v\".concat(NOTES_TABLE_VALIDATOR_VERSION_STRING, \" finished with \").concat(carResult.noticeList.length ? carResult.noticeList.length.toLocaleString() : \"zero\", \" notice\").concat(carResult.noticeList.length === 1 ? '' : 's'));else addSuccessMessage(\"No errors or warnings found by checkNotesTSV7Table v\".concat(NOTES_TABLE_VALIDATOR_VERSION_STRING)); // debugLog(`  checkNotesTSV7Table returning with ${result.successList.length.toLocaleString()} success(es), ${result.noticeList.length.toLocaleString()} notice(s).`);\n            // debugLog(\"checkNotesTSV7Table result is\", JSON.stringify(carResult));\n\n            return _context.abrupt(\"return\", carResult);\n\n          case 52:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _checkNotesTSV7Table.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/notes-tsv7-table-check.js?");

/***/ }),

/***/ "./src/core/orig-quote-check.js":
/*!**************************************!*\
  !*** ./src/core/orig-quote-check.js ***!
  \**************************************/
/*! exports provided: checkOriginalLanguageQuoteAndOccurrence */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkOriginalLanguageQuoteAndOccurrence\", function() { return checkOriginalLanguageQuoteAndOccurrence; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./text-handling-functions */ \"./src/core/text-handling-functions.js\");\n/* harmony import */ var _getApi__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getApi */ \"./src/core/getApi.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // eslint-disable-next-line no-unused-vars\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const OL_QUOTE_VALIDATOR_VERSION_STRING = '0.10.10';\n\n/**\n *\n * @param {string} languageCode\n * @param {string} repoCode\n * @param {string} fieldName\n * @param {string} fieldText\n * @param {string} occurrenceString\n * @param {string} bookID\n * @param {string} C\n * @param {string} V\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkOriginalLanguageQuoteAndOccurrence(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11) {\n  return _checkOriginalLanguageQuoteAndOccurrence.apply(this, arguments);\n} // end of checkOriginalLanguageQuoteAndOccurrence function\n\nfunction _checkOriginalLanguageQuoteAndOccurrence() {\n  _checkOriginalLanguageQuoteAndOccurrence = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(username, languageCode, repoCode, fieldName, fieldText, occurrenceString, bookID, C, V, givenLocation, checkingOptions) {\n    var discontiguousDivider, wrongDiscontiguousDivider, ourLocation, whichTestament, colqResult, addNoticePartial, getOriginalVerse, _getOriginalVerse, getOriginalPassage, _getOriginalPassage, getWordsIndex, warnForANotFoundQuoteSegment, excerptLength, excerptHalfLength, excerptHalfLengthPlus, occurrence, characterIndex, excerpt, _excerpt, opener_index, expected_closing_char, _excerpt2, closer_index, expected_opening_char, _excerpt3, noDashFieldText, quoteBits, _excerpt4, _excerpt5, verseText, noDashVerseText, verseWordsList, numQuoteBits, quoteIndex, bitIndex, partDescription, _excerpt6, verseTextBits, actualNumOccurrences, actualOccurrencesText, _excerpt7;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            warnForANotFoundQuoteSegment = function _warnForANotFoundQuot(notFoundQuoteStringSegment, partDescriptionString, occurrenceString, fullVerseTextString, warnLocationString) {\n              // functionLog(`warnForNotFoundQuoteSegment('${notFoundQuoteStringSegment}', '${partDescriptionString}', '${occurrenceString}', '${fullVerseTextString}', ${warnLocationString}) ${C}:${V}…`);\n              //parameterAssert(notFoundQuoteStringSegment !== undefined, \"warnForNotFoundQuoteSegment: 'notFoundQuoteSegment' parameter should be defined\");\n              //parameterAssert(typeof notFoundQuoteStringSegment === 'string', `warnForNotFoundQuoteSegment: 'notFoundQuoteSegment' parameter should be a string not a '${typeof notFoundQuoteStringSegment}'`);\n              //parameterAssert(notFoundQuoteStringSegment.indexOf(discontiguousDivider) === -1, `warnForNotFoundQuoteSegment: 'notFoundQuoteSegment' parameter should not contain '${discontiguousDivider}' divider: '${notFoundQuoteStringSegment}'`);\n              //parameterAssert(partDescriptionString !== undefined, \"warnForNotFoundQuoteSegment: 'partDescription' parameter should be defined\");\n              //parameterAssert(typeof partDescriptionString === 'string', `warnForNotFoundQuoteSegment: 'partDescription' parameter should be a string not a '${typeof partDescriptionString}'`);\n              //parameterAssert(fullVerseTextString !== undefined, \"warnForNotFoundQuoteSegment: 'fullVerseText' parameter should be defined\");\n              //parameterAssert(typeof fullVerseTextString === 'string', `warnForNotFoundQuoteSegment: 'fullVerseText' parameter should be a string not a '${typeof fullVerseTextString}'`);\n              //parameterAssert(warnLocationString !== undefined, \"warnForNotFoundQuoteSegment: 'location' parameter should be defined\");\n              //parameterAssert(typeof warnLocationString === 'string', `warnForNotFoundQuoteSegment: 'location' parameter should be a string not a '${typeof warnLocationString}'`);\n              var excerpt = partDescriptionString ? \"\".concat(partDescriptionString ? '(' + partDescriptionString + ' quote portion)' : '', \" '\").concat(notFoundQuoteStringSegment, \"'\") : notFoundQuoteStringSegment;\n              if (occurrenceString && occurrenceString !== '1') excerpt = \"'\".concat(excerpt, \"' (occurrence=\").concat(occurrenceString, \")\");\n              if (occurrenceString === '-1') excerpt = \"(looking for two or more instances) \".concat(excerpt);\n              var noBreakSpaceText = notFoundQuoteStringSegment.indexOf(\"\\xA0\") >= 0 ? \"quote which contains No-Break Space (u00A0) character shown as '⍽'\" : \"\";\n              if (noBreakSpaceText) notFoundQuoteStringSegment = notFoundQuoteStringSegment.replace(/\\u00A0/g, '⍽'); // debugLog(`722 fieldText='${fieldText}'${extraText}`);\n              // debugLog(`722 verseText='${verseText}'`);\n\n              var quoteIndex = fullVerseTextString.indexOf(notFoundQuoteStringSegment); // See if the quote string actually exists in the verse!!! (This will automatically fail if the quote contains a discontiguous divider)\n              // if (occurrenceString === '1' && quoteIndex !== -1) {\n              //     debugLog(`Found quote at ${quoteIndex}: (${notFoundQuoteStringSegment.length}) ${notFoundQuoteStringSegment}`);\n              //     if (quoteIndex > 0) debugLog(`  Prev char='${fullVerseTextString.slice(quoteIndex - 1, quoteIndex)}'`);\n              //     if (quoteIndex !== -1 && quoteIndex + notFoundQuoteStringSegment.length < fullVerseTextString.length - 1) debugLog(`  Next char='${fullVerseTextString.slice(quoteIndex + notFoundQuoteStringSegment.length, quoteIndex + notFoundQuoteStringSegment.length + 1)}'`);\n              // }\n\n              var possibleOffendingChar;\n\n              if (notFoundQuoteStringSegment[0] === ' ') {\n                if (!excerpt) excerpt = notFoundQuoteStringSegment.slice(0, excerptLength) + (notFoundQuoteStringSegment.length > excerptLength ? '…' : '');\n                addNoticePartial({\n                  priority: 916,\n                  message: \"Unable to find original language quote in verse text\",\n                  details: \"quote which starts with a space\" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''),\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              } else if (notFoundQuoteStringSegment.endsWith(' ')) {\n                if (!excerpt) excerpt = (notFoundQuoteStringSegment.length > excerptLength ? '…' : '') + notFoundQuoteStringSegment.slice(notFoundQuoteStringSegment.length - excerptLength, notFoundQuoteStringSegment.length);\n                addNoticePartial({\n                  priority: 916,\n                  message: \"Unable to find original language quote in verse text\",\n                  details: \"quote which ends with a space\" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''),\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              } else if (notFoundQuoteStringSegment[0] === \"\\u2060\") {\n                // Word joiner\n                if (!excerpt) excerpt = notFoundQuoteStringSegment.slice(0, excerptLength) + (notFoundQuoteStringSegment.length > excerptLength ? '…' : '');\n                addNoticePartial({\n                  priority: 916,\n                  message: \"Unable to find original language quote in verse text\",\n                  details: \"quote which starts with word joiner (u2060) character'\" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''),\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              } else if (notFoundQuoteStringSegment.endsWith(\"\\u2060\")) {\n                // Word joiner\n                if (!excerpt) excerpt = (notFoundQuoteStringSegment.length > excerptLength ? '…' : '') + notFoundQuoteStringSegment.slice(notFoundQuoteStringSegment.length - excerptLength, notFoundQuoteStringSegment.length);\n                addNoticePartial({\n                  priority: 916,\n                  message: \"Unable to find original language quote in verse text\",\n                  details: \"quote which ends with word joiner  (u2060) character\" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''),\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              } else if (notFoundQuoteStringSegment[0] === \"\\u200B\") {\n                // Zero-width space\n                if (!excerpt) excerpt = notFoundQuoteStringSegment.slice(0, excerptLength) + (notFoundQuoteStringSegment.length > excerptLength ? '…' : '');\n                addNoticePartial({\n                  priority: 916,\n                  message: \"Unable to find original language quote in verse text\",\n                  details: \"quote which starts with zero-width space (u200B) character\" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''),\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              } else if (notFoundQuoteStringSegment.endsWith(\"\\u200B\")) {\n                // Zero-width space\n                if (!excerpt) excerpt = (notFoundQuoteStringSegment.length > excerptLength ? '…' : '') + notFoundQuoteStringSegment.slice(notFoundQuoteStringSegment.length - excerptLength, notFoundQuoteStringSegment.length);\n                addNoticePartial({\n                  priority: 916,\n                  message: \"Unable to find original language quote in verse text\",\n                  details: \"quote which ends with zero-width space (u200B) character\" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''),\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              } else if (notFoundQuoteStringSegment[0] === \"\\u200D\") {\n                // Zero-width joiner\n                if (!excerpt) excerpt = notFoundQuoteStringSegment.slice(0, excerptLength) + (notFoundQuoteStringSegment.length > excerptLength ? '…' : '');\n                addNoticePartial({\n                  priority: 916,\n                  message: \"Unable to find original language quote in verse text\",\n                  details: \"quote which starts with zero-width joiner (u200D) character\" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''),\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              } else if (notFoundQuoteStringSegment.endsWith(\"\\u200D\")) {\n                // Zero-width joiner\n                if (!excerpt) excerpt = (notFoundQuoteStringSegment.length > excerptLength ? '…' : '') + notFoundQuoteStringSegment.slice(notFoundQuoteStringSegment.length - excerptLength, notFoundQuoteStringSegment.length);\n                addNoticePartial({\n                  priority: 916,\n                  message: \"Unable to find original language quote in verse text\",\n                  details: \"quote which ends with zero-width joiner (u200D) character\" + (noBreakSpaceText ? ' ' + noBreakSpaceText : ''),\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              } else if (occurrenceString === '1' && quoteIndex > 0 && ' “‘[('.indexOf(possibleOffendingChar = fullVerseTextString.slice(quoteIndex - 1, quoteIndex)) === -1) {\n                // The problem with the contiguous quote must presumably be at the beginning of the quote\n                addNoticePartial({\n                  priority: 909,\n                  message: \"Seems original language quote might not start at the beginning of a word\",\n                  details: \"It seems to follow '\".concat(possibleOffendingChar, \"' in verse text \\u25D7\").concat(fullVerseTextString, \"\\u25D6\"),\n                  characterIndex: 0,\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              } else if (occurrenceString === '1' && quoteIndex !== -1 && quoteIndex + notFoundQuoteStringSegment.length < fullVerseTextString.length - 1 && ' .,?!;:”’])'.indexOf(possibleOffendingChar = fullVerseTextString.slice(quoteIndex + notFoundQuoteStringSegment.length, quoteIndex + notFoundQuoteStringSegment.length + 1)) === -1) {\n                // The problem with the contiguous quote must presumably be at the end of the quote\n                addNoticePartial({\n                  priority: 908,\n                  message: \"Seems original language quote might not finish at the end of a word\",\n                  details: \"It seems to precede '\".concat(possibleOffendingChar, \"' in verse text \\u25D7\").concat(fullVerseTextString, \"\\u25D6\"),\n                  characterIndex: 0,\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              } else {\n                if (!excerpt) excerpt = notFoundQuoteStringSegment.length <= excerptLength ? notFoundQuoteStringSegment : notFoundQuoteStringSegment.slice(0, excerptHalfLength) + (notFoundQuoteStringSegment.length > 2 * excerptHalfLength ? '…' : '') + notFoundQuoteStringSegment.slice(notFoundQuoteStringSegment.length - excerptHalfLength, notFoundQuoteStringSegment.length);\n                addNoticePartial({\n                  priority: 916,\n                  message: \"Unable to find original language quote in verse text\",\n                  details: noBreakSpaceText ? noBreakSpaceText : \"verse text \\u25D7\".concat(fullVerseTextString, \"\\u25D6\"),\n                  excerpt: excerpt,\n                  location: warnLocationString\n                });\n              }\n            };\n\n            getWordsIndex = function _getWordsIndex(origWordsList, searchWordsList, givenOccurrenceNumber) {\n              var startAt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n              // NOTE: This function is called separately for each part of a multi-part quote\n              var debugStrings = [];\n              debugStrings.push(\"getWordsIndex((\".concat(origWordsList.length, \") \").concat(JSON.stringify(origWordsList), \", (\").concat(searchWordsList.length, \") \").concat(JSON.stringify(searchWordsList), \", \").concat(givenOccurrenceNumber, \", \").concat(startAt, \") for \").concat(bookID, \" \").concat(C, \":\").concat(V, \"\\u2026\")); // if (givenOccurrenceNumber !== 1)\n              //     functionLog(`getWordsIndex((${origWordsList.length}) ${JSON.stringify(origWordsList)}, (${searchWordsList.length}) ${JSON.stringify(searchWordsList)}, ${givenOccurrenceNumber}, ${startAt}) for ${bookID} ${C}:${V}…`);\n              //parameterAssert(origWordsList !== undefined, \"getWordsIndex: 'origWords' parameter should be defined\");\n              //parameterAssert(typeof origWordsList === 'object', `getWordsIndex: 'origWords' parameter should be an Array not a '${typeof origWordsList}': ${origWordsList}`);\n              //parameterAssert(Array.isArray(origWordsList), `getWordsIndex: 'origWords' parameter should be an Array not a '${typeof origWordsList}': ${origWordsList}`);\n              //parameterAssert(searchWordsList !== undefined, \"getWordsIndex: 'searchWords' parameter should be defined\");\n              //parameterAssert(typeof searchWordsList === 'object', `getWordsIndex: 'searchWords' parameter should be an Array not a '${typeof searchWordsList}': ${searchWordsList}`);\n              //parameterAssert(Array.isArray(searchWordsList), `getWordsIndex: 'searchWords' parameter should be an Array not a '${typeof searchWordsList}': ${searchWordsList}`);\n              //parameterAssert(givenOccurrenceNumber !== undefined, \"getWordsIndex: 'occurrence' parameter should be defined\");\n              //parameterAssert(typeof givenOccurrenceNumber === 'number', `getWordsIndex: 'occurrence' parameter should be a number not a '${typeof givenOccurrenceNumber}': '${givenOccurrenceNumber}'`);\n              //parameterAssert(givenOccurrenceNumber >= 1 || givenOccurrenceNumber === -1, `getWordsIndex: 'occurrence' parameter should be one or greater or -1, not ${givenOccurrenceNumber}`);\n              //parameterAssert(startAt !== undefined, \"getWordsIndex: 'startAt' parameter should be defined\");\n              //parameterAssert(typeof startAt === 'number', `getWordsIndex: 'startAt' parameter should be a number not a '${typeof startAt}': '${startAt}'`);\n              //parameterAssert(startAt >= 0 && startAt < origWordsList.length, `getWordsIndex: 'startAt' parameter should be in range 0..${origWordsList.length - 1} inclusive, not ${startAt}`);\n\n              var occurrenceNumber = givenOccurrenceNumber === -1 ? 2 : givenOccurrenceNumber; // Convert -1 to +2, i.e., if -1 is used, we'll expect at least two occurrences\n\n              var tryCount = 0;\n              var matchWordCount = 0; // index into searchWords\n\n              var matchStartIndex = -1; // index into origWords\n\n              var searchWord = searchWordsList[0];\n\n              var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(origWordsList.slice(startAt)),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var origWord = _step.value;\n                  // if (givenOccurrenceNumber > 1 || searchWordsList.length > 3) debugLog(`getWordsIndex(${searchWord}, ${occurrenceNumber}/${givenOccurrenceNumber}) checking '${origWord}' with tryCount=${tryCount} matchWordCount=${matchWordCount} matchStartIndex=${matchStartIndex}`);\n                  debugStrings.push(\"getWordsIndex: checking '\".concat(searchWord, \"' \").concat(occurrenceNumber, \"/\").concat(givenOccurrenceNumber, \" against '\").concat(origWord, \"' with tryCount=\").concat(tryCount, \" matchWordCount=\").concat(matchWordCount, \" matchStartIndex=\").concat(matchStartIndex));\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"logicAssert\"])(searchWord.indexOf(' ') === -1, \"getWordsIndex: searchWords shouldn\\u2019t have spaces in them: '\".concat(searchWord, \"'\"));\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"logicAssert\"])(origWord.indexOf(' ') === -1, \"getWordsIndex: origWords shouldn\\u2019t have spaces in them: '\".concat(origWord, \"'\")); // Remove any leading punctuation if we haven't started matching words yet\n\n                  var adjustedOrigWord = origWord;\n\n                  if (matchWordCount === 0 && (origWord[0] === '“' || origWord[0] === '‘' || origWord[0] === '(' || origWord[0] === '[')) {\n                    adjustedOrigWord = origWord.slice(1); // Remove leading punctuation for first potential word match\n                    // debugLog(`getWordsIndex: Adjusted '${origWord}' to '${adjustedOrigWord}'`);\n\n                    debugStrings.push(\"getWordsIndex: Adjusted '\".concat(origWord, \"' to '\").concat(adjustedOrigWord, \"'\"));\n                  }\n\n                  ++tryCount;\n\n                  if (searchWord === adjustedOrigWord || searchWord === origWord) {\n                    // We need both because sometimes the search string includes opening and closing quotes\n                    // || (bookID === 'OBS'\n                    //     && ((searchWord === origWord.slice(0, origWord.length - 1) && ',.'.indexOf(origWord.slice(-1)) !== -1)\n                    //         || (searchWord === origWord.slice(0, origWord.length - 2) && [',”', ',’', '.”', '.’', '!”'].indexOf(origWord.slice(-2)) !== -1)\n                    //     )\n                    // )\n                    if (matchWordCount === 0) matchStartIndex = startAt + tryCount - 1;\n\n                    if (++matchWordCount === searchWordsList.length) {\n                      if (occurrenceNumber === 1) {\n                        // debugLog(`  getWordsIndex returning1 ${matchStartIndex}`);\n                        return matchStartIndex;\n                      } else {\n                        // occurrence > 1\n                        // debugLog(`  getWordsIndex found a preliminary occurrence of ${bookID} ${C}:${V} '${searchWord}' at ${matchStartIndex}`);\n                        debugStrings.push(\"  getWordsIndex found a preliminary occurrence of \".concat(bookID, \" \").concat(C, \":\").concat(V, \" '\").concat(searchWord, \"' at \").concat(matchStartIndex));\n                        --occurrenceNumber; // not the right one yet\n\n                        matchWordCount = 0;\n                        matchStartIndex = -1; // Back to square one\n                      }\n                    }\n                  } else if (matchWordCount === searchWordsList.length - 1 && (adjustedOrigWord.startsWith(searchWord) || origWord.startsWith(searchWord))) {\n                    // match last word without punctuation\n                    var lastWordRemainder = adjustedOrigWord.startsWith(searchWord) ? adjustedOrigWord.slice(searchWord.length) : origWord.slice(searchWord.length); // debugLog(`  getWordsIndex got lastWordRemainder=${lastWordRemainder}`);\n\n                    var remainderIsAllPunct = true;\n                    var regex = new RegExp('[,.?!”]?’?”?'); // Matches one, two, or three final punctuation characters\n\n                    var specialMatch = regex.test(lastWordRemainder); // if (specialMatch) debugLog(`  getWordsIndex checking special match on '${origWord}' lastWordRemainder=${lastWordRemainder} got ${specialMatch}`);\n\n                    if (!specialMatch) {\n                      var _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lastWordRemainder),\n                          _step2;\n\n                      try {\n                        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                          var lastWordRemainderChar = _step2.value;\n                          // debugLog(`  getWordsIndex checking lastWordRemainderChar=${lastWordRemainderChar} from '${origWord}'`);\n                          debugStrings.push(\"  getWordsIndex checking lastWordRemainderChar=\".concat(lastWordRemainderChar, \" from '\").concat(origWord, \"'\"));\n\n                          if (_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"CLOSING_PUNCTUATION_CHARACTERS\"].indexOf(lastWordRemainderChar) === -1 && 'ספ'.indexOf(lastWordRemainderChar) === -1) {\n                            // debugLog(`  getWordsIndex failed at ${bookID} ${C}:${V} on '${origWord}' with lastWordRemainderChar=${lastWordRemainderChar}`);\n                            // matchWordCount = 0; matchStartIndex = -1;// Back to square one\n                            remainderIsAllPunct = false;\n                            break;\n                          }\n                        }\n                      } catch (err) {\n                        _iterator2.e(err);\n                      } finally {\n                        _iterator2.f();\n                      }\n                    }\n\n                    if (remainderIsAllPunct && occurrenceNumber === 1) {\n                      if (matchWordCount === 0) matchStartIndex = startAt + tryCount - 1; // debugLog(`  getWordsIndex returning2 ${matchStartIndex}`);\n\n                      return matchStartIndex;\n                    } else if (remainderIsAllPunct) {\n                      // occurrence > 1\n                      // debugLog(`  getWordsIndex found a preliminary occurrence of ${bookID} ${C}:${V} '${searchWord}' at ${matchStartIndex} (with punctuation)`);\n                      debugStrings.push(\"  getWordsIndex found a preliminary occurrence of \".concat(bookID, \" \").concat(C, \":\").concat(V, \" '\").concat(searchWord, \"' at \").concat(matchStartIndex, \" (with punctuation)\"));\n                      --occurrenceNumber; // not the right one yet\n\n                      matchWordCount = 0;\n                      matchStartIndex = -1; // Back to square one\n                    } else {\n                      // not remainderIsAllPunct so we don't have an acceptable match\n                      // This happens if there's a word in the text that STARTS WITH the word being searched for\n                      // Note that we were on the last search word here (but there might only be one)\n                      if (matchWordCount > 0) debugStrings.push(\"getWordsIndex for \".concat(bookID, \" \").concat(C, \":\").concat(V, \" could potentially miss a second consecutive '\").concat(searchWordsList[0], \"' word1 from (\").concat(origWordsList.length, \") \").concat(JSON.stringify(origWordsList), \", (\").concat(searchWordsList.length, \") \").concat(JSON.stringify(searchWordsList), \", givenOccurrenceNumber=\").concat(givenOccurrenceNumber, \"/\").concat(occurrenceNumber, \", startAt=\").concat(startAt));\n                      matchWordCount = 0;\n                      matchStartIndex = -1; // Back to square one\n                    }\n                  } else {\n                    // not a match to a whole word, or to the final word without punctuation\n                    if (matchWordCount > 0) {\n                      Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"logicAssert\"])(searchWordsList.length > 1, \"Only expected this to happen with more than one search word: (\".concat(searchWordsList.length, \") \").concat(searchWordsList));\n                      debugStrings.push(\"getWordsIndex for \".concat(bookID, \" \").concat(C, \":\").concat(V, \" could potentially miss a second consecutive '\").concat(searchWordsList[0], \"' word2 from (\").concat(origWordsList.length, \") \").concat(JSON.stringify(origWordsList), \", (\").concat(searchWordsList.length, \") \").concat(JSON.stringify(searchWordsList), \", givenOccurrenceNumber=\").concat(givenOccurrenceNumber, \"/\").concat(occurrenceNumber, \", startAt=\").concat(startAt));\n                    }\n\n                    matchWordCount = 0;\n                    matchStartIndex = -1; // Back to square one\n                  }\n\n                  searchWord = searchWordsList[matchWordCount]; // Get the correct word to search for on the next loop\n                } // Didn’t find it\n                // for (const debugString of debugStrings) debugLog(debugString); // Display all the accumulated debug messages\n                // debugLog(`getWordsIndex for ${bookID} ${C}:${V} returning -1 for (${origWordsList.length}) ${JSON.stringify(origWordsList)}, (${searchWordsList.length}) ${JSON.stringify(searchWordsList)}, givenOccurrenceNumber=${givenOccurrenceNumber}/${occurrenceNumber}, startAt=${startAt}`);\n\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              return -1;\n            };\n\n            _getOriginalPassage = function _getOriginalPassage3() {\n              _getOriginalPassage = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(bookID, C, V, checkingOptions) {\n                var vBits, vStartInt, vEndInt, versePassage, vInt;\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!/^[0-9]{1,3}$/.test(V)) {\n                          _context2.next = 4;\n                          break;\n                        }\n\n                        _context2.next = 3;\n                        return getOriginalVerse(bookID, C, V, checkingOptions);\n\n                      case 3:\n                        return _context2.abrupt(\"return\", _context2.sent);\n\n                      case 4:\n                        V = V.replace('–', '-'); // Make sure than en-dash becomes a hyphen\n\n                        vBits = V.split('-');\n\n                        if (!(vBits.length !== 2)) {\n                          _context2.next = 10;\n                          break;\n                        }\n\n                        _context2.next = 9;\n                        return getOriginalVerse(bookID, C, V, checkingOptions);\n\n                      case 9:\n                        return _context2.abrupt(\"return\", _context2.sent);\n\n                      case 10:\n                        _context2.prev = 10;\n                        vStartInt = parseInt(vBits[0]);\n                        vEndInt = parseInt(vBits[1]);\n                        _context2.next = 19;\n                        break;\n\n                      case 15:\n                        _context2.prev = 15;\n                        _context2.t0 = _context2[\"catch\"](10);\n                        console.log(\"checkOriginalLanguageQuoteAndOccurrence: getOriginalVerse failed on '\".concat(V, \"' with \").concat(_context2.t0));\n                        return _context2.abrupt(\"return\");\n\n                      case 19:\n                        if (!(vStartInt >= vEndInt)) {\n                          _context2.next = 22;\n                          break;\n                        }\n\n                        console.log(\"checkOriginalLanguageQuoteAndOccurrence: getOriginalVerse failed on '\".concat(V, \"'\"));\n                        return _context2.abrupt(\"return\");\n\n                      case 22:\n                        versePassage = '';\n                        vInt = vStartInt;\n\n                      case 24:\n                        if (!(vInt <= vEndInt)) {\n                          _context2.next = 34;\n                          break;\n                        }\n\n                        _context2.t1 = versePassage;\n                        _context2.t2 = versePassage.length ? ' ' : '';\n                        _context2.next = 29;\n                        return getOriginalVerse(bookID, C, vInt.toString(), checkingOptions);\n\n                      case 29:\n                        _context2.t3 = _context2.sent;\n                        versePassage = _context2.t1 += _context2.t2 + _context2.t3;\n\n                      case 31:\n                        vInt++;\n                        _context2.next = 24;\n                        break;\n\n                      case 34:\n                        return _context2.abrupt(\"return\", versePassage);\n\n                      case 35:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[10, 15]]);\n              }));\n              return _getOriginalPassage.apply(this, arguments);\n            };\n\n            getOriginalPassage = function _getOriginalPassage2(_x16, _x17, _x18, _x19) {\n              return _getOriginalPassage.apply(this, arguments);\n            };\n\n            _getOriginalVerse = function _getOriginalVerse3() {\n              _getOriginalVerse = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(bookID, C, V, checkingOptions) {\n                var username, branch, getFile_, verseText, originalMarkdown, OBSRepoName, adjC, adjV, OBSPathname, gotIt, searchString, _iterator3, _step3, line, bookNumberAndName, originalLanguageRepoLanguageCode, originalLanguageRepoCode, originalLanguageRepoName, filename, originalUSFM, foundChapter, foundVerse, _iterator4, _step4, bookLine, ixW, ixEnd, field, bits, adjusted_field;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        // TODO: Cache these ???\n                        // functionLog(`checkOriginalLanguageQuoteAndOccurrence getOriginalVerse(${bookID}, ${C}:${V})…`);\n                        //parameterAssert(V.indexOf('-') === -1 && V.indexOf('–') === -1, `checkOriginalLanguageQuoteAndOccurrence getOriginalVerse: Did not expect hyphen or dash in V parameter: '${V}'`);\n                        try {\n                          username = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.originalLanguageRepoUsername;\n                        } catch (qcoError) {}\n\n                        if (!username) username = languageCode === 'en' ? 'unfoldingWord' : 'Door43-Catalog'; // ??? !!!\n\n                        try {\n                          branch = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.originalLanguageRepoBranch;\n                        } catch (qcunError) {}\n\n                        if (!branch) branch = 'master';\n                        getFile_ = checkingOptions && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile : _getApi__WEBPACK_IMPORTED_MODULE_7__[\"cachedGetFile\"];\n                        verseText = '';\n\n                        if (!(bookID === 'OBS')) {\n                          _context.next = 53;\n                          break;\n                        }\n\n                        OBSRepoName = \"\".concat(languageCode, \"_obs\");\n                        adjC = C.length === 2 ? C : '0' + C;\n                        adjV = V.length === 2 ? V : '0' + V;\n                        OBSPathname = \"content/\".concat(adjC, \".md\");\n                        _context.prev = 11;\n                        _context.next = 14;\n                        return getFile_({\n                          username: username,\n                          repository: OBSRepoName,\n                          path: OBSPathname,\n                          branch: branch\n                        });\n\n                      case 14:\n                        originalMarkdown = _context.sent;\n                        _context.next = 21;\n                        break;\n\n                      case 17:\n                        _context.prev = 17;\n                        _context.t0 = _context[\"catch\"](11);\n                        // NOTE: The error can depend on whether the zipped repo is cached or not\n                        console.error(\"getOriginalVerse(\".concat(bookID, \", \").concat(C, \":\").concat(V, \", \").concat(JSON.stringify(checkingOptions), \") failed to load UHB\"), username, languageCode, OBSPathname, branch, _context.t0.message);\n                        addNoticePartial({\n                          priority: 601,\n                          message: \"Unable to load file\",\n                          details: \"error=\".concat(_context.t0),\n                          username: username,\n                          OBSPathname: OBSPathname,\n                          location: ourLocation,\n                          extra: OBSRepoName\n                        });\n\n                      case 21:\n                        if (originalMarkdown) {\n                          _context.next = 23;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", '');\n\n                      case 23:\n                        gotIt = V === '0' || V === 'intro'; // normally false, but true for intro (so grabs first line of text = heading line)\n\n                        searchString = \"-\".concat(adjC, \"-\").concat(adjV, \".\"); // NOTE: Bible references get appended to the last frame text (but I don’t think it does any harm)\n\n                        _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(originalMarkdown.split('\\n'));\n                        _context.prev = 26;\n\n                        _iterator3.s();\n\n                      case 28:\n                        if ((_step3 = _iterator3.n()).done) {\n                          _context.next = 43;\n                          break;\n                        }\n\n                        line = _step3.value;\n\n                        if (line) {\n                          _context.next = 32;\n                          break;\n                        }\n\n                        return _context.abrupt(\"continue\", 41);\n\n                      case 32:\n                        if (!(line.indexOf(searchString) > 0)) {\n                          _context.next = 35;\n                          break;\n                        }\n\n                        gotIt = true;\n                        return _context.abrupt(\"continue\", 41);\n\n                      case 35:\n                        if (!gotIt) {\n                          _context.next = 41;\n                          break;\n                        }\n\n                        if (!(line.indexOf('[OBS Image]') > 0)) {\n                          _context.next = 40;\n                          break;\n                        }\n\n                        return _context.abrupt(\"break\", 43);\n\n                      case 40:\n                        if (line[0] === '_') // e.g., _A Bible story from..._\n                          verseText += \" \".concat(line.replace(/_/g, '')); // NOTE: remove underlines (markdown format codes)\n                        else verseText += line;\n\n                      case 41:\n                        _context.next = 28;\n                        break;\n\n                      case 43:\n                        _context.next = 48;\n                        break;\n\n                      case 45:\n                        _context.prev = 45;\n                        _context.t1 = _context[\"catch\"](26);\n\n                        _iterator3.e(_context.t1);\n\n                      case 48:\n                        _context.prev = 48;\n\n                        _iterator3.f();\n\n                        return _context.finish(48);\n\n                      case 51:\n                        _context.next = 117;\n                        break;\n\n                      case 53:\n                        // not OBS, so a USFM Bible book\n                        bookNumberAndName = _books_books__WEBPACK_IMPORTED_MODULE_4__[\"usfmNumberName\"](bookID);\n                        originalLanguageRepoLanguageCode = whichTestament === 'old' ? 'hbo' : 'el-x-koine';\n                        originalLanguageRepoCode = whichTestament === 'old' ? 'UHB' : 'UGNT';\n                        originalLanguageRepoName = \"\".concat(originalLanguageRepoLanguageCode, \"_\").concat(originalLanguageRepoCode.toLowerCase());\n                        filename = \"\".concat(bookNumberAndName, \".usfm\");\n\n                        if (!(originalLanguageRepoCode === 'UHB')) {\n                          _context.next = 71;\n                          break;\n                        }\n\n                        _context.prev = 59;\n                        _context.next = 62;\n                        return getFile_({\n                          username: username,\n                          repository: originalLanguageRepoName,\n                          path: filename,\n                          branch: branch\n                        });\n\n                      case 62:\n                        originalUSFM = _context.sent;\n                        _context.next = 69;\n                        break;\n\n                      case 65:\n                        _context.prev = 65;\n                        _context.t2 = _context[\"catch\"](59);\n                        // NOTE: The error can depend on whether the zipped repo is cached or not\n                        console.error(\"getOriginalVerse(\".concat(bookID, \", \").concat(C, \":\").concat(V, \", \").concat(JSON.stringify(checkingOptions), \") failed to load UHB\"), username, originalLanguageRepoCode, filename, branch, _context.t2.message);\n                        addNoticePartial({\n                          priority: 601,\n                          message: \"Unable to load file\",\n                          details: \"error=\".concat(_context.t2),\n                          username: username,\n                          filename: filename,\n                          location: ourLocation,\n                          extra: originalLanguageRepoName\n                        });\n\n                      case 69:\n                        _context.next = 82;\n                        break;\n\n                      case 71:\n                        if (!(originalLanguageRepoCode === 'UGNT')) {\n                          _context.next = 82;\n                          break;\n                        }\n\n                        _context.prev = 72;\n                        _context.next = 75;\n                        return getFile_({\n                          username: username,\n                          repository: originalLanguageRepoName,\n                          path: filename,\n                          branch: branch\n                        });\n\n                      case 75:\n                        originalUSFM = _context.sent;\n                        _context.next = 82;\n                        break;\n\n                      case 78:\n                        _context.prev = 78;\n                        _context.t3 = _context[\"catch\"](72);\n                        // NOTE: The error can depend on whether the zipped repo is cached or not\n                        console.error(\"getOriginalVerse(\".concat(bookID, \", \").concat(C, \":\").concat(V, \", \").concat(JSON.stringify(checkingOptions), \") failed to load UGNT\"), username, originalLanguageRepoCode, filename, branch, _context.t3.message);\n                        addNoticePartial({\n                          priority: 601,\n                          message: \"Unable to load file\",\n                          details: \"error=\".concat(_context.t3),\n                          username: username,\n                          filename: filename,\n                          location: ourLocation,\n                          extra: originalLanguageRepoName\n                        });\n\n                      case 82:\n                        if (originalUSFM) {\n                          _context.next = 85;\n                          break;\n                        }\n\n                        Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"debugLog\"])(\"Oops: getOriginalVerse(\".concat(bookID, \", \").concat(C, \":\").concat(V, \", ) didn\\u2019t find a file!!!\"));\n                        return _context.abrupt(\"return\", '');\n\n                      case 85:\n                        // Do global fixes\n                        originalUSFM = originalUSFM.replace(/\\\\k-e\\\\\\*/g, ''); // Remove \\k-e self-closed milestones\n\n                        originalUSFM = originalUSFM.replace(/\\\\k-s.+?\\\\\\*/g, ''); // Remove \\k-s self-closed milestones\n                        // Now find the desired C:V\n\n                        foundChapter = false, foundVerse = false;\n                        _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(originalUSFM.split('\\n'));\n                        _context.prev = 89;\n\n                        _iterator4.s();\n\n                      case 91:\n                        if ((_step4 = _iterator4.n()).done) {\n                          _context.next = 103;\n                          break;\n                        }\n\n                        bookLine = _step4.value;\n\n                        if (!(!foundChapter && bookLine === \"\\\\c \".concat(C))) {\n                          _context.next = 96;\n                          break;\n                        }\n\n                        foundChapter = true;\n                        return _context.abrupt(\"continue\", 101);\n\n                      case 96:\n                        if (foundChapter && !foundVerse && bookLine.startsWith(\"\\\\v \".concat(V))) {\n                          foundVerse = true;\n                          bookLine = bookLine.slice(3 + V.length); // Delete verse number so below bit doesn’t fail\n                        }\n\n                        if (!foundVerse) {\n                          _context.next = 101;\n                          break;\n                        }\n\n                        if (!(bookLine.startsWith('\\\\v ') || bookLine.startsWith('\\\\c '))) {\n                          _context.next = 100;\n                          break;\n                        }\n\n                        return _context.abrupt(\"break\", 103);\n\n                      case 100:\n                        // Don’t go into the next verse or chapter\n                        verseText += (bookLine.startsWith('\\\\f ') ? '' : ' ') + bookLine;\n\n                      case 101:\n                        _context.next = 91;\n                        break;\n\n                      case 103:\n                        _context.next = 108;\n                        break;\n\n                      case 105:\n                        _context.prev = 105;\n                        _context.t4 = _context[\"catch\"](89);\n\n                        _iterator4.e(_context.t4);\n\n                      case 108:\n                        _context.prev = 108;\n\n                        _iterator4.f();\n\n                        return _context.finish(108);\n\n                      case 111:\n                        verseText = verseText.replace(/\\\\p/g, '').trim().replace(/ {2}/g, ' '); // debugLog(`Got verse text1: '${verseText}'`);\n                        // Remove \\w fields (just leaving the actual Bible text words)\n\n                        ixW = verseText.indexOf('\\\\w ');\n\n                        while (ixW !== -1) {\n                          ixEnd = verseText.indexOf('\\\\w*', ixW);\n\n                          if (ixEnd !== -1) {\n                            field = verseText.slice(ixW + 3, ixEnd);\n                            bits = field.split('|');\n                            adjusted_field = bits[0];\n                            verseText = verseText.slice(0, ixW) + adjusted_field + verseText.slice(ixEnd + 3);\n                          } else {\n                            Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"debugLog\"])(\"getOriginalVerse: missing \\\\w* in \".concat(bookID, \" \").concat(C, \":\").concat(V, \" verseText: '\").concat(verseText, \"'\"));\n                            verseText = verseText.replace(/\\\\w /g, '', 1); // Attempt to limp on\n                          }\n\n                          ixW = verseText.indexOf('\\\\w ', ixW + 1); // Might be another one\n                        } // debugLog(`Got verse text2: '${verseText}'`);\n                        // Remove footnotes\n                        // NOTE: If there's two footnotes and no closer on the first one, this replace will swallow intervening text\n                        //  but this isn't the place to worry about bad USFM in the original languages\n                        //  so the quote match will possibly fail as a consequential error\n\n\n                        verseText = verseText.replace(/\\\\f (.+?)\\\\f\\*/g, ''); // Remove alternative versifications\n\n                        verseText = verseText.replace(/\\\\va (.+?)\\\\va\\*/g, ''); // debugLog(`Got verse text3: '${verseText}'`);\n                        // Final clean-up (shouldn’t be necessary, but just in case)\n\n                        verseText = verseText.replace(/ {2}/g, ' '); //parameterAssert(verseText.indexOf('\\\\w') === -1, `getOriginalVerse: Should be no \\\\w in ${bookID} ${C}:${V} '${verseText}'`);\n                        //parameterAssert(verseText.indexOf('\\\\k') === -1, `getOriginalVerse: Should be no \\\\k in ${bookID} ${C}:${V} '${verseText}'`);\n                        //parameterAssert(verseText.indexOf('x-') === -1, `getOriginalVerse: Should be no x- in ${bookID} ${C}:${V} '${verseText}'`);\n                        //parameterAssert(verseText.indexOf('\\\\f') === -1, `getOriginalVerse: Should be no \\\\f in ${bookID} ${C}:${V} '${verseText}'`);\n                        //parameterAssert(verseText.indexOf('\\\\x') === -1, `getOriginalVerse: Should be no \\\\x in ${bookID} ${C}:${V} '${verseText}'`);\n\n                      case 117:\n                        return _context.abrupt(\"return\", verseText);\n\n                      case 118:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[11, 17], [26, 45, 48, 51], [59, 65], [72, 78], [89, 105, 108, 111]]);\n              }));\n              return _getOriginalVerse.apply(this, arguments);\n            };\n\n            getOriginalVerse = function _getOriginalVerse2(_x12, _x13, _x14, _x15) {\n              return _getOriginalVerse.apply(this, arguments);\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkOriginalLanguageQuoteAndOccurrence Notice: (priority=${incompleteNoticeObject.priority}) ${incompleteNoticeObject.message}${characterIndex > 0 ? ` (at character ${incompleteNoticeObject.characterIndex})` : \"\"}${incompleteNoticeObject.excerpt ? ` ${incompleteNoticeObject.excerpt}` : \"\"}${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"cOLQ addNotice: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `cOLQ addNotice: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"cOLQ addNotice: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `cOLQ addNotice: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(characterIndex !== undefined, \"cOLQ addNotice: 'characterIndex' parameter should be defined\");\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `cOLQ addNotice: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"cOLQ addNotice: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `cOLQ addNotice: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt} for ${incompleteNoticeObject.priority}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"cOLQ addNotice: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `cOLQ addNotice: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"aboutToOverwrite\"])('checkOriginalLanguageQuoteAndOccurrence', ['bookID', 'C', 'V'], incompleteNoticeObject, {\n                bookID: bookID,\n                C: C,\n                V: V\n              });\n              colqResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                C: C,\n                V: V\n              }));\n            };\n\n            // Checks that the Hebrew/Greek quote can be found in the original texts\n            // Also checks that the Occurrence is valid\n            // bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n            // Note that the original language verse text can be passed in as\n            //      checkingOptions?.originalLanguageVerseText.\n            // Alternatively, we can fetch it from Door43 -- you can control this with:\n            //      checkingOptions?.originalLanguageRepoUsername\n            //      (UHB or UGNT will be used for the repo name)\n            //      checkingOptions?.originalLanguageRepoBranch (or tag)\n            // functionLog(`checkOriginalLanguageQuoteAndOccurrence v${OL_QUOTE_VALIDATOR_VERSION_STRING} ${languageCode}, ${repoCode}, ${fieldName}, (${fieldText.length}) '${fieldText}', ${occurrenceString}, ${bookID} ${C}:${V} ${givenLocation}, …)…`);\n            //parameterAssert(languageCode !== undefined, \"checkOriginalLanguageQuoteAndOccurrence: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkOriginalLanguageQuoteAndOccurrence: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode !== undefined, \"checkOriginalLanguageQuoteAndOccurrence: 'repoCode' parameter should be defined\");\n            //parameterAssert(typeof repoCode === 'string', `checkOriginalLanguageQuoteAndOccurrence: 'repoCode' parameter should be a string not a '${typeof repoCode}'`);\n            //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkOriginalLanguageQuoteAndOccurrence: 'repoCode' parameter should not be '${repoCode}'`);\n            //parameterAssert(fieldName !== undefined, \"checkOriginalLanguageQuoteAndOccurrence: 'fieldName' parameter should be defined\");\n            //parameterAssert(typeof fieldName === 'string', `checkOriginalLanguageQuoteAndOccurrence: 'fieldName' parameter should be a string not a '${typeof fieldName}'`);\n            //parameterAssert(fieldText !== undefined, \"checkOriginalLanguageQuoteAndOccurrence: 'fieldText' parameter should be defined\");\n            //parameterAssert(typeof fieldText === 'string', `checkOriginalLanguageQuoteAndOccurrence: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n            //parameterAssert(fieldText.length >= 1, `checkOriginalLanguageQuoteAndOccurrence: 'fieldText' parameter should have text not ${fieldText.length} characters`);\n            //parameterAssert(occurrenceString !== undefined, \"checkOriginalLanguageQuoteAndOccurrence: 'occurrenceString' parameter should be defined\");\n            //parameterAssert(typeof occurrenceString === 'string', `checkOriginalLanguageQuoteAndOccurrence: 'occurrenceString' parameter should be a string not a '${typeof occurrenceString}'`);\n            //parameterAssert(bookID !== undefined, \"checkOriginalLanguageQuoteAndOccurrence: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkOriginalLanguageQuoteAndOccurrence: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(bookID.length === 3, `checkOriginalLanguageQuoteAndOccurrence: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkOriginalLanguageQuoteAndOccurrence: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkOriginalLanguageQuoteAndOccurrence: '${bookID}' is not a valid USFM book identifier`);\n            //parameterAssert(C !== undefined, \"checkOriginalLanguageQuoteAndOccurrence: 'C' parameter should be defined\");\n            //parameterAssert(typeof C === 'string', `checkOriginalLanguageQuoteAndOccurrence: 'C' parameter should be a string not a '${typeof C}'`);\n            //parameterAssert(V !== undefined, \"checkOriginalLanguageQuoteAndOccurrence: 'V' parameter should be defined\");\n            //parameterAssert(typeof V === 'string', `checkOriginalLanguageQuoteAndOccurrence: 'V' parameter should be a string not a '${typeof V}'`);\n            //parameterAssert(givenLocation !== undefined, \"checkOriginalLanguageQuoteAndOccurrence: 'givenLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkOriginalLanguageQuoteAndOccurrence: 'givenLocation' parameter should be a string not a '${typeof givenLocation}'`);\n            discontiguousDivider = repoCode === 'TN' ? '…' : ' & ';\n            wrongDiscontiguousDivider = repoCode === 'TN' ? '&' : '…'; // leave out the spaces around ampersand\n            // debugLog(`Got discontiguousDivider='${discontiguousDivider}' for ${repoCode}`);\n\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n            whichTestament = 'both'; // for OBS\n\n            if (bookID !== 'OBS') {\n              try {\n                whichTestament = _books_books__WEBPACK_IMPORTED_MODULE_4__[\"testament\"](bookID); // returns 'old' or 'new'\n              } catch (bNNerror) {\n                if (_books_books__WEBPACK_IMPORTED_MODULE_4__[\"isValidBookID\"](bookID)) // must be in FRT, BAK, etc.\n                  whichTestament = 'other';\n              }\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"logicAssert\"])(whichTestament === 'old' || whichTestament === 'new', \"checkOriginalLanguageQuoteAndOccurrence() couldn\\u2019t find testament for '\".concat(bookID, \"'\"));\n            }\n\n            colqResult = {\n              noticeList: []\n            };\n\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (gcELerror) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n\n\n            excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n            excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n            occurrence = 1;\n\n            try {\n              occurrence = Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"ourParseInt\"])(occurrenceString);\n            } catch (_unused) {\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"dataAssert\"])(false, \"NOTE: We got occurrence=\".concat(occurrence, \" from \").concat(C, \":\").concat(V, \" field '\").concat(occurrenceString, \"'\"));\n            } // errors in this field are noted elsewhere\n\n            /* Cantillation marks in OrigL quotes seem normal\n            const match = HEBREW_CANTILLATION_REGEX.exec(fieldText);\n            if (match) { // it’s null if no matches\n                debugLog(`checkOriginalLanguageQuoteAndOccurrence: got cantillation match: ${typeof match} ${match.length} '${JSON.stringify(match)}'`);\n                addNoticePartial({ priority: 904, message: \"Unexpected Hebrew cantillation mark in original language field\", details: `found ${match.length} '${match}'`, C, V, excerpt: fieldText, location: ourLocation });\n            }\n            */\n            // if fieldText.lstrip() !== fieldText:\n            //     addNotice({priority:0, message:`Unexpected whitespace at start of ${TNid} '${fieldText}'\")\n            // if fieldText.rstrip() !== fieldText:\n            //     addNotice({priority:0, message:`Unexpected whitespace at end of ${TNid} '${fieldText}'\")\n            // fieldText = fieldText.strip() # so we don’t get consequential errors\n\n\n            if ((characterIndex = fieldText.indexOf(wrongDiscontiguousDivider)) !== -1) {\n              excerpt = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n              addNoticePartial({\n                priority: 918,\n                message: \"Seems like the wrong divider for discontiguous quote segments\",\n                details: \"expected \\u25D7\".concat(discontiguousDivider, \"\\u25D6\"),\n                characterIndex: characterIndex,\n                excerpt: excerpt,\n                location: ourLocation\n              });\n            }\n\n            if (discontiguousDivider === '…' && (characterIndex = fieldText.indexOf('...')) >= 0) {\n              // debugLog(`Bad ellipse characters in '${fieldText}'`);\n              _excerpt = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n              addNoticePartial({\n                priority: 159,\n                message: \"Should use proper ellipse character (not periods)\",\n                characterIndex: characterIndex,\n                excerpt: _excerpt,\n                location: ourLocation\n              });\n            } // NOTE: The following code only looks for matching paired punctuation at the very beginning or end of the quote, i.e., it won't complain about a single ( or ] in the middle of a quote\n\n\n            if (fieldText.length > 1 && (opener_index = _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"PAIRED_PUNCTUATION_OPENERS\"].indexOf(fieldText[0])) !== -1 && fieldText.indexOf(expected_closing_char = _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"PAIRED_PUNCTUATION_CLOSERS\"][opener_index]) === -1) {\n              _excerpt2 = fieldText.length <= excerptLength ? fieldText : \"\".concat(fieldText.slice(0, excerptHalfLength), \"\\u2026\").concat(fieldText.substring(fieldText.length - excerptHalfLength));\n              addNoticePartial({\n                priority: 859,\n                message: \"Unexpected unclosed paired punctuation at beginning of quote\",\n                details: \"Found '\".concat(fieldText[0], \"' at start, but no matching '\").concat(expected_closing_char, \"'\"),\n                characterIndex: 0,\n                excerpt: _excerpt2,\n                location: ourLocation\n              });\n            }\n\n            if (fieldText.length > 1 && (closer_index = _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"PAIRED_PUNCTUATION_CLOSERS\"].indexOf(fieldText.slice(-1))) !== -1 && (whichTestament !== 'new' && whichTestament !== 'both' || fieldText.slice(-1) !== '’') // Allow final apostrophe for UGNT and OBS\n            && fieldText.indexOf(expected_opening_char = _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"PAIRED_PUNCTUATION_OPENERS\"][closer_index]) === -1) {\n              _excerpt3 = fieldText.length <= excerptLength ? fieldText : \"\".concat(fieldText.slice(0, excerptHalfLength), \"\\u2026\").concat(fieldText.substring(fieldText.length - excerptHalfLength));\n              addNoticePartial({\n                priority: 858,\n                message: \"Unexpected unopened paired punctuation at end of quote\",\n                details: \"Found '\".concat(fieldText.slice(-1), \"' at end, but no matching '\").concat(expected_opening_char, \"'\"),\n                characterIndex: fieldText.length - 1,\n                excerpt: _excerpt3,\n                location: ourLocation\n              });\n            }\n\n            noDashFieldText = fieldText.replace(/[—־]/g, ' '); // em-dash and then maqaf\n\n            if (fieldText.indexOf(discontiguousDivider) >= 0) {\n              quoteBits = noDashFieldText.split(discontiguousDivider);\n\n              if ((characterIndex = fieldText.indexOf(\" \".concat(discontiguousDivider))) >= 0 || (characterIndex = fieldText.indexOf(\"\".concat(discontiguousDivider, \" \"))) >= 0) {\n                // debugLog(`Unexpected space(s) beside ellipse in '${fieldText}'`);\n                _excerpt4 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n                addNoticePartial({\n                  priority: 158,\n                  message: \"Unexpected space(s) beside divider \".concat(discontiguousDivider),\n                  characterIndex: characterIndex,\n                  excerpt: _excerpt4,\n                  location: ourLocation\n                });\n              } // } else if (fieldText.indexOf('↔') >= 0) {\n              //     quoteBits = fieldText.split('↔');\n              //     if ((characterIndex = fieldText.indexOf(' ↔')) >= 0 || (characterIndex = fieldText.indexOf('↔ ')) >= 0) {\n              //         // debugLog(`Unexpected space(s) beside ellipse in '${fieldText}'`);\n              //         const excerpt = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n              //         addNotice({ priority: 157, message: `Unexpected space(s) beside divider ${discontiguousDivider}`, characterIndex, excerpt, location: ourLocation });\n              //     }\n\n            } else if (discontiguousDivider === '…' && fieldText.indexOf('...') >= 0) {\n              // Yes, we still actually allow this\n              quoteBits = noDashFieldText.split('...');\n\n              if ((characterIndex = fieldText.indexOf(' ...')) >= 0 || (characterIndex = fieldText.indexOf('... ')) >= 0) {\n                // debugLog(`Unexpected space(s) beside ellipse characters in '${fieldText}'`);\n                _excerpt5 = (characterIndex > excerptHalfLength ? '…' : '') + fieldText.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < fieldText.length ? '…' : '');\n                addNoticePartial({\n                  priority: 156,\n                  message: \"Unexpected space(s) beside ellipse characters\",\n                  characterIndex: characterIndex,\n                  excerpt: _excerpt5,\n                  location: ourLocation\n                });\n              }\n            } // debugLog(`Got quoteBits=${quoteBits}`);\n            // Find the verse text in the original language (HEB, GRK, or ENG for OBS)\n\n\n            try {\n              verseText = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.originalLanguageVerseText;\n            } catch (gcVTerror) {}\n\n            if (verseText) {\n              _context3.next = 39;\n              break;\n            }\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag)) {\n              _context3.next = 32;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", colqResult);\n\n          case 32:\n            _context3.next = 34;\n            return getOriginalPassage(bookID, C, V, checkingOptions);\n\n          case 34:\n            verseText = _context3.sent;\n\n            if (verseText) {\n              _context3.next = 38;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 851,\n              message: bookID === 'OBS' ? \"Unable to load original OBS story text\" : \"Unable to load original language verse text\",\n              location: ourLocation\n            });\n            return _context3.abrupt(\"return\", colqResult);\n\n          case 38:\n            noDashVerseText = verseText.replace(/[—־]/g, ' '); // em-dash and then maqaf\n\n          case 39:\n            /* Deficient code coz it’s only checking STRING matches, not WORD matches\n            // Now check if the quote can be found in the verse text\n            if (quoteBits) { // it had an ellipsis\n                // parameterAssert(occurrence === 1, `Oh -- can get '${fieldText}' with occurrence=${occurrence} in ${bookID} ${C}:${V}`);\n                if (occurrence !== 1) {\n                    addNotice({ priority: 50, message: \"Is this quote/occurrence correct???\", details: `occurrence=${occurrence}`, excerpt: fieldText, location: ourLocation });\n                }\n                // TODO: Are we checking the correct occurrence below ???\n                const numQuoteBits = quoteBits.length;\n                if (numQuoteBits >= 2) {\n                    let quoteIndex = -1; // These parts have to be in order, i.e., found in the verse one AFTER the other\n                    for (let bitIndex = 0; bitIndex < numQuoteBits; bitIndex++) {\n                        // debugLog(`warnForNotFoundQuoteSegment: checking quote part ${bitIndex} '${quoteBits[bitIndex]}' from '${fieldText}' against '${verseText.slice(quoteIndex)}' from '${verseText}'`)\n                        let partDescription;\n                        if (numQuoteBits === 1) partDescription = '';\n                        else if (bitIndex === 0) partDescription = 'beginning';\n                        else if (bitIndex === numQuoteBits - 1) partDescription = 'end';\n                        else partDescription = `middle${numQuoteBits > 3 ? bitIndex : ''}`;\n                        if ((quoteIndex = verseText.indexOf(quoteBits[bitIndex], quoteIndex + 1)) < 0) { // this is what we really want to catch\n                            // If the quote has multiple parts, create a description of the current part\n                            const excerpt = `${partDescription ? '(' + partDescription + ' quote portion)' : ''} '${quoteBits[bitIndex]}'`;\n                            if (verseText.indexOf(quoteBits[bitIndex]) >= 0) {\n                                logicAssert(bitIndex > 0, \"This shouldn’t happen for bitIndex of zero!\");\n                                // debugLog(`914, Unable to find '${fieldText}' ${numQuoteBits === 1 ? '' : `'${quoteBits[bitIndex]}' `}${partDescription ? '(' + partDescription + ') ' : ''}in '${verseText}'`);\n                                addNotice({ priority: 914, message: \"Unable to find original language quote portion in the right place in the verse text\", details: `verse text ◗${verseText}◖`, excerpt, location: ourLocation });\n                            } else {\n                                // debugLog(`915, Unable to find '${fieldText}' ${numQuoteBits === 1 ? '' : `'${quoteBits[bitIndex]}' `}${partDescription ? '(' + partDescription + ') ' : ''}in '${verseText}'`);\n                                warnForNotFoundQuoteSegment(fieldText, partDescription, occurrenceString, verseText, ourLocation);\n                                // addNotice({ priority: 915, message: \"Unable to find original language quote portion in verse text\", details: `verse text ◗${verseText}◖`, excerpt, location: ourLocation });\n                            }\n                        } else { // We found this bit\n                            // debugLog(`Found ${C}:${V} origQuote portion ${bitIndex} '${quoteBits[bitIndex]}' at ${quoteIndex} (num text chars = ${verseText.length})`);\n                            const verseTextBits = verseText.split(quoteBits[bitIndex]); // NOTE: can split (badly) on short strings (like δὲ or εἰ) mid-word\n                            checkTheFoundQuoteSegmentMore(quoteBits[bitIndex], partDescription, occurrenceString, `${verseTextBits[occurrence - 1]}${quoteBits[bitIndex]}${verseTextBits[occurrence]}`, verseText, ourLocation);\n                        }\n                    }\n                } else // < 2\n                    addNotice({ priority: 815, message: \"Divider without surrounding snippet\", location: ourLocation });\n            } else { // Only a single quote (no discontiguousDivider)\n                if (verseText.indexOf(fieldText) >= 0) {\n                    if (occurrence > 1) {\n                        // functionLog(`checkOriginalLanguageQuoteAndOccurrence is checking for ${occurrence} occurrences of ${fieldText}`);\n                        const verseTextBits = verseText.split(fieldText); // NOTE: can split (badly) on short strings (like δὲ or εἰ) mid-word\n                        const actualNumOccurrences = verseTextBits.length - 1;\n                        if (occurrence > actualNumOccurrences) { // There’s not enough of them\n                            const actualOccurrencesText = actualNumOccurrences === 0 ? 'no' : `only ${actualNumOccurrences}`;\n                            const excerpt = fieldText.slice(0, excerptHalfLength) + (fieldText.length > 2 * excerptHalfLength ? '…' : '') + fieldText.substring(fieldText.length - excerptHalfLength, fieldText.length);\n                            addNotice({ priority: 917, message: \"Unable to find duplicate original language quote in verse text\", details: `occurrence=${occurrenceString} but ${actualOccurrencesText} occurrence${actualNumOccurrences === 1 ? '' : 's'} found, passage ◗${verseText}◖`, excerpt, location: ourLocation });\n                        } else {\n                            checkTheFoundQuoteSegmentMore(fieldText, '', occurrenceString, `${verseTextBits[occurrence - 1]}${fieldText}${verseTextBits[occurrence]}`, verseText, ourLocation);\n                        }\n                    } else { // We only need to check for one occurrence\n                        // TODO: The error in the next line has been notified elsewhere, but should we try to handle it more intelligently here ???\n                        logicAssert(occurrence === 1 || occurrence === -1, `Expected ${C}:${V} occurrence to be 1 or -1 not ${occurrence} from '${occurrenceString}' for ${C}:${V} '${fieldText}'`);\n                        // Double check that it doesn’t start/stop in the middle of a word\n                        // debugLog(`Here with fieldText=${fieldText} and verseText=${verseText}`);\n                        // debugLog(`remainingBits=${JSON.stringify(remainingBits)}`);\n                        checkTheFoundQuoteSegmentMore(fieldText, '', occurrenceString, verseText, verseText, ourLocation);\n                    }\n                } else { // can’t find the given text\n                    // debugLog(`916, Unable to find '${fieldText}' in '${verseText}'`);\n                    warnForNotFoundQuoteSegment(fieldText, '', occurrenceString, verseText, ourLocation);\n                }\n            } */\n            // Continuing checkOriginalLanguageQuoteAndOccurrence() code...\n            // Now check if the quote can be found in the verse text\n            verseWordsList = noDashVerseText.split(' '); // debugLog(`checkOriginalLanguageQuoteAndOccurrence got ${bookID} ${C}:${V} verseWords (${verseWords.length}) = ${verseWords}`);\n\n            if (quoteBits) {\n              // it had multiple discontiguous parts\n              // parameterAssert(occurrence === 1, `Oh -- can get '${fieldText}' with occurrence=${occurrence} in ${bookID} ${C}:${V}`);\n              // if (occurrence !== 1) {\n              //     addNoticePartial({ priority: 50, message: \"Is this quote/occurrence correct???\", details: `occurrence=${occurrence} verse text ◗${verseText}◖`, excerpt: fieldText, location: ourLocation });\n              // }\n              numQuoteBits = quoteBits.length;\n\n              if (numQuoteBits >= 2) {\n                quoteIndex = -1; // These parts have to be in order, i.e., found in the verse one AFTER the other\n\n                for (bitIndex = 0; bitIndex < numQuoteBits; bitIndex++) {\n                  // debugLog(`warnForNotFoundQuoteSegment: checking quote part ${bitIndex} '${quoteBits[bitIndex]}' from '${fieldText}' against '${verseText.slice(quoteIndex)}' from '${verseText}'`)\n                  partDescription = void 0;\n                  if (numQuoteBits === 1) partDescription = '';else if (bitIndex === 0) partDescription = 'beginning';else if (bitIndex === numQuoteBits - 1) partDescription = 'end';else partDescription = \"middle\".concat(numQuoteBits > 3 ? bitIndex : '');\n\n                  if ((quoteIndex = getWordsIndex(verseWordsList, quoteBits[bitIndex].split(' '), bitIndex === 0 ? occurrence : 1, quoteIndex + 1)) < 0) {\n                    // this is what we really want to catch\n                    // If the quote has multiple parts, create a description of the current part\n                    _excerpt6 = \"\".concat(partDescription ? '(' + partDescription + ' quote portion)' : '', \" '\").concat(quoteBits[bitIndex], \"'\");\n\n                    if (verseWordsList.includes(quoteBits[bitIndex])) {\n                      Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"logicAssert\"])(bitIndex > 0, \"This shouldn’t happen for bitIndex of zero!\"); // debugLog(`914, Unable to find '${fieldText}' ${numQuoteBits === 1 ? '' : `'${quoteBits[bitIndex]}' `}${partDescription ? '(' + partDescription + ') ' : ''}in '${verseText}'`);\n\n                      addNoticePartial({\n                        priority: 914,\n                        message: \"Unable to find original language quote portion in the right place in the verse text\",\n                        details: \"verse text \\u25D7\".concat(verseText, \"\\u25D6\"),\n                        excerpt: _excerpt6,\n                        location: ourLocation\n                      });\n                    } else {\n                      // debugLog(`915, Unable to find '${fieldText}' occurrence=${occurrenceString} ${numQuoteBits === 1 ? '' : `'${quoteBits[bitIndex]}' `}${partDescription ? '(' + partDescription + ') ' : ''}in '${verseText}'`);\n                      warnForANotFoundQuoteSegment(fieldText, partDescription, occurrenceString, verseText, ourLocation); // addNotice({ priority: 915, message: \"Unable to find original language quote portion in verse text\", details: `verse text ◗${verseText}◖`, excerpt, location: ourLocation });\n                    }\n                  } else {// We found this bit\n                    // debugLog(`Found ${C}:${V} origQuote portion ${bitIndex} '${quoteBits[bitIndex]}' at ${quoteIndex} (num text chars = ${verseText.length})`);\n                    // const verseTextBits = verseText.split(quoteBits[bitIndex]); // NOTE: can split (badly) on short strings (like δὲ or εἰ) mid-word\n                    // checkTheFoundQuoteSegmentMore(quoteBits[bitIndex], partDescription, occurrenceString, `${verseTextBits[occurrence - 1]}${quoteBits[bitIndex]}${verseTextBits[occurrence]}`, verseText, ourLocation);\n                  }\n                }\n              } else // < 2\n                addNoticePartial({\n                  priority: 815,\n                  message: \"Divider without surrounding snippet\",\n                  location: ourLocation\n                });\n            } else {\n              // Only a single quote (no discontiguousDivider)\n              if (repoCode === 'OBS-TN' && (fieldText === \"General Information\" || fieldText === \"Connecting Statement\")) ; // Just ignore these fixed strings\n              else if (getWordsIndex(verseWordsList, noDashFieldText.split(' '), occurrence) >= 0) {\n                if (occurrence > 1) {\n                  // functionLog(`checkOriginalLanguageQuoteAndOccurrence is checking for ${occurrence} occurrences of ${fieldText}`);\n                  verseTextBits = verseText.split(fieldText); // NOTE: can split (badly) on short strings (like δὲ or εἰ) mid-word\n\n                  actualNumOccurrences = verseTextBits.length - 1;\n\n                  if (occurrence > actualNumOccurrences) {\n                    // There’s not enough of them\n                    actualOccurrencesText = actualNumOccurrences === 0 ? 'no' : \"only \".concat(actualNumOccurrences);\n                    _excerpt7 = fieldText.slice(0, excerptHalfLength) + (fieldText.length > 2 * excerptHalfLength ? '…' : '') + fieldText.substring(fieldText.length - excerptHalfLength, fieldText.length);\n                    addNoticePartial({\n                      priority: 917,\n                      message: \"Unable to find duplicate original language quote in verse text\",\n                      details: \"occurrence=\".concat(occurrenceString, \" but \").concat(actualOccurrencesText, \" occurrence\").concat(actualNumOccurrences === 1 ? '' : 's', \" found, passage \\u25D7\").concat(verseText, \"\\u25D6\"),\n                      excerpt: _excerpt7,\n                      location: ourLocation\n                    });\n                  } else {// checkTheFoundQuoteSegmentMore(fieldText, '', occurrenceString, `${verseTextBits[occurrence - 1]}${fieldText}${verseTextBits[occurrence]}`, verseText, ourLocation);\n                  }\n                } else {\n                  // We only need to check for one occurrence\n                  // TODO: The error in the next line has been notified elsewhere, but should we try to handle it more intelligently here ???\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"logicAssert\"])(occurrence === 1 || occurrence === -1, \"Expected \".concat(C, \":\").concat(V, \" occurrence to be 1 or -1 not \").concat(occurrence, \" from '\").concat(occurrenceString, \"' for \").concat(C, \":\").concat(V, \" '\").concat(fieldText, \"'\")); // Double check that it doesn’t start/stop in the middle of a word\n                  // debugLog(`Here with fieldText=${fieldText} and verseText=${verseText}`);\n                  // debugLog(`remainingBits=${JSON.stringify(remainingBits)}`);\n                  // checkTheFoundQuoteSegmentMore(fieldText, '', occurrenceString, verseText, verseText, ourLocation);\n                }\n              } else {\n                // can’t find the given text\n                // debugLog(`916, Unable to find '${fieldText}' occurrence=${occurrenceString} in '${verseText}'`);\n                warnForANotFoundQuoteSegment(fieldText, '', occurrenceString, verseText, ourLocation);\n              }\n            } // functionLog(`checkOriginalLanguageQuoteAndOccurrence is returning ${ JSON.stringify(colqResult) }`);\n\n\n            return _context3.abrupt(\"return\", colqResult);\n\n          case 42:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _checkOriginalLanguageQuoteAndOccurrence.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/orig-quote-check.js?");

/***/ }),

/***/ "./src/core/plain-text-check.js":
/*!**************************************!*\
  !*** ./src/core/plain-text-check.js ***!
  \**************************************/
/*! exports provided: checkPlainText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkPlainText\", function() { return checkPlainText; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./text-handling-functions */ \"./src/core/text-handling-functions.js\");\n/* harmony import */ var _field_text_check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\");\n/* harmony import */ var _disabled_notices__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./disabled-notices */ \"./src/core/disabled-notices.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n// eslint-disable-next-line no-unused-vars\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n\nvar PLAIN_TEXT_VALIDATOR_VERSION_STRING = '0.5.0';\n/**\n *\n * @param {string} textType 'markdown', 'USFM', 'YAML', 'text', or 'raw'\n * @param {string} repoCode -- e.g., 'TN' or 'TQ', etc.\n * @param {string} textName\n * @param {string} plainText -- text to be checked\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkPlainText(username, languageCode, repoCode, textType, textName, plainText, givenLocation, checkingOptions) {\n  /* This function is optimised for checking the entire text, i.e., all lines.\n      It is used in checkFileContents() in book-package-check.js\n   TODO: Should languageCode also be a parameter here? (affects other programs using the API)\n    Returns a result object containing a successList and a noticeList\n   */\n  // functionLog(`checkPlainText(${textName}, (${plainText.length} chars), ${givenLocation}, ${JSON.stringify(checkingOptions)})…`);\n  //parameterAssert(languageCode !== undefined, \"checkPlainText: 'languageCode' parameter should be defined\");\n  //parameterAssert(typeof languageCode === 'string', `checkPlainText: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n  //parameterAssert(languageCode !== 'markdown' && languageCode !== 'USFM' && languageCode !== 'YAML' && languageCode !== 'text' && languageCode !== 'raw' && languageCode !== 'unfoldingWord', `checkPlainText: 'languageCode' ${languageCode} parameter should be not be '${languageCode}'`);\n  //parameterAssert(repoCode !== undefined, \"checkPlainText: 'repoCode' parameter should be defined\");\n  //parameterAssert(typeof repoCode === 'string', `checkPlainText: 'repoCode' parameter should be a string not a '${typeof repoCode}': ${repoCode}`);\n  //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkPlainText: 'repoCode' parameter should not be '${repoCode}'`);\n  //parameterAssert(textType !== undefined, \"checkPlainText: 'textType' parameter should be defined\");\n  //parameterAssert(typeof textType === 'string', `checkPlainText: 'textType' parameter should be a string not a '${typeof textType}': ${textType}`);\n  //parameterAssert(textType === 'markdown' || textType === 'USFM' || textType === 'YAML' || textType === 'text' || textType === 'raw', `checkPlainText: unrecognised 'textType' parameter: '${textType}'`);\n  //parameterAssert(textName !== undefined, \"checkPlainText: 'textName' parameter should be defined\");\n  //parameterAssert(typeof textName === 'string', `checkPlainText: 'textName' parameter should be a string not a '${typeof textName}': ${textName}`);\n  //parameterAssert(plainText !== undefined, \"checkPlainText: 'plainText' parameter should be defined\");\n  //parameterAssert(typeof plainText === 'string', `checkPlainText: 'plainText' parameter should be a string not a '${typeof plainText}': ${plainText}`);\n  //parameterAssert(checkingOptions !== undefined, \"checkPlainText: 'checkingOptions' parameter should be defined\");\n  var ourLocation = givenLocation;\n  if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n  var excerptLength;\n\n  try {\n    excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n  } catch (ptcError) {}\n\n  if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n    excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n  } // else\n  // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n\n\n  var excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n  var excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n  // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n  var cutoffPriorityLevel = (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel : 0;\n  var cptResult = {\n    successList: [],\n    noticeList: []\n  };\n\n  function addSuccessMessage(successString) {\n    // functionLog(`checkPlainText success: ${successString}`);\n    cptResult.successList.push(successString);\n  }\n\n  function addNotice(noticeObject) {\n    // bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n    // functionLog(`checkPlainText notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n    //parameterAssert(noticeObject.priority !== undefined, \"cPT addNotice: 'priority' parameter should be defined\");\n    //parameterAssert(typeof noticeObject.priority === 'number', `cPT addNotice: 'priority' parameter should be a number not a '${typeof noticeObject.priority}': ${noticeObject.priority}`);\n    //parameterAssert(noticeObject.message !== undefined, \"cPT addNotice: 'message' parameter should be defined\");\n    //parameterAssert(typeof noticeObject.message === 'string', `cPT addNotice: 'message' parameter should be a string not a '${typeof noticeObject.message}': ${noticeObject.message}`);\n    if (noticeObject.characterIndex) {//parameterAssert(typeof noticeObject.characterIndex === 'number', `cPT addNotice: 'characterIndex' parameter should be a number not a '${typeof noticeObject.characterIndex}': ${noticeObject.characterIndex}`);\n    } // parameterAssert(excerpt!==undefined, \"cPT addNotice: 'excerpt' parameter should be defined\");\n\n\n    if (noticeObject.excerpt) {//parameterAssert(typeof noticeObject.excerpt === 'string', `cPT addNotice: 'excerpt' parameter should be a string not a '${typeof noticeObject.excerpt}': ${noticeObject.excerpt}`);\n    } //parameterAssert(noticeObject.location !== undefined, \"cPT addNotice: 'location' parameter should be defined\");\n    //parameterAssert(typeof noticeObject.location === 'string', `cPT addNotice: 'location' parameter should be a string not a '${typeof noticeObject.location}': ${noticeObject.location}`);\n    // noticeObject.debugChain = noticeObject.debugChain ? `checkPlainText(${textType}, ${textName}) ${noticeObject.debugChain}` : `checkPlainText(${textType}, ${textName})`;\n\n\n    cptResult.noticeList.push(noticeObject);\n  }\n\n  function ourCheckTextField(lineNumber, fieldText, allowedLinks, optionalFieldLocation, checkingOptions) {\n    /**\n    * @description - checks the given text field and processes the returned results\n    * @param {string} fieldName - name of the field being checked\n    * @param {string} fieldText - the actual text of the field being checked\n    * @param {boolean} allowedLinks - true if links are allowed in the field, otherwise false\n    * @param {string} optionalFieldLocation - description of where the field is located\n    * @param {Object} checkingOptions - parameters that might affect the check\n    */\n    // Does basic checks for small errors like leading/trailing spaces, etc.\n    // We assume that checking for compulsory fields is done elsewhere\n    // Updates the global list of notices\n    // debugLog(`cPT ourCheckTextField(${fieldName}, (${fieldText.length}), ${allowedLinks}, ${fieldLocation}, …)`);\n    //parameterAssert(lineNumber !== undefined, \"cPT ourCheckTextField: 'lineNumber' parameter should be defined\");\n    //parameterAssert(typeof lineNumber === 'number', `cPT ourCheckTextField: 'fieldName' parameter should be a number not a '${typeof lineNumber}'`);\n    //parameterAssert(fieldText !== undefined, \"cPT ourCheckTextField: 'fieldText' parameter should be defined\");\n    //parameterAssert(typeof fieldText === 'string', `cPT ourCheckTextField: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n    //parameterAssert(allowedLinks === true || allowedLinks === false, \"cPT ourCheckTextField: allowedLinks parameter must be either true or false\");\n    //parameterAssert(optionalFieldLocation !== undefined, \"cPT ourCheckTextField: 'optionalFieldLocation' parameter should be defined\");\n    //parameterAssert(typeof optionalFieldLocation === 'string', `cPT ourCheckTextField: 'optionalFieldLocation' parameter should be a string not a '${typeof optionalFieldLocation}'`);\n    var resultObject = Object(_field_text_check__WEBPACK_IMPORTED_MODULE_5__[\"checkTextField\"])(username, languageCode, repoCode, textType, \"\".concat(textName, \" line\"), fieldText, allowedLinks, optionalFieldLocation, checkingOptions); // Choose only ONE of the following\n    // This is the fast way of append the results from this field\n    // cptResult.noticeList = cptResult.noticeList.concat(resultObject.noticeList);\n    // If we need to put everything through addNotice, e.g., for debugging or filtering\n    //  process results line by line\n\n    var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(resultObject.noticeList),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var noticeEntry = _step.value;\n        addNotice(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, noticeEntry), {}, {\n          lineNumber: lineNumber\n        }));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } // end of ourCheckTextField function\n\n\n  function checkPlainLineContents(lineNumber, lineText, lineLocation) {\n    // functionLog(`checkPlainLineContents for '${lineName}', '${lineText}' at${lineLocation}`);\n    var thisText = lineText.trimStart(); // So we don’t get \"leading space\" AND \"doubled spaces\" errors\n\n    if (thisText) // Allow links as that’s more general\n      ourCheckTextField(lineNumber, thisText, true, lineLocation, checkingOptions);\n  } // end of checkPlainLineContents function\n  // Main code for checkPlainText function\n\n\n  if (cutoffPriorityLevel < 638 && Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"isWhitespace\"])(plainText)) {\n    addNotice({\n      priority: 638,\n      message: \"Only found whitespace\",\n      location: ourLocation\n    });\n    return cptResult;\n  }\n\n  var characterIndex;\n\n  if (cutoffPriorityLevel < 993 && (characterIndex = plainText.indexOf('<<<<<<<')) >= 0) {\n    var iy = characterIndex + excerptHalfLength; // Want excerpt to focus more on what follows\n\n    var excerpt = (iy > excerptHalfLength ? '…' : '') + plainText.substring(iy - excerptHalfLength, iy + excerptHalfLengthPlus).replace(/ /g, '␣') + (iy + excerptHalfLengthPlus < plainText.length ? '…' : '');\n    addNotice({\n      priority: 993,\n      message: \"Unresolved GIT conflict\",\n      characterIndex: characterIndex,\n      excerpt: excerpt,\n      location: ourLocation\n    });\n  } else if (cutoffPriorityLevel < 992 && (characterIndex = plainText.indexOf('=======')) >= 0) {\n    var _iy = characterIndex + excerptHalfLength; // Want excerpt to focus more on what follows\n\n\n    var _excerpt = (_iy > excerptHalfLength ? '…' : '') + plainText.substring(_iy - excerptHalfLength, _iy + excerptHalfLengthPlus).replace(/ /g, '␣') + (_iy + excerptHalfLengthPlus < plainText.length ? '…' : '');\n\n    addNotice({\n      priority: 992,\n      message: \"Unresolved GIT conflict\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt,\n      location: ourLocation\n    });\n  } else if (cutoffPriorityLevel < 991 && (characterIndex = plainText.indexOf('>>>>>>>>')) >= 0) {\n    var _iy2 = characterIndex + excerptHalfLength; // Want excerpt to focus more on what follows\n\n\n    var _excerpt2 = (_iy2 > excerptHalfLength ? '…' : '') + plainText.substring(_iy2 - excerptHalfLength, _iy2 + excerptHalfLengthPlus).replace(/ /g, '␣') + (_iy2 + excerptHalfLengthPlus < plainText.length ? '…' : '');\n\n    addNotice({\n      priority: 991,\n      message: \"Unresolved GIT conflict\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt2,\n      location: ourLocation\n    });\n  }\n\n  if (cutoffPriorityLevel < 539 && plainText[0] === '\\n') {\n    characterIndex = 0;\n\n    var _excerpt3 = (plainText.length > excerptLength ? '…' : '') + plainText.slice(-excerptLength).replace(/ /g, '␣').replace(/\\n/g, '\\\\n');\n\n    addNotice({\n      priority: 539,\n      message: \"File starts with empty line\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt3,\n      location: ourLocation\n    });\n  }\n\n  if (cutoffPriorityLevel < 538 && !plainText.endsWith('\\n') && !textName.endsWith('title.md')) {\n    characterIndex = plainText.length - 1;\n\n    var _excerpt4 = (plainText.length > excerptLength ? '…' : '') + plainText.slice(-excerptLength).replace(/ /g, '␣').replace(/\\n/g, '\\\\n');\n\n    addNotice({\n      priority: 538,\n      message: \"File ends without newline character\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt4,\n      location: ourLocation\n    });\n  } else if (cutoffPriorityLevel < 138 && plainText.endsWith('\\n\\n')) {\n    characterIndex = plainText.length - 2;\n\n    var _excerpt5 = (plainText.length > excerptLength ? '…' : '') + plainText.slice(-excerptLength).replace(/ /g, '␣').replace(/\\n/g, '\\\\n');\n\n    addNotice({\n      priority: 138,\n      message: \"File ends with additional blank line(s)\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt5,\n      location: ourLocation\n    });\n  } // const doubleQuoteRE = /\"[^ =]/g;\n  // const regexResult = contextRE.exec(plainText);\n  // // debugLog(`  regexResult: ${JSON.stringify(regexResult)}`);\n  // if (regexResult) {\n  // }\n\n\n  if (cutoffPriorityLevel < 237 && (characterIndex = plainText.indexOf('\"')) !== -1 // file contains straight double-quote(s)\n  && plainText.indexOf('=\"') === -1) {\n    // e.g., in a field like word=\"abc\"\n    var _iy3 = characterIndex + excerptHalfLength; // Want excerpt to focus more on what follows\n\n\n    var _excerpt6 = (_iy3 > excerptHalfLength ? '…' : '') + plainText.substring(_iy3 - excerptHalfLength, _iy3 + excerptHalfLengthPlus).replace(/ /g, '␣') + (_iy3 + excerptHalfLengthPlus < plainText.length ? '…' : '');\n\n    addNotice({\n      priority: languageCode === 'en' ? 237 : 37,\n      message: \"File contains straight double-quote(s)\",\n      characterIndex: characterIndex,\n      excerpt: _excerpt6,\n      location: ourLocation\n    });\n  }\n\n  if (cutoffPriorityLevel < 201 && plainText.indexOf('،') !== -1 // file contains Arabic comma(s)\n  && plainText.indexOf(',') !== -1) {\n    // and also normal commas\n    addNotice({\n      priority: 201,\n      message: \"File contains both Arabic and other commas\",\n      location: ourLocation\n    });\n  }\n\n  var lines = plainText.split('\\n'); // debugLog(`  '${location}' has ${lines.length.toLocaleString()} total lines`);\n  //  checking nested markers (so that we can give the line number in the notice)\n  // let headerLevel = 0;\n  // let lastNumLeadingSpaces = 0;\n  // let lastLineContents;\n  // While checking individual lines,\n\n  var openMarkers = [];\n\n  for (var n = 1; n <= lines.length; n++) {\n    var line = lines[n - 1];\n\n    if (line) {\n      if (textType === 'text' || textType === 'raw') // other file-types do these checks themselves\n        checkPlainLineContents(n, line, ourLocation); // Check for nested brackets and quotes, etc.\n\n      if (cutoffPriorityLevel < 777) for (var _characterIndex = 0; _characterIndex < line.length; _characterIndex++) {\n        var char = line[_characterIndex];\n        var closeCharacterIndex = void 0;\n\n        if (_text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"PAIRED_PUNCTUATION_OPENERS\"].indexOf(char) >= 0) {\n          // debugLog(`Saving ${openMarkers.length} '${char}' ${n} ${x}`);\n          openMarkers.push({\n            char: char,\n            n: n,\n            x: _characterIndex\n          });\n        } else if ((closeCharacterIndex = _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"PAIRED_PUNCTUATION_CLOSERS\"].indexOf(char)) >= 0) {\n          // debugLog(`Found '${char}' ${n} ${x}`);\n          // debugLog(`Which: ${which} '${openers.charAt(which)}'`)\n          if (openMarkers.length) {\n            var _openMarkers$slice = openMarkers.slice(-1),\n                _openMarkers$slice2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_openMarkers$slice, 1),\n                lastEntry = _openMarkers$slice2[0]; // debugLog(`  Recovered lastEntry=${JSON.stringify(lastEntry)}`);\n            // debugLog(`  Comparing found '${char}' with (${which}) '${openers.charAt(which)}' from '${lastEntry.char}'`);\n\n\n            if (lastEntry.char === _text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"PAIRED_PUNCTUATION_OPENERS\"].charAt(closeCharacterIndex)) {\n              // debugLog(`  Matched '${char}' with  '${openers.charAt(which)}' ${n} ${x}`);\n              openMarkers.pop();\n            } else // something is still open and this isn’t a match -- might just be consequential error\n              if (char !== '’' // Closing single quote is also used as apostrophe in English\n              && (textType !== 'markdown' || char !== '>' || _characterIndex > 4)) {\n                // Markdown uses > or >> or > > or > > > for block indents so ignore these -- might just be consequential error\n                var _excerpt7 = (_characterIndex > excerptHalfLength ? '…' : '') + line.substring(_characterIndex - excerptHalfLength, _characterIndex + excerptHalfLengthPlus).replace(/ /g, '␣') + (_characterIndex + excerptHalfLengthPlus < line.length ? '…' : '');\n\n                var details = \"'\".concat(lastEntry.char, \"' opened on line \").concat(lastEntry.n.toLocaleString(), \" character \").concat(lastEntry.x + 1);\n                addNotice({\n                  priority: 777,\n                  message: \"Bad punctuation nesting: \".concat(char, \" closing character doesn\\u2019t match\"),\n                  details: details,\n                  lineNumber: n,\n                  characterIndex: _characterIndex,\n                  excerpt: _excerpt7,\n                  location: ourLocation\n                }); // debugLog(`  ERROR 777: mismatched characters: ${details}`);\n              }\n          } else // Closed something unexpectedly without an opener\n            if (char !== '’' // Closing single quote is also used as apostrophe in English\n            && (textType !== 'markdown' || char !== '>')) {\n              // Markdown uses > for block indents so ignore these\n              var _excerpt8 = (_characterIndex > excerptHalfLength ? '…' : '') + line.substring(_characterIndex - excerptHalfLength, _characterIndex + excerptHalfLengthPlus).replace(/ /g, '␣') + (_characterIndex + excerptHalfLengthPlus < line.length ? '…' : '');\n\n              addNotice({\n                priority: 774,\n                message: \"Unexpected \".concat(char, \" closing character (no matching opener)\"),\n                lineNumber: n,\n                characterIndex: _characterIndex,\n                excerpt: _excerpt8,\n                location: ourLocation\n              }); // debugLog(`  ERROR 774: closed with nothing open: ${char}`);\n            }\n        }\n      }\n    } else {// This is a blank line\n    } // lastLineContents = line;\n\n  } //  At the end of the text -- check for left-over opening characters (unclosed)\n\n\n  if (cutoffPriorityLevel < 768 && openMarkers.length) {\n    var _openMarkers$slice3 = openMarkers.slice(-1),\n        _openMarkers$slice4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_openMarkers$slice3, 1),\n        _openMarkers$slice4$ = _openMarkers$slice4[0],\n        _char = _openMarkers$slice4$.char,\n        _n = _openMarkers$slice4$.n,\n        x = _openMarkers$slice4$.x;\n\n    var _line = lines[_n - 1];\n\n    var _excerpt9 = (x > excerptHalfLength ? '…' : '') + _line.slice(x - excerptHalfLength, x + excerptHalfLengthPlus) + (x + excerptHalfLengthPlus < _line.length ? '…' : '');\n\n    var _details = openMarkers.length > 1 ? \"\".concat(openMarkers.length, \" unclosed set\").concat(openMarkers.length === 1 ? '' : 's') : null;\n\n    addNotice({\n      priority: 768,\n      message: \"At end of text with unclosed \".concat(_char, \" opening character\"),\n      details: _details,\n      lineNumber: _n,\n      characterIndex: x,\n      excerpt: _excerpt9,\n      location: ourLocation\n    });\n  } // TODO: Is this a duplicate of the above section about nesting?\n  // Check matched pairs in the entire file\n\n\n  if (cutoffPriorityLevel < 462) {\n    var _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"OPEN_CLOSE_PUNCTUATION_PAIRS\"]),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var punctSet = _step2.value;\n        // Can’t check '‘’' coz they might be used as apostrophe\n        var leftChar = punctSet[0],\n            rightChar = punctSet[1];\n        var leftCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"countOccurrencesInString\"])(plainText, leftChar),\n            rightCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_4__[\"countOccurrencesInString\"])(plainText, rightChar);\n        if (leftCount !== rightCount && (rightChar !== '’' || leftCount > rightCount) // Closing single quote is also used as apostrophe in English\n        && (textType !== 'markdown' || rightChar !== '>')) // markdown uses > as a block quote character\n          // NOTE: These are lower priority than similar checks in a field\n          //          since they occur only within the entire file\n          addNotice({\n            priority: leftChar === '“' ? 162 : 462,\n            message: \"Mismatched \".concat(leftChar).concat(rightChar, \" characters\"),\n            details: \"left=\".concat(leftCount.toLocaleString(), \", right=\").concat(rightCount.toLocaleString()),\n            location: ourLocation\n          });\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n    // functionLog(`checkPlainText: calling removeDisabledNotices(${cptResult.noticeList.length}) having ${JSON.stringify(checkingOptions)}`);\n    cptResult.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_6__[\"removeDisabledNotices\"])(cptResult.noticeList);\n  }\n\n  addSuccessMessage(\"Checked all \".concat(lines.length.toLocaleString(), \" line\").concat(lines.length === 1 ? '' : 's').concat(ourLocation));\n  if (cptResult.noticeList.length) addSuccessMessage(\"checkPlainText v\".concat(PLAIN_TEXT_VALIDATOR_VERSION_STRING, \" finished with \").concat(cptResult.noticeList.length ? cptResult.noticeList.length.toLocaleString() : \"zero\", \" notice\").concat(cptResult.noticeList.length === 1 ? '' : 's'));else addSuccessMessage(\"No errors or warnings found by checkPlainText v\".concat(PLAIN_TEXT_VALIDATOR_VERSION_STRING)); // debugLog(`  checkPlainText returning with ${result.successList.length.toLocaleString()} success(es), ${result.noticeList.length.toLocaleString()} notice(s).`);\n  // debugLog(\"checkPlainText result is\", JSON.stringify(result));\n\n  return cptResult;\n} // end of checkPlainText function\n\n//# sourceURL=webpack:///./src/core/plain-text-check.js?");

/***/ }),

/***/ "./src/core/questions-tsv7-row-check.js":
/*!**********************************************!*\
  !*** ./src/core/questions-tsv7-row-check.js ***!
  \**********************************************/
/*! exports provided: checkQuestionsTSV7DataRow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkQuestionsTSV7DataRow\", function() { return checkQuestionsTSV7DataRow; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./text-handling-functions */ \"./src/core/text-handling-functions.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _field_text_check__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\");\n/* harmony import */ var _markdown_text_check__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./markdown-text-check */ \"./src/core/markdown-text-check.js\");\n/* harmony import */ var _orig_quote_check__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./orig-quote-check */ \"./src/core/orig-quote-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n// eslint-disable-next-line no-unused-vars\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const QUESTIONS_TABLE_ROW_VALIDATOR_VERSION_STRING = '0.2.12';\n\nvar NUM_EXPECTED_QUESTIONS_TSV_FIELDS = 7; // so expects 6 tabs per line\n\nvar EXPECTED_QUESTIONS_HEADING_LINE = 'Reference\\tID\\tTags\\tQuote\\tOccurrence\\tQuestion\\tResponse';\nvar LC_ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\nvar LC_ALPHABET_PLUS_DIGITS = 'abcdefghijklmnopqrstuvwxyz0123456789';\nvar LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN = 'abcdefghijklmnopqrstuvwxyz0123456789-'; // const TA_REGEX = new RegExp('\\\\[\\\\[rc://[^ /]+?/ta/man/[^ /]+?/([^ \\\\]]+?)\\\\]\\\\]', 'g');\n\n/**\n *\n * @description - Checks one TSV data row of translation questions (TQ)\n * @param {string} languageCode - the language code, e.g., 'en'\n * @param {string} repoCode - 'TQ' or 'SQ'\n * @param {string} line - the TSV line to be checked\n * @param {string} bookID - 3-character UPPERCASE USFM book identifier or 'OBS'\n * @param {string} givenC - chapter number or (for OBS) story number string\n * @param {string} givenV - verse number or (for OBS) frame number string\n * @param {string} givenRowLocation - description of where the line is located\n * @param {Object} checkingOptions - may contain excerptLength parameter\n * @return {Object} - containing noticeList\n */\n\nfunction checkQuestionsTSV7DataRow(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9) {\n  return _checkQuestionsTSV7DataRow.apply(this, arguments);\n} // end of checkQuestionsTSV7DataRow function\n\nfunction _checkQuestionsTSV7DataRow() {\n  _checkQuestionsTSV7DataRow = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(username, languageCode, repoCode, line, bookID, givenC, givenV, givenRowLocation, checkingOptions) {\n    var ourRowLocation, linkCheckingOptions, drResult, addNoticePartial, ourMarkdownTextChecks, _ourMarkdownTextChecks, ourCheckTextField, ourCheckQOriginalLanguageQuote, _ourCheckQOriginalLanguageQuote, excerptLength, excerptHalfLength, excerptHalfLengthPlus, lowercaseBookID, numChaptersThisBook, haveGoodBookID, fields, RIDSuggestion, OQSuggestion, OSuggestion, QuSuggestion, RSuggestion, _fields, reference, rowID, tags, quote, occurrence, question, response, characterIndex, _reference$split, _reference$split2, C, V, numVersesThisChapter, haveGoodChapterNumber, intC, intV, _V$split, _V$split2, V1, V2, intV1, intV2, intGivenV, excerpt, tagsList, _iterator2, _step2, thisTag, _excerpt, _excerpt2, charCount, _charCount, adjustedQuestion, _charCount2, _charCount3, adjustedResponse, suggestion, _rowID;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _ourCheckQOriginalLanguageQuote = function _ourCheckQOriginalLan2() {\n              _ourCheckQOriginalLanguageQuote = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(rowID, fieldName, fieldText, occurrence, rowLocation, checkingOptions) {\n                var coqResultObject, _iterator4, _step4, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return Object(_orig_quote_check__WEBPACK_IMPORTED_MODULE_10__[\"checkOriginalLanguageQuoteAndOccurrence\"])(username, languageCode, repoCode, fieldName, fieldText, occurrence, bookID, givenC, givenV, rowLocation, checkingOptions);\n\n                      case 2:\n                        coqResultObject = _context2.sent;\n                        // Choose only ONE of the following\n                        // This is the fast way of append the results from this field\n                        // result.noticeList = result.noticeList.concat(coqResultObject.noticeList);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coqResultObject.noticeList);\n\n                        try {\n                          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                            noticeEntry = _step4.value;\n                            // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourCheckQOriginalLanguageQuote notice length=${Object.keys(noticeEntry).length}`);\n                            addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                              rowID: rowID,\n                              fieldName: fieldName\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator4.e(err);\n                        } finally {\n                          _iterator4.f();\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              return _ourCheckQOriginalLanguageQuote.apply(this, arguments);\n            };\n\n            ourCheckQOriginalLanguageQuote = function _ourCheckQOriginalLan(_x16, _x17, _x18, _x19, _x20, _x21) {\n              return _ourCheckQOriginalLanguageQuote.apply(this, arguments);\n            };\n\n            ourCheckTextField = function _ourCheckTextField(rowID, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions) {\n              /**\n              * @description - checks the given text field and processes the returned results\n              * @param {string} rowID - 4-character row ID field\n              * @param {string} fieldName - name of the field being checked\n              * @param {string} fieldText - the actual text of the field being checked\n              * @param {boolean} allowedLinks - true if links are allowed in the field, otherwise false\n              * @param {string} rowLocation - description of where the line is located\n              * @param {Object} checkingOptions - parameters that might affect the check\n              */\n              // Does basic checks for small errors like leading/trailing spaces, etc.\n              // We assume that checking for compulsory fields is done elsewhere\n              // Updates the global list of notices\n              // functionLog(`checkQuestionsTSV7DataRow ourCheckTextField(${fieldName}, (${fieldText.length}), ${allowedLinks}, ${rowLocation}, …)`);\n              //parameterAssert(rowID !== undefined, \"checkQuestionsTSV7DataRow ourCheckTextField: 'rowID' parameter should be defined\");\n              //parameterAssert(typeof rowID === 'string', `checkQuestionsTSV7DataRow ourCheckTextField: 'rowID' parameter should be a string not a '${typeof rowID}'`);\n              //parameterAssert(fieldName !== undefined, \"checkQuestionsTSV7DataRow ourCheckTextField: 'fieldName' parameter should be defined\");\n              //parameterAssert(typeof fieldName === 'string', `checkQuestionsTSV7DataRow ourCheckTextField: 'fieldName' parameter should be a string not a '${typeof fieldName}'`);\n              //parameterAssert(fieldText !== undefined, \"checkQuestionsTSV7DataRow ourCheckTextField: 'fieldText' parameter should be defined\");\n              //parameterAssert(typeof fieldText === 'string', `checkQuestionsTSV7DataRow ourCheckTextField: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n              //parameterAssert(allowedLinks === true || allowedLinks === false, \"checkQuestionsTSV7DataRow ourCheckTextField: allowedLinks parameter must be either true or false\");\n              //parameterAssert(rowLocation !== undefined, \"checkQuestionsTSV7DataRow ourCheckTextField: 'rowLocation' parameter should be defined\");\n              //parameterAssert(typeof rowLocation === 'string', `checkQuestionsTSV7DataRow ourCheckTextField: 'rowLocation' parameter should be a string not a '${typeof rowLocation}'`);\n              //parameterAssert(rowLocation.indexOf(fieldName) < 0, `checkQuestionsTSV7DataRow ourCheckTextField: 'rowLocation' parameter should be not contain fieldName=${fieldName}`);\n              var fieldType = fieldName === 'Question' ? 'markdown' : 'raw';\n              var octfResultObject = Object(_field_text_check__WEBPACK_IMPORTED_MODULE_8__[\"checkTextField\"])(username, languageCode, repoCode, fieldType, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions); // Choose only ONE of the following\n              // This is the fast way of append the results from this field\n              // result.noticeList = result.noticeList.concat(dbtcResultObject.noticeList);\n              // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n              //  process results line by line\n\n              var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(octfResultObject.noticeList),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var noticeEntry = _step.value;\n                  // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourCheckTextField notice length=${Object.keys(noticeEntry).length}`);\n                  addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                    rowID: rowID,\n                    fieldName: fieldName\n                  }));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              return octfResultObject.suggestion; // There may or may not be one!\n            };\n\n            _ourMarkdownTextChecks = function _ourMarkdownTextCheck2() {\n              _ourMarkdownTextChecks = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(rowID, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions) {\n                var omtcResultObject, _iterator3, _step3, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return Object(_markdown_text_check__WEBPACK_IMPORTED_MODULE_9__[\"checkMarkdownText\"])(username, languageCode, repoCode, fieldName, fieldText, rowLocation, checkingOptions);\n\n                      case 2:\n                        omtcResultObject = _context.sent;\n                        // Choose only ONE of the following\n                        // This is the fast way of append the results from this field\n                        // result.noticeList = result.noticeList.concat(cmtResultObject.noticeList);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(omtcResultObject.noticeList);\n\n                        try {\n                          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                            noticeEntry = _step3.value;\n                            // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourMarkdownTextChecks notice length=${Object.keys(noticeEntry).length}`);\n                            // NOTE: Ellipses in Question and Answer have the normal meaning\n                            //          not like the specialised meaning in the Quote snippet fields\n                            if (noticeEntry.priority !== 178 && noticeEntry.priority !== 179 // unexpected space after ellipse, ellipse after space\n                            && !noticeEntry.message.startsWith(\"Unexpected … character after space\") // 191\n                            ) addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                              rowID: rowID,\n                              fieldName: fieldName\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator3.e(err);\n                        } finally {\n                          _iterator3.f();\n                        }\n\n                        return _context.abrupt(\"return\", omtcResultObject.suggestion);\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _ourMarkdownTextChecks.apply(this, arguments);\n            };\n\n            ourMarkdownTextChecks = function _ourMarkdownTextCheck(_x10, _x11, _x12, _x13, _x14, _x15) {\n              return _ourMarkdownTextChecks.apply(this, arguments);\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              /**\n              * @description - adds a new notice entry, adding bookID,C,V to the given fields\n              * @param {number} priority - notice priority from 1 (lowest) to 999 (highest)\n              * @param {string} message - the text of the notice message\n              * @param {string} rowID - 4-character row ID field\n              * @param {number} lineNumber - one-based line number\n              * @param {number} characterIndex - zero-based index of where the issue occurs in the line\n              * @param {string} excerpt - short excerpt from the line centred on the problem (if available)\n              * @param {string} location - description of where the issue is located\n              */\n              // functionLog(`checkQuestionsTSV7DataRow addNoticePartial(priority=${incompleteNoticeObject.priority}) ${incompleteNoticeObject.message}, ${incompleteNoticeObject.characterIndex}, ${incompleteNoticeObject.excerpt}, ${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"checkQuestionsTSV7DataRow addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `checkQuestionsTSV7DataRow addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"checkQuestionsTSV7DataRow addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `checkQuestionsTSV7DataRow addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(lineNumber !== undefined, \"checkQuestionsTSV7DataRow addNoticePartial: 'lineNumber' parameter should be defined\");\n              // parameterAssert(typeof lineNumber === 'number', `checkQuestionsTSV7DataRow addNoticePartial: 'lineNumber' parameter should be a number not a '${typeof lineNumber}': ${lineNumber}`);\n              // parameterAssert(characterIndex !== undefined, \"checkQuestionsTSV7DataRow addNoticePartial: 'characterIndex' parameter should be defined\");\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `checkQuestionsTSV7DataRow addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"checkQuestionsTSV7DataRow addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `checkQuestionsTSV7DataRow addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"checkQuestionsTSV7DataRow addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `checkQuestionsTSV7DataRow addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n              // Also uses the given bookID,C,V, parameters from the main function call\n              // incompleteNoticeObject.debugChain = incompleteNoticeObject.debugChain ? `checkQuestionsTSV7DataRow ${incompleteNoticeObject.debugChain}` : `checkQuestionsTSV7DataRow(${repoCode})`;\n\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"aboutToOverwrite\"])('checkQuestionsTSV7DataRow', ['bookID', 'C', 'V'], incompleteNoticeObject, {\n                bookID: bookID,\n                C: givenC,\n                V: givenV\n              });\n              drResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                C: givenC,\n                V: givenV\n              }));\n            };\n\n            /* This function is only for checking one data row\n                  and the function doesn’t assume that it has any previous context.\n                 TQ being translation or study questions.\n                 bookID is a three-character UPPERCASE USFM book identifier or 'OBS'\n                    so givenC and givenV are usually chapter number and verse number\n                        but can be story number and frame number for OBS.\n                 It’s designed to be able to quickly show errors for a single row being displayed/edited.\n                 Returns an object containing the noticeList.\n            */\n            // functionLog(`checkQuestionsTSV7DataRow(${languageCode}, ${repoCode}, ${line}, ${bookID}, ${givenRowLocation}, ${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(languageCode !== undefined, \"checkQuestionsTSV7DataRow: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkQuestionsTSV7DataRow: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode !== undefined, \"checkQuestionsTSV7DataRow: 'repoCode' parameter should be defined\");\n            //parameterAssert(typeof repoCode === 'string', `checkQuestionsTSV7DataRow: 'repoCode' parameter should be a string not a '${typeof repoCode}'`);\n            //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkQuestionsTSV7DataRow: 'repoCode' parameter should not be '${repoCode}'`);\n            //parameterAssert(line !== undefined, \"checkQuestionsTSV7DataRow: 'line' parameter should be defined\");\n            //parameterAssert(typeof line === 'string', `checkQuestionsTSV7DataRow: 'line' parameter should be a string not a '${typeof line}'`);\n            //parameterAssert(bookID !== undefined, \"checkQuestionsTSV7DataRow: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkQuestionsTSV7DataRow: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(bookID.length === 3, `checkQuestionsTSV7DataRow: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkQuestionsTSV7DataRow: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkQuestionsTSV7DataRow: '${bookID}' is not a valid USFM book identifier`);\n            // parameterAssert(givenC !== undefined, \"checkQuestionsTSV7DataRow: 'givenC' parameter should be defined\");\n            if (givenC) {//parameterAssert(typeof givenC === 'string', `checkQuestionsTSV7DataRow: 'givenC' parameter should be a string not a '${typeof givenC}'`);\n            } // parameterAssert(givenV !== undefined, \"checkQuestionsTSV7DataRow: 'givenV' parameter should be defined\");\n\n\n            if (givenV) {//parameterAssert(typeof givenV === 'string', `checkQuestionsTSV7DataRow: 'givenV' parameter should be a string not a '${typeof givenV}'`);\n            } //parameterAssert(givenRowLocation !== undefined, \"checkQuestionsTSV7DataRow: 'givenRowLocation' parameter should be defined\");\n            //parameterAssert(typeof givenRowLocation === 'string', `checkQuestionsTSV7DataRow: 'givenRowLocation' parameter should be a string not a '${typeof givenRowLocation}'`);\n            //parameterAssert(givenRowLocation.indexOf('true') === -1, \"checkQuestionsTSV7DataRow: 'givenRowLocation' parameter should not be 'true'\");\n\n\n            ourRowLocation = givenRowLocation;\n            if (ourRowLocation && ourRowLocation[0] !== ' ') ourRowLocation = \" \".concat(ourRowLocation);\n            linkCheckingOptions = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, checkingOptions);\n            linkCheckingOptions.taRepoLanguageCode = languageCode;\n            drResult = {\n              noticeList: []\n            };\n\n            if (!(line === EXPECTED_QUESTIONS_HEADING_LINE)) {\n              _context3.next = 15;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", drResult);\n\n          case 15:\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (tlcELerror) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n\n\n            excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n            excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n            lowercaseBookID = bookID.toLowerCase();\n            if (bookID === 'OBS') numChaptersThisBook = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"NUM_OBS_STORIES\"]; // There’s 50 Open Bible Stories\n            else {\n              //parameterAssert(lowercaseBookID !== 'obs', \"Shouldn’t happen in question-row-check\");\n              try {\n                numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"chaptersInBook\"](bookID);\n              } catch (tlcNCerror) {\n                addNoticePartial({\n                  priority: 979,\n                  message: \"Invalid book identifier passed to checkQuestionsTSV7DataRow\",\n                  location: \" '\".concat(bookID, \"' in first parameter: \").concat(tlcNCerror)\n                });\n              }\n            }\n            haveGoodBookID = numChaptersThisBook !== undefined;\n            fields = line.split('\\t');\n\n            if (!(fields.length === NUM_EXPECTED_QUESTIONS_TSV_FIELDS)) {\n              _context3.next = 76;\n              break;\n            }\n\n            _fields = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(fields, 7), reference = _fields[0], rowID = _fields[1], tags = _fields[2], quote = _fields[3], occurrence = _fields[4], question = _fields[5], response = _fields[6];\n            // let withString = ` with '${rowID}'${inString}`;\n            // let CV_withString = ` ${C}:${V}${withString}`;\n            // let atString = ` at ${B} ${C}:${V} (${rowID})${inString}`;\n            // Check the fields one-by-one\n            _reference$split = reference.split(':'), _reference$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_reference$split, 2), C = _reference$split2[0], V = _reference$split2[1];\n            if (C === undefined || V === undefined) if (repoCode !== 'OBS-SQ' || reference !== 'front') addNoticePartial({\n              priority: 901,\n              message: \"Unexpected reference field\",\n              details: \"expected C:V\",\n              fieldName: 'Reference',\n              rowID: rowID,\n              excerpt: reference,\n              location: ourRowLocation\n            });\n\n            if (C === null || C === void 0 ? void 0 : C.length) {\n              if (C !== givenC) addNoticePartial({\n                priority: 976,\n                message: \"Wrong chapter number\",\n                details: \"expected '\".concat(givenC, \"'\"),\n                fieldName: 'Reference',\n                rowID: rowID,\n                excerpt: C,\n                location: ourRowLocation\n              });\n\n              if (C === 'front') {} else if (/^\\d+$/.test(C)) {\n                intC = Number(C);\n\n                if (intC === 0) {\n                  addNoticePartial({\n                    priority: 824,\n                    message: \"Invalid zero chapter number\",\n                    excerpt: C,\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    location: ourRowLocation\n                  });\n                  haveGoodChapterNumber = false;\n                } // TODO: Does this next section need rewriting (see verse check below)???\n                else if (intC > numChaptersThisBook) {\n                  addNoticePartial({\n                    priority: 823,\n                    message: \"Invalid large chapter number\",\n                    excerpt: C,\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    location: ourRowLocation\n                  });\n                  haveGoodChapterNumber = false;\n                }\n\n                if (lowercaseBookID === 'obs') {\n                  haveGoodChapterNumber = intC >= 1 && intC <= _defaults__WEBPACK_IMPORTED_MODULE_5__[\"NUM_OBS_STORIES\"];\n                  numVersesThisChapter = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"OBS_FRAME_COUNT_LIST\"][intC - 1]; // Set to maximum expected number of frames\n                } else {\n                  try {\n                    numVersesThisChapter = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"versesInChapter\"](lowercaseBookID, intC);\n                    haveGoodChapterNumber = true;\n                  } catch (tlcNVerror) {\n                    if (!haveGoodBookID) // addNoticePartial({priority:500, \"Invalid chapter number\", rowLocation);\n                      // else\n                      addNoticePartial({\n                        priority: 822,\n                        message: \"Unable to check chapter number\",\n                        excerpt: C,\n                        rowID: rowID,\n                        fieldName: 'Reference',\n                        location: ourRowLocation\n                      });\n                    haveGoodChapterNumber = false;\n                  }\n                }\n              } else addNoticePartial({\n                priority: 821,\n                message: \"Bad chapter number\",\n                excerpt: C,\n                rowID: rowID,\n                fieldName: 'Reference',\n                location: ourRowLocation\n              });\n            } else addNoticePartial({\n              priority: 820,\n              message: \"Missing chapter number\",\n              rowID: rowID,\n              fieldName: 'Reference',\n              excerpt: \"?:\".concat(V),\n              location: ourRowLocation\n            });\n\n            if (V === null || V === void 0 ? void 0 : V.length) {\n              // can be undefined if no colon at split above\n              if (V.indexOf('-') === -1) {\n                // Not a verse bridge\n                if (V !== givenV) addNoticePartial({\n                  priority: 975,\n                  message: \"Wrong verse number\",\n                  details: \"expected '\".concat(givenV, \"'\"),\n                  rowID: rowID,\n                  fieldName: 'Reference',\n                  excerpt: V,\n                  location: ourRowLocation\n                });\n\n                if (bookID === 'OBS' || V === 'intro') {} else if (/^\\d+$/.test(V)) {\n                  intV = Number(V);\n                  if (intV === 0 && bookID !== 'PSA') // Psalms have \\d as verse zero\n                    addNoticePartial({\n                      priority: 814,\n                      message: \"Invalid zero verse number\",\n                      rowID: rowID,\n                      fieldName: 'Reference',\n                      excerpt: V,\n                      location: ourRowLocation\n                    });else {\n                    if (haveGoodChapterNumber) {\n                      if (intV > numVersesThisChapter) addNoticePartial({\n                        priority: 813,\n                        message: \"Invalid large verse number\",\n                        details: \"\".concat(bookID, \" chapter \").concat(C, \" only has \").concat(numVersesThisChapter, \" verses\"),\n                        rowID: rowID,\n                        fieldName: 'Reference',\n                        excerpt: V,\n                        location: ourRowLocation\n                      });\n                    } else addNoticePartial({\n                      priority: 812,\n                      message: \"Unable to check verse number\",\n                      rowID: rowID,\n                      fieldName: 'Reference',\n                      location: ourRowLocation\n                    });\n                  }\n                } else addNoticePartial({\n                  priority: 811,\n                  message: \"Bad verse number\",\n                  rowID: rowID,\n                  fieldName: 'Reference',\n                  excerpt: V,\n                  location: ourRowLocation\n                });\n              } else {\n                // it’s a verse bridge\n                if (Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(V, '-') > 1) addNoticePartial({\n                  priority: 808,\n                  message: \"Bad verse range\",\n                  details: \"Too many hyphens\",\n                  rowID: rowID,\n                  fieldName: 'Reference',\n                  excerpt: V,\n                  location: ourRowLocation\n                });\n                _V$split = V.split('-'), _V$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_V$split, 2), V1 = _V$split2[0], V2 = _V$split2[1];\n\n                if (/^\\d+$/.test(V1) && /^\\d+$/.test(V2)) {\n                  intV1 = Number(V1), intV2 = Number(V2), intGivenV = Number(givenV);\n                  if (intGivenV < intV1 || intGivenV > intV2) addNoticePartial({\n                    priority: 975,\n                    message: \"Wrong verse number\",\n                    details: \"expected '\".concat(givenV, \"' to be inside range\"),\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    excerpt: V,\n                    location: ourRowLocation\n                  });else if (intV1 >= intV2) addNoticePartial({\n                    priority: 808,\n                    message: \"Bad verse range\",\n                    details: \"Second digits should be greater\",\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    excerpt: V,\n                    location: ourRowLocation\n                  });else if (intV1 === 0 && bookID !== 'PSA') // Psalms have \\d as verse zero\n                    addNoticePartial({\n                      priority: 814,\n                      message: \"Invalid zero verse number\",\n                      rowID: rowID,\n                      fieldName: 'Reference',\n                      excerpt: V,\n                      location: ourRowLocation\n                    });else {\n                    if (haveGoodChapterNumber) {\n                      if (intV2 > numVersesThisChapter) addNoticePartial({\n                        priority: 813,\n                        message: \"Invalid large verse number\",\n                        details: \"\".concat(bookID, \" chapter \").concat(C, \" only has \").concat(numVersesThisChapter, \" verses\"),\n                        rowID: rowID,\n                        fieldName: 'Reference',\n                        excerpt: V,\n                        location: ourRowLocation\n                      });\n                    } else addNoticePartial({\n                      priority: 812,\n                      message: \"Unable to check verse numbers\",\n                      rowID: rowID,\n                      fieldName: 'Reference',\n                      location: ourRowLocation\n                    });\n                  }\n                } else addNoticePartial({\n                  priority: 808,\n                  message: \"Bad verse range\",\n                  details: \"Should be digits\",\n                  rowID: rowID,\n                  fieldName: 'Reference',\n                  excerpt: V,\n                  location: ourRowLocation\n                });\n              }\n            } else if (repoCode !== 'OBS-SQ' || reference !== 'front') addNoticePartial({\n              priority: 810,\n              message: \"Missing verse number\",\n              rowID: rowID,\n              fieldName: 'Reference',\n              location: \" after \".concat(C, \":?\").concat(ourRowLocation)\n            });\n\n            if (!rowID.length) addNoticePartial({\n              priority: 931,\n              message: \"Missing row ID field\",\n              fieldName: 'Reference',\n              location: ourRowLocation\n            });else {\n              if (rowID.length !== 4) {\n                addNoticePartial({\n                  priority: 778,\n                  message: \"Row ID should be exactly 4 characters\",\n                  details: \"not \".concat(rowID.length),\n                  rowID: rowID,\n                  fieldName: 'ID',\n                  excerpt: rowID,\n                  location: ourRowLocation\n                });\n                if (rowID.length > 4) RIDSuggestion = rowID.slice(0, 5);else {\n                  // must be < 4\n                  RIDSuggestion = rowID;\n\n                  while (RIDSuggestion.length < 4) {\n                    RIDSuggestion += LC_ALPHABET_PLUS_DIGITS[Math.floor(Math.random() * LC_ALPHABET_PLUS_DIGITS.length)];\n                  }\n\n                  ;\n                }\n              } else if (LC_ALPHABET.indexOf(rowID[0]) < 0) addNoticePartial({\n                priority: 176,\n                message: \"Row ID should start with a lowercase letter\",\n                characterIndex: 0,\n                rowID: rowID,\n                fieldName: 'ID',\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS.indexOf(rowID[3]) < 0) addNoticePartial({\n                priority: 175,\n                message: \"Row ID should end with a lowercase letter or digit\",\n                characterIndex: 3,\n                rowID: rowID,\n                fieldName: 'ID',\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN.indexOf(rowID[1]) < 0) addNoticePartial({\n                priority: 174,\n                message: \"Row ID characters should only be lowercase letters, digits, or hypen\",\n                fieldName: 'ID',\n                characterIndex: 1,\n                rowID: rowID,\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN.indexOf(rowID[2]) < 0) addNoticePartial({\n                priority: 173,\n                message: \"Row ID characters should only be lowercase letters, digits, or hypen\",\n                fieldName: 'ID',\n                characterIndex: 2,\n                rowID: rowID,\n                excerpt: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (tags.length) {\n              if ((characterIndex = tags.indexOf('\\\\n')) !== -1) {\n                excerpt = (characterIndex > excerptHalfLength ? '…' : '') + tags.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < tags.length ? '…' : '');\n                addNoticePartial({\n                  priority: 971,\n                  message: \"Unexpected line break in single-line field\",\n                  fieldName: 'GLQuote',\n                  rowID: rowID,\n                  characterIndex: characterIndex,\n                  excerpt: excerpt,\n                  location: ourRowLocation\n                });\n              }\n\n              tagsList = tags.split('; ');\n              _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(tagsList);\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  thisTag = _step2.value;\n                  if (!['intro', 'meaning', 'application', 'summary'].includes(thisTag)) // For TQs or SQs\n                    addNoticePartial({\n                      priority: 740,\n                      message: \"Unrecognized tag\",\n                      details: thisTag,\n                      excerpt: tags,\n                      fieldName: 'Tags',\n                      rowID: rowID,\n                      location: ourRowLocation\n                    });\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n\n            if (!quote.length) {\n              _context3.next = 42;\n              break;\n            }\n\n            // need to check UTN against UHB and UGNT\n            if ((characterIndex = quote.indexOf('\\\\n')) !== -1) {\n              _excerpt = (characterIndex > excerptHalfLength ? '…' : '') + quote.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < quote.length ? '…' : '');\n              addNoticePartial({\n                priority: 971,\n                message: \"Unexpected line break in single-line field\",\n                fieldName: 'GLQuote',\n                rowID: rowID,\n                characterIndex: characterIndex,\n                excerpt: _excerpt,\n                location: ourRowLocation\n              });\n            }\n\n            OQSuggestion = ourCheckTextField(rowID, 'Quote', quote, false, ourRowLocation, checkingOptions);\n\n            if (!occurrence.length) {\n              _context3.next = 39;\n              break;\n            }\n\n            _context3.next = 37;\n            return ourCheckQOriginalLanguageQuote(rowID, 'Quote', quote, occurrence, ourRowLocation, checkingOptions);\n\n          case 37:\n            _context3.next = 40;\n            break;\n\n          case 39:\n            addNoticePartial({\n              priority: 750,\n              message: \"Missing occurrence field when we have an original quote\",\n              fieldName: 'Occurrence',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 40:\n            _context3.next = 43;\n            break;\n\n          case 42:\n            // TODO: Find more details about when these fields are really compulsory (and when they're not, e.g., for 'intro') ???\n            if (V !== 'intro' && occurrence !== '0') addNoticePartial({\n              priority: repoCode === 'SQ' ? 919 : 119,\n              message: \"Missing Quote field\",\n              fieldName: 'Quote',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 43:\n            if (occurrence.length) {\n              // This should usually be a digit\n              if ((characterIndex = occurrence.indexOf('\\\\n')) !== -1) {\n                _excerpt2 = (characterIndex > excerptHalfLength ? '…' : '') + occurrence.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < occurrence.length ? '…' : '');\n                addNoticePartial({\n                  priority: 971,\n                  message: \"Unexpected line break in single-line field\",\n                  fieldName: 'GLQuote',\n                  rowID: rowID,\n                  characterIndex: characterIndex,\n                  excerpt: _excerpt2,\n                  location: ourRowLocation\n                });\n              }\n\n              if (occurrence === '0') {\n                // zero means that it doesn’t occur\n                if (quote.length) {\n                  addNoticePartial({\n                    priority: 751,\n                    message: \"Invalid zero occurrence field when we have an original quote\",\n                    fieldName: 'Occurrence',\n                    rowID: rowID,\n                    excerpt: occurrence,\n                    location: ourRowLocation\n                  });\n                  OSuggestion = '1';\n                } // if (V !== 'intro')\n                //     addNoticePartial({priority:500, message:\"Invalid zero occurrence field\", rowID, location:rowLocation);\n\n              } else if (occurrence === '-1') {} // TODO check the special conditions when this can occur???\n              else if ('12345678'.indexOf(occurrence) < 0) {\n                // it’s not one of these integers\n                addNoticePartial({\n                  priority: 792,\n                  message: \"Invalid occurrence field\",\n                  fieldName: 'Occurrence',\n                  rowID: rowID,\n                  excerpt: occurrence,\n                  location: ourRowLocation\n                });\n                OSuggestion = '1';\n              }\n            } else if (quote.length) {\n              addNoticePartial({\n                priority: 791,\n                message: \"Missing occurrence field\",\n                fieldName: 'Occurrence',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n              OSuggestion = '1';\n            }\n\n            if (!question.length) {\n              _context3.next = 57;\n              break;\n            }\n\n            if (question.indexOf('<br>') >= 0) {\n              charCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(question, '<br>');\n              addNoticePartial({\n                priority: 674,\n                message: \"Field contains HTML <br> field(s)\",\n                details: \"\".concat(charCount, \" occurrence\").concat(charCount === 1 ? '' : 's', \" found\\u2014should be '\\\\n' instead\"),\n                fieldName: 'Question',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (question.indexOf(\"\\u200B\") >= 0) {\n              _charCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(question, \"\\u200B\");\n              addNoticePartial({\n                priority: 374,\n                message: \"Field contains zero-width space(s)\",\n                details: \"\".concat(_charCount, \" occurrence\").concat(_charCount === 1 ? '' : 's', \" found\"),\n                fieldName: 'Question',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (!Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"isWhitespace\"])(question)) {\n              _context3.next = 51;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 373,\n              message: \"Field is only whitespace\",\n              fieldName: 'Question',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n            _context3.next = 55;\n            break;\n\n          case 51:\n            // More than just whitespace\n            adjustedQuestion = question.replace(/\\\\n/g, '\\n');\n            _context3.next = 54;\n            return ourMarkdownTextChecks(rowID, 'Question', adjustedQuestion, true, ourRowLocation, checkingOptions);\n\n          case 54:\n            RSuggestion = _context3.sent;\n\n          case 55:\n            _context3.next = 58;\n            break;\n\n          case 57:\n            // TODO: Find out if these fields are really compulsory (and when they're not, e.g., for 'intro') ???\n            if (repoCode === 'TQ') addNoticePartial({\n              priority: 274,\n              message: \"Missing Question field\",\n              fieldName: 'Question',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 58:\n            if (!response.length) {\n              _context3.next = 71;\n              break;\n            }\n\n            if (response.indexOf('<br>') >= 0) {\n              _charCount2 = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(response, '<br>');\n              addNoticePartial({\n                priority: 674,\n                message: \"Field contains HTML <br> field(s)\",\n                details: \"\".concat(_charCount2, \" occurrence\").concat(_charCount2 === 1 ? '' : 's', \" found\\u2014should be '\\\\n' instead\"),\n                fieldName: 'Response',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (response.indexOf(\"\\u200B\") >= 0) {\n              _charCount3 = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(response, \"\\u200B\");\n              addNoticePartial({\n                priority: 374,\n                message: \"Field contains zero-width space(s)\",\n                details: \"\".concat(_charCount3, \" occurrence\").concat(_charCount3 === 1 ? '' : 's', \" found\"),\n                fieldName: 'Response',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (!Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"isWhitespace\"])(response)) {\n              _context3.next = 65;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 373,\n              message: \"Field is only whitespace\",\n              fieldName: 'Response',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n            _context3.next = 69;\n            break;\n\n          case 65:\n            // More than just whitespace\n            adjustedResponse = response.replace(/\\\\n/g, '\\n');\n            _context3.next = 68;\n            return ourMarkdownTextChecks(rowID, 'Response', adjustedResponse, true, ourRowLocation, checkingOptions);\n\n          case 68:\n            RSuggestion = _context3.sent;\n\n          case 69:\n            _context3.next = 72;\n            break;\n\n          case 71:\n            // TODO: Find out if these fields are really compulsory (and when they're not, e.g., for 'intro') ???\n            if (repoCode === 'TQ') addNoticePartial({\n              priority: 274,\n              message: \"Missing Response field\",\n              fieldName: 'Response',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 72:\n            // 7 [reference, rowID, tags, question, answer]\n            suggestion = \"\".concat(reference, \"\\t\").concat(RIDSuggestion === undefined ? rowID : RIDSuggestion, \"\\t\").concat(tags, \"\\t\").concat(OQSuggestion === undefined ? quote : OQSuggestion, \"\\t\").concat(OSuggestion === undefined ? occurrence : OSuggestion, \"\\t\").concat(QuSuggestion === undefined ? question : QuSuggestion, \"\\t\").concat(RSuggestion === undefined ? response : RSuggestion);\n\n            if (suggestion !== line) {\n              // debugLog(`Had question ${line}`);\n              // debugLog(`Sug question ${suggestion}`);\n              drResult.suggestion = suggestion;\n            }\n\n            _context3.next = 79;\n            break;\n\n          case 76:\n            // wrong number of fields in the row\n            // Have a go at getting some of the first fields out of the row\n            _rowID = '????';\n\n            try {\n              _rowID = fields[1];\n            } catch (_unused) {}\n\n            addNoticePartial({\n              priority: 984,\n              message: \"Found wrong number of TSV fields (expected \".concat(NUM_EXPECTED_QUESTIONS_TSV_FIELDS, \")\"),\n              details: \"found \".concat(fields.length, \" field\").concat(fields.length === 1 ? '' : 's'),\n              rowID: _rowID,\n              location: ourRowLocation\n            });\n\n          case 79:\n            return _context3.abrupt(\"return\", drResult);\n\n          case 80:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _checkQuestionsTSV7DataRow.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/questions-tsv7-row-check.js?");

/***/ }),

/***/ "./src/core/questions-tsv7-table-check.js":
/*!************************************************!*\
  !*** ./src/core/questions-tsv7-table-check.js ***!
  \************************************************/
/*! exports provided: checkQuestionsTSV7Table */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkQuestionsTSV7Table\", function() { return checkQuestionsTSV7Table; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _questions_tsv7_row_check__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./questions-tsv7-row-check */ \"./src/core/questions-tsv7-row-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n\n // import { removeDisabledNotices } from './disabled-notices';\n// eslint-disable-next-line no-unused-vars\n\n\nvar QUESTIONS_TABLE_VALIDATOR_VERSION_STRING = '0.3.3';\nvar NUM_EXPECTED_QUESTIONS_TSV_FIELDS = 7; // so expects 6 tabs per line\n\nvar EXPECTED_QUESTIONS_HEADING_LINE = 'Reference\\tID\\tTags\\tQuote\\tOccurrence\\tQuestion\\tResponse';\n/**\n *\n * @param {string} languageCode\n * @param {string} repoCode -- 'TQ' or 'SQ'\n * @param {string} bookID\n * @param {string} filename\n * @param {string} tableText\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkQuestionsTSV7Table(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n  return _checkQuestionsTSV7Table.apply(this, arguments);\n} // end of checkQuestionsTSV7Table function\n\nfunction _checkQuestionsTSV7Table() {\n  _checkQuestionsTSV7Table = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, repoCode, bookID, filename, tableText, givenLocation, checkingOptions) {\n    var ourLocation, cutoffPriorityLevel, excerptLength, carResult, addSuccessMessage, addNoticePartial, lowercaseBookID, numChaptersThisBook, lines, lastC, lastV, rowIDListForVerse, uniqueRowListForVerse, numVersesThisChapter, n, fields, _fields, reference, rowID, tags, quote, occurrence, question, answer, _reference$split, _reference$split2, C, V, drResultObject, _iterator, _step, drNoticeEntry, _iterator2, _step2, checkedRepoName, _iterator3, _step3, checkedFilenameExtension, uniqueID, intC, lastintC, intV, lastintV, _V$split, _V$split2, V1, V2, intV1, intV2, _lastintV, _reference, _C, _V, _rowID, _reference$split3, _reference$split4;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkQuestionsTSV7Table notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"ATSV addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `TSV addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"ATSV addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `TSV addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(C !== undefined, \"ATSV addNoticePartial: 'C' parameter should be defined\");\n              if (incompleteNoticeObject.C) {//parameterAssert(typeof incompleteNoticeObject.C === 'string', `TSV addNoticePartial: 'C' parameter should be a string not a '${typeof incompleteNoticeObject.C}': ${incompleteNoticeObject.C}`);\n              } // parameterAssert(V !== undefined, \"ATSV addNoticePartial: 'V' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.V) {//parameterAssert(typeof incompleteNoticeObject.V === 'string', `TSV addNoticePartial: 'V' parameter should be a string not a '${typeof incompleteNoticeObject.V}': ${incompleteNoticeObject.V}`);\n              } // parameterAssert(characterIndex !== undefined, \"ATSV addNoticePartial: 'characterIndex' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `TSV addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"ATSV addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `TSV addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"ATSV addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `TSV addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n\n\n              if (incompleteNoticeObject.debugChain) incompleteNoticeObject.debugChain = \"checkQuestionsTSV7Table \".concat(incompleteNoticeObject.debugChain);\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"aboutToOverwrite\"])('checkQuestionsTSV7Table', ['bookID', 'filename', 'repoCode'], incompleteNoticeObject, {\n                bookID: bookID,\n                filename: filename,\n                repoCode: repoCode\n              });\n              carResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                filename: filename,\n                repoCode: repoCode\n              }));\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // functionLog(`checkQuestionsTSV7Table success: ${successString}`);\n              carResult.successList.push(successString);\n            };\n\n            /* This function is optimised for checking the entire file, i.e., all rows.\n               It also has the advantage of being able to compare one row with the previous one.\n              bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n              Returns a result object containing a successList and a noticeList\n             */\n            // functionLog(`checkQuestionsTSV7Table(${languageCode}, ${repoCode}, ${bookID}, ${filename}, ${tableText.length}, ${givenLocation},${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(languageCode !== undefined, \"checkQuestionsTSV7Table: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkQuestionsTSV7Table: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode.endsWith('TQ') || repoCode.endsWith('SQ'), `checkQuestionsTSV7Table: repoCode expected to end with 'TQ', or 'SQ' not '${repoCode}'`);\n            //parameterAssert(bookID !== undefined, \"checkQuestionsTSV7Table: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkQuestionsTSV7Table: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(bookID.length === 3, `checkQuestionsTSV7Table: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkQuestionsTSV7Table: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkQuestionsTSV7Table: '${bookID}' is not a valid USFM book identifier`);\n            //parameterAssert(givenLocation !== undefined, \"checkQuestionsTSV7Table: 'givenLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkQuestionsTSV7Table: 'givenLocation' parameter should be a string not a '${typeof givenLocation}'`);\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n            cutoffPriorityLevel = (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel : 0;\n\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (ttcError) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n            // const excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n            // const excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n\n            carResult = {\n              successList: [],\n              noticeList: []\n            };\n            // Main code for checkQuestionsTSV7Table\n            lowercaseBookID = bookID.toLowerCase();\n            numChaptersThisBook = 0;\n            if (bookID === 'OBS') numChaptersThisBook = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"NUM_OBS_STORIES\"]; // There’s 50 Open Bible Stories\n            else {\n              //parameterAssert(lowercaseBookID !== 'obs', \"Shouldn’t happen in checkQuestionsTSV7Table\");\n              try {\n                numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](bookID);\n              } catch (_unused) {\n                if (!_books_books__WEBPACK_IMPORTED_MODULE_5__[\"isValidBookID\"](bookID)) // must not be in FRT, BAK, etc.\n                  addNoticePartial({\n                    priority: 747,\n                    message: \"Bad function call: should be given a valid book abbreviation\",\n                    excerpt: bookID,\n                    location: \" (not '\".concat(bookID, \"')\").concat(ourLocation)\n                  });\n              }\n            }\n            lines = tableText.split('\\n'); // debugLog(`  '${location}' has ${lines.length.toLocaleString()} total lines (expecting ${NUM_EXPECTED_TN_FIELDS} fields in each line)`);\n\n            lastC = '', lastV = '';\n            rowIDListForVerse = [], uniqueRowListForVerse = [];\n            numVersesThisChapter = 0;\n            n = 0;\n\n          case 16:\n            if (!(n < lines.length)) {\n              _context.next = 48;\n              break;\n            }\n\n            if (!(n === 0)) {\n              _context.next = 21;\n              break;\n            }\n\n            if (lines[0] === EXPECTED_QUESTIONS_HEADING_LINE) addSuccessMessage(\"Checked TSV header \".concat(ourLocation));else addNoticePartial({\n              priority: 988,\n              message: \"Bad TSV header\",\n              details: \"expected '\".concat(EXPECTED_QUESTIONS_HEADING_LINE, \"'\"),\n              excerpt: lines[0],\n              lineNumber: 1,\n              location: ourLocation\n            });\n            _context.next = 45;\n            break;\n\n          case 21:\n            fields = lines[n].split('\\t');\n\n            if (!(fields.length === NUM_EXPECTED_QUESTIONS_TSV_FIELDS)) {\n              _context.next = 44;\n              break;\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            _fields = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(fields, 7), reference = _fields[0], rowID = _fields[1], tags = _fields[2], quote = _fields[3], occurrence = _fields[4], question = _fields[5], answer = _fields[6];\n            _reference$split = reference.split(':'), _reference$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_reference$split, 2), C = _reference$split2[0], V = _reference$split2[1]; // Use the row check to do most basic checks\n\n            _context.next = 27;\n            return Object(_questions_tsv7_row_check__WEBPACK_IMPORTED_MODULE_7__[\"checkQuestionsTSV7DataRow\"])(username, languageCode, repoCode, lines[n], bookID, C, V, ourLocation, checkingOptions);\n\n          case 27:\n            drResultObject = _context.sent;\n            // Choose only ONE of the following\n            // This is the fast way of append the results from this field\n            // result.noticeList = result.noticeList.concat(firstResult.noticeList);\n            // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n            //  process results line by line\n            _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.noticeList);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                drNoticeEntry = _step.value;\n                if (drNoticeEntry.extra) // it must be an indirect check on a TA or TW article from a TN2 check\n                  carResult.noticeList.push(drNoticeEntry); // Just copy the complete notice as is\n                else if (drNoticeEntry.priority !== 931) // We already caught Missing row ID\n                  addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, drNoticeEntry), {}, {\n                    lineNumber: n + 1\n                  }));\n              } // The following is needed coz we might be checking the linked TA and/or TW articles\n\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            if (drResultObject.checkedFileCount && drResultObject.checkedFileCount > 0) if (typeof carResult.checkedFileCount === 'number') carResult.checkedFileCount += drResultObject.checkedFileCount;else carResult.checkedFileCount = drResultObject.checkedFileCount;\n            if (drResultObject.checkedFilesizes && drResultObject.checkedFilesizes > 0) if (typeof carResult.checkedFilesizes === 'number') carResult.checkedFilesizes += drResultObject.checkedFilesizes;else carResult.checkedFilesizes = drResultObject.checkedFilesizes;\n\n            if (drResultObject.checkedRepoNames && drResultObject.checkedRepoNames.length > 0) {\n              _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.checkedRepoNames);\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  checkedRepoName = _step2.value;\n\n                  try {\n                    if (carResult.checkedRepoNames.indexOf(checkedRepoName) < 0) carResult.checkedRepoNames.push(checkedRepoName);\n                  } catch (_unused2) {\n                    carResult.checkedRepoNames = [checkedRepoName];\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n\n            if (drResultObject.checkedFilenameExtensions && drResultObject.checkedFilenameExtensions.length > 0) {\n              _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.checkedFilenameExtensions);\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  checkedFilenameExtension = _step3.value;\n\n                  try {\n                    if (carResult.checkedFilenameExtensions.indexOf(checkedFilenameExtension) < 0) carResult.checkedFilenameExtensions.push(checkedFilenameExtension);\n                  } catch (_unused3) {\n                    carResult.checkedFilenameExtensions = [checkedFilenameExtension];\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            } // if (ttResult.checkedFilenameExtensions) debugLog(\"ttResult\", JSON.stringify(ttResult));\n            // So here we only have to check against the previous and next fields for out-of-order problems and duplicate problems\n\n\n            if (C !== lastC || V !== lastV) {\n              rowIDListForVerse = []; // ID's only need to be unique within each verse\n\n              uniqueRowListForVerse = []; // Same for these\n            } // TODO: Check if we need this at all (even though tC 3.0 can’t display these \"duplicate\" notes)\n            // Check for duplicate notes\n\n\n            uniqueID = C + V + question + answer; // This combination should not be repeated\n            // if (uniqueRowListForVerse.includes(uniqueID))\n            //     addNoticePartial({ priority: 880, C, V, message: `Duplicate note`, rowID, lineNumber: n + 1, location: ourLocation });\n            // if (uniqueRowListForVerse.includes(uniqueID))\n            //     addNoticePartial({ priority: 80, C, V, message: `Note: tC 3.0 won’t display duplicate note`, rowID, lineNumber: n + 1, location: ourLocation });\n\n            uniqueRowListForVerse.push(uniqueID);\n\n            if (C) {\n              if (C === 'front') {} else if (/^\\d+$/.test(C)) {\n                intC = Number(C);\n                if (C !== lastC) if (lowercaseBookID === 'obs') numVersesThisChapter = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"MAX_OBS_FRAMES\"]; // Set to maximum expected number of frames\n                else numVersesThisChapter = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](lowercaseBookID, intC);\n                if (intC === 0) addNoticePartial({\n                  priority: 551,\n                  C: C,\n                  V: V,\n                  message: \"Invalid zero chapter number\",\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n                if (intC > numChaptersThisBook) addNoticePartial({\n                  priority: 737,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large chapter number\",\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastC)) {\n                  lastintC = Number(lastC);\n                  if (intC < lastintC) addNoticePartial({\n                    priority: 736,\n                    C: C,\n                    V: V,\n                    message: \"Receding chapter number\",\n                    details: \"'\".concat(C, \"' after '\").concat(lastC, \"'\"),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    location: ourLocation\n                  });else if (intC > lastintC + 1) addNoticePartial({\n                    priority: 735,\n                    C: C,\n                    V: V,\n                    message: \"Advancing chapter number\",\n                    details: \"'\".concat(C, \"' after '\").concat(lastC, \"'\").rowID,\n                    lineNumber: n + 1,\n                    location: ourLocation\n                  });\n                }\n              } else addNoticePartial({\n                priority: 734,\n                C: C,\n                V: V,\n                message: \"Bad chapter number\",\n                rowID: rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n            } else addNoticePartial({\n              priority: 739,\n              C: C,\n              V: V,\n              message: \"Missing chapter number\",\n              rowID: rowID,\n              lineNumber: n + 1,\n              location: \" after \".concat(lastC, \":\").concat(V).concat(ourLocation)\n            });\n\n            if (V) {\n              if (V === 'intro') {} else if (/^\\d+$/.test(V)) {\n                intV = Number(V);\n                if (intV === 0 && bookID !== 'PSA') // Psalms have \\d titles\n                  addNoticePartial({\n                    priority: 552,\n                    C: C,\n                    V: V,\n                    message: \"Invalid zero verse number\",\n                    details: \"for chapter \".concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  });\n                if (intV > numVersesThisChapter) addNoticePartial({\n                  priority: 734,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large verse number\",\n                  details: \"for chapter \".concat(C),\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastV)) {\n                  lastintV = Number(lastV);\n                  if (C === lastC && intV < lastintV) addNoticePartial({\n                    priority: 733,\n                    C: C,\n                    V: V,\n                    message: \"Receding verse number\",\n                    details: \"'\".concat(V, \"' after '\").concat(lastV, \" for chapter \").concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  }); // else if (intV > lastintV + 1)\n                  //   addNoticePartial({priority:556, `Skipped verses with '${V}' verse number after '${lastV}'${withString}`);\n                }\n              } else if (/^[-\\d]+$/.test(V)) {\n                // all digits and hyphen, i.e., a verse range\n                _V$split = V.split('-'), _V$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_V$split, 2), V1 = _V$split2[0], V2 = _V$split2[1];\n                intV1 = Number(V1), intV2 = Number(V2);\n                if (intV1 >= intV2) // in the wrong order\n                  addNoticePartial({\n                    priority: 732,\n                    C: C,\n                    V: V,\n                    message: \"Verse range in wrong order\",\n                    details: \"detected \".concat(intV1, \" before \").concat(intV2),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  });\n                if (intV2 > numVersesThisChapter) addNoticePartial({\n                  priority: 734,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large verse number\",\n                  details: \"for chapter \".concat(C),\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastV)) {\n                  _lastintV = Number(lastV);\n                  if (C === lastC && intV1 < _lastintV) addNoticePartial(intV2 < _lastintV ? {\n                    priority: 733,\n                    C: C,\n                    V: V,\n                    message: \"Receding verse number\",\n                    details: \"'\".concat(V, \"' after '\").concat(lastV, \" for chapter \").concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  } : {\n                    priority: 133,\n                    C: C,\n                    V: V,\n                    message: \"Possible receding verse number\",\n                    details: \"'\".concat(V, \"' after '\").concat(lastV, \" for chapter \").concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  }); // else if (intV > lastintV + 1)\n                  //   addNoticePartial({priority:556, `Skipped verses with '${V}' verse number after '${lastV}'${withString}`);\n                }\n              } else if (/^[,\\d]+$/.test(V)) {\n                // all digits and comma, i.e., a verse list\n                addNoticePartial({\n                  priority: 238,\n                  C: C,\n                  V: V,\n                  message: \"Can't handle verse list yet\",\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n              } else addNoticePartial({\n                priority: 738,\n                C: C,\n                V: V,\n                message: \"Bad verse number\",\n                rowID: rowID,\n                lineNumber: n + 1,\n                excerpt: reference,\n                location: ourLocation\n              });\n            } else if (repoCode !== 'OBS-SQ' || reference !== 'front') addNoticePartial({\n              priority: 790,\n              C: C,\n              V: V,\n              message: \"Missing verse number\",\n              rowID: rowID,\n              lineNumber: n + 1,\n              excerpt: reference,\n              location: \" after \".concat(C, \":\").concat(lastV).concat(ourLocation)\n            });\n\n            if (rowID) {\n              if (rowIDListForVerse.includes(rowID)) addNoticePartial({\n                priority: 831,\n                C: C,\n                V: V,\n                message: \"Duplicate '\".concat(rowID, \"' ID\"),\n                fieldName: 'ID',\n                rowID: rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n              rowIDListForVerse.push(rowID);\n            } else addNoticePartial({\n              priority: 932,\n              C: C,\n              V: V,\n              message: \"Missing row ID\",\n              fieldName: 'ID',\n              lineNumber: n + 1,\n              location: ourLocation\n            });\n\n            lastC = C;\n            lastV = V;\n            _context.next = 45;\n            break;\n\n          case 44:\n            // wrong number of fields in the row\n            // if (n === lines.length - 1) // it’s the last line\n            //     userLog(`  Line ${n}: Has ${fields.length} field(s) instead of ${NUM_EXPECTED_TN_FIELDS}: ${EXPECTED_QUESTIONS_HEADING_LINE.replace(/\\t/g, ', ')}`);\n            // else\n            if (n !== lines.length - 1) {\n              // it’s not the last line\n              // Have a go at getting some of the first fields out of the line\n              _reference = '?:?', _C = '?', _V = '?', _rowID = '????';\n\n              try {\n                _reference = fields[0];\n              } catch (_unused4) {}\n\n              try {\n                _rowID = fields[1];\n              } catch (_unused5) {}\n\n              try {\n                _reference$split3 = _reference.split(':');\n                _reference$split4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_reference$split3, 2);\n                _C = _reference$split4[0];\n                _V = _reference$split4[1];\n              } catch (_unused6) {}\n\n              addNoticePartial({\n                priority: 983,\n                message: \"Wrong number of tabbed fields (expected \".concat(NUM_EXPECTED_QUESTIONS_TSV_FIELDS, \")\"),\n                excerpt: \"Found \".concat(fields.length, \" field\").concat(fields.length === 1 ? '' : 's'),\n                C: _C,\n                V: _V,\n                rowID: _rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n            }\n\n          case 45:\n            n++;\n            _context.next = 16;\n            break;\n\n          case 48:\n            // if (!checkingOptions?.suppressNoticeDisablingFlag) {\n            //     // functionLog(`checkQuestionsTSV7Table: calling removeDisabledNotices(${carResult.noticeList.length}) having ${JSON.stringify(checkingOptions)}`);\n            //     carResult.noticeList = removeDisabledNotices(carResult.noticeList);\n            // }\n            if (cutoffPriorityLevel < 20 && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag)) addNoticePartial({\n              priority: 20,\n              message: \"Note that 'disableAllLinkFetchingFlag' was set so link targets were not checked\",\n              location: ourLocation\n            });\n            addSuccessMessage(\"Checked all \".concat((lines.length - 1).toLocaleString(), \" data line\").concat(lines.length - 1 === 1 ? '' : 's').concat(ourLocation));\n            if (carResult.noticeList.length) addSuccessMessage(\"checkQuestionsTSV7Table v\".concat(QUESTIONS_TABLE_VALIDATOR_VERSION_STRING, \" finished with \").concat(carResult.noticeList.length ? carResult.noticeList.length.toLocaleString() : \"zero\", \" notice\").concat(carResult.noticeList.length === 1 ? '' : 's'));else addSuccessMessage(\"No errors or warnings found by checkQuestionsTSV7Table v\".concat(QUESTIONS_TABLE_VALIDATOR_VERSION_STRING)); // debugLog(`  checkQuestionsTSV7Table returning with ${result.successList.length.toLocaleString()} success(es), ${result.noticeList.length.toLocaleString()} notice(s).`);\n            // debugLog(\"checkQuestionsTSV7Table result is\", JSON.stringify(carResult));\n\n            return _context.abrupt(\"return\", carResult);\n\n          case 52:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _checkQuestionsTSV7Table.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/questions-tsv7-table-check.js?");

/***/ }),

/***/ "./src/core/strongs-field-check.js":
/*!*****************************************!*\
  !*** ./src/core/strongs-field-check.js ***!
  \*****************************************/
/*! exports provided: checkStrongsField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkStrongsField\", function() { return checkStrongsField; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _getApi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./getApi */ \"./src/core/getApi.js\");\n/* harmony import */ var _lexicon_file_contents_check__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lexicon-file-contents-check */ \"./src/core/lexicon-file-contents-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n// eslint-disable-next-line no-unused-vars\n // eslint-disable-next-line no-unused-vars\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const STRONGS_FIELD_VALIDATOR_VERSION_STRING = '0.4.1';\n\n/**\n *\n * @param {string} username\n * @param {string} languageCode\n * @param {string} repoCode\n * @param {string} fieldName\n * @param {string} fieldText\n * @param {string} bookID (if known / optional)\n * @param {string} C (if known / optional)\n * @param {string} V (if known / optional)\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkStrongsField(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10) {\n  return _checkStrongsField.apply(this, arguments);\n} // end of checkStrongsField function\n\nfunction _checkStrongsField() {\n  _checkStrongsField = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(username, languageCode, repoCode, fieldName, fieldText, bookID, C, V, givenLocation, checkingOptions) {\n    var ourLocation, csfResult, addNoticePartial, ourCheckLexiconFileContents, _ourCheckLexiconFileContents, whichTestament, adjustedFieldText, haveError, adjustedLanguageCode, repoBranch, lexiconRepoCode, repoName, lexiconFilename, lexiconPathname, fetchLexiconFileParameters, fetchLinkDescription, _lexiconMarkdownTextC, getFile_, lexiconMarkdownTextContents, details;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ourCheckLexiconFileContents = function _ourCheckLexiconFileC2() {\n              _ourCheckLexiconFileContents = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, lexiconRepoCode, repoName, repoBranch, lexiconFilename, lexiconMarkdownText, givenLocation, checkingOptions) {\n                var adjustedLanguageCode, clfcResultObject, _iterator, _step, clfcNoticeEntry, newObject, _iterator2, _step2, checkedRepoName, _iterator3, _step3, checkedFilenameExtension;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        /* This function is optimised for checking the entire markdown file, i.e., all lines.\n                          Returns a result object containing a successList and a noticeList\n                         */\n                        // functionLog(`ourCheckLexiconFileContents(lC=${languageCode}, rC=${repoCode}, fn=${lexiconFilename}, ${lexiconMarkdownText.length}, ${givenLocation})…`);\n                        //parameterAssert(languageCode !== undefined, \"checkStrongsField ourCheckLexiconFileContents: 'languageCode' parameter should be defined\");\n                        //parameterAssert(typeof languageCode === 'string', `checkStrongsField ourCheckLexiconFileContents: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n                        //parameterAssert(lexiconRepoCode === 'UHAL' || lexiconRepoCode === 'UGL', `checkStrongsField ourCheckLexiconFileContents: 'repoCode' parameter should be 'UHAL' or 'UGL', not '${lexiconRepoCode}'`);\n                        //parameterAssert(lexiconFilename !== undefined, \"checkStrongsField ourCheckLexiconFileContents: 'lexiconFilename' parameter should be defined\");\n                        //parameterAssert(typeof lexiconFilename === 'string', `checkStrongsField ourCheckLexiconFileContents: 'lexiconFilename' parameter should be a string not a '${typeof lexiconFilename}': ${lexiconFilename}`);\n                        //parameterAssert(lexiconMarkdownText !== undefined, \"checkStrongsField ourCheckLexiconFileContents: 'lexiconMarkdownText' parameter should be defined\");\n                        //parameterAssert(typeof lexiconMarkdownText === 'string', `checkStrongsField ourCheckLexiconFileContents: 'lexiconMarkdownText' parameter should be a string not a '${typeof lexiconMarkdownText}': ${lexiconMarkdownText}`);\n                        //parameterAssert(givenLocation !== undefined, \"checkStrongsField ourCheckLexiconFileContents: 'givenLocation' parameter should be defined\");\n                        //parameterAssert(typeof givenLocation === 'string', `checkStrongsField ourCheckLexiconFileContents: 'givenLocation' parameter should be a string not a '${typeof givenLocation}': ${givenLocation}`);\n                        //parameterAssert(givenLocation.indexOf('true') === -1, `checkStrongsField ourCheckLexiconFileContents: 'givenLocation' parameter should not be '${givenLocation}'`);\n                        //parameterAssert(checkingOptions !== undefined, \"checkStrongsField ourCheckLexiconFileContents: 'checkingOptions' parameter should be defined\");\n                        if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkStrongsField ourCheckLexiconFileContents: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n                        }\n\n                        adjustedLanguageCode = languageCode; // This is the language code of the resource with the link\n\n                        if (languageCode === 'hbo' || languageCode === 'el-x-koine') adjustedLanguageCode = 'en'; // This is a guess (and won’t be needed for TWs when we switch to TWLs)\n\n                        _context.next = 5;\n                        return Object(_lexicon_file_contents_check__WEBPACK_IMPORTED_MODULE_7__[\"checkLexiconFileContents\"])(username, languageCode, lexiconRepoCode, lexiconFilename, lexiconMarkdownText, givenLocation, Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, checkingOptions), {}, {\n                          defaultLanguageCode: adjustedLanguageCode\n                        }));\n\n                      case 5:\n                        clfcResultObject = _context.sent;\n                        // debugLog(`clfcResultObject=${JSON.stringify(clfcResultObject)}`);\n                        // Process results line by line\n                        _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(clfcResultObject.noticeList);\n\n                        try {\n                          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                            clfcNoticeEntry = _step.value;\n                            // debugLog(`checkStrongsField ourCheckLexiconFileContents is processing ${JSON.stringify(clfcNoticeEntry)}`);\n                            newObject = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, clfcNoticeEntry), {}, {\n                              username: username,\n                              repoName: repoName,\n                              branch: repoBranch,\n                              fieldName: fieldName,\n                              repoCode: lexiconRepoCode,\n                              bookID: bookID,\n                              C: C,\n                              V: V,\n                              extra: lexiconRepoCode === 'UHAL' ? 'HALx' : 'GkLx'\n                            });\n\n                            if (newObject.excerpt) {\n                              if (!newObject.fieldName) newObject.fieldName = \"\".concat(fieldName, \" \").concat(fieldText);\n                            } //else newObject.excerpt = fieldText;\n                            // debugLog(`ourCheckLexiconFileContents newObject=${JSON.stringify(newObject)}`);\n\n\n                            csfResult.noticeList.push(newObject); // addNoticePartial({...clfcNoticeEntry, repoCode: lexiconRepoCode}); // Don’t use this coz repoCode will get overwritten\n                          } // The following is needed coz we might be checking the linked UHAL and/or UGL articles\n\n                        } catch (err) {\n                          _iterator.e(err);\n                        } finally {\n                          _iterator.f();\n                        }\n\n                        if (clfcResultObject.checkedFileCount && clfcResultObject.checkedFileCount > 0) if (typeof csfResult.checkedFileCount === 'number') csfResult.checkedFileCount += clfcResultObject.checkedFileCount;else csfResult.checkedFileCount = clfcResultObject.checkedFileCount;\n                        if (clfcResultObject.checkedFilesizes && clfcResultObject.checkedFilesizes > 0) if (typeof csfResult.checkedFilesizes === 'number') csfResult.checkedFilesizes += clfcResultObject.checkedFilesizes;else csfResult.checkedFilesizes = clfcResultObject.checkedFilesizes;\n\n                        if (clfcResultObject.checkedRepoNames && clfcResultObject.checkedRepoNames.length > 0) {\n                          _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(clfcResultObject.checkedRepoNames);\n\n                          try {\n                            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                              checkedRepoName = _step2.value;\n\n                              try {\n                                if (csfResult.checkedRepoNames.indexOf(checkedRepoName) < 0) csfResult.checkedRepoNames.push(checkedRepoName);\n                              } catch (_unused) {\n                                csfResult.checkedRepoNames = [checkedRepoName];\n                              }\n                            }\n                          } catch (err) {\n                            _iterator2.e(err);\n                          } finally {\n                            _iterator2.f();\n                          }\n                        }\n\n                        if (clfcResultObject.checkedFilenameExtensions && clfcResultObject.checkedFilenameExtensions.length > 0) {\n                          _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(clfcResultObject.checkedFilenameExtensions);\n\n                          try {\n                            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                              checkedFilenameExtension = _step3.value;\n\n                              try {\n                                if (csfResult.checkedFilenameExtensions.indexOf(checkedFilenameExtension) < 0) csfResult.checkedFilenameExtensions.push(checkedFilenameExtension);\n                              } catch (_unused2) {\n                                csfResult.checkedFilenameExtensions = [checkedFilenameExtension];\n                              }\n                            }\n                          } catch (err) {\n                            _iterator3.e(err);\n                          } finally {\n                            _iterator3.f();\n                          }\n                        } // debugLog(`ourCheckLexiconFileContents csfResult: ${JSON.stringify(csfResult)}`);\n\n\n                      case 12:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _ourCheckLexiconFileContents.apply(this, arguments);\n            };\n\n            ourCheckLexiconFileContents = function _ourCheckLexiconFileC(_x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19) {\n              return _ourCheckLexiconFileContents.apply(this, arguments);\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkStrongsField Notice: (priority=${noticeObject.priority}) ${noticeObject.message}${characterIndex > 0 ? ` (at character ${noticeObject.characterIndex})` : \"\"}${noticeObject.excerpt ? ` ${noticeObject.excerpt}` : \"\"}${noticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"checkStrongsField addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `checkStrongsField addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"checkStrongsField addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `checkStrongsField addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(characterIndex !== undefined, \"checkStrongsField addNoticePartial: 'characterIndex' parameter should be defined\");\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `checkStrongsField addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"checkStrongsField addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `checkStrongsField addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt} for ${incompleteNoticeObject.priority}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"checkStrongsField addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `checkStrongsField addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"aboutToOverwrite\"])('checkStrongsField', ['fieldName', 'repoCode'], incompleteNoticeObject, {\n                fieldName: fieldName,\n                repoCode: repoCode\n              });\n\n              var newObject = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, incompleteNoticeObject), {}, {\n                fieldName: fieldName,\n                repoCode: repoCode\n              });\n\n              if (newObject.excerpt === undefined) newObject.excerpt = fieldText;\n              if (bookID.length) newObject.bookID = bookID;\n\n              if (C.length && V.length) {\n                newObject.C = C;\n                newObject.V = V;\n              }\n\n              csfResult.noticeList.push(newObject);\n            };\n\n            // Checks that the Strongs (number) field is a valid lexicon ID\n            // bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n            // XXX Note that the original language verse text can be passed in as\n            //      checkingOptions?.originalLanguageVerseText.\n            // Alternatively, we can fetch it from Door43 -- you can control this with:\n            //      checkingOptions?.originalLanguageRepoUsername\n            //      (UHB or UGNT will be used for the repo name)\n            //      checkingOptions?.originalLanguageRepoBranch (or tag)\n            // functionLog(`checkStrongsField v${STRONGS_FIELD_VALIDATOR_VERSION_STRING} ${languageCode}, ${repoCode}, ${fieldName}, (${fieldText.length}) '${fieldText}', ${bookID} ${C}:${V} ${givenLocation}, …)…`);\n            //parameterAssert(languageCode !== undefined, \"checkStrongsField: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkStrongsField: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode !== undefined, \"checkStrongsField: 'repoCode' parameter should be defined\");\n            //parameterAssert(typeof repoCode === 'string', `checkStrongsField: 'repoCode' parameter should be a string not a '${typeof repoCode}'`);\n            //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkStrongsField: 'repoCode' parameter should not be '${repoCode}'`);\n            //parameterAssert(fieldName !== undefined, \"checkStrongsField: 'fieldName' parameter should be defined\");\n            //parameterAssert(typeof fieldName === 'string', `checkStrongsField: 'fieldName' parameter should be a string not a '${typeof fieldName}'`);\n            //parameterAssert(fieldText !== undefined, \"checkStrongsField: 'fieldText' parameter should be defined\");\n            //parameterAssert(typeof fieldText === 'string', `checkStrongsField: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n            //parameterAssert(fieldText.length >= 1, `checkStrongsField: 'fieldText' parameter should have text not ${fieldText.length} characters`);\n            //parameterAssert(bookID !== undefined, \"checkStrongsField: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkStrongsField: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            // parameterAssert(bookID.length === 3, `checkStrongsField: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkStrongsField: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === '' || bookID === 'OBS' || isValidBookID(bookID), `checkStrongsField: '${bookID}' is not a valid USFM book identifier`);\n            //parameterAssert(C !== undefined, \"checkStrongsField: 'C' parameter should be defined\");\n            //parameterAssert(typeof C === 'string', `checkStrongsField: 'C' parameter should be a string not a '${typeof C}'`);\n            //parameterAssert(V !== undefined, \"checkStrongsField: 'V' parameter should be defined\");\n            //parameterAssert(typeof V === 'string', `checkStrongsField: 'V' parameter should be a string not a '${typeof V}'`);\n            //parameterAssert(givenLocation !== undefined, \"checkStrongsField: 'givenLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkStrongsField: 'givenLocation' parameter should be a string not a '${typeof givenLocation}'`);\n            //parameterAssert(checkingOptions !== undefined, \"checkStrongsField: 'checkingOptions' parameter should be defined\");\n            if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkLexiconFileContents: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n            }\n\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n            csfResult = {\n              noticeList: [],\n              checkedFileCount: 0,\n              checkedFilenames: [],\n              checkedRepoNames: [],\n              checkedFilenameExtensions: []\n            };\n            if (bookID.length) whichTestament = Object(_books_books__WEBPACK_IMPORTED_MODULE_4__[\"testament\"])(bookID); // returns 'old' or 'new'\n            else whichTestament = fieldText[0] === 'G' ? 'new' : 'old';\n            adjustedFieldText = fieldText;\n            haveError = false;\n\n            if (!fieldText.length) {\n              addNoticePartial({\n                priority: 842,\n                message: \"No text in Strongs field\",\n                location: ourLocation\n              });\n              haveError = true;\n            } else {\n              if (whichTestament === 'old') {\n                while (adjustedFieldText.startsWith('b:') || adjustedFieldText.startsWith('c:') || adjustedFieldText.startsWith('d:') || adjustedFieldText.startsWith('i:') || adjustedFieldText.startsWith('k:') || adjustedFieldText.startsWith('l:') || adjustedFieldText.startsWith('m:') || adjustedFieldText.startsWith('s:')) {\n                  adjustedFieldText = adjustedFieldText.slice(2);\n                } // Delete the prefix bit\n\n\n                while (adjustedFieldText.length > 1 && 'abcdef'.indexOf(adjustedFieldText.slice(-1)) !== -1) {\n                  adjustedFieldText = adjustedFieldText.slice(0, adjustedFieldText.length - 1);\n                } // Delete the suffix bit\n\n\n                if (adjustedFieldText[0] !== 'H') {\n                  if (adjustedFieldText !== 'b' && adjustedFieldText !== 'i' && adjustedFieldText !== 'k' && adjustedFieldText !== 'k' && adjustedFieldText !== 'l' && adjustedFieldText !== 'm') // Suppress the message in those cases, but still pretend it’s an error so don’t try to fetch lexicon article below\n                    addNoticePartial({\n                      priority: 841,\n                      message: \"Strongs field must start with 'H'\",\n                      location: ourLocation\n                    });\n                  haveError = true; // May not be an actual error -- see comment just above\n                } else if (adjustedFieldText[0] === 'H' && adjustedFieldText.length !== 5) {\n                  addNoticePartial({\n                    priority: 818,\n                    message: \"Strongs field has wrong number of digits\",\n                    details: \"expected five digits\",\n                    location: ourLocation\n                  });\n                  haveError = true;\n                }\n              } else if (whichTestament === 'new') {\n                if (fieldText[0] !== 'G') {\n                  addNoticePartial({\n                    priority: 841,\n                    message: \"Strongs field must start with 'G'\",\n                    location: ourLocation\n                  });\n                  haveError = true;\n                } else if (fieldText.length !== 6) {\n                  addNoticePartial({\n                    priority: 818,\n                    message: \"Strongs field has wrong number of digits\",\n                    details: \"expected six digits\",\n                    location: ourLocation\n                  });\n                  haveError = true;\n                }\n              } else Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"debugLog\"])(\"checkStrongsField doesn\\u2019t have a testament for '\".concat(bookID, \"'!\"));\n            }\n\n            if (haveError) {\n              _context2.next = 56;\n              break;\n            }\n\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) !== true && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLexiconLinkFetchingFlag) !== true)) {\n              _context2.next = 56;\n              break;\n            }\n\n            // debugLog(`checkStrongsField wants to fetch lexicon entry for ${fieldText}`);\n            adjustedLanguageCode = languageCode;\n            if (languageCode === 'hbo' || languageCode === 'el-x-koine') // lexicons are in GLs\n              adjustedLanguageCode = 'en'; // let username;\n            // try {\n            //     username = checkingOptions?.originalLanguageRepoUsername;\n            // } catch (qcoError) { }\n            // if (!username) username = adjustedLanguageCode === 'en' ? 'unfoldingWord' : 'Door43-Catalog'; // ??? !!!\n\n            try {\n              repoBranch = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.originalLanguageRepoBranch;\n            } catch (qcunError) {}\n\n            if (!repoBranch) repoBranch = 'master';\n\n            if (adjustedFieldText[0] === 'H') {\n              lexiconRepoCode = 'UHAL';\n              repoName = \"\".concat(adjustedLanguageCode, \"_uhal\");\n              lexiconFilename = \"\".concat(adjustedFieldText, \".md\");\n              lexiconPathname = \"content/\".concat(lexiconFilename);\n            } else if (fieldText[0] === 'G') {\n              lexiconRepoCode = 'UGL';\n              repoName = \"\".concat(adjustedLanguageCode, \"_ugl\");\n              lexiconFilename = '01.md';\n              lexiconPathname = \"content/\".concat(fieldText, \"/\").concat(lexiconFilename);\n            }\n\n            fetchLexiconFileParameters = {\n              username: username,\n              repository: repoName,\n              path: lexiconPathname,\n              branch: repoBranch\n            };\n            _context2.next = 21;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"alreadyChecked\"])(fetchLexiconFileParameters);\n\n          case 21:\n            if (_context2.sent) {\n              _context2.next = 56;\n              break;\n            }\n\n            fetchLinkDescription = \"\".concat(username, \" \").concat(repoName, \" \").concat(repoBranch, \" \").concat(lexiconPathname);\n\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedLexiconEntriesCheckFlag) === true)) {\n              _context2.next = 30;\n              break;\n            }\n\n            _context2.next = 26;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"isFilepathInRepoTree\"])(fetchLexiconFileParameters);\n\n          case 26:\n            if (_context2.sent) {\n              _context2.next = 28;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 850,\n              message: \"Unable to find lexicon entry\",\n              details: lexiconRepoCode,\n              username: username,\n              excerpt: fetchLinkDescription,\n              location: ourLocation\n            });\n\n          case 28:\n            _context2.next = 55;\n            break;\n\n          case 30:\n            // debugLog(`checkStrongsField(${adjustedLanguageCode}, ${repoCode}, ${fieldName}, ${fieldText}, ${bookID} ${C}:${V}, ${givenLocation}, ${JSON.stringify(checkingOptions)} got ${JSON.stringify(fetchLexiconFileParameters)}`);\n            // debugLog(`checkStrongsField wants to check lexicon entry for ${JSON.stringify(fetchLexiconFileParameters)}`);\n            getFile_ = checkingOptions && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile : _getApi__WEBPACK_IMPORTED_MODULE_6__[\"cachedGetFile\"];\n            _context2.prev = 31;\n            _context2.next = 34;\n            return getFile_(fetchLexiconFileParameters);\n\n          case 34:\n            lexiconMarkdownTextContents = _context2.sent;\n            // const responseData = await cachedGetFileUsingFullURL({ uri: fetchLink });\n            // const manifestContents = await cachedGetFile({ username, repository, path: 'manifest.yaml', branch });\n            Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"dataAssert\"])(lexiconMarkdownTextContents.length > 10, \"checkStrongsField expected \".concat(fetchLinkDescription, \" lexicon file to be longer: \").concat(lexiconMarkdownTextContents.length)); // debugLog(`checkStrongsField lexicon link fetch got text: ${lexiconMarkdownTextContents.length}`);\n\n            _context2.next = 43;\n            break;\n\n          case 38:\n            _context2.prev = 38;\n            _context2.t0 = _context2[\"catch\"](31);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            // console.error(`checkStrongsField lexicon link fetch had an error fetching ${fetchLinkDescription}: ${flError}`);\n            details = \"\".concat(lexiconRepoCode); // eslint-disable-next-line eqeqeq\n\n            if (_context2.t0 != 'TypeError: lexiconMarkdownTextContents is null') details += \" error=\".concat(_context2.t0);\n            addNoticePartial({\n              priority: 850,\n              message: \"Unable to find/load lexicon entry\",\n              details: details,\n              username: username,\n              excerpt: fetchLinkDescription,\n              location: ourLocation\n            });\n\n          case 43:\n            if (!((_lexiconMarkdownTextC = lexiconMarkdownTextContents) === null || _lexiconMarkdownTextC === void 0 ? void 0 : _lexiconMarkdownTextC.length)) {\n              _context2.next = 55;\n              break;\n            }\n\n            if (!(lexiconMarkdownTextContents.length < 10)) {\n              _context2.next = 48;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 878,\n              message: \"Lexicon entry seems empty\",\n              details: \"\".concat(username, \" \").concat(repoName, \" \").concat(repoBranch, \" \").concat(lexiconPathname),\n              excerpt: fieldText,\n              location: ourLocation\n            });\n            _context2.next = 55;\n            break;\n\n          case 48:\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedLexiconEntriesCheckFlag) !== true)) {\n              _context2.next = 55;\n              break;\n            }\n\n            _context2.next = 51;\n            return ourCheckLexiconFileContents(username, languageCode, lexiconRepoCode, repoName, repoBranch, lexiconPathname, lexiconMarkdownTextContents, givenLocation, checkingOptions);\n\n          case 51:\n            csfResult.checkedFileCount += 1;\n            csfResult.checkedFilenames.push(adjustedFieldText[0] === 'H' ? lexiconFilename : \"\".concat(adjustedFieldText, \"/\").concat(lexiconFilename));\n            csfResult.checkedRepoNames.push(repoName);\n            csfResult.checkedFilenameExtensions.push('md');\n\n          case 55:\n            // Only mark this error once, even if the fetch failed\n            Object(_getApi__WEBPACK_IMPORTED_MODULE_6__[\"markAsChecked\"])(fetchLexiconFileParameters); // don’t bother waiting for the result of this async call\n\n          case 56:\n            return _context2.abrupt(\"return\", csfResult);\n\n          case 57:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[31, 38]]);\n  }));\n  return _checkStrongsField.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/strongs-field-check.js?");

/***/ }),

/***/ "./src/core/ta-reference-check.js":
/*!****************************************!*\
  !*** ./src/core/ta-reference-check.js ***!
  \****************************************/
/*! exports provided: checkSupportReferenceInTA */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkSupportReferenceInTA\", function() { return checkSupportReferenceInTA; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _getApi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getApi */ \"./src/core/getApi.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const TA_REFERENCE_VALIDATOR_VERSION_STRING = '0.4.0';\n\nfunction checkSupportReferenceInTA(_x, _x2, _x3, _x4) {\n  return _checkSupportReferenceInTA.apply(this, arguments);\n} // end of checkSupportReferenceInTA function\n\nfunction _checkSupportReferenceInTA() {\n  _checkSupportReferenceInTA = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(fieldName, fieldText, givenLocation, checkingOptions) {\n    var ourLocation, ctarResult, addNoticePartial, taRepoUsername, taRepoBranch, taRepoLanguageCode, taRepoSectionName, taRepoName, filepath, taPathParameters, taFileContent, getFile_;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkSupportReferenceInTA Notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"cTAref addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `cTAref addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"cTAref addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `cTAref addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(characterIndex !== undefined, \"cTAref addNoticePartial: 'characterIndex' parameter should be defined\");\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `cTAref addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"cTAref addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `cTAref addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"cTAref addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `cTAref addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_4__[\"aboutToOverwrite\"])('checkSupportReferenceInTA', ['fieldName'], incompleteNoticeObject, {\n                fieldName: fieldName\n              });\n              ctarResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, incompleteNoticeObject), {}, {\n                fieldName: fieldName\n              }));\n            };\n\n            // This is for the case of the full SupportReference field being the article link\n            //  which is assumed to be in the translate part of the TA manual.\n            // We fetch the TA link from Door43 to test that it’s really there\n            //  -- you can control this with:\n            //      checkingOptions?.taRepoUsername\n            //      checkingOptions?.taRepoBranch (or tag)\n            //      checkingOptions?.taRepoLanguageCode\n            //      checkingOptions?.taRepoSectionName\n            //      checkingOptions?.expectFullLink (bool)\n            // functionLog(`checkSupportReferenceInTA v${TA_REFERENCE_VALIDATOR_VERSION_STRING} (${fieldName}, (${fieldText.length}) '${fieldText}', ${givenLocation}, ${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(fieldName !== undefined, \"checkSupportReferenceInTA: 'fieldText' parameter should be defined\");\n            //parameterAssert(typeof fieldName === 'string', `checkSupportReferenceInTA: 'fieldText' parameter should be a string not a '${typeof fieldName}'`);\n            //parameterAssert(fieldText !== undefined, \"checkSupportReferenceInTA: 'fieldText' parameter should be defined\");\n            //parameterAssert(typeof fieldText === 'string', `checkSupportReferenceInTA: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n            //parameterAssert(givenLocation !== undefined, \"checkSupportReferenceInTA: 'fieldText' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkSupportReferenceInTA: 'fieldText' parameter should be a string not a '${typeof givenLocation}'`);\n            //parameterAssert(fieldName === 'SupportReference', `Unexpected checkSupportReferenceInTA fieldName='${fieldName}'`); // so far\n            //parameterAssert(givenLocation.indexOf(fieldName) < 0, `checkSupportReferenceInTA: 'givenLocation' parameter should be not contain fieldName=${fieldName}`);\n            //parameterAssert(fieldName === 'SupportReference');\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n            ctarResult = {\n              noticeList: []\n            };\n\n            try {\n              taRepoUsername = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.taRepoUsername;\n            } catch (trcUNerror) {}\n\n            if (!taRepoUsername) taRepoUsername = 'Door43-Catalog'; // or unfoldingWord ???\n\n            try {\n              taRepoBranch = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.taRepoBranch;\n            } catch (trcBRerror) {}\n\n            if (!taRepoBranch) taRepoBranch = 'master';\n\n            try {\n              taRepoLanguageCode = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.taRepoLanguageCode;\n            } catch (trcLCerror) {}\n\n            if (!taRepoLanguageCode) taRepoLanguageCode = 'en';\n\n            try {\n              taRepoSectionName = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.taRepoSectionName;\n            } catch (trcSNerror) {}\n\n            if (!taRepoSectionName) taRepoSectionName = 'translate';\n            taRepoName = \"\".concat(taRepoLanguageCode, \"_ta\");\n\n            if (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.expectFullLink) {\n              // debugLog(\"checkSupportReferenceInTA expect full link\")\n              if (!fieldText.startsWith('rc://*/')) addNoticePartial({\n                priority: 879,\n                message: \"Badly formatted Resource Container link\",\n                excerpt: fieldText,\n                location: \"\".concat(ourLocation, \" \").concat(filepath)\n              });\n              filepath = \"\".concat(fieldText.replace('rc://*/ta/man/', ''), \"/01.md\"); // Other files are title.md, sub-title.md\n            } else filepath = \"\".concat(taRepoSectionName, \"/\").concat(fieldText, \"/01.md\"); // Other files are title.md, sub-title.md\n            // debugLog(\"checkSupportReferenceInTA filepath\", filepath);\n\n\n            taPathParameters = {\n              username: taRepoUsername,\n              repository: taRepoName,\n              path: filepath,\n              branch: taRepoBranch\n            };\n            _context.next = 17;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_3__[\"alreadyChecked\"])(taPathParameters);\n\n          case 17:\n            if (_context.sent) {\n              _context.next = 37;\n              break;\n            }\n\n            if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableLinkedTAArticlesCheckFlag) === true)) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 21;\n            return Object(_getApi__WEBPACK_IMPORTED_MODULE_3__[\"isFilepathInRepoTree\"])(taPathParameters);\n\n          case 21:\n            if (_context.sent) {\n              _context.next = 23;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 889,\n              message: \"Unable to find linked TA article\",\n              details: \"linked from TN \".concat(fieldName),\n              excerpt: fieldText,\n              location: \"\".concat(ourLocation, \" \").concat(filepath)\n            });\n\n          case 23:\n            _context.next = 36;\n            break;\n\n          case 25:\n            _context.prev = 25;\n            getFile_ = checkingOptions && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile : _getApi__WEBPACK_IMPORTED_MODULE_3__[\"cachedGetFile\"];\n            _context.next = 29;\n            return getFile_({\n              username: taRepoUsername,\n              repository: taRepoName,\n              path: filepath,\n              branch: taRepoBranch\n            });\n\n          case 29:\n            taFileContent = _context.sent;\n            // debugLog(\"Fetched fileContent for\", taRepoName, filepath, typeof fileContent, fileContent.length);\n            if (!taFileContent) addNoticePartial({\n              priority: 889,\n              message: \"Unable to find/load linked TA article\",\n              details: \"linked from TN \".concat(fieldName),\n              excerpt: fieldText,\n              location: \"\".concat(ourLocation, \" \").concat(filepath)\n            });else if (taFileContent.length < 10) addNoticePartial({\n              priority: 887,\n              message: \"Linked TA article seems empty\",\n              details: \"linked from TN \".concat(fieldName),\n              excerpt: fieldText,\n              location: \"\".concat(ourLocation, \" \").concat(filepath)\n            });\n            _context.next = 36;\n            break;\n\n          case 33:\n            _context.prev = 33;\n            _context.t0 = _context[\"catch\"](25);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            // console.error(\"checkSupportReferenceInTA() failed to load\", taRepoUsername, taRepoName, filepath, taRepoBranch, trcGCerror.message);\n            addNoticePartial({\n              priority: 888,\n              message: \"Error loading linked TA article\",\n              details: \"linked from TN \".concat(fieldName),\n              excerpt: fieldText,\n              location: \"\".concat(ourLocation, \" \").concat(filepath, \": \").concat(_context.t0)\n            });\n\n          case 36:\n            Object(_getApi__WEBPACK_IMPORTED_MODULE_3__[\"markAsChecked\"])(taPathParameters); // don’t bother waiting for the result of this async call\n\n          case 37:\n            return _context.abrupt(\"return\", ctarResult);\n\n          case 38:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[25, 33]]);\n  }));\n  return _checkSupportReferenceInTA.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/ta-reference-check.js?");

/***/ }),

/***/ "./src/core/text-handling-functions.js":
/*!*********************************************!*\
  !*** ./src/core/text-handling-functions.js ***!
  \*********************************************/
/*! exports provided: PAIRED_PUNCTUATION_OPENERS, PAIRED_PUNCTUATION_CLOSERS, OPEN_CLOSE_PUNCTUATION_PAIRS, CLOSING_PUNCTUATION_CHARACTERS, HEBREW_VOWELS, HEBREW_CANTILLATION_MARKS, HEBREW_CANTILLATION_REGEX, BAD_CHARACTER_COMBINATIONS, LEADING_ZERO_COMBINATIONS, BAD_CHARACTER_REGEXES, isWhitespace, countOccurrencesInList, countOccurrencesInString, ourReplaceAll, ourDeleteAll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAIRED_PUNCTUATION_OPENERS\", function() { return PAIRED_PUNCTUATION_OPENERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAIRED_PUNCTUATION_CLOSERS\", function() { return PAIRED_PUNCTUATION_CLOSERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OPEN_CLOSE_PUNCTUATION_PAIRS\", function() { return OPEN_CLOSE_PUNCTUATION_PAIRS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLOSING_PUNCTUATION_CHARACTERS\", function() { return CLOSING_PUNCTUATION_CHARACTERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HEBREW_VOWELS\", function() { return HEBREW_VOWELS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HEBREW_CANTILLATION_MARKS\", function() { return HEBREW_CANTILLATION_MARKS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HEBREW_CANTILLATION_REGEX\", function() { return HEBREW_CANTILLATION_REGEX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BAD_CHARACTER_COMBINATIONS\", function() { return BAD_CHARACTER_COMBINATIONS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LEADING_ZERO_COMBINATIONS\", function() { return LEADING_ZERO_COMBINATIONS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BAD_CHARACTER_REGEXES\", function() { return BAD_CHARACTER_REGEXES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isWhitespace\", function() { return isWhitespace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"countOccurrencesInList\", function() { return countOccurrencesInList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"countOccurrencesInString\", function() { return countOccurrencesInString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ourReplaceAll\", function() { return ourReplaceAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ourDeleteAll\", function() { return ourDeleteAll; });\n// See http://xahlee.info/comp/unicode_matching_brackets.html for a more complete list\n// Also see https://unicode-table.com/en/sets/quotation-marks/\nvar PAIRED_PUNCTUATION_OPENERS = '[({<⟨“‘«‹《〈⸢⸤'; // These are just single/individual characters\n\nvar PAIRED_PUNCTUATION_CLOSERS = '])}>⟩”’»›》〉⸣⸥';\nvar OPEN_CLOSE_PUNCTUATION_PAIRS = [// These can be multiple character sequences (as long as opener and closer are different/distinguishable)\n['[', ']'], ['(', ')'], ['{', '}'], ['“', '”'], ['‘', '’'], ['<', '>'], ['⟨', '⟩'], ['«', '»'], ['‹', '›'], ['《', '》'], ['〈', '〉'], ['⸢', '⸣'], ['⸤', '⸥'], ['**_', '_**'] // TODO: Does this markdown belong here???\n]; // NOTE: Single closing quote is NOT included below, coz it could be an apostrophe\n\nvar CLOSING_PUNCTUATION_CHARACTERS = ',.?!;:)”־׃'; // NOTE: Some Hebrew characters included there\n\nvar HEBREW_VOWELS = \"\\\\u05B4\\\\u05B5\\\\u05B6\\\\u05B7\\\\u05B8\\\\u05B9\\\\u05BA\\\\05BB\"; // There’s 8 vowel marks in there\n\nvar HEBREW_CANTILLATION_MARKS = \"\\\\u0591\\\\u0592\\\\u0593\\\\u0594\\\\u0595\\\\u0596\\\\u0597\\\\u0598\\\\u0599\\\\u059A\\\\u059B\\\\u059C\\\\u059D\\\\u059E\\\\u059F\\\\u05A0\\\\u05A1\\\\u05A2\\\\u05A3\\\\u05A4\\\\u05A5\\\\u05A6\\\\u05A7\\\\u05A8\\\\u05A9\\\\u05AA\\\\u05AB\\\\u05AC\\\\u05AD\\\\u05AE\\\\u05AF\"; // There’s 31 accent marks in there\n\nvar HEBREW_CANTILLATION_REGEX = new RegExp(\"[\\\\u0591-\\\\u05AF]\", 'g'); // There’s 31 accent marks in there\n\nvar BAD_CHARACTER_COMBINATIONS = ['\\\\[\\\\[', '\\\\]\\\\]', // These were introduced by a tC Create bug (NOTE: \\[ or \\] is quite legal)\n'] (http', '] (.' // Bad markdown links (with a space between the parts)\n];\nvar LEADING_ZERO_COMBINATIONS = [' 0', ':0', '<br>0', '“0', '‘0']; // NOTE: The following sequences include straight quotes, even though we don't usually recommend them\n//          but we don't want these particular errors to be the ones complaining about them\n\nvar BAD_CHARACTER_REGEXES = [// Note: (?! denotes negative lookahead\n[\"punctuation not followed by space or closing quote\", new RegExp('[?!](?! |\"|”|\\'|’|\\\\)|\\\\]|$)', 'g')], [\"comma not followed by space or digit\", new RegExp('[,](?! |\\\\d|\"|”|\\'|’|$)', 'g')], [\"colon not followed by space or digit\", new RegExp('[:](?! |/|\\\\d|\"|”|$)', 'g')], [\"semicolon not followed by space or closing quote\", new RegExp('[;](?! |\"|”|\\'|’|$)', 'g')], [\"period not followed by space or digit or closing quote\", new RegExp('[.](?! |\\\\.|/|\\\\d|\"|”|\\'|’|\\\\)|\\\\]|}|\"|”|$)', 'g')], [\"Arabic comma not followed by space or digit\", new RegExp('[،](?! |\\\\d|\"|”|\\'|’|$)', 'g')] // u060C\n];\nfunction isWhitespace(myString) {\n  // includes zero-width space\n  if (/^[\\s\\u200B]+$/.test(myString)) return true;\n  return false;\n}\nvar countOccurrencesInList = function countOccurrencesInList(arr, val) {\n  return arr.reduce(function (a, v) {\n    return v === val ? a + 1 : a;\n  }, 0);\n}; // Adapted from https://www.codegrepper.com/code-examples/javascript/javascript+count+number+of+occurrences+in+array\n\nfunction countOccurrencesInString(mainString, slice) {\n  var allowOverlapping = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  // Adapted from https://stackoverflow.com/questions/4009756/how-to-count-string-occurrence-in-string\n  mainString += '';\n  slice += '';\n  if (slice.length <= 0) return mainString.length + 1;\n  var n = 0,\n      pos = 0,\n      step = allowOverlapping ? 1 : slice.length;\n\n  while (true) {\n    pos = mainString.indexOf(slice, pos);\n\n    if (pos >= 0) {\n      ++n;\n      pos += step;\n    } else break;\n  }\n\n  return n;\n} // end of countOccurrencesInString function\n\nfunction ourReplaceAll(givenString, findString, replaceString) {\n  var resultString = givenString;\n\n  while (resultString.indexOf(findString) >= 0) {\n    resultString = resultString.replace(findString, replaceString);\n  }\n\n  return resultString;\n}\nfunction ourDeleteAll(givenString, findString) {\n  var resultString = givenString;\n\n  while (resultString.indexOf(findString) >= 0) {\n    resultString = resultString.replace(findString, '');\n  }\n\n  return resultString;\n}\n\n//# sourceURL=webpack:///./src/core/text-handling-functions.js?");

/***/ }),

/***/ "./src/core/tn-tsv9-row-check.js":
/*!***************************************!*\
  !*** ./src/core/tn-tsv9-row-check.js ***!
  \***************************************/
/*! exports provided: checkTN_TSV9DataRow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkTN_TSV9DataRow\", function() { return checkTN_TSV9DataRow; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./text-handling-functions */ \"./src/core/text-handling-functions.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _field_text_check__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\");\n/* harmony import */ var _markdown_text_check__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./markdown-text-check */ \"./src/core/markdown-text-check.js\");\n/* harmony import */ var _ta_reference_check__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ta-reference-check */ \"./src/core/ta-reference-check.js\");\n/* harmony import */ var _orig_quote_check__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./orig-quote-check */ \"./src/core/orig-quote-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n\n\n\n\n // import { checkNotesLinksToOutside } from './notes-links-check';\n\n // eslint-disable-next-line no-unused-vars\n\n // const TN_TABLE_ROW_VALIDATOR_VERSION_STRING = '0.7.3';\n\nvar NUM_EXPECTED_TN_TSV_FIELDS = 9; // so expects 8 tabs per line\n\nvar EXPECTED_TN_HEADING_LINE = 'Book\\tChapter\\tVerse\\tID\\tSupportReference\\tOrigQuote\\tOccurrence\\tGLQuote\\tOccurrenceNote';\nvar LC_ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\nvar LC_ALPHABET_PLUS_DIGITS = 'abcdefghijklmnopqrstuvwxyz0123456789';\nvar LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN = 'abcdefghijklmnopqrstuvwxyz0123456789-';\nvar TA_REGEX = new RegExp('\\\\[\\\\[rc://[^ /]+?/ta/man/[^ /]+?/([^ \\\\]]+?)\\\\]\\\\]', 'g');\n/**\n *\n * @description - Checks one TSV data row of translation notes (TN)\n * @param {string} languageCode - the language code, e.g., 'en'\n * @param {string} repoCode - 'TN'\n * @param {string} line - the TSV line to be checked\n * @param {string} bookID - 3-character UPPERCASE USFM book identifier or 'OBS'\n * @param {string} givenC - chapter number or (for OBS) story number string\n * @param {string} givenV - verse number or (for OBS) frame number string\n * @param {string} givenRowLocation - description of where the line is located\n * @param {Object} checkingOptions - may contain excerptLength, taRepoUsername, twRepoUsername, twRepoBranch (or tag), disableLinkedTWArticlesCheckFlag parameters\n * @return {Object} - containing noticeList\n */\n\nfunction checkTN_TSV9DataRow(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9) {\n  return _checkTN_TSV9DataRow.apply(this, arguments);\n} // end of checkTN_TSV9DataRow function\n\nfunction _checkTN_TSV9DataRow() {\n  _checkTN_TSV9DataRow = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(username, languageCode, repoCode, line, bookID, givenC, givenV, givenRowLocation, checkingOptions) {\n    var ourRowLocation, linkCheckingOptions, drResult, addNoticePartial, ourMarkdownTextChecks, _ourMarkdownTextChecks, ourCheckTextField, ourCheckSupportReferenceInTA, _ourCheckSupportReferenceInTA, ourCheckTNOriginalLanguageQuoteAndOccurrence, _ourCheckTNOriginalLanguageQuoteAndOccurrence, excerptLength, excerptHalfLength, excerptHalfLengthPlus, lowercaseBookID, numChaptersThisBook, haveGoodBookID, fields, RIDSuggestion, SRSuggestion, GLQSuggestion, OQSuggestion, OSuggestion, ONSuggestion, _fields, B, C, V, rowID, supportReference, quote, occurrence, GLQuote, occurrenceNote, characterIndex, numVersesThisChapter, haveGoodChapterNumber, intC, intV, excerpt, charCount, _excerpt, _excerpt2, _charCount, _charCount2, adjustedOccurrenceNote, regexMatchObject, linksList, foundSR, details, _excerpt3, suggestion, _rowID;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _ourCheckTNOriginalLanguageQuoteAndOccurrence = function _ourCheckTNOriginalLa2() {\n              _ourCheckTNOriginalLanguageQuoteAndOccurrence = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(rowID, fieldName, fieldText, occurrence, rowLocation, checkingOptions) {\n                var coqResultObject, _iterator4, _step4, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return Object(_orig_quote_check__WEBPACK_IMPORTED_MODULE_11__[\"checkOriginalLanguageQuoteAndOccurrence\"])(username, languageCode, repoCode, fieldName, fieldText, occurrence, bookID, givenC, givenV, rowLocation, checkingOptions);\n\n                      case 2:\n                        coqResultObject = _context3.sent;\n                        // Choose only ONE of the following\n                        // This is the fast way of append the results from this field\n                        // result.noticeList = result.noticeList.concat(coqResultObject.noticeList);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coqResultObject.noticeList);\n\n                        try {\n                          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                            noticeEntry = _step4.value;\n                            // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourCheckTNOriginalLanguageQuoteAndOccurrence notice length=${Object.keys(noticeEntry).length}`);\n                            addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                              rowID: rowID,\n                              fieldName: fieldName\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator4.e(err);\n                        } finally {\n                          _iterator4.f();\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n              return _ourCheckTNOriginalLanguageQuoteAndOccurrence.apply(this, arguments);\n            };\n\n            ourCheckTNOriginalLanguageQuoteAndOccurrence = function _ourCheckTNOriginalLa(_x21, _x22, _x23, _x24, _x25, _x26) {\n              return _ourCheckTNOriginalLanguageQuoteAndOccurrence.apply(this, arguments);\n            };\n\n            _ourCheckSupportReferenceInTA = function _ourCheckSupportRefer2() {\n              _ourCheckSupportReferenceInTA = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(rowID, fieldName, taLinkText, rowLocation, checkingOptions) {\n                var coqResultObject, _iterator3, _step3, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return Object(_ta_reference_check__WEBPACK_IMPORTED_MODULE_10__[\"checkSupportReferenceInTA\"])(fieldName, taLinkText, rowLocation, Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, checkingOptions), {}, {\n                          taRepoLanguageCode: languageCode\n                        }));\n\n                      case 2:\n                        coqResultObject = _context2.sent;\n                        // Choose only ONE of the following\n                        // This is the fast way of append the results from this field\n                        // result.noticeList = result.noticeList.concat(coqResultObject.noticeList);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coqResultObject.noticeList);\n\n                        try {\n                          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                            noticeEntry = _step3.value;\n                            // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourCheckSupportReferenceInTA notice length=${Object.keys(noticeEntry).length}`);\n                            addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                              rowID: rowID,\n                              fieldName: fieldName\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator3.e(err);\n                        } finally {\n                          _iterator3.f();\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              return _ourCheckSupportReferenceInTA.apply(this, arguments);\n            };\n\n            ourCheckSupportReferenceInTA = function _ourCheckSupportRefer(_x16, _x17, _x18, _x19, _x20) {\n              return _ourCheckSupportReferenceInTA.apply(this, arguments);\n            };\n\n            ourCheckTextField = function _ourCheckTextField(rowID, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions) {\n              // Does basic checks for small errors like leading/trailing spaces, etc.\n              // We assume that checking for compulsory fields is done elsewhere\n              // Updates the global list of notices\n              // functionLog(`checkTN_TSV9DataRow ourCheckTextField(${fieldName}, (${fieldText.length}), ${allowedLinks}, ${rowLocation}, …)`);\n              //parameterAssert(rowID !== undefined, \"checkTN_TSV9DataRow ourCheckTextField: 'rowID' parameter should be defined\");\n              //parameterAssert(typeof rowID === 'string', `checkTN_TSV9DataRow ourCheckTextField: 'rowID' parameter should be a string not a '${typeof rowID}'`);\n              //parameterAssert(fieldName !== undefined, \"checkTN_TSV9DataRow ourCheckTextField: 'fieldName' parameter should be defined\");\n              //parameterAssert(typeof fieldName === 'string', `checkTN_TSV9DataRow ourCheckTextField: 'fieldName' parameter should be a string not a '${typeof fieldName}'`);\n              //parameterAssert(fieldText !== undefined, \"checkTN_TSV9DataRow ourCheckTextField: 'fieldText' parameter should be defined\");\n              //parameterAssert(typeof fieldText === 'string', `checkTN_TSV9DataRow ourCheckTextField: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n              //parameterAssert(allowedLinks === true || allowedLinks === false, \"checkTN_TSV9DataRow ourCheckTextField: allowedLinks parameter must be either true or false\");\n              //parameterAssert(rowLocation !== undefined, \"checkTN_TSV9DataRow ourCheckTextField: 'rowLocation' parameter should be defined\");\n              //parameterAssert(typeof rowLocation === 'string', `checkTN_TSV9DataRow ourCheckTextField: 'rowLocation' parameter should be a string not a '${typeof rowLocation}'`);\n              //parameterAssert(rowLocation.indexOf(fieldName) < 0, `checkTN_TSV9DataRow ourCheckTextField: 'rowLocation' parameter should be not contain fieldName=${fieldName}`);\n              var fieldType = fieldName === 'OccurrenceNote' ? 'markdown' : 'raw';\n              var octfResultObject = Object(_field_text_check__WEBPACK_IMPORTED_MODULE_8__[\"checkTextField\"])(username, languageCode, repoCode, fieldType, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions); // Choose only ONE of the following\n              // This is the fast way of append the results from this field\n              // result.noticeList = result.noticeList.concat(dbtcResultObject.noticeList);\n              // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n              //  process results line by line\n\n              var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(octfResultObject.noticeList),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var noticeEntry = _step.value;\n                  // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourCheckTextField notice length=${Object.keys(noticeEntry).length}`);\n                  addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                    rowID: rowID,\n                    fieldName: fieldName\n                  }));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              return octfResultObject.suggestion; // There may or may not be one!\n            };\n\n            _ourMarkdownTextChecks = function _ourMarkdownTextCheck2() {\n              _ourMarkdownTextChecks = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(rowID, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions) {\n                var omtcResultObject, _iterator2, _step2, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return Object(_markdown_text_check__WEBPACK_IMPORTED_MODULE_9__[\"checkMarkdownText\"])(username, languageCode, repoCode, fieldName, fieldText, rowLocation, checkingOptions);\n\n                      case 2:\n                        omtcResultObject = _context.sent;\n                        // Choose only ONE of the following\n                        // This is the fast way of append the results from this field\n                        // result.noticeList = result.noticeList.concat(cmtResultObject.noticeList);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(omtcResultObject.noticeList);\n\n                        try {\n                          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                            noticeEntry = _step2.value;\n                            // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourMarkdownTextChecks notice length=${Object.keys(noticeEntry).length}`);\n                            // NOTE: Ellipses in OccurrenceNote have the normal meaning\n                            //          not like the specialised meaning in the snippet fields Quote and GLQuote\n                            if (noticeEntry.priority !== 178 && noticeEntry.priority !== 179 // unexpected space after ellipse, ellipse after space\n                            && !noticeEntry.message.startsWith(\"Unexpected … character after space\") // 191\n                            ) addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                              rowID: rowID,\n                              fieldName: fieldName\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator2.e(err);\n                        } finally {\n                          _iterator2.f();\n                        }\n\n                        return _context.abrupt(\"return\", omtcResultObject.suggestion);\n\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _ourMarkdownTextChecks.apply(this, arguments);\n            };\n\n            ourMarkdownTextChecks = function _ourMarkdownTextCheck(_x10, _x11, _x12, _x13, _x14, _x15) {\n              return _ourMarkdownTextChecks.apply(this, arguments);\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`checkTN_TSV9DataRow addNoticePartial(priority=${incompleteNoticeObject.priority}) ${incompleteNoticeObject.message}, ${incompleteNoticeObject.characterIndex}, ${incompleteNoticeObject.excerpt}, ${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"checkTN_TSV9DataRow addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `checkTN_TSV9DataRow addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"checkTN_TSV9DataRow addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `checkTN_TSV9DataRow addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(lineNumber !== undefined, \"checkTN_TSV9DataRow addNoticePartial: 'lineNumber' parameter should be defined\");\n              // parameterAssert(typeof lineNumber === 'number', `checkTN_TSV9DataRow addNoticePartial: 'lineNumber' parameter should be a number not a '${typeof lineNumber}': ${lineNumber}`);\n              // parameterAssert(characterIndex !== undefined, \"checkTN_TSV9DataRow addNoticePartial: 'characterIndex' parameter should be defined\");\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `checkTN_TSV9DataRow addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"checkTN_TSV9DataRow addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `checkTN_TSV9DataRow addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"checkTN_TSV9DataRow addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `checkTN_TSV9DataRow addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n              // incompleteNoticeObject.debugChain = incompleteNoticeObject.debugChain ? `checkTN_TSV9DataRow ${incompleteNoticeObject.debugChain}` : 'checkTN_TSV9DataRow';\n              // Also uses the given bookID,C,V, parameters from the main function call\n\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_12__[\"aboutToOverwrite\"])('checkTN_TSV9DataRow', ['bookID', 'C', 'V'], incompleteNoticeObject, {\n                bookID: bookID,\n                C: givenC,\n                V: givenV\n              });\n              drResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                C: givenC,\n                V: givenV\n              }));\n            };\n\n            /* This function is only for checking one data row\n                  and the function doesn’t assume that it has any previous context.\n                 It’s designed to be able to quickly show errors for a single row being displayed/edited.\n                 Returns an object containing the noticeList.\n            */\n            // functionLog(`checkTN_TSV9DataRow(${languageCode}, ${repoCode}, ${line}, ${bookID}, ${givenRowLocation}, ${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(languageCode !== undefined, \"checkTN_TSV9DataRow: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkTN_TSV9DataRow: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode === 'TN', `checkTN_TSV9DataRow: repoCode expected 'TN' not '${repoCode}'`);\n            //parameterAssert(line !== undefined, \"checkTN_TSV9DataRow: 'line' parameter should be defined\");\n            //parameterAssert(typeof line === 'string', `checkTN_TSV9DataRow: 'line' parameter should be a string not a '${typeof line}'`);\n            //parameterAssert(bookID !== undefined, \"checkTN_TSV9DataRow: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkTN_TSV9DataRow: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(bookID.length === 3, `checkTN_TSV9DataRow: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkTN_TSV9DataRow: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(books.isValidBookID(bookID), `checkTN_TSV9DataRow: '${bookID}' is not a valid USFM book identifier`);\n            // parameterAssert(givenC !== undefined, \"checkTN_TSV9DataRow: 'givenC' parameter should be defined\");\n            if (givenC) {//parameterAssert(typeof givenC === 'string', `checkTN_TSV9DataRow: 'givenC' parameter should be a string not a '${typeof givenC}'`);\n            } // parameterAssert(givenV !== undefined, \"checkTN_TSV9DataRow: 'givenV' parameter should be defined\");\n\n\n            if (givenV) {//parameterAssert(typeof givenV === 'string', `checkTN_TSV9DataRow: 'givenV' parameter should be a string not a '${typeof givenV}'`);\n            } //parameterAssert(givenRowLocation !== undefined, \"checkTN_TSV9DataRow: 'givenRowLocation' parameter should be defined\");\n            //parameterAssert(typeof givenRowLocation === 'string', `checkTN_TSV9DataRow: 'givenRowLocation' parameter should be a string not a '${typeof givenRowLocation}'`);\n\n\n            ourRowLocation = givenRowLocation;\n            if (ourRowLocation && ourRowLocation[0] !== ' ') ourRowLocation = \" \".concat(ourRowLocation);\n            linkCheckingOptions = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, checkingOptions);\n            linkCheckingOptions.taRepoLanguageCode = languageCode;\n            drResult = {\n              noticeList: []\n            };\n            /**\n            * @description - adds a new notice entry, adding bookID,C,V to the given fields\n            * @param {number} priority - notice priority from 1 (lowest) to 999 (highest)\n            * @param {string} message - the text of the notice message\n            * @param {string} rowID - 4-character row ID field\n            * @param {number} lineNumber - one-based line number\n            * @param {number} characterIndex - zero-based index of where the issue occurs in the line\n            * @param {string} excerpt - short excerpt from the line centred on the problem (if available)\n            * @param {string} location - description of where the issue is located\n            */\n\n            if (!(line === EXPECTED_TN_HEADING_LINE)) {\n              _context4.next = 17;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", drResult);\n\n          case 17:\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (tlcELerror) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n\n\n            excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n            excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n            lowercaseBookID = bookID.toLowerCase();\n\n            try {\n              //parameterAssert(lowercaseBookID !== 'obs', \"Shouldn’t happen in tn_table-row-check\");\n              numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"chaptersInBook\"](bookID);\n            } catch (tlcNCerror) {\n              addNoticePartial({\n                priority: 979,\n                message: \"Invalid book identifier passed to checkTN_TSV9DataRow\",\n                location: \" '\".concat(bookID, \"' in first parameter: \").concat(tlcNCerror)\n              });\n            }\n\n            haveGoodBookID = numChaptersThisBook !== undefined;\n            fields = line.split('\\t');\n\n            if (!(fields.length === NUM_EXPECTED_TN_TSV_FIELDS)) {\n              _context4.next = 86;\n              break;\n            }\n\n            _fields = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(fields, 9), B = _fields[0], C = _fields[1], V = _fields[2], rowID = _fields[3], supportReference = _fields[4], quote = _fields[5], occurrence = _fields[6], GLQuote = _fields[7], occurrenceNote = _fields[8];\n\n            // Check the fields one-by-one\n            if (B.length) {\n              if (B !== bookID) addNoticePartial({\n                priority: 978,\n                message: \"Wrong book identifier\",\n                details: \"expected '\".concat(bookID, \"'\"),\n                fieldName: 'Book',\n                rowID: rowID,\n                excerpt: B,\n                location: ourRowLocation\n              });\n            } else addNoticePartial({\n              priority: 977,\n              message: \"Missing book identifier\",\n              characterIndex: 0,\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n            if (C.length) {\n              if (C !== givenC) addNoticePartial({\n                priority: 976,\n                message: \"Wrong chapter number\",\n                details: \"expected '\".concat(givenC, \"'\"),\n                fieldName: 'Chapter',\n                rowID: rowID,\n                excerpt: C,\n                location: ourRowLocation\n              });\n\n              if (C === 'front') {} else if (/^\\d+$/.test(C)) {\n                intC = Number(C);\n\n                if (intC === 0) {\n                  addNoticePartial({\n                    priority: 824,\n                    message: \"Invalid zero chapter number\",\n                    excerpt: C,\n                    rowID: rowID,\n                    fieldName: 'Chapter',\n                    location: ourRowLocation\n                  });\n                  haveGoodChapterNumber = false;\n                } // TODO: Does this next section need rewriting (see verse check below)???\n                else if (intC > numChaptersThisBook) {\n                  addNoticePartial({\n                    priority: 823,\n                    message: \"Invalid large chapter number\",\n                    excerpt: C,\n                    rowID: rowID,\n                    fieldName: 'Chapter',\n                    location: ourRowLocation\n                  });\n                  haveGoodChapterNumber = false;\n                }\n\n                try {\n                  numVersesThisChapter = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"versesInChapter\"](lowercaseBookID, intC);\n                  haveGoodChapterNumber = true;\n                } catch (tlcNVerror) {\n                  if (!haveGoodBookID) // addNoticePartial({priority:500, \"Invalid chapter number\", rowLocation);\n                    // else\n                    addNoticePartial({\n                      priority: 822,\n                      message: \"Unable to check chapter number\",\n                      excerpt: C,\n                      rowID: rowID,\n                      fieldName: 'Chapter',\n                      location: ourRowLocation\n                    });\n                  haveGoodChapterNumber = false;\n                }\n              } else addNoticePartial({\n                priority: 821,\n                message: \"Bad chapter number\",\n                excerpt: C,\n                rowID: rowID,\n                fieldName: 'Chapter',\n                location: ourRowLocation\n              });\n            } else addNoticePartial({\n              priority: 820,\n              message: \"Missing chapter number\",\n              rowID: rowID,\n              fieldName: 'Chapter',\n              location: \" ?:\".concat(V).concat(ourRowLocation)\n            });\n\n            if (V.length) {\n              if (V !== givenV) addNoticePartial({\n                priority: 975,\n                message: \"Wrong verse number\",\n                details: \"expected '\".concat(givenV, \"'\"),\n                rowID: rowID,\n                fieldName: 'Verse',\n                excerpt: V,\n                location: ourRowLocation\n              });\n\n              if (bookID === 'OBS' || V === 'intro') {} else if (/^\\d+$/.test(V)) {\n                intV = Number(V);\n                if (intV === 0 && bookID !== 'PSA') // Psalms have \\d as verse zero\n                  addNoticePartial({\n                    priority: 814,\n                    message: \"Invalid zero verse number\",\n                    rowID: rowID,\n                    fieldName: 'Verse',\n                    excerpt: V,\n                    location: ourRowLocation\n                  });else {\n                  if (haveGoodChapterNumber) {\n                    if (intV > numVersesThisChapter) addNoticePartial({\n                      priority: 813,\n                      message: \"Invalid large verse number\",\n                      details: \"\".concat(bookID, \" chapter \").concat(C, \" only has \").concat(numVersesThisChapter, \" verses\"),\n                      rowID: rowID,\n                      fieldName: 'Verse',\n                      excerpt: V,\n                      location: ourRowLocation\n                    });\n                  } else addNoticePartial({\n                    priority: 812,\n                    message: \"Unable to check verse number\",\n                    rowID: rowID,\n                    fieldName: 'Verse',\n                    location: ourRowLocation\n                  });\n                }\n              } else addNoticePartial({\n                priority: 811,\n                message: \"Bad verse number\",\n                rowID: rowID,\n                fieldName: 'Verse',\n                location: \" '\".concat(V, \"'\").concat(ourRowLocation)\n              });\n            } else addNoticePartial({\n              priority: 810,\n              message: \"Missing verse number\",\n              rowID: rowID,\n              fieldName: 'Verse',\n              location: \" after \".concat(C, \":?\").concat(ourRowLocation)\n            });\n\n            if (!rowID.length) addNoticePartial({\n              priority: 931,\n              message: \"Missing row ID field\",\n              fieldName: 'Verse',\n              location: ourRowLocation\n            });else {\n              if (rowID.length !== 4) {\n                addNoticePartial({\n                  priority: 778,\n                  message: \"Row ID should be exactly 4 characters\",\n                  details: \"not \".concat(rowID.length),\n                  rowID: rowID,\n                  fieldName: 'ID',\n                  excerpt: rowID,\n                  location: ourRowLocation\n                });\n                if (rowID.length > 4) RIDSuggestion = rowID.slice(0, 5);else {\n                  // must be < 4\n                  RIDSuggestion = rowID;\n\n                  while (RIDSuggestion.length < 4) {\n                    RIDSuggestion += LC_ALPHABET_PLUS_DIGITS[Math.floor(Math.random() * LC_ALPHABET_PLUS_DIGITS.length)];\n                  }\n\n                  ;\n                }\n              } else if (LC_ALPHABET.indexOf(rowID[0]) < 0) addNoticePartial({\n                priority: 176,\n                message: \"Row ID should start with a lowercase letter\",\n                characterIndex: 0,\n                rowID: rowID,\n                fieldName: 'ID',\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS.indexOf(rowID[3]) < 0) addNoticePartial({\n                priority: 175,\n                message: \"Row ID should end with a lowercase letter or digit\",\n                characterIndex: 3,\n                rowID: rowID,\n                fieldName: 'ID',\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN.indexOf(rowID[1]) < 0) addNoticePartial({\n                priority: 174,\n                message: \"Row ID characters should only be lowercase letters, digits, or hypen\",\n                fieldName: 'ID',\n                characterIndex: 1,\n                rowID: rowID,\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN.indexOf(rowID[2]) < 0) addNoticePartial({\n                priority: 173,\n                message: \"Row ID characters should only be lowercase letters, digits, or hypen\",\n                fieldName: 'ID',\n                characterIndex: 2,\n                rowID: rowID,\n                excerpt: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (!supportReference.length) {\n              _context4.next = 48;\n              break;\n            }\n\n            if (!Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"isWhitespace\"])(supportReference)) {\n              _context4.next = 36;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 373,\n              message: \"Field is only whitespace\",\n              fieldName: 'SupportReference',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n            _context4.next = 47;\n            break;\n\n          case 36:\n            if (!((characterIndex = supportReference.indexOf('<br>')) !== -1)) {\n              _context4.next = 41;\n              break;\n            }\n\n            excerpt = (characterIndex > excerptHalfLength ? '…' : '') + supportReference.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < supportReference.length ? '…' : '');\n            addNoticePartial({\n              priority: 971,\n              message: \"Unexpected line break in single-line field\",\n              fieldName: 'SupportReference',\n              rowID: rowID,\n              characterIndex: characterIndex,\n              excerpt: excerpt,\n              location: ourRowLocation\n            });\n            _context4.next = 47;\n            break;\n\n          case 41:\n            // More than just whitespace\n            if (!supportReference.startsWith('figs-') && !supportReference.startsWith('grammar-') && !supportReference.startsWith('translate-') && !supportReference.startsWith('writing-') && supportReference !== 'guidelines-sonofgodprinciples') addNoticePartial({\n              priority: 788,\n              message: \"Only 'Just-In-Time Training' TA articles allowed here\",\n              fieldName: 'SupportReference',\n              excerpt: supportReference,\n              rowID: rowID,\n              location: ourRowLocation\n            });\n            SRSuggestion = ourCheckTextField(rowID, 'SupportReference', supportReference, true, ourRowLocation, checkingOptions);\n\n            if (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) {\n              _context4.next = 46;\n              break;\n            }\n\n            _context4.next = 46;\n            return ourCheckSupportReferenceInTA(rowID, 'SupportReference', supportReference, ourRowLocation, checkingOptions);\n\n          case 46:\n            if (occurrenceNote.indexOf(supportReference) < 0) // The full link is NOT in the note!\n              addNoticePartial({\n                priority: 787,\n                message: \"Link to TA should also be in OccurrenceNote\",\n                fieldName: 'SupportReference',\n                excerpt: supportReference,\n                rowID: rowID,\n                location: ourRowLocation\n              });\n\n          case 47:\n            if (supportReference.indexOf(\"\\u200B\") >= 0) {\n              charCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(supportReference, \"\\u200B\");\n              addNoticePartial({\n                priority: 374,\n                message: \"Field contains zero-width space(s)\",\n                details: \"\".concat(charCount, \" occurrence\").concat(charCount === 1 ? '' : 's', \" found\"),\n                fieldName: 'SupportReference',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n            }\n\n          case 48:\n            if (!quote.length) {\n              _context4.next = 63;\n              break;\n            }\n\n            if (!((characterIndex = quote.indexOf('<br>')) !== -1)) {\n              _context4.next = 54;\n              break;\n            }\n\n            _excerpt = (characterIndex > excerptHalfLength ? '…' : '') + quote.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < quote.length ? '…' : '');\n            addNoticePartial({\n              priority: 971,\n              message: \"Unexpected line break in single-line field\",\n              fieldName: 'OrigQuote',\n              rowID: rowID,\n              characterIndex: characterIndex,\n              excerpt: _excerpt,\n              location: ourRowLocation\n            });\n            _context4.next = 61;\n            break;\n\n          case 54:\n            OQSuggestion = ourCheckTextField(rowID, 'OrigQuote', quote, false, ourRowLocation, checkingOptions);\n\n            if (!occurrence.length) {\n              _context4.next = 60;\n              break;\n            }\n\n            _context4.next = 58;\n            return ourCheckTNOriginalLanguageQuoteAndOccurrence(rowID, 'OrigQuote', quote, occurrence, ourRowLocation, checkingOptions);\n\n          case 58:\n            _context4.next = 61;\n            break;\n\n          case 60:\n            addNoticePartial({\n              priority: 750,\n              message: \"Missing occurrence field when we have an original quote\",\n              fieldName: 'Occurrence',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 61:\n            _context4.next = 64;\n            break;\n\n          case 63:\n            // TODO: Find more details about when these fields are really compulsory (and when they're not, e.g., for 'intro') ???\n            if (V !== 'intro' && occurrence !== '0') addNoticePartial({\n              priority: 919,\n              message: \"Missing OrigQuote field\",\n              fieldName: 'OrigQuote',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 64:\n            if (occurrence.length) {\n              // This should usually be a digit\n              if (occurrence === '0') {\n                // zero means that it doesn’t occur\n                if (quote.length) {\n                  addNoticePartial({\n                    priority: 751,\n                    message: \"Invalid zero occurrence field when we have an original quote\",\n                    fieldName: 'Occurrence',\n                    rowID: rowID,\n                    excerpt: occurrence,\n                    location: ourRowLocation\n                  });\n                  OSuggestion = '1';\n                } // if (V !== 'intro')\n                //     addNoticePartial({priority:500, message:\"Invalid zero occurrence field\", rowID, location:rowLocation);\n\n              } else if (occurrence === '-1') {} // TODO check the special conditions when this can occur???\n              else if ('12345678'.indexOf(occurrence) < 0) {\n                // it’s not one of these integers\n                addNoticePartial({\n                  priority: 792,\n                  message: \"Invalid occurrence field\",\n                  fieldName: 'Occurrence',\n                  rowID: rowID,\n                  excerpt: occurrence,\n                  location: ourRowLocation\n                });\n                OSuggestion = '1';\n              }\n            } else if (quote.length) {\n              addNoticePartial({\n                priority: 791,\n                message: \"Missing occurrence field\",\n                fieldName: 'Occurrence',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n              OSuggestion = '1';\n            }\n\n            if (GLQuote.length) {\n              // TODO: need to check UTN against ULT\n              if ((characterIndex = GLQuote.indexOf('<br>')) !== -1) {\n                _excerpt2 = (characterIndex > excerptHalfLength ? '…' : '') + GLQuote.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < GLQuote.length ? '…' : '');\n                addNoticePartial({\n                  priority: 971,\n                  message: \"Unexpected line break in single-line field\",\n                  fieldName: 'GLQuote',\n                  rowID: rowID,\n                  characterIndex: characterIndex,\n                  excerpt: _excerpt2,\n                  location: ourRowLocation\n                });\n              } else if (GLQuote.indexOf(\"\\u200B\") >= 0) {\n                _charCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(GLQuote, \"\\u200B\");\n                addNoticePartial({\n                  priority: 374,\n                  message: \"Field contains zero-width space(s)\",\n                  details: \"\".concat(_charCount, \" occurrence\").concat(_charCount === 1 ? '' : 's', \" found\"),\n                  fieldName: 'GLQuote',\n                  rowID: rowID,\n                  location: ourRowLocation\n                });\n              }\n\n              if (Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"isWhitespace\"])(GLQuote)) addNoticePartial({\n                priority: 373,\n                message: \"Field is only whitespace\",\n                fieldName: 'GLQuote',\n                rowID: rowID,\n                location: ourRowLocation\n              });else // More than just whitespace\n                if (V !== 'intro') GLQSuggestion = ourCheckTextField(rowID, 'GLQuote', GLQuote, false, ourRowLocation, checkingOptions);\n            } // else // TODO: Find out if these fields are really compulsory (and when they're not, e.g., for 'intro') ???\n            //     if (V !== 'intro')\n            //         addNoticePartial({ priority: 275, message: \"Missing GLQuote field\", rowID, location: ourRowLocation });\n\n\n            if (!occurrenceNote.length) {\n              _context4.next = 81;\n              break;\n            }\n\n            if (occurrenceNote.indexOf(\"\\u200B\") >= 0) {\n              _charCount2 = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(occurrenceNote, \"\\u200B\");\n              addNoticePartial({\n                priority: 374,\n                message: \"Field contains zero-width space(s)\",\n                details: \"\".concat(_charCount2, \" occurrence\").concat(_charCount2 === 1 ? '' : 's', \" found\"),\n                fieldName: 'OccurrenceNote',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (!Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"isWhitespace\"])(occurrenceNote)) {\n              _context4.next = 72;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 373,\n              message: \"Field is only whitespace\",\n              fieldName: 'OccurrenceNote',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n            _context4.next = 79;\n            break;\n\n          case 72:\n            // More than just whitespace\n            adjustedOccurrenceNote = occurrenceNote.replace(/<br>/g, '\\n');\n            _context4.next = 75;\n            return ourMarkdownTextChecks(rowID, 'OccurrenceNote', adjustedOccurrenceNote, true, ourRowLocation, checkingOptions);\n\n          case 75:\n            ONSuggestion = _context4.sent;\n            // await ourCheckNotesLinksToOutside(rowID, 'OccurrenceNote', adjustedOccurrenceNote, ourRowLocation, linkCheckingOptions);\n            linksList = [], foundSR = false;\n\n            while (regexMatchObject = TA_REGEX.exec(adjustedOccurrenceNote)) {\n              // debugLog(\"Got TA Regex in OccurrenceNote\", JSON.stringify(regexMatchObject));\n              linksList.push(regexMatchObject[1]);\n              if (regexMatchObject[1] === supportReference) foundSR = true;\n            }\n\n            if (linksList.length && V !== 'intro') {\n              details = supportReference ? \"SR='\".concat(supportReference, \"'\") : \"empty SR field\";\n              if (linksList.length > 1) details += \"\\u2014found \".concat(linksList.length, \" TA links\");\n              _excerpt3 = linksList.length > 1 ? JSON.stringify(linksList) : linksList[0];\n\n              if (foundSR) {\n                if (linksList.length > 1) addNoticePartial({\n                  priority: 786,\n                  message: \"Shouldn’t have multiple TA links in OccurrenceNote\",\n                  details: details,\n                  rowID: rowID,\n                  fieldName: 'OccurrenceNote',\n                  excerpt: _excerpt3,\n                  location: ourRowLocation\n                });\n              } else // didn’t find SR\n                addNoticePartial({\n                  priority: 789,\n                  message: \"Should have a SupportReference when OccurrenceNote has a TA link\",\n                  details: details,\n                  rowID: rowID,\n                  fieldName: 'OccurrenceNote',\n                  excerpt: _excerpt3,\n                  location: ourRowLocation\n                });\n            }\n\n          case 79:\n            _context4.next = 82;\n            break;\n\n          case 81:\n            // TODO: Find out if these fields are really compulsory (and when they're not, e.g., for 'intro') ???\n            addNoticePartial({\n              priority: 274,\n              message: \"Missing OccurrenceNote field\",\n              fieldName: 'OccurrenceNote',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 82:\n            // 9 [B, C, V, rowID, supportReference, quote, occurrence, GLQuote, occurrenceNote]\n            suggestion = \"\".concat(B, \"\\t\").concat(C, \"\\t\").concat(V, \"\\t\").concat(RIDSuggestion === undefined ? rowID : RIDSuggestion, \"\\t\").concat(SRSuggestion === undefined ? supportReference : SRSuggestion, \"\\t\").concat(OQSuggestion === undefined ? quote : OQSuggestion, \"\\t\").concat(OSuggestion === undefined ? occurrence : OSuggestion, \"\\t\").concat(GLQSuggestion === undefined ? GLQuote : GLQSuggestion, \"\\t\").concat(ONSuggestion === undefined ? occurrenceNote : ONSuggestion);\n\n            if (suggestion !== line) {\n              // debugLog(`Had TN ${line}`);\n              // debugLog(`Sug TN ${suggestion}`);\n              drResult.suggestion = suggestion;\n            }\n\n            _context4.next = 89;\n            break;\n\n          case 86:\n            // wrong number of fields in the row\n            // Have a go at getting some of the first fields out of the row\n            _rowID = '????';\n\n            try {\n              _rowID = fields[3];\n            } catch (_unused) {}\n\n            addNoticePartial({\n              priority: 984,\n              message: \"Found wrong number of TSV fields (expected \".concat(NUM_EXPECTED_TN_TSV_FIELDS, \")\"),\n              details: \"found \".concat(fields.length, \" field\").concat(fields.length === 1 ? '' : 's'),\n              rowID: _rowID,\n              location: ourRowLocation\n            });\n\n          case 89:\n            return _context4.abrupt(\"return\", drResult);\n\n          case 90:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _checkTN_TSV9DataRow.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/tn-tsv9-row-check.js?");

/***/ }),

/***/ "./src/core/tn-tsv9-table-check.js":
/*!*****************************************!*\
  !*** ./src/core/tn-tsv9-table-check.js ***!
  \*****************************************/
/*! exports provided: internalCheckTN_TSV9Table */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"internalCheckTN_TSV9Table\", function() { return internalCheckTN_TSV9Table; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _tn_tsv9_row_check__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tn-tsv9-row-check */ \"./src/core/tn-tsv9-row-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n\n // import { removeDisabledNotices } from './disabled-notices';\n// eslint-disable-next-line no-unused-vars\n\n\nvar TN_TABLE_TEXT_VALIDATOR_VERSION_STRING = '0.5.0';\nvar NUM_EXPECTED_TN_TSV_FIELDS = 9; // so expects 8 tabs per line\n\nvar EXPECTED_TN_HEADING_LINE = 'Book\\tChapter\\tVerse\\tID\\tSupportReference\\tOrigQuote\\tOccurrence\\tGLQuote\\tOccurrenceNote';\n/**\n *\n * @param {string} languageCode\n * @param {string} repoCode - 'TN' -- keeps parameter set consistent with other similar functions\n * @param {string} bookID\n * @param {string} filename\n * @param {string} tableText\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction internalCheckTN_TSV9Table(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n  return _internalCheckTN_TSV9Table.apply(this, arguments);\n} // end of internalCheckTN_TSV9Table function\n\nfunction _internalCheckTN_TSV9Table() {\n  _internalCheckTN_TSV9Table = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, repoCode, bookID, filename, tableText, givenLocation, checkingOptions) {\n    var ourLocation, cutoffPriorityLevel, excerptLength, ttResult, addSuccessMessage, addNoticePartial, lowercaseBookID, numChaptersThisBook, lines, lastB, lastC, lastV, rowIDListForVerse, uniqueRowListForVerse, numVersesThisChapter, n, fields, _fields, B, C, V, rowID, supportReference, OrigLangQuote, occurrence, _GLQuote, _occurrenceNote, drResultObject, _iterator, _step, drNoticeEntry, _iterator2, _step2, checkedRepoName, _iterator3, _step3, checkedFilenameExtension, uniqueID, intC, lastintC, intV, lastintV, _C, _V, _rowID;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`internalCheckTN_TSV9Table notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"TSV addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `TSV addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"TSV addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `TSV addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(C !== undefined, \"TSV addNoticePartial: 'C' parameter should be defined\");\n              if (incompleteNoticeObject.C) {//parameterAssert(typeof incompleteNoticeObject.C === 'string', `TSV addNoticePartial: 'C' parameter should be a string not a '${typeof incompleteNoticeObject.C}': ${incompleteNoticeObject.C}`);\n              } // parameterAssert(V !== undefined, \"TSV addNoticePartial: 'V' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.V) {//parameterAssert(typeof incompleteNoticeObject.V === 'string', `TSV addNoticePartial: 'V' parameter should be a string not a '${typeof incompleteNoticeObject.V}': ${incompleteNoticeObject.V}`);\n              } // parameterAssert(characterIndex !== undefined, \"TSV addNoticePartial: 'characterIndex' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `TSV addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"TSV addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `TSV addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"TSV addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `TSV addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n\n\n              if (incompleteNoticeObject.debugChain) incompleteNoticeObject.debugChain = \"internalCheckTN_TSV9Table \".concat(incompleteNoticeObject.debugChain); // NOTE: We only add the repoCode here because this function is called directly by tC Create\n              //          and notice disabling currently depends on knowing the repoCode\n\n              if (incompleteNoticeObject.repoCode && incompleteNoticeObject.repoCode !== 'TN') Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"debugLog\"])(\"internalCheckTN_TSV9Table.addNoticePartial already had repoCode=\".concat(incompleteNoticeObject.repoCode, \" (will be lost)\"));\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"aboutToOverwrite\"])('internalCheckTN_TSV9Table', ['bookID', 'filename', 'repoCode'], incompleteNoticeObject, {\n                bookID: bookID,\n                filename: filename,\n                repoCode: 'TN'\n              });\n              ttResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                filename: filename,\n                repoCode: 'TN'\n              }));\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // functionLog(`internalCheckTN_TSV9Table success: ${successString}`);\n              ttResult.successList.push(successString);\n            };\n\n            /*\n            This function is optimised for checking the entire file, i.e., all rows.\n               It also has the advantage of being able to compare one row with the previous one.\n              bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n              Returns a result object containing a successList and a noticeList\n             */\n            // functionLog(`internalCheckTN_TSV9Table(${languageCode}, ${bookID}, ${filename}, ${tableText.length}, ${givenLocation},${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(languageCode !== undefined, \"internalCheckTN_TSV9Table: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `internalCheckTN_TSV9Table: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode === 'TN', `internalCheckTN_TSV9Table: repoCode expected 'TN' not '${repoCode}'`);\n            //parameterAssert(bookID !== undefined, \"internalCheckTN_TSV9Table: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `internalCheckTN_TSV9Table: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(bookID.length === 3, `internalCheckTN_TSV9Table: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `internalCheckTN_TSV9Table: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(books.isValidBookID(bookID), `internalCheckTN_TSV9Table: '${bookID}' is not a valid USFM book identifier`);\n            //parameterAssert(givenLocation !== undefined, \"internalCheckTN_TSV9Table: 'givenLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `internalCheckTN_TSV9Table: 'givenLocation' parameter should be a string not a '${typeof givenLocation}'`);\n            //parameterAssert(checkingOptions !== undefined, \"internalCheckTN_TSV9Table: 'checkingOptions' parameter should be defined\");\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n            cutoffPriorityLevel = (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel : 0;\n\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (ttcError) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n            // const excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n            // const excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n\n            ttResult = {\n              successList: [],\n              noticeList: []\n            };\n            /**\n             *\n             * @param {string} successString\n             */\n\n            // Main code for internalCheckTN_TSV9Table\n            lowercaseBookID = bookID.toLowerCase();\n            numChaptersThisBook = 0;\n\n            try {\n              //parameterAssert(lowercaseBookID !== 'obs', \"Shouldn’t happen in tn_table-text-check\");\n              numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](bookID);\n            } catch (_unused) {\n              if (!_books_books__WEBPACK_IMPORTED_MODULE_5__[\"isValidBookID\"](bookID)) // must not be in FRT, BAK, etc.\n                addNoticePartial({\n                  priority: 747,\n                  message: \"Bad function call: should be given a valid book abbreviation\",\n                  excerpt: bookID,\n                  location: \" (not '\".concat(bookID, \"')\").concat(ourLocation)\n                });\n            }\n\n            lines = tableText.split('\\n'); // debugLog(`  '${location}' has ${lines.length.toLocaleString()} total lines (expecting ${NUM_EXPECTED_TN_FIELDS} fields in each line)`);\n\n            lastB = '', lastC = '', lastV = '';\n            rowIDListForVerse = [], uniqueRowListForVerse = [];\n            numVersesThisChapter = 0;\n            n = 0;\n\n          case 16:\n            if (!(n < lines.length)) {\n              _context.next = 49;\n              break;\n            }\n\n            if (!(n === 0)) {\n              _context.next = 21;\n              break;\n            }\n\n            if (lines[0] === EXPECTED_TN_HEADING_LINE) addSuccessMessage(\"Checked TSV header \".concat(ourLocation));else addNoticePartial({\n              priority: 988,\n              message: \"Bad TSV header\",\n              details: \"expected '\".concat(EXPECTED_TN_HEADING_LINE, \"'\"),\n              excerpt: lines[0],\n              lineNumber: 1,\n              location: ourLocation\n            });\n            _context.next = 46;\n            break;\n\n          case 21:\n            fields = lines[n].split('\\t');\n\n            if (!(fields.length === NUM_EXPECTED_TN_TSV_FIELDS)) {\n              _context.next = 45;\n              break;\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            _fields = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(fields, 9), B = _fields[0], C = _fields[1], V = _fields[2], rowID = _fields[3], supportReference = _fields[4], OrigLangQuote = _fields[5], occurrence = _fields[6], _GLQuote = _fields[7], _occurrenceNote = _fields[8]; // Use the row check to do most basic checks\n\n            _context.next = 26;\n            return Object(_tn_tsv9_row_check__WEBPACK_IMPORTED_MODULE_7__[\"checkTN_TSV9DataRow\"])(username, languageCode, repoCode, lines[n], bookID, C, V, ourLocation, checkingOptions);\n\n          case 26:\n            drResultObject = _context.sent;\n            // Choose only ONE of the following\n            // This is the fast way of append the results from this field\n            // result.noticeList = result.noticeList.concat(firstResult.noticeList);\n            // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n            //  process results line by line\n            _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.noticeList);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                drNoticeEntry = _step.value;\n                if (drNoticeEntry.extra) // it must be an indirect check on a TA or TW article from a TN check\n                  ttResult.noticeList.push(drNoticeEntry); // Just copy the complete notice as is\n                else if (drNoticeEntry.priority !== 931) // We already caught Missing row ID\n                  addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, drNoticeEntry), {}, {\n                    lineNumber: n + 1\n                  }));\n              } // The following is needed coz we might be checking the linked TA and/or TW articles\n\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            if (drResultObject.checkedFileCount && drResultObject.checkedFileCount > 0) if (typeof ttResult.checkedFileCount === 'number') ttResult.checkedFileCount += drResultObject.checkedFileCount;else ttResult.checkedFileCount = drResultObject.checkedFileCount;\n            if (drResultObject.checkedFilesizes && drResultObject.checkedFilesizes > 0) if (typeof ttResult.checkedFilesizes === 'number') ttResult.checkedFilesizes += drResultObject.checkedFilesizes;else ttResult.checkedFilesizes = drResultObject.checkedFilesizes;\n\n            if (drResultObject.checkedRepoNames && drResultObject.checkedRepoNames.length > 0) {\n              _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.checkedRepoNames);\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  checkedRepoName = _step2.value;\n\n                  try {\n                    if (ttResult.checkedRepoNames.indexOf(checkedRepoName) < 0) ttResult.checkedRepoNames.push(checkedRepoName);\n                  } catch (_unused2) {\n                    ttResult.checkedRepoNames = [checkedRepoName];\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n\n            if (drResultObject.checkedFilenameExtensions && drResultObject.checkedFilenameExtensions.length > 0) {\n              _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.checkedFilenameExtensions);\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  checkedFilenameExtension = _step3.value;\n\n                  try {\n                    if (ttResult.checkedFilenameExtensions.indexOf(checkedFilenameExtension) < 0) ttResult.checkedFilenameExtensions.push(checkedFilenameExtension);\n                  } catch (_unused3) {\n                    ttResult.checkedFilenameExtensions = [checkedFilenameExtension];\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            } // if (ttResult.checkedFilenameExtensions) debugLog(\"ttResult\", JSON.stringify(ttResult));\n            // So here we only have to check against the previous and next fields for out-of-order problems and duplicate problems\n\n\n            if (B !== lastB || C !== lastC || V !== lastV) {\n              rowIDListForVerse = []; // ID's only need to be unique within each verse\n\n              uniqueRowListForVerse = []; // Same for these\n            } // TODO: Check if we need this at all (even though tC 3.0 can’t display these \"duplicate\" notes)\n            // Check for duplicate notes\n\n\n            uniqueID = C + V + supportReference + OrigLangQuote + occurrence; // This combination should not be repeated\n            // if (uniqueRowListForVerse.includes(uniqueID))\n            //     addNoticePartial({ priority: 880, C, V, message: `Duplicate note`, rowID, lineNumber: n + 1, location: ourLocation });\n            // if (uniqueRowListForVerse.includes(uniqueID))\n            //     addNoticePartial({ priority: 80, C, V, message: `Note: tC 3.0 won’t display duplicate note`, rowID, lineNumber: n + 1, location: ourLocation });\n\n            uniqueRowListForVerse.push(uniqueID);\n\n            if (B) {\n              if (B !== bookID) addNoticePartial({\n                priority: 745,\n                C: C,\n                V: V,\n                message: \"Wrong '\".concat(B, \"' book identifier (expected '\").concat(bookID, \"')\"),\n                rowID: rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n            } else addNoticePartial({\n              priority: 744,\n              C: C,\n              V: V,\n              message: \"Missing book identifier\",\n              rowID: rowID,\n              lineNumber: n + 1,\n              location: ourLocation\n            });\n\n            if (C) {\n              if (C === 'front') {} else if (/^\\d+$/.test(C)) {\n                intC = Number(C);\n                if (C !== lastC) numVersesThisChapter = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](lowercaseBookID, intC);\n                if (intC === 0) addNoticePartial({\n                  priority: 551,\n                  C: C,\n                  V: V,\n                  message: \"Invalid zero chapter number\",\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: C,\n                  location: ourLocation\n                });\n                if (intC > numChaptersThisBook) addNoticePartial({\n                  priority: 737,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large chapter number\",\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: C,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastC)) {\n                  lastintC = Number(lastC);\n                  if (intC < lastintC) addNoticePartial({\n                    priority: 736,\n                    C: C,\n                    V: V,\n                    message: \"Receding chapter number\",\n                    details: \"'\".concat(C, \"' after '\").concat(lastC, \"'\"),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    location: ourLocation\n                  });else if (intC > lastintC + 1) addNoticePartial({\n                    priority: 735,\n                    C: C,\n                    V: V,\n                    message: \"Advancing chapter number\",\n                    details: \"'\".concat(C, \"' after '\").concat(lastC, \"'\").rowID,\n                    lineNumber: n + 1,\n                    location: ourLocation\n                  });\n                }\n              } else addNoticePartial({\n                priority: 734,\n                C: C,\n                V: V,\n                message: \"Bad chapter number\",\n                rowID: rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n            } else addNoticePartial({\n              priority: 739,\n              C: C,\n              V: V,\n              message: \"Missing chapter number\",\n              rowID: rowID,\n              lineNumber: n + 1,\n              location: \" after \".concat(lastC, \":\").concat(V).concat(ourLocation)\n            });\n\n            if (V) {\n              if (V === 'intro') {} else if (/^\\d+$/.test(V)) {\n                intV = Number(V);\n                if (intV === 0 && bookID !== 'PSA') // Psalms have \\d titles\n                  addNoticePartial({\n                    priority: 552,\n                    C: C,\n                    V: V,\n                    message: \"Invalid zero verse number\",\n                    details: \"for chapter \".concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: V,\n                    location: ourLocation\n                  });\n                if (intV > numVersesThisChapter) addNoticePartial({\n                  priority: 734,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large verse number\",\n                  details: \"for chapter \".concat(C),\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: V,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastV)) {\n                  lastintV = Number(lastV);\n                  if (C === lastC && intV < lastintV) addNoticePartial({\n                    priority: 733,\n                    C: C,\n                    V: V,\n                    message: \"Receding verse number\",\n                    details: \"'\".concat(V, \"' after '\").concat(lastV, \" for chapter \").concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: V,\n                    location: ourLocation\n                  }); // else if (intV > lastintV + 1)\n                  //   addNoticePartial({priority:556, \"Skipped verses with '${V}' verse number after '${lastV}'${withString}`);\n                }\n              } else addNoticePartial({\n                priority: 738,\n                C: C,\n                V: V,\n                message: \"Bad verse number\",\n                rowID: rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n            } else addNoticePartial({\n              priority: 790,\n              C: C,\n              V: V,\n              message: \"Missing verse number\",\n              rowID: rowID,\n              lineNumber: n + 1,\n              location: \" after \".concat(C, \":\").concat(lastV).concat(ourLocation)\n            });\n\n            if (rowID) {\n              if (rowIDListForVerse.includes(rowID)) addNoticePartial({\n                priority: 831,\n                C: C,\n                V: V,\n                message: \"Duplicate '\".concat(rowID, \"' ID\"),\n                fieldName: 'ID',\n                rowID: rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n              rowIDListForVerse.push(rowID);\n            } else addNoticePartial({\n              priority: 932,\n              C: C,\n              V: V,\n              message: \"Missing row ID\",\n              fieldName: 'ID',\n              lineNumber: n + 1,\n              location: ourLocation\n            });\n\n            lastB = B;\n            lastC = C;\n            lastV = V;\n            _context.next = 46;\n            break;\n\n          case 45:\n            // wrong number of fields in the row\n            // if (n === lines.length - 1) // it’s the last line\n            //     userLog(`  Line ${n}: Has ${fields.length} field(s) instead of ${NUM_EXPECTED_TN_FIELDS}: ${EXPECTED_TN_HEADING_LINE.replace(/\\t/g, ', ')}`);\n            // else\n            if (n !== lines.length - 1) {\n              // it’s not the last line\n              // Have a go at getting some of the first fields out of the line\n              _C = '?', _V = '?', _rowID = '????';\n\n              try {\n                _C = fields[1];\n              } catch (_unused4) {}\n\n              try {\n                _V = fields[2];\n              } catch (_unused5) {}\n\n              try {\n                _rowID = fields[3];\n              } catch (_unused6) {}\n\n              addNoticePartial({\n                priority: 983,\n                message: \"Wrong number of tabbed fields (expected \".concat(NUM_EXPECTED_TN_TSV_FIELDS, \")\"),\n                excerpt: \"Found \".concat(fields.length, \" field\").concat(fields.length === 1 ? '' : 's'),\n                C: _C,\n                V: _V,\n                rowID: _rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n            }\n\n          case 46:\n            n++;\n            _context.next = 16;\n            break;\n\n          case 49:\n            // if (!checkingOptions?.suppressNoticeDisablingFlag) {\n            //     // functionLog(`internalCheckTN_TSV9Table: calling removeDisabledNotices(${ttResult.noticeList.length}) having ${JSON.stringify(checkingOptions)}`);\n            //     ttResult.noticeList = removeDisabledNotices(ttResult.noticeList);\n            // }\n            if (cutoffPriorityLevel < 20 && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag)) addNoticePartial({\n              priority: 20,\n              message: \"Note that 'disableAllLinkFetchingFlag' was set so link targets were not checked\",\n              location: ourLocation\n            });\n            addSuccessMessage(\"Checked all \".concat((lines.length - 1).toLocaleString(), \" data line\").concat(lines.length - 1 === 1 ? '' : 's').concat(ourLocation));\n            if (ttResult.noticeList.length) addSuccessMessage(\"internalCheckTN_TSV9Table v\".concat(TN_TABLE_TEXT_VALIDATOR_VERSION_STRING, \" finished with \").concat(ttResult.noticeList.length ? ttResult.noticeList.length.toLocaleString() : \"zero\", \" notice\").concat(ttResult.noticeList.length === 1 ? '' : 's'));else addSuccessMessage(\"No errors or warnings found by internalCheckTN_TSV9Table v\".concat(TN_TABLE_TEXT_VALIDATOR_VERSION_STRING)); // debugLog(`  internalCheckTN_TSV9Table returning with ${result.successList.length.toLocaleString()} success(es), ${result.noticeList.length.toLocaleString()} notice(s).`);\n            // debugLog(\"internalCheckTN_TSV9Table result is\", JSON.stringify(result));\n\n            return _context.abrupt(\"return\", ttResult);\n\n          case 53:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _internalCheckTN_TSV9Table.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/tn-tsv9-table-check.js?");

/***/ }),

/***/ "./src/core/twl-tsv6-row-check.js":
/*!****************************************!*\
  !*** ./src/core/twl-tsv6-row-check.js ***!
  \****************************************/
/*! exports provided: checkTWL_TSV6DataRow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkTWL_TSV6DataRow\", function() { return checkTWL_TSV6DataRow; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./text-handling-functions */ \"./src/core/text-handling-functions.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _field_text_check__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\");\n/* harmony import */ var _notes_links_check__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./notes-links-check */ \"./src/core/notes-links-check.js\");\n/* harmony import */ var _orig_quote_check__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./orig-quote-check */ \"./src/core/orig-quote-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n\n\n // import { checkMarkdownText } from './markdown-text-check';\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const TWL_TABLE_ROW_VALIDATOR_VERSION_STRING = '0.1.11';\n\nvar NUM_EXPECTED_TWL_TSV_FIELDS = 6; // so expects 5 tabs per line\n\nvar EXPECTED_TWL_HEADING_LINE = 'Reference\\tID\\tTags\\tOrigWords\\tOccurrence\\tTWLink';\nvar LC_ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\nvar LC_ALPHABET_PLUS_DIGITS = 'abcdefghijklmnopqrstuvwxyz0123456789';\nvar LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN = 'abcdefghijklmnopqrstuvwxyz0123456789-';\n/**\n *\n * @description - Checks one TSV data row of translation word links (TWL)\n * @param {string} languageCode - the language code, e.g., 'en'\n * @param {string} repoCode - 'TWL' or 'OBS-TWL'-- keeps parameter set consistent with other similar functions\n * @param {string} line - the TSV line to be checked\n * @param {string} bookID - 3-character UPPERCASE USFM book identifier or 'OBS'\n * @param {string} givenC - chapter number or (for OBS) story number string\n * @param {string} givenV - verse number or (for OBS) frame number string\n * @param {string} givenRowLocation - description of where the line is located\n * @param {Object} checkingOptions - may contain excerptLength parameter\n * @return {Object} - containing noticeList\n */\n\nfunction checkTWL_TSV6DataRow(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9) {\n  return _checkTWL_TSV6DataRow.apply(this, arguments);\n} // end of checkTWL_TSV6DataRow function\n\nfunction _checkTWL_TSV6DataRow() {\n  _checkTWL_TSV6DataRow = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(username, languageCode, repoCode, line, bookID, givenC, givenV, givenRowLocation, checkingOptions) {\n    var ourRowLocation, linkCheckingOptions, drResult, addNoticePartial, ourCheckTextField, ourCheckTNOriginalLanguageQuoteAndOccurrence, _ourCheckTNOriginalLanguageQuoteAndOccurrence, ourCheckNotesLinksToOutside, _ourCheckNotesLinksToOutside, excerptLength, excerptHalfLength, excerptHalfLengthPlus, lowercaseBookID, numChaptersThisBook, haveGoodBookID, fields, RIDSuggestion, QSuggestion, OSuggestion, LSuggestion, _fields, reference, rowID, tags, origWords, occurrence, TWLink, characterIndex, _reference$split, _reference$split2, C, V, numVersesThisChapter, haveGoodChapterNumber, intC, intV, excerpt, tagsList, _iterator2, _step2, thisTag, _excerpt, _excerpt2, _excerpt3, charCount, _excerpt4, bits, _excerpt5, suggestion, _rowID;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _ourCheckNotesLinksToOutside = function _ourCheckNotesLinksTo2() {\n              _ourCheckNotesLinksToOutside = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(rowID, fieldName, twLinkText, rowLocation, checkingOptions) {\n                var adjustedLanguageCode, coTNlResultObject, _iterator4, _step4, coqNoticeEntry, _iterator5, _step5, checkedRepoName, _iterator6, _step6, checkedFilenameExtension;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        // Checks that the TA/TW/Bible reference can be found\n                        // Updates the global list of notices\n                        // functionLog(`checkTWL_TSV6DataRow ourCheckNotesLinksToOutside(${rowID}, ${fieldName}, (${twLinkText.length}) '${twLinkText}', ${rowLocation}, ${JSON.stringify(checkingOptions)})`);\n                        //parameterAssert(rowID !== undefined, \"checkTWL_TSV6DataRow ourCheckNotesLinksToOutside: 'rowID' parameter should be defined\");\n                        //parameterAssert(typeof rowID === 'string', `checkTWL_TSV6DataRow ourCheckNotesLinksToOutside: 'rowID' parameter should be a string not a '${typeof rowID}'`);\n                        //parameterAssert(fieldName === 'TWLink', `checkTWL_TSV6DataRow ourCheckNotesLinksToOutside: 'fieldName' parameter should be 'TWLink' not '${fieldName}'`);\n                        //parameterAssert(twLinkText !== undefined, \"checkTWL_TSV6DataRow ourCheckNotesLinksToOutside: 'twLinkText' parameter should be defined\");\n                        //parameterAssert(typeof twLinkText === 'string', `checkTWL_TSV6DataRow ourCheckNotesLinksToOutside: 'twLinkText' parameter should be a string not a '${typeof twLinkText}'`);\n                        adjustedLanguageCode = languageCode; // This is the language code of the resource with the link\n\n                        if (languageCode === 'hbo' || languageCode === 'el-x-koine') adjustedLanguageCode = 'en'; // This is a guess (and won’t be needed for TWs when we switch to TWLs)\n\n                        _context2.next = 4;\n                        return Object(_notes_links_check__WEBPACK_IMPORTED_MODULE_9__[\"checkNotesLinksToOutside\"])(username, languageCode, repoCode, bookID, givenC, givenV, fieldName, twLinkText, rowLocation, Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, checkingOptions), {}, {\n                          defaultLanguageCode: adjustedLanguageCode\n                        }));\n\n                      case 4:\n                        coTNlResultObject = _context2.sent;\n                        // debugLog(`coTNlResultObject=${JSON.stringify(coTNlResultObject)}`);\n                        // Process results line by line\n                        _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coTNlResultObject.noticeList);\n\n                        try {\n                          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                            coqNoticeEntry = _step4.value;\n                            if (coqNoticeEntry.extra) // it must be an indirect check on a TA or TW article from a TN2 check\n                              drResult.noticeList.push(coqNoticeEntry); // Just copy the complete notice as is\n                            else // For our direct checks, we add the repoCode as an extra value\n                              addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, coqNoticeEntry), {}, {\n                                rowID: rowID,\n                                fieldName: fieldName\n                              }));\n                          } // The following is needed coz we might be checking the linked TA and/or TW articles\n\n                        } catch (err) {\n                          _iterator4.e(err);\n                        } finally {\n                          _iterator4.f();\n                        }\n\n                        if (coTNlResultObject.checkedFileCount && coTNlResultObject.checkedFileCount > 0) if (typeof drResult.checkedFileCount === 'number') drResult.checkedFileCount += coTNlResultObject.checkedFileCount;else drResult.checkedFileCount = coTNlResultObject.checkedFileCount;\n                        if (coTNlResultObject.checkedFilesizes && coTNlResultObject.checkedFilesizes > 0) if (typeof drResult.checkedFilesizes === 'number') drResult.checkedFilesizes += coTNlResultObject.checkedFilesizes;else drResult.checkedFilesizes = coTNlResultObject.checkedFilesizes;\n\n                        if (coTNlResultObject.checkedRepoNames && coTNlResultObject.checkedRepoNames.length > 0) {\n                          _iterator5 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coTNlResultObject.checkedRepoNames);\n\n                          try {\n                            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                              checkedRepoName = _step5.value;\n\n                              try {\n                                if (drResult.checkedRepoNames.indexOf(checkedRepoName) < 0) drResult.checkedRepoNames.push(checkedRepoName);\n                              } catch (_unused2) {\n                                drResult.checkedRepoNames = [checkedRepoName];\n                              }\n                            }\n                          } catch (err) {\n                            _iterator5.e(err);\n                          } finally {\n                            _iterator5.f();\n                          }\n                        }\n\n                        if (coTNlResultObject.checkedFilenameExtensions && coTNlResultObject.checkedFilenameExtensions.length > 0) {\n                          _iterator6 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coTNlResultObject.checkedFilenameExtensions);\n\n                          try {\n                            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                              checkedFilenameExtension = _step6.value;\n\n                              try {\n                                if (drResult.checkedFilenameExtensions.indexOf(checkedFilenameExtension) < 0) drResult.checkedFilenameExtensions.push(checkedFilenameExtension);\n                              } catch (_unused3) {\n                                drResult.checkedFilenameExtensions = [checkedFilenameExtension];\n                              }\n                            }\n                          } catch (err) {\n                            _iterator6.e(err);\n                          } finally {\n                            _iterator6.f();\n                          }\n                        } // if (drResult.checkedFilenameExtensions) debugLog(\"drResult\", JSON.stringify(drResult));\n\n\n                      case 11:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              return _ourCheckNotesLinksToOutside.apply(this, arguments);\n            };\n\n            ourCheckNotesLinksToOutside = function _ourCheckNotesLinksTo(_x16, _x17, _x18, _x19, _x20) {\n              return _ourCheckNotesLinksToOutside.apply(this, arguments);\n            };\n\n            _ourCheckTNOriginalLanguageQuoteAndOccurrence = function _ourCheckTNOriginalLa2() {\n              _ourCheckTNOriginalLanguageQuoteAndOccurrence = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(rowID, fieldName, fieldText, occurrence, rowLocation, checkingOptions) {\n                var colqResultObject, _iterator3, _step3, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return Object(_orig_quote_check__WEBPACK_IMPORTED_MODULE_10__[\"checkOriginalLanguageQuoteAndOccurrence\"])(username, languageCode, repoCode, fieldName, fieldText, occurrence, bookID, givenC, givenV, rowLocation, checkingOptions);\n\n                      case 2:\n                        colqResultObject = _context.sent;\n                        // Choose only ONE of the following\n                        // This is the fast way of append the results from this field\n                        // result.noticeList = result.noticeList.concat(colqResultObject.noticeList);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(colqResultObject.noticeList);\n\n                        try {\n                          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                            noticeEntry = _step3.value;\n                            // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourCheckTNOriginalLanguageQuoteAndOccurrence notice length=${Object.keys(noticeEntry).length}`);\n                            addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                              rowID: rowID,\n                              fieldName: fieldName\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator3.e(err);\n                        } finally {\n                          _iterator3.f();\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _ourCheckTNOriginalLanguageQuoteAndOccurrence.apply(this, arguments);\n            };\n\n            ourCheckTNOriginalLanguageQuoteAndOccurrence = function _ourCheckTNOriginalLa(_x10, _x11, _x12, _x13, _x14, _x15) {\n              return _ourCheckTNOriginalLanguageQuoteAndOccurrence.apply(this, arguments);\n            };\n\n            ourCheckTextField = function _ourCheckTextField(rowID, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions) {\n              /**\n              * @description - checks the given text field and processes the returned results\n              * @param {string} rowID - 4-character row ID field\n              * @param {string} fieldName - name of the field being checked\n              * @param {string} fieldText - the actual text of the field being checked\n              * @param {boolean} allowedLinks - true if links are allowed in the field, otherwise false\n              * @param {string} rowLocation - description of where the line is located\n              * @param {Object} checkingOptions - parameters that might affect the check\n              */\n              // Does basic checks for small errors like leading/trailing spaces, etc.\n              // We assume that checking for compulsory fields is done elsewhere\n              // Updates the global list of notices\n              // functionLog(`checkTWL_TSV6DataRow ourCheckTextField(${fieldName}, (${fieldText.length}), ${allowedLinks}, ${rowLocation}, …)`);\n              //parameterAssert(rowID !== undefined, \"checkTWL_TSV6DataRow ourCheckTextField: 'rowID' parameter should be defined\");\n              //parameterAssert(typeof rowID === 'string', `checkTWL_TSV6DataRow ourCheckTextField: 'rowID' parameter should be a string not a '${typeof rowID}'`);\n              //parameterAssert(fieldName !== undefined, \"checkTWL_TSV6DataRow ourCheckTextField: 'fieldName' parameter should be defined\");\n              //parameterAssert(typeof fieldName === 'string', `checkTWL_TSV6DataRow ourCheckTextField: 'fieldName' parameter should be a string not a '${typeof fieldName}'`);\n              //parameterAssert(fieldText !== undefined, \"checkTWL_TSV6DataRow ourCheckTextField: 'fieldText' parameter should be defined\");\n              //parameterAssert(typeof fieldText === 'string', `checkTWL_TSV6DataRow ourCheckTextField: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n              //parameterAssert(allowedLinks === true || allowedLinks === false, \"checkTWL_TSV6DataRow ourCheckTextField: allowedLinks parameter must be either true or false\");\n              //parameterAssert(rowLocation !== undefined, \"checkTWL_TSV6DataRow ourCheckTextField: 'rowLocation' parameter should be defined\");\n              //parameterAssert(typeof rowLocation === 'string', `checkTWL_TSV6DataRow ourCheckTextField: 'rowLocation' parameter should be a string not a '${typeof rowLocation}'`);\n              //parameterAssert(rowLocation.indexOf(fieldName) < 0, `checkTWL_TSV6DataRow ourCheckTextField: 'rowLocation' parameter should be not contain fieldName=${fieldName}`);\n              var fieldType = 'raw';\n              var octfResultObject = Object(_field_text_check__WEBPACK_IMPORTED_MODULE_8__[\"checkTextField\"])(username, languageCode, repoCode, fieldType, fieldName, fieldText, allowedLinks, rowLocation, checkingOptions); // Choose only ONE of the following\n              // This is the fast way of append the results from this field\n              // result.noticeList = result.noticeList.concat(dbtcResultObject.noticeList);\n              // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n              //  process results line by line\n\n              var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(octfResultObject.noticeList),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var noticeEntry = _step.value;\n                  // parameterAssert(Object.keys(noticeEntry).length === 5, `TL ourCheckTextField notice length=${Object.keys(noticeEntry).length}`);\n                  addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                    rowID: rowID,\n                    fieldName: fieldName\n                  }));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              return octfResultObject.suggestion; // There may or may not be one!\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              /**\n              * @description - adds a new notice entry, adding bookID,C,V to the given fields\n              * @param {number} priority - notice priority from 1 (lowest) to 999 (highest)\n              * @param {string} message - the text of the notice message\n              * @param {string} rowID - 4-character row ID field\n              * @param {number} lineNumber - one-based line number\n              * @param {number} characterIndex - zero-based index of where the issue occurs in the line\n              * @param {string} excerpt - short excerpt from the line centred on the problem (if available)\n              * @param {string} location - description of where the issue is located\n              */\n              // functionLog(`checkTWL_TSV6DataRow addNoticePartial(priority=${incompleteNoticeObject.priority}) ${incompleteNoticeObject.message}, ${incompleteNoticeObject.characterIndex}, ${incompleteNoticeObject.excerpt}, ${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"checkTWL_TSV6DataRow addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `checkTWL_TSV6DataRow addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"checkTWL_TSV6DataRow addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `checkTWL_TSV6DataRow addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(lineNumber !== undefined, \"checkTWL_TSV6DataRow addNoticePartial: 'lineNumber' parameter should be defined\");\n              // parameterAssert(typeof lineNumber === 'number', `checkTWL_TSV6DataRow addNoticePartial: 'lineNumber' parameter should be a number not a '${typeof lineNumber}': ${lineNumber}`);\n              // parameterAssert(characterIndex !== undefined, \"checkTWL_TSV6DataRow addNoticePartial: 'characterIndex' parameter should be defined\");\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `checkTWL_TSV6DataRow addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"checkTWL_TSV6DataRow addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `checkTWL_TSV6DataRow addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"checkTWL_TSV6DataRow addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `checkTWL_TSV6DataRow addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n              // Also uses the given bookID,C,V, parameters from the main function call\n              // incompleteNoticeObject.debugChain = incompleteNoticeObject.debugChain ? `checkTWL_TSV6DataRow ${incompleteNoticeObject.debugChain}` : `checkTWL_TSV6DataRow(${repoCode})`;\n\n\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_11__[\"aboutToOverwrite\"])('checkTWL_TSV6DataRow', ['bookID', 'C', 'V'], incompleteNoticeObject, {\n                bookID: bookID,\n                C: givenC,\n                V: givenV\n              });\n              drResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                C: givenC,\n                V: givenV\n              }));\n            };\n\n            /* This function is only for checking one data row\n                  and the function doesn’t assume that it has any previous context.\n                 TWL being translation word-links.\n                 bookID is a three-character UPPERCASE USFM book identifier or 'OBS'\n                    so givenC and givenV are usually chapter number and verse number\n                        but can be story number and frame number for OBS.\n                 It’s designed to be able to quickly show errors for a single row being displayed/edited.\n                 Returns an object containing the noticeList.\n            */\n            // functionLog(`checkTWL_TSV6DataRow(${languageCode}, ${repoCode}, ${line}, ${bookID}, ${givenRowLocation}, ${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(languageCode !== undefined, \"checkTWL_TSV6DataRow: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkTWL_TSV6DataRow: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode === 'TWL' || repoCode === 'OBS-TWL', `checkTWL_TSV6DataRow: repoCode expected 'TWL' or 'OBS-TWL' not '${repoCode}'`);\n            //parameterAssert(line !== undefined, \"checkTWL_TSV6DataRow: 'line' parameter should be defined\");\n            //parameterAssert(typeof line === 'string', `checkTWL_TSV6DataRow: 'line' parameter should be a string not a '${typeof line}'`);\n            //parameterAssert(bookID !== undefined, \"checkTWL_TSV6DataRow: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkTWL_TSV6DataRow: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(bookID.length === 3, `checkTWL_TSV6DataRow: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkTWL_TSV6DataRow: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkTWL_TSV6DataRow: '${bookID}' is not a valid USFM book identifier`);\n            // parameterAssert(givenC !== undefined, \"checkTWL_TSV6DataRow: 'givenC' parameter should be defined\");\n            if (givenC) {//parameterAssert(typeof givenC === 'string', `checkTWL_TSV6DataRow: 'givenC' parameter should be a string not a '${typeof givenC}'`);\n            } // parameterAssert(givenV !== undefined, \"checkTWL_TSV6DataRow: 'givenV' parameter should be defined\");\n\n\n            if (givenV) {//parameterAssert(typeof givenV === 'string', `checkTWL_TSV6DataRow: 'givenV' parameter should be a string not a '${typeof givenV}'`);\n            } //parameterAssert(givenRowLocation !== undefined, \"checkTWL_TSV6DataRow: 'givenRowLocation' parameter should be defined\");\n            //parameterAssert(typeof givenRowLocation === 'string', `checkTWL_TSV6DataRow: 'givenRowLocation' parameter should be a string not a '${typeof givenRowLocation}'`);\n            //parameterAssert(givenRowLocation.indexOf('true') === -1, \"checkTWL_TSV6DataRow: 'givenRowLocation' parameter should not be 'true'\");\n\n\n            ourRowLocation = givenRowLocation;\n            if (ourRowLocation && ourRowLocation[0] !== ' ') ourRowLocation = \" \".concat(ourRowLocation);\n            linkCheckingOptions = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, checkingOptions);\n            linkCheckingOptions.twRepoLanguageCode = languageCode;\n            drResult = {\n              noticeList: []\n            };\n\n            if (!(line === EXPECTED_TWL_HEADING_LINE)) {\n              _context3.next = 15;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", drResult);\n\n          case 15:\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (tlcELerror) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n\n\n            excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n            excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n            lowercaseBookID = bookID.toLowerCase();\n            if (bookID === 'OBS') numChaptersThisBook = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"NUM_OBS_STORIES\"]; // There’s 50 Open Bible Stories\n            else {\n              //parameterAssert(lowercaseBookID !== 'obs', \"Shouldn’t happen in checkTWL_TSV6DataRow\");\n              try {\n                numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"chaptersInBook\"](bookID);\n              } catch (tlcNCerror) {\n                addNoticePartial({\n                  priority: 979,\n                  message: \"Invalid book identifier passed to checkTWL_TSV6DataRow\",\n                  location: \" '\".concat(bookID, \"' in first parameter: \").concat(tlcNCerror)\n                });\n              }\n            }\n            haveGoodBookID = numChaptersThisBook !== undefined;\n            fields = line.split('\\t');\n\n            if (!(fields.length === NUM_EXPECTED_TWL_TSV_FIELDS)) {\n              _context3.next = 71;\n              break;\n            }\n\n            _fields = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(fields, 6), reference = _fields[0], rowID = _fields[1], tags = _fields[2], origWords = _fields[3], occurrence = _fields[4], TWLink = _fields[5];\n            // let withString = ` with '${rowID}'${inString}`;\n            // let CV_withString = ` ${C}:${V}${withString}`;\n            // let atString = ` at ${B} ${C}:${V} (${rowID})${inString}`;\n            // Check the fields one-by-one\n            _reference$split = reference.split(':'), _reference$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_reference$split, 2), C = _reference$split2[0], V = _reference$split2[1];\n\n            if (C.length) {\n              if (C !== givenC) addNoticePartial({\n                priority: 976,\n                message: \"Wrong chapter number\",\n                details: \"expected '\".concat(givenC, \"'\"),\n                fieldName: 'Reference',\n                rowID: rowID,\n                excerpt: C,\n                location: ourRowLocation\n              });\n\n              if (C === 'front') {} else if (/^\\d+$/.test(C)) {\n                intC = Number(C);\n\n                if (intC === 0) {\n                  addNoticePartial({\n                    priority: 824,\n                    message: \"Invalid zero chapter number\",\n                    excerpt: C,\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    location: ourRowLocation\n                  });\n                  haveGoodChapterNumber = false;\n                } // TODO: Does this next section need rewriting (see verse check below)???\n                else if (intC > numChaptersThisBook) {\n                  addNoticePartial({\n                    priority: 823,\n                    message: \"Invalid large chapter number\",\n                    excerpt: C,\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    location: ourRowLocation\n                  });\n                  haveGoodChapterNumber = false;\n                }\n\n                if (lowercaseBookID === 'obs') numVersesThisChapter = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"MAX_OBS_FRAMES\"]; // Set to maximum expected number of frames\n                else {\n                  try {\n                    numVersesThisChapter = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"versesInChapter\"](lowercaseBookID, intC);\n                    haveGoodChapterNumber = true;\n                  } catch (tlcNVerror) {\n                    if (!haveGoodBookID) // addNoticePartial({priority:500, \"Invalid chapter number\", rowLocation);\n                      // else\n                      addNoticePartial({\n                        priority: 822,\n                        message: \"Unable to check chapter number\",\n                        excerpt: C,\n                        rowID: rowID,\n                        fieldName: 'Reference',\n                        location: ourRowLocation\n                      });\n                    haveGoodChapterNumber = false;\n                  }\n                }\n              } else addNoticePartial({\n                priority: 821,\n                message: \"Bad chapter number\",\n                excerpt: C,\n                rowID: rowID,\n                fieldName: 'Reference',\n                location: ourRowLocation\n              });\n            } else addNoticePartial({\n              priority: 820,\n              message: \"Missing chapter number\",\n              rowID: rowID,\n              fieldName: 'Reference',\n              location: \" ?:\".concat(V).concat(ourRowLocation)\n            });\n\n            if (V === null || V === void 0 ? void 0 : V.length) {\n              // can be undefined if no colon at split above\n              if (V !== givenV) addNoticePartial({\n                priority: 975,\n                message: \"Wrong verse number\",\n                details: \"expected '\".concat(givenV, \"'\"),\n                rowID: rowID,\n                fieldName: 'Reference',\n                excerpt: V,\n                location: ourRowLocation\n              });\n\n              if (bookID === 'OBS' || V === 'intro') {} else if (/^\\d+$/.test(V)) {\n                intV = Number(V);\n                if (intV === 0 && bookID !== 'PSA') // Psalms have \\d as verse zero\n                  addNoticePartial({\n                    priority: 814,\n                    message: \"Invalid zero verse number\",\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    excerpt: V,\n                    location: ourRowLocation\n                  });else {\n                  if (haveGoodChapterNumber) {\n                    if (intV > numVersesThisChapter) addNoticePartial({\n                      priority: 813,\n                      message: \"Invalid large verse number\",\n                      details: \"\".concat(bookID, \" chapter \").concat(C, \" only has \").concat(numVersesThisChapter, \" verses\"),\n                      rowID: rowID,\n                      fieldName: 'Reference',\n                      excerpt: V,\n                      location: ourRowLocation\n                    });\n                  } else addNoticePartial({\n                    priority: 812,\n                    message: \"Unable to check verse number\",\n                    rowID: rowID,\n                    fieldName: 'Reference',\n                    location: ourRowLocation\n                  });\n                }\n              } else addNoticePartial({\n                priority: 811,\n                message: \"Bad verse number\",\n                rowID: rowID,\n                fieldName: 'Reference',\n                location: \" '\".concat(V, \"'\").concat(ourRowLocation)\n              });\n            } else addNoticePartial({\n              priority: 810,\n              message: \"Missing verse number\",\n              rowID: rowID,\n              fieldName: 'Reference',\n              location: \" after \".concat(C, \":?\").concat(ourRowLocation)\n            });\n\n            if (!rowID.length) addNoticePartial({\n              priority: 931,\n              message: \"Missing row ID field\",\n              fieldName: 'Reference',\n              location: ourRowLocation\n            });else {\n              if (rowID.length !== 4) {\n                addNoticePartial({\n                  priority: 778,\n                  message: \"Row ID should be exactly 4 characters\",\n                  details: \"not \".concat(rowID.length),\n                  rowID: rowID,\n                  fieldName: 'ID',\n                  excerpt: rowID,\n                  location: ourRowLocation\n                });\n                if (rowID.length > 4) RIDSuggestion = rowID.slice(0, 5);else {\n                  // must be < 4\n                  RIDSuggestion = rowID;\n\n                  while (RIDSuggestion.length < 4) {\n                    RIDSuggestion += LC_ALPHABET_PLUS_DIGITS[Math.floor(Math.random() * LC_ALPHABET_PLUS_DIGITS.length)];\n                  }\n\n                  ;\n                }\n              } else if (LC_ALPHABET.indexOf(rowID[0]) < 0) addNoticePartial({\n                priority: 176,\n                message: \"Row ID should start with a lowercase letter\",\n                characterIndex: 0,\n                rowID: rowID,\n                fieldName: 'ID',\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS.indexOf(rowID[3]) < 0) addNoticePartial({\n                priority: 175,\n                message: \"Row ID should end with a lowercase letter or digit\",\n                characterIndex: 3,\n                rowID: rowID,\n                fieldName: 'ID',\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN.indexOf(rowID[1]) < 0) addNoticePartial({\n                priority: 174,\n                message: \"Row ID characters should only be lowercase letters, digits, or hypen\",\n                fieldName: 'ID',\n                characterIndex: 1,\n                rowID: rowID,\n                excerpt: rowID,\n                location: ourRowLocation\n              });else if (LC_ALPHABET_PLUS_DIGITS_PLUS_HYPHEN.indexOf(rowID[2]) < 0) addNoticePartial({\n                priority: 173,\n                message: \"Row ID characters should only be lowercase letters, digits, or hypen\",\n                fieldName: 'ID',\n                characterIndex: 2,\n                rowID: rowID,\n                excerpt: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (tags.length) {\n              if ((characterIndex = tags.indexOf('\\\\n')) !== -1) {\n                excerpt = (characterIndex > excerptHalfLength ? '…' : '') + tags.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < tags.length ? '…' : '');\n                addNoticePartial({\n                  priority: 971,\n                  message: \"Unexpected line break in single-line field\",\n                  fieldName: 'GLQuote',\n                  rowID: rowID,\n                  characterIndex: characterIndex,\n                  excerpt: excerpt,\n                  location: ourRowLocation\n                });\n              }\n\n              tagsList = tags.split('; ');\n              _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(tagsList);\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  thisTag = _step2.value;\n                  if (thisTag !== 'keyterm' && thisTag !== 'name') addNoticePartial({\n                    priority: 740,\n                    message: \"Unrecognized tag\",\n                    details: \"found '\".concat(thisTag, \"' but expected 'keyterm' or 'name'\"),\n                    excerpt: tags,\n                    fieldName: 'Tags',\n                    rowID: rowID,\n                    location: ourRowLocation\n                  });\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n\n            if (!origWords.length) {\n              _context3.next = 41;\n              break;\n            }\n\n            // need to check UTN against UHB and UGNT\n            if ((characterIndex = origWords.indexOf('\\\\n')) !== -1) {\n              _excerpt = (characterIndex > excerptHalfLength ? '…' : '') + origWords.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < origWords.length ? '…' : '');\n              addNoticePartial({\n                priority: 971,\n                message: \"Unexpected line break in single-line field\",\n                fieldName: 'GLQuote',\n                rowID: rowID,\n                characterIndex: characterIndex,\n                excerpt: _excerpt,\n                location: ourRowLocation\n              });\n            }\n\n            QSuggestion = ourCheckTextField(rowID, 'OrigWords', origWords, false, ourRowLocation, checkingOptions);\n\n            if (!occurrence.length) {\n              _context3.next = 38;\n              break;\n            }\n\n            _context3.next = 36;\n            return ourCheckTNOriginalLanguageQuoteAndOccurrence(rowID, 'OrigWords', origWords, occurrence, ourRowLocation, checkingOptions);\n\n          case 36:\n            _context3.next = 39;\n            break;\n\n          case 38:\n            addNoticePartial({\n              priority: 750,\n              message: \"Missing occurrence field when we have an original quote\",\n              fieldName: 'Occurrence',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 39:\n            _context3.next = 42;\n            break;\n\n          case 41:\n            // TODO: Find more details about when these fields are really compulsory (and when they're not, e.g., for 'intro') ???\n            if (V !== 'intro' && occurrence !== '0') addNoticePartial({\n              priority: 919,\n              message: \"Missing OrigWords field\",\n              fieldName: 'OrigWords',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 42:\n            if (occurrence.length) {\n              // This should usually be a digit\n              if ((characterIndex = occurrence.indexOf('\\\\n')) !== -1) {\n                _excerpt2 = (characterIndex > excerptHalfLength ? '…' : '') + occurrence.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < occurrence.length ? '…' : '');\n                addNoticePartial({\n                  priority: 971,\n                  message: \"Unexpected line break in single-line field\",\n                  fieldName: 'GLQuote',\n                  rowID: rowID,\n                  characterIndex: characterIndex,\n                  excerpt: _excerpt2,\n                  location: ourRowLocation\n                });\n              }\n\n              if (occurrence === '0') {\n                // zero means that it doesn’t occur\n                if (origWords.length) {\n                  addNoticePartial({\n                    priority: 751,\n                    message: \"Invalid zero occurrence field when we have an original quote\",\n                    fieldName: 'Occurrence',\n                    rowID: rowID,\n                    excerpt: occurrence,\n                    location: ourRowLocation\n                  });\n                  OSuggestion = '1';\n                } // if (V !== 'intro')\n                //     addNoticePartial({priority:500, message:\"Invalid zero occurrence field\", rowID, location:rowLocation);\n\n              } else if (occurrence === '-1') {} // TODO check the special conditions when this can occur???\n              else if ('12345678'.indexOf(occurrence) < 0) {\n                // it’s not one of these integers\n                addNoticePartial({\n                  priority: 792,\n                  message: \"Invalid occurrence field\",\n                  fieldName: 'Occurrence',\n                  rowID: rowID,\n                  excerpt: occurrence,\n                  location: ourRowLocation\n                });\n                OSuggestion = '1';\n              }\n            } else if (origWords.length) {\n              addNoticePartial({\n                priority: 791,\n                message: \"Missing occurrence field\",\n                fieldName: 'Occurrence',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n              OSuggestion = '1';\n            }\n\n            if (!TWLink.length) {\n              _context3.next = 66;\n              break;\n            }\n\n            // debugLog(`checkTWL_TSV6DataRow checking ${bookID} ${rowID} TWLink='${TWLink}'`);\n            if ((characterIndex = TWLink.indexOf('\\\\n')) !== -1) {\n              _excerpt3 = (characterIndex > excerptHalfLength ? '…' : '') + TWLink.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < TWLink.length ? '…' : '');\n              addNoticePartial({\n                priority: 971,\n                message: \"Unexpected line break in single-line field\",\n                fieldName: 'GLQuote',\n                rowID: rowID,\n                characterIndex: characterIndex,\n                excerpt: _excerpt3,\n                location: ourRowLocation\n              });\n            }\n\n            if (TWLink.indexOf(\"\\u200B\") >= 0) {\n              charCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(TWLink, \"\\u200B\");\n              addNoticePartial({\n                priority: 374,\n                message: \"Field contains zero-width space(s)\",\n                details: \"\".concat(charCount, \" occurrence\").concat(charCount === 1 ? '' : 's', \" found\"),\n                fieldName: 'TWLink',\n                rowID: rowID,\n                location: ourRowLocation\n              });\n            }\n\n            if (!Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"isWhitespace\"])(TWLink)) {\n              _context3.next = 50;\n              break;\n            }\n\n            addNoticePartial({\n              priority: 796,\n              message: \"Field is only whitespace\",\n              fieldName: 'TWLink',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n            _context3.next = 64;\n            break;\n\n          case 50:\n            if (TWLink.startsWith('rc://*/tw/dict/bible/')) {\n              _context3.next = 55;\n              break;\n            }\n\n            _excerpt4 = (characterIndex > excerptHalfLength ? '…' : '') + TWLink.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < TWLink.length ? '…' : '');\n            addNoticePartial({\n              priority: 798,\n              message: \"Field doesn’t contain expected TW link\",\n              details: \"should start with 'rc://*/tw/dict/bible/'\",\n              fieldName: 'TWLink',\n              rowID: rowID,\n              excerpt: _excerpt4,\n              location: ourRowLocation\n            });\n            _context3.next = 64;\n            break;\n\n          case 55:\n            // it starts correctly\n            bits = TWLink.slice('rc://*/tw/dict/bible/'.length).split('/'); // Get the last two bits of the link path\n            // debugLog(`checkTWL_TSV6DataRow checking ${bookID} ${rowID} TWLink='${TWLink}' got bits=${JSON.stringify(bits)}`);\n\n            if (!(bits[0] !== 'kt' && bits[0] !== 'names' && bits[0] !== 'other')) {\n              _context3.next = 62;\n              break;\n            }\n\n            characterIndex = 'rc://*/tw/dict/bible/'.length;\n            _excerpt5 = (characterIndex > excerptHalfLength ? '…' : '') + TWLink.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < TWLink.length ? '…' : '');\n            addNoticePartial({\n              priority: 797,\n              message: \"Field doesn’t contain proper TW link\",\n              details: \"should be 'kt', 'names', or 'other'\",\n              fieldName: 'TWLink',\n              rowID: rowID,\n              characterIndex: characterIndex,\n              excerpt: _excerpt5,\n              location: ourRowLocation\n            });\n            _context3.next = 64;\n            break;\n\n          case 62:\n            _context3.next = 64;\n            return ourCheckNotesLinksToOutside(rowID, 'TWLink', TWLink, ourRowLocation, linkCheckingOptions);\n\n          case 64:\n            _context3.next = 67;\n            break;\n\n          case 66:\n            // TWLink is empty/missing\n            addNoticePartial({\n              priority: 799,\n              message: \"Missing TWLink field\",\n              fieldName: 'TWLink',\n              rowID: rowID,\n              location: ourRowLocation\n            });\n\n          case 67:\n            // 7 [reference, rowID, tags, quote, occurrence, TWLink]\n            suggestion = \"\".concat(reference, \"\\t\").concat(RIDSuggestion === undefined ? rowID : RIDSuggestion, \"\\t\").concat(tags, \"\\t\").concat(QSuggestion === undefined ? origWords : QSuggestion, \"\\t\").concat(OSuggestion === undefined ? occurrence : OSuggestion, \"\\t\").concat(LSuggestion === undefined ? TWLink : LSuggestion);\n\n            if (suggestion !== line) {\n              drResult.suggestion = suggestion;\n            }\n\n            _context3.next = 74;\n            break;\n\n          case 71:\n            // wrong number of fields in the row\n            // Have a go at getting some of the first fields out of the row\n            _rowID = '????';\n\n            try {\n              _rowID = fields[1];\n            } catch (_unused) {}\n\n            addNoticePartial({\n              priority: 984,\n              message: \"Found wrong number of TSV fields (expected \".concat(NUM_EXPECTED_TWL_TSV_FIELDS, \")\"),\n              details: \"found \".concat(fields.length, \" field\").concat(fields.length === 1 ? '' : 's'),\n              rowID: _rowID,\n              location: ourRowLocation\n            });\n\n          case 74:\n            return _context3.abrupt(\"return\", drResult);\n\n          case 75:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _checkTWL_TSV6DataRow.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/twl-tsv6-row-check.js?");

/***/ }),

/***/ "./src/core/twl-tsv6-table-check.js":
/*!******************************************!*\
  !*** ./src/core/twl-tsv6-table-check.js ***!
  \******************************************/
/*! exports provided: internalCheckTWL_TSV6Table */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"internalCheckTWL_TSV6Table\", function() { return internalCheckTWL_TSV6Table; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _twl_tsv6_row_check__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./twl-tsv6-row-check */ \"./src/core/twl-tsv6-row-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n\n // import { removeDisabledNotices } from './disabled-notices';\n// eslint-disable-next-line no-unused-vars\n\n\nvar TWL_TABLE_VALIDATOR_VERSION_STRING = '0.2.1';\nvar NUM_EXPECTED_TWL_TSV_FIELDS = 6; // so expects 5 tabs per line\n\nvar EXPECTED_TWL_HEADING_LINE = 'Reference\\tID\\tTags\\tOrigWords\\tOccurrence\\tTWLink';\n/**\n *\n * @param {string} languageCode\n * @param {string} repoCode - 'TWL' or 'OBS-TWL'\n * @param {string} bookID\n * @param {string} filename\n * @param {string} tableText\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction internalCheckTWL_TSV6Table(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n  return _internalCheckTWL_TSV6Table.apply(this, arguments);\n} // end of internalCheckTWL_TSV6Table function\n\nfunction _internalCheckTWL_TSV6Table() {\n  _internalCheckTWL_TSV6Table = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, repoCode, bookID, filename, tableText, givenLocation, checkingOptions) {\n    var ourLocation, cutoffPriorityLevel, excerptLength, carResult, addSuccessMessage, addNoticePartial, lowercaseBookID, numChaptersThisBook, lines, lastC, lastV, rowIDListForVerse, uniqueRowListForVerse, numVersesThisChapter, n, fields, _fields, reference, rowID, tags, quote, occurrence, TWLLink, _reference$split, _reference$split2, C, V, drResultObject, _iterator, _step, drNoticeEntry, _iterator2, _step2, checkedRepoName, _iterator3, _step3, checkedFilenameExtension, uniqueID, intC, lastintC, intV, lastintV, _V$split, _V$split2, V1, V2, intV1, intV2, _lastintV, _reference, _C, _V, _rowID, _reference$split3, _reference$split4;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // functionLog(`internalCheckTWL_TSV6Table notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"ATSV addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `TSV addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"ATSV addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `TSV addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(C !== undefined, \"ATSV addNoticePartial: 'C' parameter should be defined\");\n              if (incompleteNoticeObject.C) {//parameterAssert(typeof incompleteNoticeObject.C === 'string', `TSV addNoticePartial: 'C' parameter should be a string not a '${typeof incompleteNoticeObject.C}': ${incompleteNoticeObject.C}`);\n              } // parameterAssert(V !== undefined, \"ATSV addNoticePartial: 'V' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.V) {//parameterAssert(typeof incompleteNoticeObject.V === 'string', `TSV addNoticePartial: 'V' parameter should be a string not a '${typeof incompleteNoticeObject.V}': ${incompleteNoticeObject.V}`);\n              } // parameterAssert(characterIndex !== undefined, \"ATSV addNoticePartial: 'characterIndex' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `TSV addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"ATSV addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `TSV addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"ATSV addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `TSV addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n\n\n              if (incompleteNoticeObject.debugChain) incompleteNoticeObject.debugChain = \"internalCheckTWL_TSV6Table \".concat(incompleteNoticeObject.debugChain);\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_8__[\"aboutToOverwrite\"])('internalCheckTWL_TSV6Table', ['bookID', 'filename', 'repoCode'], incompleteNoticeObject, {\n                bookID: bookID,\n                filename: filename,\n                repoCode: repoCode\n              });\n              carResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                filename: filename,\n                repoCode: repoCode\n              }));\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // functionLog(`internalCheckTWL_TSV6Table success: ${successString}`);\n              carResult.successList.push(successString);\n            };\n\n            /* This function is optimised for checking the entire file, i.e., all rows.\n               It also has the advantage of being able to compare one row with the previous one.\n              bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n              Returns a result object containing a successList and a noticeList\n             */\n            // functionLog(`internalCheckTWL_TSV6Table(${languageCode}, ${repoCode}, ${bookID}, ${tableText.length}, ${givenLocation},${JSON.stringify(checkingOptions)})…`);\n            //parameterAssert(languageCode !== undefined, \"internalCheckTWL_TSV6Table: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `internalCheckTWL_TSV6Table: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode === 'TWL' || repoCode === 'OBS-TWL', `internalCheckTWL_TSV6Table: repoCode expected 'TWL' or 'OBS-TWL' not '${repoCode}'`);\n            //parameterAssert(bookID !== undefined, \"internalCheckTWL_TSV6Table: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `internalCheckTWL_TSV6Table: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(bookID.length === 3, `internalCheckTWL_TSV6Table: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `internalCheckTWL_TSV6Table: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `internalCheckTWL_TSV6Table: '${bookID}' is not a valid USFM book identifier`);\n            //parameterAssert(givenLocation !== undefined, \"internalCheckTWL_TSV6Table: 'givenLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `internalCheckTWL_TSV6Table: 'givenLocation' parameter should be a string not a '${typeof givenLocation}'`);\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n            cutoffPriorityLevel = (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.cutoffPriorityLevel : 0;\n\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (ttcError) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n            // const excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n            // const excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n\n            carResult = {\n              successList: [],\n              noticeList: []\n            };\n            // Main code for internalCheckTWL_TSV6Table\n            lowercaseBookID = bookID.toLowerCase();\n            numChaptersThisBook = 0;\n            if (bookID === 'OBS') numChaptersThisBook = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"NUM_OBS_STORIES\"]; // There’s 50 Open Bible Stories\n            else {\n              //parameterAssert(lowercaseBookID !== 'obs', \"Shouldn’t happen in internalCheckTWL_TSV6Table\");\n              try {\n                numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"chaptersInBook\"](bookID);\n              } catch (_unused) {\n                if (!_books_books__WEBPACK_IMPORTED_MODULE_5__[\"isValidBookID\"](bookID)) // must not be in FRT, BAK, etc.\n                  addNoticePartial({\n                    priority: 747,\n                    message: \"Bad function call: should be given a valid book abbreviation\",\n                    excerpt: bookID,\n                    location: \" (not '\".concat(bookID, \"')\").concat(ourLocation)\n                  });\n              }\n            }\n            lines = tableText.split('\\n'); // debugLog(`  '${location}' has ${lines.length.toLocaleString()} total lines (expecting ${NUM_EXPECTED_TN_FIELDS} fields in each line)`);\n\n            lastC = '', lastV = '';\n            rowIDListForVerse = [], uniqueRowListForVerse = [];\n            numVersesThisChapter = 0;\n            n = 0;\n\n          case 16:\n            if (!(n < lines.length)) {\n              _context.next = 48;\n              break;\n            }\n\n            if (!(n === 0)) {\n              _context.next = 21;\n              break;\n            }\n\n            if (lines[0] === EXPECTED_TWL_HEADING_LINE) addSuccessMessage(\"Checked TSV header \".concat(ourLocation));else addNoticePartial({\n              priority: 988,\n              message: \"Bad TSV header\",\n              details: \"expected '\".concat(EXPECTED_TWL_HEADING_LINE, \"'\"),\n              excerpt: lines[0],\n              lineNumber: 1,\n              location: ourLocation\n            });\n            _context.next = 45;\n            break;\n\n          case 21:\n            fields = lines[n].split('\\t');\n\n            if (!(fields.length === NUM_EXPECTED_TWL_TSV_FIELDS)) {\n              _context.next = 44;\n              break;\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            _fields = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(fields, 6), reference = _fields[0], rowID = _fields[1], tags = _fields[2], quote = _fields[3], occurrence = _fields[4], TWLLink = _fields[5];\n            _reference$split = reference.split(':'), _reference$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_reference$split, 2), C = _reference$split2[0], V = _reference$split2[1]; // Use the row check to do most basic checks\n\n            _context.next = 27;\n            return Object(_twl_tsv6_row_check__WEBPACK_IMPORTED_MODULE_7__[\"checkTWL_TSV6DataRow\"])(username, languageCode, repoCode, lines[n], bookID, C, V, ourLocation, checkingOptions);\n\n          case 27:\n            drResultObject = _context.sent;\n            // Choose only ONE of the following\n            // This is the fast way of append the results from this field\n            // result.noticeList = result.noticeList.concat(firstResult.noticeList);\n            // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n            //  process results line by line\n            _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.noticeList);\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                drNoticeEntry = _step.value;\n                if (drNoticeEntry.extra) // it must be an indirect check on a TA or TW article from a TN2 check\n                  carResult.noticeList.push(drNoticeEntry); // Just copy the complete notice as is\n                else if (drNoticeEntry.priority !== 931) // We already caught Missing row ID\n                  addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, drNoticeEntry), {}, {\n                    lineNumber: n + 1\n                  }));\n              } // The following is needed coz we might be checking the linked TA and/or TW articles\n\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            if (drResultObject.checkedFileCount && drResultObject.checkedFileCount > 0) if (typeof carResult.checkedFileCount === 'number') carResult.checkedFileCount += drResultObject.checkedFileCount;else carResult.checkedFileCount = drResultObject.checkedFileCount;\n            if (drResultObject.checkedFilesizes && drResultObject.checkedFilesizes > 0) if (typeof carResult.checkedFilesizes === 'number') carResult.checkedFilesizes += drResultObject.checkedFilesizes;else carResult.checkedFilesizes = drResultObject.checkedFilesizes;\n\n            if (drResultObject.checkedRepoNames && drResultObject.checkedRepoNames.length > 0) {\n              _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.checkedRepoNames);\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  checkedRepoName = _step2.value;\n\n                  try {\n                    if (carResult.checkedRepoNames.indexOf(checkedRepoName) < 0) carResult.checkedRepoNames.push(checkedRepoName);\n                  } catch (_unused2) {\n                    carResult.checkedRepoNames = [checkedRepoName];\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n\n            if (drResultObject.checkedFilenameExtensions && drResultObject.checkedFilenameExtensions.length > 0) {\n              _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(drResultObject.checkedFilenameExtensions);\n\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  checkedFilenameExtension = _step3.value;\n\n                  try {\n                    if (carResult.checkedFilenameExtensions.indexOf(checkedFilenameExtension) < 0) carResult.checkedFilenameExtensions.push(checkedFilenameExtension);\n                  } catch (_unused3) {\n                    carResult.checkedFilenameExtensions = [checkedFilenameExtension];\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            } // if (ttResult.checkedFilenameExtensions) debugLog(\"ttResult\", JSON.stringify(ttResult));\n            // So here we only have to check against the previous and next fields for out-of-order problems and duplicate problems\n\n\n            if (C !== lastC || V !== lastV) {\n              rowIDListForVerse = []; // ID's only need to be unique within each verse\n\n              uniqueRowListForVerse = []; // Same for these\n            } // TODO: Check if we need this at all (even though tC 3.0 can’t display these \"duplicate\" notes)\n            // Check for duplicate notes\n\n\n            uniqueID = C + V + quote + occurrence; // This combination should not be repeated\n            // if (uniqueRowListForVerse.includes(uniqueID))\n            //     addNoticePartial({ priority: 880, C, V, message: `Duplicate note`, rowID, lineNumber: n + 1, location: ourLocation });\n            // if (uniqueRowListForVerse.includes(uniqueID))\n            //     addNoticePartial({ priority: 80, C, V, message: `Note: tC 3.0 won’t display duplicate note`, rowID, lineNumber: n + 1, location: ourLocation });\n\n            uniqueRowListForVerse.push(uniqueID);\n\n            if (C) {\n              if (C === 'front') {} else if (/^\\d+$/.test(C)) {\n                intC = Number(C);\n                if (C !== lastC) if (lowercaseBookID === 'obs') numVersesThisChapter = _defaults__WEBPACK_IMPORTED_MODULE_6__[\"MAX_OBS_FRAMES\"]; // Set to maximum expected number of frames\n                else numVersesThisChapter = _books_books__WEBPACK_IMPORTED_MODULE_5__[\"versesInChapter\"](lowercaseBookID, intC);\n                if (intC === 0) addNoticePartial({\n                  priority: 551,\n                  C: C,\n                  V: V,\n                  message: \"Invalid zero chapter number\",\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n                if (intC > numChaptersThisBook) addNoticePartial({\n                  priority: 737,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large chapter number\",\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastC)) {\n                  lastintC = Number(lastC);\n                  if (intC < lastintC) addNoticePartial({\n                    priority: 736,\n                    C: C,\n                    V: V,\n                    message: \"Receding chapter number\",\n                    details: \"'\".concat(C, \"' after '\").concat(lastC, \"'\"),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    location: ourLocation\n                  });else if (intC > lastintC + 1) addNoticePartial({\n                    priority: 735,\n                    C: C,\n                    V: V,\n                    message: \"Advancing chapter number\",\n                    details: \"'\".concat(C, \"' after '\").concat(lastC, \"'\").rowID,\n                    lineNumber: n + 1,\n                    location: ourLocation\n                  });\n                }\n              } else addNoticePartial({\n                priority: 734,\n                C: C,\n                V: V,\n                message: \"Bad chapter number\",\n                rowID: rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n            } else addNoticePartial({\n              priority: 739,\n              C: C,\n              V: V,\n              message: \"Missing chapter number\",\n              rowID: rowID,\n              lineNumber: n + 1,\n              location: \" after \".concat(lastC, \":\").concat(V).concat(ourLocation)\n            });\n\n            if (V) {\n              if (V === 'intro') {} else if (/^\\d+$/.test(V)) {\n                intV = Number(V);\n                if (intV === 0 && bookID !== 'PSA') // Psalms have \\d titles\n                  addNoticePartial({\n                    priority: 552,\n                    C: C,\n                    V: V,\n                    message: \"Invalid zero verse number\",\n                    details: \"for chapter \".concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  });\n                if (intV > numVersesThisChapter) addNoticePartial({\n                  priority: 734,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large verse number\",\n                  details: \"for chapter \".concat(C),\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastV)) {\n                  lastintV = Number(lastV);\n                  if (C === lastC && intV < lastintV) addNoticePartial({\n                    priority: 733,\n                    C: C,\n                    V: V,\n                    message: \"Receding verse number\",\n                    details: \"'\".concat(V, \"' after '\").concat(lastV, \" for chapter \").concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  }); // else if (intV > lastintV + 1)\n                  //   addNoticePartial({priority:556, `Skipped verses with '${V}' verse number after '${lastV}'${withString}`);\n                }\n              } else if (/^[-\\d]+$/.test(V)) {\n                // all digits and hyphen, i.e., a verse range\n                _V$split = V.split('-'), _V$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_V$split, 2), V1 = _V$split2[0], V2 = _V$split2[1];\n                intV1 = Number(V1), intV2 = Number(V2);\n                if (intV1 >= intV2) // in the wrong order\n                  addNoticePartial({\n                    priority: 732,\n                    C: C,\n                    V: V,\n                    message: \"Verse range in wrong order\",\n                    details: \"detected \".concat(intV1, \" before \").concat(intV2),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  });\n                if (intV2 > numVersesThisChapter) addNoticePartial({\n                  priority: 734,\n                  C: C,\n                  V: V,\n                  message: \"Invalid large verse number\",\n                  details: \"for chapter \".concat(C),\n                  rowID: rowID,\n                  lineNumber: n + 1,\n                  excerpt: reference,\n                  location: ourLocation\n                });\n\n                if (/^\\d+$/.test(lastV)) {\n                  _lastintV = Number(lastV);\n                  if (C === lastC && intV1 < _lastintV) addNoticePartial({\n                    priority: 733,\n                    C: C,\n                    V: V,\n                    message: \"Receding verse number\",\n                    details: \"'\".concat(V, \"' after '\").concat(lastV, \" for chapter \").concat(C),\n                    rowID: rowID,\n                    lineNumber: n + 1,\n                    excerpt: reference,\n                    location: ourLocation\n                  }); // else if (intV > lastintV + 1)\n                  //   addNoticePartial({priority:556, `Skipped verses with '${V}' verse number after '${lastV}'${withString}`);\n                }\n              } else addNoticePartial({\n                priority: 738,\n                C: C,\n                V: V,\n                message: \"Bad verse number\",\n                rowID: rowID,\n                lineNumber: n + 1,\n                excerpt: reference,\n                location: ourLocation\n              });\n            } else addNoticePartial({\n              priority: 790,\n              C: C,\n              V: V,\n              message: \"Missing verse number\",\n              rowID: rowID,\n              lineNumber: n + 1,\n              excerpt: reference,\n              location: \" after \".concat(C, \":\").concat(lastV).concat(ourLocation)\n            });\n\n            if (rowID) {\n              if (rowIDListForVerse.includes(rowID)) addNoticePartial({\n                priority: 831,\n                C: C,\n                V: V,\n                message: \"Duplicate '\".concat(rowID, \"' ID\"),\n                fieldName: 'ID',\n                rowID: rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n              rowIDListForVerse.push(rowID);\n            } else addNoticePartial({\n              priority: 932,\n              C: C,\n              V: V,\n              message: \"Missing row ID\",\n              fieldName: 'ID',\n              lineNumber: n + 1,\n              location: ourLocation\n            });\n\n            lastC = C;\n            lastV = V;\n            _context.next = 45;\n            break;\n\n          case 44:\n            // wrong number of fields in the row\n            // if (n === lines.length - 1) // it’s the last line\n            //     userLog(`  Line ${n}: Has ${fields.length} field(s) instead of ${NUM_EXPECTED_TN_FIELDS}: ${EXPECTED_TWL_HEADING_LINE.replace(/\\t/g, ', ')}`);\n            // else\n            if (n !== lines.length - 1) {\n              // it’s not the last line\n              // Have a go at getting some of the first fields out of the line\n              _reference = '?:?', _C = '?', _V = '?', _rowID = '????';\n\n              try {\n                _reference = fields[0];\n              } catch (_unused4) {}\n\n              try {\n                _rowID = fields[1];\n              } catch (_unused5) {}\n\n              try {\n                _reference$split3 = _reference.split(':');\n                _reference$split4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_reference$split3, 2);\n                _C = _reference$split4[0];\n                _V = _reference$split4[1];\n              } catch (_unused6) {}\n\n              addNoticePartial({\n                priority: 983,\n                message: \"Wrong number of tabbed fields (expected \".concat(NUM_EXPECTED_TWL_TSV_FIELDS, \")\"),\n                excerpt: \"Found \".concat(fields.length, \" field\").concat(fields.length === 1 ? '' : 's'),\n                C: _C,\n                V: _V,\n                rowID: _rowID,\n                lineNumber: n + 1,\n                location: ourLocation\n              });\n            }\n\n          case 45:\n            n++;\n            _context.next = 16;\n            break;\n\n          case 48:\n            // if (!checkingOptions?.suppressNoticeDisablingFlag) {\n            //     // functionLog(`internalCheckTWL_TSV6Table: calling removeDisabledNotices(${carResult.noticeList.length}) having ${JSON.stringify(checkingOptions)}`);\n            //     carResult.noticeList = removeDisabledNotices(carResult.noticeList);\n            // }\n            if (cutoffPriorityLevel < 20 && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag)) addNoticePartial({\n              priority: 20,\n              message: \"Note that 'disableAllLinkFetchingFlag' was set so link targets were not checked\",\n              location: ourLocation\n            });\n            addSuccessMessage(\"Checked all \".concat((lines.length - 1).toLocaleString(), \" data line\").concat(lines.length - 1 === 1 ? '' : 's').concat(ourLocation));\n            if (carResult.noticeList.length) addSuccessMessage(\"internalCheckTWL_TSV6Table v\".concat(TWL_TABLE_VALIDATOR_VERSION_STRING, \" finished with \").concat(carResult.noticeList.length ? carResult.noticeList.length.toLocaleString() : \"zero\", \" notice\").concat(carResult.noticeList.length === 1 ? '' : 's'));else addSuccessMessage(\"No errors or warnings found by internalCheckTWL_TSV6Table v\".concat(TWL_TABLE_VALIDATOR_VERSION_STRING)); // debugLog(`  internalCheckTWL_TSV6Table returning with ${result.successList.length.toLocaleString()} success(es), ${result.noticeList.length.toLocaleString()} notice(s).`);\n            // debugLog(\"internalCheckTWL_TSV6Table result is\", JSON.stringify(carResult));\n\n            return _context.abrupt(\"return\", carResult);\n\n          case 52:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _internalCheckTWL_TSV6Table.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/twl-tsv6-table-check.js?");

/***/ }),

/***/ "./src/core/usfm-js-check.js":
/*!***********************************!*\
  !*** ./src/core/usfm-js-check.js ***!
  \***********************************/
/*! exports provided: runUsfmJsCheck, checkUSFMToJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"runUsfmJsCheck\", function() { return runUsfmJsCheck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkUSFMToJSON\", function() { return checkUSFMToJSON; });\n/* harmony import */ var usfm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! usfm-js */ \"./node_modules/usfm-js/lib/index.js\");\n/* harmony import */ var usfm_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(usfm_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n // eslint-disable-next-line no-unused-vars\n\n // eslint-disable-next-line no-unused-vars\n\n\nfunction runUsfmJsCheck(fileText, convertOptions) {\n  // Runs the USFM-JS converter as a check\n  //  which can be quite time-consuming on large, complex USFM files\n  // debugLog(\"Running USFM-JS converter check (can take quite a while for a large book)…\");\n  var jsonResult = Object(usfm_js__WEBPACK_IMPORTED_MODULE_0__[\"toJSON\"])(fileText, convertOptions);\n  var jsonKeys = Object.keys(jsonResult); // Expect 'headers', 'chapters'\n\n  var numJSONkeys = jsonKeys.length; // debugLog(`  Finished USFM-JS converter check with ${numJSONkeys} json key(s)`);\n  // debugLog(`  jsonResult: ${JSON.stringify(jsonResult)}`)\n  // NOTE: We don’t know how to get the errors out yet\n\n  return {\n    isValidUSFM: numJSONkeys >= 2,\n    returnedJSON: jsonResult\n  }; // Expect 'headers', 'chapters'\n} // end of runUsfmJsCheck function\n\nfunction checkUSFMToJSON(bookID, filename, givenText, givenLocation, checkingOptions) {\n  /*\n  This function is only used for the demonstration pages -- not for the core!\n   bookID is a three-character UPPERCASE USFM book identifier.\n       filename parameter can be an empty string if we don’t have one.\n    Returns a result object containing a successList and a noticeList\n   */\n  // functionLog(`checkUSFMToJSON(${givenText.length.toLocaleString()} chars, '${givenLocation}')…`);\n  //parameterAssert(bookID !== undefined, \"checkUSFMToJSON: 'bookID' parameter should be defined\");\n  //parameterAssert(typeof bookID === 'string', `checkUSFMToJSON: 'bookID' parameter should be a string not a '${typeof bookID}': ${bookID}`);\n  //parameterAssert(bookID.length === 3, `checkUSFMToJSON: 'bookID' parameter should be three characters long not ${bookID.length}`);\n  //parameterAssert(bookID.toUpperCase() === bookID, `checkUSFMToJSON: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n  //parameterAssert(books.isValidBookID(bookID), `checkUSFMToJSON: '${bookID}' is not a valid USFM book identifier`);\n  //parameterAssert(filename !== undefined, \"checkUSFMToJSON: 'filename' parameter should be defined\");\n  //parameterAssert(typeof filename === 'string', `checkUSFMToJSON: 'filename' parameter should be a string not a '${typeof filename}': ${filename}`);\n  //parameterAssert(givenText !== undefined, \"checkUSFMToJSON: 'givenText' parameter should be defined\");\n  //parameterAssert(typeof givenText === 'string', `checkUSFMToJSON: 'givenText' parameter should be a string not a '${typeof givenText}': ${givenText}`);\n  //parameterAssert(givenLocation !== undefined, \"checkUSFMToJSON: 'givenRowLocation' parameter should be defined\");\n  //parameterAssert(typeof givenLocation === 'string', `checkUSFMToJSON: 'givenRowLocation' parameter should be a string not a '${typeof givenLocation}'`);\n  var ourLocation = givenLocation;\n  if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation); // if (filename) ourLocation = ` in ${filename}${ourLocation}`;\n\n  var cutjResult = {\n    successList: [],\n    noticeList: []\n  };\n\n  function addSuccessMessage(successString) {\n    // functionLog(`checkUSFMToJSON success: ${successString}`);\n    cutjResult.successList.push(successString);\n  }\n\n  function addNoticePartial(_ref) {\n    var priority = _ref.priority,\n        message = _ref.message,\n        lineNumber = _ref.lineNumber,\n        characterIndex = _ref.characterIndex,\n        excerpt = _ref.excerpt,\n        location = _ref.location;\n\n    /**\n    * @description - adds a new notice entry, adding bookID,C,V to the given fields\n    * @param {number} priority - notice priority from 1 (lowest) to 999 (highest)\n    * @param {string} message - the text of the notice message\n    * @param {number} characterIndex - where the issue occurs in the line\n    * @param {string} excerpt - short excerpt from the line centred on the problem (if available)\n    * @param {string} location - description of where the issue is located\n    */\n    // functionLog(`checkUSFMToJSON notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n    //parameterAssert(priority !== undefined, \"cUSFMjs addNoticePartial: 'priority' parameter should be defined\");\n    //parameterAssert(typeof priority === 'number', `cUSFMjs addNoticePartial: 'priority' parameter should be a number not a '${typeof priority}': ${priority}`);\n    //parameterAssert(message !== undefined, \"cUSFMjs addNoticePartial: 'message' parameter should be defined\");\n    //parameterAssert(typeof message === 'string', `cUSFMjs addNoticePartial: 'message' parameter should be a string not a '${typeof message}': ${message}`);\n    // parameterAssert(characterIndex !== undefined, \"cUSFMjs addNoticePartial: 'characterIndex' parameter should be defined\");\n    if (characterIndex) {\n      Object(_utilities__WEBPACK_IMPORTED_MODULE_2__[\"parameterAssert\"])(typeof characterIndex === 'number', \"cUSFMjs addNoticePartial: 'characterIndex' parameter should be a number not a '\".concat(typeof characterIndex, \"': \").concat(characterIndex));\n    } // parameterAssert(excerpt !== undefined, \"cUSFMjs addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n    if (excerpt) {\n      Object(_utilities__WEBPACK_IMPORTED_MODULE_2__[\"parameterAssert\"])(typeof excerpt === 'string', \"cUSFMjs addNoticePartial: 'excerpt' parameter should be a string not a '\".concat(typeof excerpt, \"': \").concat(excerpt));\n    } //parameterAssert(location !== undefined, \"cUSFMjs addNoticePartial: 'location' parameter should be defined\");\n    //parameterAssert(typeof location === 'string', `cUSFMjs addNoticePartial: 'location' parameter should be a string not a '${typeof location}': ${location}`);\n\n\n    cutjResult.noticeList.push({\n      priority: priority,\n      message: message,\n      bookID: bookID,\n      lineNumber: lineNumber,\n      characterIndex: characterIndex,\n      excerpt: excerpt,\n      location: location\n    });\n  } // Set your options here -- change values or comment out lines\n\n\n  var convertOptions = {\n    'chunk': false,\n    // true: returns headers/chapters/verses (seems weird???); false: returns headers/chapters only.\n    //'content-source': ourLocation, // Seems to be included in every sub-object -- wasted space ???\n    'convertToInt': []\n  };\n  var convertCheckResult = runUsfmJsCheck(givenText, convertOptions); // NOTE: We haven’t figured out how to get ERRORS out of this parser yet\n\n  if (!convertCheckResult.isValidUSFM) addNoticePartial({\n    priority: 943,\n    message: \"USFM3 toJSON Check doesn\\u2019t pass\",\n    location: ourLocation\n  });\n  addSuccessMessage(\"Checked USFM-JS\"); // debugLog(`  checkUSFMToJSON returning with ${result.successList.length.toLocaleString()} success(es) and ${result.noticeList.length.toLocaleString()} notice(s).`);\n  // functionLog(`checkUSFMToJSON result is ${JSON.stringify(result)}`);\n\n  return cutjResult;\n} // end of checkUSFMToJSON function\n\n//# sourceURL=webpack:///./src/core/usfm-js-check.js?");

/***/ }),

/***/ "./src/core/usfm-text-check.js":
/*!*************************************!*\
  !*** ./src/core/usfm-text-check.js ***!
  \*************************************/
/*! exports provided: checkUSFMText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkUSFMText\", function() { return checkUSFMText; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./text-handling-functions */ \"./src/core/text-handling-functions.js\");\n/* harmony import */ var _books_books__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _getApi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./getApi */ \"./src/core/getApi.js\");\n/* harmony import */ var _field_text_check__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\");\n/* harmony import */ var _file_text_check__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./file-text-check */ \"./src/core/file-text-check.js\");\n/* harmony import */ var _strongs_field_check__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./strongs-field-check */ \"./src/core/strongs-field-check.js\");\n/* harmony import */ var _usfm_js_check__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./usfm-js-check */ \"./src/core/usfm-js-check.js\");\n/* harmony import */ var _BCS_usfm_grammar_check__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./BCS-usfm-grammar-check */ \"./src/core/BCS-usfm-grammar-check.js\");\n/* harmony import */ var _notes_links_check__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./notes-links-check */ \"./src/core/notes-links-check.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n/* harmony import */ var _disabled_notices__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./disabled-notices */ \"./src/core/disabled-notices.js\");\n\n\n\n\n\n// eslint-disable-next-line no-unused-vars\n\n\n\n\n\n\n // and this may call checkLexiconFileContents()\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n\n // const USFM_VALIDATOR_VERSION_STRING = '0.10.16';\n\nvar VALID_LINE_START_CHARACTERS = \"([\\u201C\\u2018\\u2014\"; // Last one is em-dash — '{' gets added later for STs\n// See http://ubsicap.github.io/usfm/master/index.html\n// const COMPULSORY_MARKERS = ['id', 'ide']; // These are specifically checked for by the code near the start of mainUSFMCheck()\n\nvar EXPECTED_MARKERS_LIST = ['usfm', 'mt1']; // The check also allows for removal of the final '1'\n\nvar EXPECTED_BIBLE_BOOK_MARKERS_LIST = ['h', 'toc1', 'toc2', 'toc3'];\nvar EXPECTED_PERIPHERAL_BOOK_MARKER_LIST = ['periph'];\nvar INTRO_LINE_START_MARKER_LIST = ['id', 'usfm', 'ide', 'h', 'toc1', 'toc2', 'toc3', 'mt', 'mt1', 'mt2', 'mte', 'mte1', 'mte2', 'imt', 'imt1', 'imt2', 'is', 'is1', 'is2', 'ip', 'ipi', 'im', 'imi', 'ipq', 'imq', 'ipr', 'iq', 'iq1', 'iq2', 'ili', 'ili1', 'ili2', 'iot', 'io', 'io1', 'io2', 'iex', 'imte', 'imte1', 'imte2'];\nvar CV_MARKERS_LIST = ['c', 'v', 'ca', 'va'];\nvar HEADING_TYPE_MARKERS_LIST = [// expected to contain text on the same line\n's', 's1', 's2', 's3', 's4', 'sr', 'ms', 'ms1', 'mr', 'r', 'd', 'rem', 'sp', 'cl', 'sd', 'sd1', 'sd2', 'pr', 'qa', 'qc', 'qd', 'qr', 'cls', 'pmo', 'pmc', 'pmr', 'pc', 'periph'];\nvar PARAGRAPH_MARKERS_LIST = ['p', 'q', 'q1', 'q2', 'q3', 'q4', 'qm', 'qm1', 'qm2', 'qm3', 'qm4', 'm', 'mi', 'nb', // well, it has text sort of like a paragraph marker\n'pi', 'pi1', 'pi2', 'pi3', 'pi4', 'li', 'li1', 'li2', 'li3', 'li4', 'lim', 'lim1', 'lim2', 'lim3', 'lim4', 'lh', 'lf', 'po', 'pm', 'ph', 'ph1', 'ph2', 'ph3', 'ph4', 'tr'];\nvar MAIN_NOTE_MARKERS_LIST = ['f', 'x'];\nvar SPECIAL_MARKERS_LIST = ['w', 'zaln-s', 'k-s', // NOTE that we have \\w in TWO places\n'qt-s', 'qt1-s', 'qt2-s', 'lit'];\nvar MILESTONE_MARKERS_LIST = ['ts\\\\*', 'ts-s', 'ts-e', 'k-e\\\\*']; // Is this a good way to handle it???\n\nvar TEXT_MARKERS_WITHOUT_CONTENT_LIST = ['b', 'ib', 'ie'];\nvar MARKERS_WITHOUT_CONTENT_LIST = [].concat(TEXT_MARKERS_WITHOUT_CONTENT_LIST).concat(MILESTONE_MARKERS_LIST);\nvar ALLOWED_LINE_START_MARKERS_LIST = [].concat(INTRO_LINE_START_MARKER_LIST).concat(HEADING_TYPE_MARKERS_LIST).concat(CV_MARKERS_LIST).concat(PARAGRAPH_MARKERS_LIST).concat(MAIN_NOTE_MARKERS_LIST).concat(SPECIAL_MARKERS_LIST).concat(MARKERS_WITHOUT_CONTENT_LIST).concat(MILESTONE_MARKERS_LIST).concat(['qs']);\nvar DEPRECATED_MARKERS_LIST = ['h1', 'h2', 'h3', 'h4', 'pr', 'ph', 'ph1', 'ph2', 'ph3', 'ph4', 'addpn', 'pro', 'fdc', 'xdc'];\nvar MARKERS_WITH_COMPULSORY_CONTENT_LIST = [].concat(INTRO_LINE_START_MARKER_LIST).concat(HEADING_TYPE_MARKERS_LIST).concat(CV_MARKERS_LIST).concat(MAIN_NOTE_MARKERS_LIST).concat(SPECIAL_MARKERS_LIST);\nvar FOOTNOTE_INTERNAL_MARKERS_LIST = ['fr', 'fq', 'fqa', 'fk', 'fl', 'fw', 'fp', 'fv', 'ft', 'fdc', 'fm', 'xt'];\nvar XREF_INTERNAL_MARKERS_LIST = ['xo', 'xk', 'xq', 'xt', 'xta', 'xop', 'xot', 'xnt', 'xdc', 'rq'];\nvar SIMPLE_CHARACTER_MARKERS_LIST = ['add', 'bk', 'dc', 'k', 'nd', 'ord', 'pn', 'png', 'addpn', 'qs', 'qt', 'sig', 'sls', 'tl', 'wj', 'ior', 'iqt', // TODO: What/Why was 'rq' in here???\n'em', 'bd', 'it', 'bdit', 'no', 'sc', 'sup', 'ndx', 'rb', 'pro', 'wg', 'wh', 'wa', 'litl', 'lik', 'liv', 'liv1', 'liv2', 'liv3', 'liv4'];\nvar CHARACTER_MARKERS_LIST = ['fig', 'w'].concat(SIMPLE_CHARACTER_MARKERS_LIST); // NOTE that we have \\w in TWO places\n\nvar SIMPLE_INTERNAL_MARKERS_LIST = [SIMPLE_CHARACTER_MARKERS_LIST].concat().concat(FOOTNOTE_INTERNAL_MARKERS_LIST).concat(XREF_INTERNAL_MARKERS_LIST); // eslint-disable-next-line no-unused-vars\n\nvar CANONICAL_TEXT_MARKERS_LIST = ['d'].concat(PARAGRAPH_MARKERS_LIST).concat(CHARACTER_MARKERS_LIST); // eslint-disable-next-line no-unused-vars\n\nvar ANY_TEXT_MARKERS_LIST = [].concat(INTRO_LINE_START_MARKER_LIST).concat(HEADING_TYPE_MARKERS_LIST).concat(PARAGRAPH_MARKERS_LIST).concat(CHARACTER_MARKERS_LIST).concat(MAIN_NOTE_MARKERS_LIST).concat(SPECIAL_MARKERS_LIST);\nvar MATCHED_CHARACTER_FORMATTING_LINE_PAIRS_LIST = [// These ones would normally be on the same line in uW USFM files\n['add', 'add*'], ['addpn', 'addpn*'], ['bd', 'bd*'], ['bdit', 'bdit*'], ['bk', 'bk*'], ['dc', 'dc*'], ['em', 'em*'], ['fig', 'fig*'], ['ior', 'ior*'], ['iqt', 'iqt*'], ['it', 'it*'], ['k', 'k*'], ['litl', 'litl*'], ['lik', 'lik*'], ['liv', 'liv*'], ['liv1', 'liv1*'], ['liv2', 'liv2*'], ['liv3', 'liv3*'], ['liv4', 'liv4*'], ['nd', 'nd*'], ['ndx', 'ndx*'], ['no', 'no*'], ['ord', 'ord*'], ['pn', 'pn*'], ['png', 'png*'], ['pro', 'pro*'], ['qt', 'qt*'], ['rb', 'rb*'], ['sc', 'sc*'], ['sig', 'sig*'], ['sls', 'sls*'], ['sup', 'sup*'], ['tl', 'tl*'], ['w', 'w*'], // Note that we also have \\+w and \\+w* in our files\n['wa', 'wa*'], ['wg', 'wg*'], ['wh', 'wh*'], ['wj', 'wj*'], ['ca', 'ca*'], ['va', 'va*'], ['f', 'f*'], ['x', 'x*']];\nvar MATCHED_CHARACTER_FORMATTING_FILE_PAIRS_LIST = // These ones would not necessarily be on the same line\nMATCHED_CHARACTER_FORMATTING_LINE_PAIRS_LIST;\n/*    [\n        ['add', 'add*'], ['addpn', 'addpn*'],\n        ['bd', 'bd*'], ['bdit', 'bdit*'],\n        ['bk', 'bk*'],\n        ['dc', 'dc*'],\n        ['em', 'em*'],\n        ['fig', 'fig*'],\n        ['ior', 'ior*'],\n        ['iqt', 'iqt*'],\n        ['it', 'it*'],\n        ['k', 'k*'],\n        ['litl', 'litl*'],\n        ['lik', 'lik*'],\n        ['liv', 'liv*'], ['liv1', 'liv1*'], ['liv2', 'liv2*'], ['liv3', 'liv3*'], ['liv4', 'liv4*'],\n        ['nd', 'nd*'], ['ndx', 'ndx*'],\n        ['no', 'no*'],\n        ['ord', 'ord*'],\n        ['pn', 'pn*'], ['png', 'png*'],\n        ['pro', 'pro*'],\n        ['qt', 'qt*'],\n        ['rb', 'rb*'],\n        ['sc', 'sc*'],\n        ['sig', 'sig*'],\n        ['sls', 'sls*'],\n        ['sup', 'sup*'],\n        ['tl', 'tl*'],\n        ['w', 'w*'], // Note that we also have \\+w and \\+w* in our files\n        ['wa', 'wa*'], ['wg', 'wg*'], ['wh', 'wh*'],\n        ['wj', 'wj*'],\n\n        ['ca', 'ca*'], ['va', 'va*'],\n\n        ['f', 'f*'], ['x', 'x*'],\n    ];*/\n\nvar W_REGEX = new RegExp('\\\\\\\\\\\\+?w ([^\\\\\\\\]+?)\\\\\\\\\\\\+?w\\\\*', 'g'); // \\w ...\\w* or \\+w ...\\+w*\n// Note: lemma field can be blank in UHB\n\nvar W_FIELDS_REGEX = new RegExp('\\\\\\\\\\\\+?w ([^|]+?)\\\\|lemma=\"([^\"]*?)\" strong=\"([^\"]+?)\" x-morph=\"([^\"]+?)\"', 'g'); // in \\w or \\+w\n\nvar ZALN_S_REGEX = new RegExp('\\\\\\\\zaln-s (.+?)\\\\\\\\\\\\*', 'g');\nvar KS_REGEX = new RegExp('\\\\\\\\k-s (.+?)\\\\\\\\\\\\*', 'g');\nvar ATTRIBUTE_REGEX = new RegExp('[ |]([^ |]+?)=\"([^\"]*?)\"', 'g'); // TODO: Are one or two of these checks superfluous ???\n// See https://codepoints.net/hebrew for a list of the Unicode chars in this block\n// Only shin/sin consonant should come before a sin/shin dot\n\nvar BAD_HEBREW_SIN_SHIN_DOT_REGEX = new RegExp(\"[^\\\\u05E9][\\\\u05C1\\\\u05C2]\", 'g'); // Only certain consonants should come before a dagesh dot -- Unicode char is also used for mapiq\n\nvar BAD_HEBREW_DAGESH_MAPIQ_REGEX = new RegExp(\"[^\\\\u05C1\\\\u05C2\\u05D0\\u05D1\\u05D2\\u05D3\\u05D4\\u05D5\\u05D6\\u05D7\\u05D8\\u05D9\\u05DB\\u05DA\\u05DC\\u05DE\\u05E0\\u05E1\\u05E4\\u05E3\\u05E6\\u05E7\\u05E8\\u05EA]\\\\u05BC\", 'g'); // includes shin/sin dots and some final consonants\n// Hebrew vowels should never come before a dagesh\n\nvar BAD_HEBREW_VOWEL_DAGESH_REGEX = new RegExp(\"[\\\\u05B4-\\\\u05BB]\\\\u05BC\", 'g'); // Hebrew cantillation marks should never come before a dagesh\n\nvar BAD_HEBREW_CANTILLATION_DAGESH_REGEX = new RegExp(\"[\\\\u0591-\\\\u05AF]\\\\u05BC\", 'g'); // Hebrew cantillation marks should never come before a vowel\n\nvar BAD_HEBREW_CANTILLATION_VOWEL_REGEX = new RegExp(\"[\\\\u0591-\\\\u05AF][\\\\u05B4-\\\\u05BB]\", 'g'); // Hebrew final consonants should only come near the end of the word\n\nvar BAD_HEBREW_FINAL_CONSONANT_REGEX = new RegExp(\"[\\u05DA\\u05DD\\u05DF\\u05E3\\u05E5][^ |\\\"\\u05BE\\\\u0592\\\\u0599\\\\u05A9\\\\u05AE\\\\u05B0\\\\u05B8\\\\u05BC]\", 'g'); // Includes maqaf, sheva, dagesh, and just a few vowels and accents\n\n/**\n *\n * @param {string} languageCode\n * @param {string} repoCode -- e.g., 'UHB', 'UGNT', 'LT' or 'ST'\n * @param {string} bookID\n * @param {string} filename\n * @param {string} givenText\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkUSFMText(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n  return _checkUSFMText.apply(this, arguments);\n} // end of checkUSFMText function\n\nfunction _checkUSFMText() {\n  _checkUSFMText = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee10(username, languageCode, repoCode, bookID, filename, givenText, givenLocation, checkingOptions) {\n    var ourLocation, excerptLength, excerptHalfLength, excerptHalfLengthPlus, lowercaseBookID, validLineStartCharacters, usfmResultObject, addSuccessMessage, addNoticePartial, ourRunBCSGrammarCheck, CVCheck, ourCheckTextField, ourBasicFileChecks, checkUSFMFileContents, checkUSFMLineText, checkUSFMLineAttributes, _checkUSFMLineAttributes, checkUSFMLineContents, _checkUSFMLineContents, ourCheckNotesLinksToOutside, _ourCheckNotesLinksToOutside, mainUSFMCheck, _mainUSFMCheck, allResults, numChapters, kB;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _mainUSFMCheck = function _mainUSFMCheck3() {\n              _mainUSFMCheck = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee9(bookID, filename, givenText, location) {\n                var ourLocation, numChaptersThisBook, findStartMarker, lines, haveUSFM3Line, ideIndex, lastC, lastV, C, V, lastIntC, lastIntV, lastMarker, lastRest, markerSet, n, line, characterIndex, iy, excerpt, marker, rest, intC, intV, vIndex, bits, firstV, secondV, intFirstV, intSecondV, restRest, thisLength, _excerpt15;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        findStartMarker = function _findStartMarker(C, V, lineNumber, USFMline) {\n                          // Returns the USFM marker at the start of the line\n                          //  (without the leading backslash but including full self-closing milestones)\n                          Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"logicAssert\"])(USFMline && USFMline[0] === '\\\\', \"Programming error in findStartMarker(\".concat(C, \":\").concat(V, \", \").concat(lineNumber, \", \").concat(USFMline, \")\"));\n                          var foundMarker = '';\n\n                          for (var characterIndex = 1; characterIndex < USFMline.length; characterIndex++) {\n                            var char = USFMline[characterIndex];\n                            if (char === ' ') break; // Cope with self-closing milestones like \\k-s\\*\n\n                            if (char === '\\\\' && (characterIndex === USFMline.length - 1 || USFMline[characterIndex + 1] !== '*')) {\n                              var excerpt = USFMline.slice(0, excerptLength) + (USFMline.length > excerptLength ? '…' : '');\n                              addNoticePartial({\n                                priority: 603,\n                                message: \"USFM marker doesn’t end with space\",\n                                C: C,\n                                V: V,\n                                lineNumber: lineNumber,\n                                characterIndex: characterIndex,\n                                excerpt: excerpt,\n                                location: ourLocation\n                              });\n                              break;\n                            }\n\n                            foundMarker += char;\n                            if (char === '*') break;\n                          }\n\n                          return foundMarker;\n                        };\n\n                        // functionLog(`checkUSFMText mainUSFMCheck(${bookID}, ${filename}, ${givenText.length}, ${location}) (can take quite a while for a large book)…`);\n                        ourLocation = location;\n                        if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation); // const lowercaseBookID = bookID.toLowerCase();\n                        // eslint-disable-next-line no-unused-vars\n\n                        numChaptersThisBook = 0;\n\n                        try {\n                          Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"logicAssert\"])(lowercaseBookID !== 'obs', \"Shouldn’t happen in usfm-text-check2\");\n                          numChaptersThisBook = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"chaptersInBook\"](bookID);\n                        } catch (_unused6) {\n                          if (!_books_books__WEBPACK_IMPORTED_MODULE_7__[\"isValidBookID\"](bookID)) // must not be in FRT, BAK, etc.\n                            addNoticePartial({\n                              priority: 903,\n                              message: \"Bad function call: should be given a valid book abbreviation\",\n                              excerpt: bookID,\n                              location: ourLocation\n                            });\n                        }\n\n                        lines = givenText.split('\\n'); // debugLog(`  '${ourLocation}' has ${lines.length.toLocaleString()} total lines`);\n\n                        if (lines.length === 0 || !lines[0].startsWith('\\\\id ') || lines[0].length < 7 || !_books_books__WEBPACK_IMPORTED_MODULE_7__[\"isValidBookID\"](lines[0].slice(4, 7))) addNoticePartial({\n                          priority: 994,\n                          message: \"USFM file must start with a valid \\\\id line\",\n                          lineNumber: 1,\n                          location: ourLocation\n                        });\n                        haveUSFM3Line = lines.length > 1 && lines[1] === \"\\\\usfm 3.0\";\n                        ideIndex = haveUSFM3Line ? 2 : 1;\n                        if (lines.length < ideIndex || !lines[ideIndex].startsWith('\\\\ide ') || lines[ideIndex].length < 7) addNoticePartial({\n                          priority: 719,\n                          message: \"USFM file is recommended to have \\\\ide line\",\n                          lineNumber: ideIndex + 1,\n                          location: ourLocation\n                        });else if (!lines[ideIndex].endsWith(' UTF-8')) addNoticePartial({\n                          priority: 619,\n                          message: \"USFM \\\\ide field is recommended to be set to 'UTF-8'\",\n                          lineNumber: ideIndex + 1,\n                          characterIndex: 5,\n                          excerpt: lines[ideIndex],\n                          location: ourLocation\n                        }); // let lastB = '';\n\n                        lastC = '', lastV = '', C = '0', V = '0';\n                        lastIntC = 0, lastIntV = 0; // let numVersesThisChapter = 0;\n\n                        lastMarker = '', lastRest = '';\n                        markerSet = new Set();\n                        n = 1;\n\n                      case 15:\n                        if (!(n <= lines.length)) {\n                          _context9.next = 36;\n                          break;\n                        }\n\n                        line = lines[n - 1];\n                        if (C === '0') V = n.toString(); // debugLog(`line '${line}'${atString}`);\n\n                        if (line) {\n                          _context9.next = 20;\n                          break;\n                        }\n\n                        return _context9.abrupt(\"continue\", 33);\n\n                      case 20:\n                        characterIndex = void 0;\n\n                        if ((characterIndex = line.indexOf('\\r')) !== -1) {\n                          iy = characterIndex + excerptHalfLength; // Want excerpt to focus more on what follows\n\n                          excerpt = (iy > excerptHalfLength ? '…' : '') + line.substring(iy - excerptHalfLength, iy + excerptHalfLengthPlus).replace(/ /g, '␣') + (iy + excerptHalfLengthPlus < line.length ? '…' : '');\n                          addNoticePartial({\n                            priority: 703,\n                            C: C,\n                            V: V,\n                            message: \"Unexpected CarriageReturn character\",\n                            lineNumber: n,\n                            characterIndex: characterIndex,\n                            excerpt: excerpt,\n                            location: ourLocation\n                          });\n                        }\n\n                        marker = void 0, rest = void 0;\n\n                        if (line[0] === '\\\\') {\n                          marker = findStartMarker(C, V, n, line);\n                          rest = line.slice(marker.length + 2); // Skip backslash, marker, and space after marker\n                          // debugLog(`Line ${n}: marker='\\\\${marker}' rest='${rest}'`);\n                        } else {\n                          // Line didn’t start with a backslash\n                          // NOTE: Some unfoldingWord USFM Bibles commonly have this\n                          //          so it’s not necessarily either an error or a warning\n                          rest = line;\n\n                          if (validLineStartCharacters.indexOf(line[0]) === -1) {\n                            // These are the often expected characters\n                            // Drop the priority if it’s a \"half-likely\" character\n                            addNoticePartial({\n                              priority: line[0] === ' ' || line[0] === '\"' ? 180 : 880,\n                              C: C,\n                              V: V,\n                              message: \"Expected line to start with backslash\",\n                              lineNumber: n,\n                              characterIndex: 0,\n                              excerpt: line[0],\n                              location: ourLocation\n                            });\n\n                            if (line[1] === '\\\\') {\n                              // Let’s drop the leading punctuation and try to check the rest of the line\n                              marker = line.slice(2).split(' ', 1)[0];\n                              rest = line.slice(marker.length + 2 + 1); // Skip leading character, backslash, marker, and space after marker\n                              // debugLog(`USFM after ${line[0]} got '\\\\${marker}': '${rest}'`);\n                            } else marker = 'NONE'; // to try to avoid consequential errors, but the rest of the line won’t be checked\n\n                          } else {\n                            // How do we handle an allowed line that doesn’t start with a backslash?\n                            // Can’t use 'NONE' because we want the rest of the line checked\n                            marker = 'SPECIAL'; // Handle as a special case\n                          }\n                        }\n\n                        markerSet.add(marker); // Keep track of all line markers\n                        // Handle C/V numbers including verse bridges\n\n                        intC = void 0, intV = void 0, vIndex = void 0;\n\n                        if (marker === 'c') {\n                          C = rest;\n                          V = '0';\n\n                          try {\n                            intC = Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"ourParseInt\"])(C);\n                          } catch (usfmICerror) {\n                            addNoticePartial({\n                              priority: 724,\n                              C: C,\n                              V: V,\n                              message: \"Unable to convert chapter number to integer\",\n                              lineNumber: n,\n                              characterIndex: 3,\n                              excerpt: \"\".concat(rest.slice(0, excerptHalfLength)).concat(rest.length > excerptHalfLength ? '…' : ''),\n                              location: ourLocation\n                            });\n                            intC = -999; // Used to prevent consequential errors\n                          }\n\n                          if (C === lastC || intC > 0 && intC !== lastIntC + 1) addNoticePartial({\n                            priority: 764,\n                            C: C,\n                            V: V,\n                            message: \"Chapter number didn’t increment correctly\",\n                            lineNumber: n,\n                            characterIndex: 3,\n                            excerpt: \"\".concat(rest.slice(0, excerptHalfLength)).concat(rest.length > excerptHalfLength ? '…' : '', \" (\").concat(lastC ? lastC : '0', \" \\u2192 \").concat(C, \")\"),\n                            location: ourLocation\n                          });\n                          lastC = C;\n                          lastV = '0';\n                          lastIntC = intC;\n                          lastIntV = 0;\n                        } else if (marker === 'v') {\n                          V = rest ? rest.split(' ', 1)[0] : '?';\n\n                          if (V.indexOf('-') < 0) {\n                            // no hyphen -> no verse bridge\n                            try {\n                              intV = Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"ourParseInt\"])(V);\n                            } catch (usfmIVerror) {\n                              addNoticePartial({\n                                priority: 723,\n                                C: C,\n                                V: V,\n                                message: \"Unable to convert verse number to integer\",\n                                lineNumber: n,\n                                characterIndex: 3,\n                                excerpt: \"\".concat(rest.slice(0, excerptHalfLength)).concat(rest.length > excerptHalfLength ? '…' : ''),\n                                location: ourLocation\n                              });\n                              intV = -999; // Used to prevent consequential errors\n                            }\n\n                            if (V === lastV || intV > 0 && intV !== lastIntV + 1) addNoticePartial({\n                              priority: 763,\n                              C: C,\n                              V: V,\n                              message: \"Verse number didn’t increment correctly\",\n                              lineNumber: n,\n                              characterIndex: 3,\n                              excerpt: \"\".concat(rest.slice(0, excerptHalfLength)).concat(rest.length > excerptHalfLength ? '…' : '', \" (\").concat(lastV ? lastV : '0', \" \\u2192 \").concat(V, \")\"),\n                              location: ourLocation\n                            });\n                            lastV = V;\n                            lastIntV = intV;\n                          } else {\n                            // handle verse bridge\n                            bits = V.split('-');\n                            firstV = bits[0], secondV = bits[1];\n                            intFirstV = void 0, intSecondV = void 0;\n\n                            try {\n                              intFirstV = Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"ourParseInt\"])(firstV);\n                              intSecondV = Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"ourParseInt\"])(secondV);\n                            } catch (usfmV12error) {\n                              addNoticePartial({\n                                priority: 762,\n                                C: C,\n                                V: V,\n                                message: \"Unable to convert verse bridge numbers to integers\",\n                                lineNumber: n,\n                                characterIndex: 3,\n                                excerpt: \"\".concat(rest.slice(0, Math.max(9, excerptLength))).concat(rest.length > excerptLength ? '…' : ''),\n                                location: ourLocation\n                              });\n                              intFirstV = -999;\n                              intSecondV = -998; // Used to prevent consequential errors\n                            }\n\n                            if (intSecondV <= intFirstV) addNoticePartial({\n                              priority: 769,\n                              C: C,\n                              V: V,\n                              message: \"Verse bridge numbers not in ascending order\",\n                              lineNumber: n,\n                              characterIndex: 3,\n                              excerpt: \"\".concat(rest.slice(0, Math.max(9, excerptLength))).concat(rest.length > excerptLength ? '…' : '', \" (\").concat(firstV, \" \\u2192 \").concat(secondV, \")\"),\n                              location: ourLocation\n                            });else if (firstV === lastV || intFirstV > 0 && intFirstV !== lastIntV + 1) addNoticePartial({\n                              priority: 766,\n                              C: C,\n                              V: V,\n                              message: \"Bridged verse numbers didn’t increment correctly\",\n                              lineNumber: n,\n                              characterIndex: 3,\n                              excerpt: \"\".concat(rest.slice(0, Math.max(9, excerptLength))).concat(rest.length > excerptLength ? '…' : '', \" (\").concat(lastV, \" \\u2192 \").concat(firstV, \")\"),\n                              location: ourLocation\n                            });\n                            lastV = secondV;\n                            lastIntV = intSecondV;\n                          }\n                        } else if ((vIndex = rest.indexOf('\\\\v ')) !== -1) {\n                          // verse number marker follows another marker on the same line, so it’s inside `rest`\n                          restRest = rest.slice(vIndex + 3); // debugLog(`mainUSFMCheck at ${bookID} ${C}:${V} ${n} \\\\${marker} got restRest='${restRest}'`);\n\n                          try {\n                            intV = parseInt(restRest); // Parses the first integer that it finds\n                            // debugLog(`mainUSFMCheck  got intV=${intV}`);\n\n                            V = intV.toString();\n                          } catch (usfmIIVerror) {\n                            addNoticePartial({\n                              priority: 720,\n                              C: C,\n                              V: V,\n                              message: \"Unable to convert internal verse number to integer\",\n                              lineNumber: n,\n                              characterIndex: 3,\n                              excerpt: \"\".concat(restRest.slice(0, excerptHalfLength)).concat(restRest.length > excerptHalfLength ? '…' : ''),\n                              location: ourLocation\n                            });\n                            intV = -999; // Used to prevent consequential errors\n                          }\n\n                          if (intV > 0 && intV !== lastIntV + 1) addNoticePartial({\n                            priority: 761,\n                            C: C,\n                            V: V,\n                            message: \"Verse number didn’t increment correctly\",\n                            lineNumber: n,\n                            characterIndex: 3,\n                            excerpt: \"\".concat(restRest.slice(0, excerptHalfLength)).concat(restRest.length > excerptHalfLength ? '…' : '', \" (\").concat(lastV ? lastV : '0', \" \\u2192 \").concat(V, \")\"),\n                            location: ourLocation\n                          });\n                          lastV = intV.toString();\n                          lastIntV = intV;\n                        }\n\n                        if (marker === 'id' && !rest.startsWith(bookID)) {\n                          thisLength = Math.max(4, excerptLength);\n                          _excerpt15 = \"\".concat(rest.slice(0, thisLength)).concat(rest.length > thisLength ? '…' : '');\n                          addNoticePartial({\n                            priority: 987,\n                            C: C,\n                            V: V,\n                            message: \"Expected \\\\id line to start with book identifier\",\n                            lineNumber: n,\n                            characterIndex: 4,\n                            excerpt: _excerpt15,\n                            location: ourLocation\n                          });\n                        } // Check the order of markers\n                        // In headers\n\n\n                        if (marker === 'toc2' && lastMarker !== 'toc1') addNoticePartial({\n                          priority: 87,\n                          C: C,\n                          V: V,\n                          message: \"Expected \\\\toc2 line to follow \\\\toc1\",\n                          lineNumber: n,\n                          characterIndex: 1,\n                          details: \"not '\\\\\".concat(lastMarker, \"'\"),\n                          location: ourLocation\n                        });else if (marker === 'toc3' && lastMarker !== 'toc2') addNoticePartial({\n                          priority: 87,\n                          C: C,\n                          V: V,\n                          message: \"Expected \\\\toc3 line to follow \\\\toc2\",\n                          lineNumber: n,\n                          characterIndex: 1,\n                          details: \"not '\\\\\".concat(lastMarker, \"'\"),\n                          location: ourLocation\n                        }); // In chapters\n                        else if ((PARAGRAPH_MARKERS_LIST.includes(marker) || marker === 's5' || marker === 'ts\\\\*') && PARAGRAPH_MARKERS_LIST.includes(lastMarker) && !lastRest) addNoticePartial({\n                          priority: 399,\n                          C: C,\n                          V: V,\n                          message: \"Useless paragraph marker\",\n                          lineNumber: n,\n                          characterIndex: 1,\n                          details: \"'\\\\\".concat(lastMarker, \"' before '\\\\\").concat(marker, \"'\"),\n                          location: ourLocation\n                        });else if (['c', 'ca', 'cl'].includes(lastMarker) && marker === 'v' && (rest === '1' || rest.startsWith('1 '))) addNoticePartial({\n                          priority: C === '1' ? 657 : 457,\n                          C: C,\n                          V: V,\n                          message: \"Paragraph marker expected before first verse\",\n                          lineNumber: n,\n                          characterIndex: 1,\n                          details: \"'\\\\\".concat(marker, \"' after '\\\\\").concat(lastMarker, \"'\"),\n                          location: ourLocation\n                        });else if (TEXT_MARKERS_WITHOUT_CONTENT_LIST.includes(lastMarker) && ['w', 'v', 'zaln-s', 'k-s'].includes(marker)) addNoticePartial({\n                          priority: 899,\n                          C: C,\n                          V: V,\n                          message: \"Have USFM text not in a paragraph\",\n                          lineNumber: n,\n                          characterIndex: 1,\n                          details: \"'\\\\\".concat(lastMarker, \"' before '\\\\\").concat(marker, \"'\"),\n                          location: ourLocation\n                        }); // Do general checks\n\n                        _context9.next = 31;\n                        return checkUSFMLineContents(n, C, V, marker, rest, ourLocation, checkingOptions);\n\n                      case 31:\n                        lastMarker = marker;\n                        lastRest = rest;\n\n                      case 33:\n                        n++;\n                        _context9.next = 15;\n                        break;\n\n                      case 36:\n                        // Do overall global checks of the entire text\n                        checkUSFMFileContents(filename, givenText, markerSet, ourLocation, checkingOptions); // Do this last so the results are lower in the lists\n\n                        addSuccessMessage(\"Checked all \".concat(lines.length.toLocaleString(), \" line\").concat(lines.length === 1 ? '' : 's', \" for \").concat(bookID).concat(ourLocation));\n\n                      case 38:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n              return _mainUSFMCheck.apply(this, arguments);\n            };\n\n            mainUSFMCheck = function _mainUSFMCheck2(_x30, _x31, _x32, _x33) {\n              return _mainUSFMCheck.apply(this, arguments);\n            };\n\n            _ourCheckNotesLinksToOutside = function _ourCheckNotesLinksTo2() {\n              _ourCheckNotesLinksToOutside = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee8(lineNumber, C, V, marker, twLinkText, location, checkingOptions) {\n                var adjustedLanguageCode, coTNlResultObject, _iterator27, _step27, coqNoticeEntry, _iterator28, _step28, checkedRepoName, _iterator29, _step29, checkedFilenameExtension;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        // Checks that the TA/TW/Bible reference can be found\n                        // Updates the global list of notices\n                        // functionLog(`checkUSFMText ourCheckNotesLinksToOutside(${lineNumber}, ${C}:${V}, ${marker}, (${twLinkText.length}) '${twLinkText}', ${location}, ${JSON.stringify(checkingOptions)})`);\n                        //parameterAssert(marker !== undefined, \"checkUSFMText ourCheckNotesLinksToOutside: 'marker' parameter should be defined\");\n                        //parameterAssert(typeof marker === 'string', `checkUSFMText ourCheckNotesLinksToOutside: 'marker' parameter should be a string not a '${typeof marker}': ${marker}`);\n                        //parameterAssert(twLinkText !== undefined, \"checkUSFMText ourCheckNotesLinksToOutside: 'twLinkText' parameter should be defined\");\n                        //parameterAssert(typeof twLinkText === 'string', `checkUSFMText ourCheckNotesLinksToOutside: 'twLinkText' parameter should be a string not a '${typeof twLinkText}': ${twLinkText}`);\n                        adjustedLanguageCode = languageCode; // This is the language code of the resource with the link\n\n                        if (languageCode === 'hbo' || languageCode === 'el-x-koine') adjustedLanguageCode = 'en'; // This is a guess (and won’t be needed for TWs when we switch to TWLs)\n\n                        _context8.next = 4;\n                        return Object(_notes_links_check__WEBPACK_IMPORTED_MODULE_14__[\"checkNotesLinksToOutside\"])(username, languageCode, repoCode, bookID, C, V, 'TWLink', twLinkText, location, Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, checkingOptions), {}, {\n                          defaultLanguageCode: adjustedLanguageCode\n                        }));\n\n                      case 4:\n                        coTNlResultObject = _context8.sent;\n                        // debugLog(`coTNlResultObject=${JSON.stringify(coTNlResultObject)}`);\n                        // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                        //  process results line by line\n                        _iterator27 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coTNlResultObject.noticeList);\n\n                        try {\n                          for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n                            coqNoticeEntry = _step27.value;\n                            if (coqNoticeEntry.extra) // it must be an indirect check on a TA or TW article from a TN2 check\n                              usfmResultObject.noticeList.push(coqNoticeEntry); // Just copy the complete notice as is\n                            else // For our direct checks, we add the repoCode as an extra value\n                              addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, coqNoticeEntry), {}, {\n                                lineNumber: lineNumber,\n                                C: C,\n                                V: V,\n                                fieldName: marker\n                              }));\n                          } // The following is needed coz we might be checking the linked TA and/or TW articles\n\n                        } catch (err) {\n                          _iterator27.e(err);\n                        } finally {\n                          _iterator27.f();\n                        }\n\n                        if (coTNlResultObject.checkedFileCount && coTNlResultObject.checkedFileCount > 0) if (typeof usfmResultObject.checkedFileCount === 'number') usfmResultObject.checkedFileCount += coTNlResultObject.checkedFileCount;else usfmResultObject.checkedFileCount = coTNlResultObject.checkedFileCount;\n                        if (coTNlResultObject.checkedFilesizes && coTNlResultObject.checkedFilesizes > 0) if (typeof usfmResultObject.checkedFilesizes === 'number') usfmResultObject.checkedFilesizes += coTNlResultObject.checkedFilesizes;else usfmResultObject.checkedFilesizes = coTNlResultObject.checkedFilesizes;\n\n                        if (coTNlResultObject.checkedRepoNames && coTNlResultObject.checkedRepoNames.length > 0) {\n                          _iterator28 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coTNlResultObject.checkedRepoNames);\n\n                          try {\n                            for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n                              checkedRepoName = _step28.value;\n\n                              try {\n                                if (usfmResultObject.checkedRepoNames.indexOf(checkedRepoName) < 0) usfmResultObject.checkedRepoNames.push(checkedRepoName);\n                              } catch (_unused4) {\n                                usfmResultObject.checkedRepoNames = [checkedRepoName];\n                              }\n                            }\n                          } catch (err) {\n                            _iterator28.e(err);\n                          } finally {\n                            _iterator28.f();\n                          }\n                        }\n\n                        if (coTNlResultObject.checkedFilenameExtensions && coTNlResultObject.checkedFilenameExtensions.length > 0) {\n                          _iterator29 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(coTNlResultObject.checkedFilenameExtensions);\n\n                          try {\n                            for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n                              checkedFilenameExtension = _step29.value;\n\n                              try {\n                                if (usfmResultObject.checkedFilenameExtensions.indexOf(checkedFilenameExtension) < 0) usfmResultObject.checkedFilenameExtensions.push(checkedFilenameExtension);\n                              } catch (_unused5) {\n                                usfmResultObject.checkedFilenameExtensions = [checkedFilenameExtension];\n                              }\n                            }\n                          } catch (err) {\n                            _iterator29.e(err);\n                          } finally {\n                            _iterator29.f();\n                          }\n                        } // if (result.checkedFilenameExtensions) debugLog(\"result\", JSON.stringify(result));\n\n\n                      case 11:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n              return _ourCheckNotesLinksToOutside.apply(this, arguments);\n            };\n\n            ourCheckNotesLinksToOutside = function _ourCheckNotesLinksTo(_x23, _x24, _x25, _x26, _x27, _x28, _x29) {\n              return _ourCheckNotesLinksToOutside.apply(this, arguments);\n            };\n\n            _checkUSFMLineContents = function _checkUSFMLineContent2() {\n              _checkUSFMLineContents = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee7(lineNumber, C, V, marker, rest, lineLocation, checkingOptions) {\n                var checkUSFMLineInternals, _checkUSFMLineInternals;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _checkUSFMLineInternals = function _checkUSFMLineInterna2() {\n                          _checkUSFMLineInternals = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee6(lineNumber, C, V, marker, rest, lineLocation, checkingOptions) {\n                            var Vstr, _iterator26, _step26, punctSet, opener, closer, lCount, rCount, allowedLinks;\n\n                            return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee6$(_context6) {\n                              while (1) {\n                                switch (_context6.prev = _context6.next) {\n                                  case 0:\n                                    // Handles character formatting within the line contents\n                                    // functionLog(`checkUSFMLineInternals(${lineNumber}, ${C}:${V}, ${marker}='${rest}', ${lineLocation}, ${JSON.stringify(checkingOptions)})…`);\n                                    if (marker === 'c' && isNaN(rest)) addNoticePartial({\n                                      priority: 822,\n                                      message: \"Expected field to contain an integer\",\n                                      characterIndex: 3,\n                                      excerpt: \"\\\\c \".concat(rest),\n                                      lineNumber: lineNumber,\n                                      C: C,\n                                      V: V,\n                                      location: lineLocation\n                                    });\n\n                                    if (marker === 'v') {\n                                      Vstr = rest ? rest.split(' ', 1)[0] : '?';\n                                      if (isNaN(Vstr) && Vstr.indexOf('-') < 0) addNoticePartial({\n                                        priority: 822,\n                                        message: \"Expected field to contain an integer\",\n                                        characterIndex: 3,\n                                        excerpt: \"\\\\v \".concat(rest),\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        location: lineLocation\n                                      });\n                                    } else if (marker === 'h' || marker === 'toc1' || marker === 'toc2' || marker === 'toc3') if (rest.toLowerCase() === rest || rest.toUpperCase() === rest) addNoticePartial({\n                                      priority: languageCode === 'en' || languageCode === 'fr' ? 490 : 190,\n                                      message: \"Expected header field to contain a mixed-case string\",\n                                      fieldName: \"\\\\\".concat(marker),\n                                      excerpt: rest,\n                                      lineNumber: lineNumber,\n                                      C: C,\n                                      V: V,\n                                      location: lineLocation\n                                    }); // Check matched pairs that should all be inside a single line\n\n\n                                    if (['en', 'hbo', 'el-x-koine'].includes(languageCode)) {\n                                      _iterator26 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(MATCHED_CHARACTER_FORMATTING_LINE_PAIRS_LIST);\n\n                                      try {\n                                        for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n                                          punctSet = _step26.value;\n                                          opener = \"\\\\\".concat(punctSet[0], \" \"), closer = \"\\\\\".concat(punctSet[1]);\n                                          lCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(rest, opener) + (marker === punctSet[0] ? 1 : 0);\n                                          rCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(rest, closer);\n                                          if (lCount !== rCount) addNoticePartial({\n                                            priority: 973,\n                                            message: \"Mismatched \".concat(opener).concat(closer, \" fields\"),\n                                            details: \"(opening=\".concat(lCount.toLocaleString(), \", closing=\").concat(rCount.toLocaleString(), \")\"),\n                                            excerpt: rest,\n                                            lineNumber: lineNumber,\n                                            C: C,\n                                            V: V,\n                                            location: lineLocation\n                                          });\n                                        }\n                                      } catch (err) {\n                                        _iterator26.e(err);\n                                      } finally {\n                                        _iterator26.f();\n                                      }\n                                    }\n\n                                    if (!rest) {\n                                      _context6.next = 10;\n                                      break;\n                                    }\n\n                                    checkUSFMLineText(lineNumber, C, V, marker, rest, lineLocation, checkingOptions);\n\n                                    if (!(rest.indexOf('=') !== -1 || rest.indexOf('\"') !== -1)) {\n                                      _context6.next = 8;\n                                      break;\n                                    }\n\n                                    _context6.next = 8;\n                                    return checkUSFMLineAttributes(lineNumber, C, V, marker, rest, lineLocation, checkingOptions);\n\n                                  case 8:\n                                    allowedLinks = (marker === 'w' || marker === 'k-s' || marker === 'f' || marker === 'SPECIAL' // (because we don’t know what marker SPECIAL is, so default to \"no false alarms\")\n                                    ) && rest.indexOf('x-tw') !== -1;\n                                    ourCheckTextField(lineNumber, C, V, 'USFM line', \"\\\\\".concat(marker), rest, allowedLinks, lineLocation, checkingOptions);\n\n                                  case 10:\n                                  case \"end\":\n                                    return _context6.stop();\n                                }\n                              }\n                            }, _callee6);\n                          }));\n                          return _checkUSFMLineInternals.apply(this, arguments);\n                        };\n\n                        checkUSFMLineInternals = function _checkUSFMLineInterna(_x48, _x49, _x50, _x51, _x52, _x53, _x54) {\n                          return _checkUSFMLineInternals.apply(this, arguments);\n                        };\n\n                        // end of checkUSFMLineInternals function\n                        // Main code for checkUSFMLineContents()\n                        if (ALLOWED_LINE_START_MARKERS_LIST.includes(marker) || marker === 'SPECIAL' || marker === 'NONE') {\n                          if (rest && MARKERS_WITHOUT_CONTENT_LIST.includes(marker)) if (Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"isWhitespace\"])(rest)) addNoticePartial({\n                            priority: 301,\n                            message: \"Unexpected whitespace after \\\\\".concat(marker, \" marker\"),\n                            C: C,\n                            V: V,\n                            lineNumber: lineNumber,\n                            characterIndex: marker.length,\n                            excerpt: rest,\n                            location: lineLocation\n                          });else if (rest !== 'ס' && rest !== 'פ') // in UHB NEH 3:20 or EZR 3:18\n                            addNoticePartial({\n                              priority: 401,\n                              message: \"Unexpected content after \\\\\".concat(marker, \" marker\"),\n                              C: C,\n                              V: V,\n                              lineNumber: lineNumber,\n                              characterIndex: marker.length,\n                              excerpt: rest,\n                              location: lineLocation\n                            });else if (MARKERS_WITH_COMPULSORY_CONTENT_LIST.includes(marker) && !rest) addNoticePartial({\n                            priority: 711,\n                            message: \"Expected compulsory content\",\n                            C: C,\n                            V: V,\n                            lineNumber: lineNumber,\n                            characterIndex: marker.length,\n                            location: \" after \\\\\".concat(marker, \" marker\").concat(lineLocation)\n                          });\n                        } else // it’s not a recognised line marker\n                          // Lower priority of deprecated \\s5 markers (compared to all other unknown markers)\n                          addNoticePartial({\n                            priority: marker === 's5' ? 111 : 809,\n                            message: \"\".concat(marker === 's5' ? 'Deprecated' : 'Unexpected', \" '\\\\\").concat(marker, \"' marker at start of line\"),\n                            C: C,\n                            V: V,\n                            lineNumber: lineNumber,\n                            characterIndex: 1,\n                            location: lineLocation\n                          });\n\n                        if (!rest) {\n                          _context7.next = 6;\n                          break;\n                        }\n\n                        _context7.next = 6;\n                        return checkUSFMLineInternals(lineNumber, C, V, marker, rest, lineLocation, checkingOptions);\n\n                      case 6:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n              return _checkUSFMLineContents.apply(this, arguments);\n            };\n\n            checkUSFMLineContents = function _checkUSFMLineContent(_x16, _x17, _x18, _x19, _x20, _x21, _x22) {\n              return _checkUSFMLineContents.apply(this, arguments);\n            };\n\n            _checkUSFMLineAttributes = function _checkUSFMLineAttribu2() {\n              _checkUSFMLineAttributes = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee5(lineNumber, C, V, marker, rest, lineLocation, checkingOptions) {\n                var details, adjustedRest, ourCheckStrongsField, _ourCheckStrongsField, checkWAttributes, _checkWAttributes, getOriginalWordLists, _getOriginalWordLists, checkZALNAttributes, _checkZALNAttributes, suggestion, regexMatchObject1, regexMatchObject2, attributeCounter, attributeName, zalnSuggestion;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _checkZALNAttributes = function _checkZALNAttributes3() {\n                          _checkZALNAttributes = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee4(zalnContents) {\n                            var zalnSuggestion, regexMatchObject, attributeCounter, attributes, _attributeName2, attributeValue, wordListResult, originalLanguageRepoCode, verseWordList, verseWordObjectList, oWord, oOccurrence, oOccurrences, oStrong, oLemma, oMorph, oOccurrenceInt, oOccurrencesInt, ix, gotCount, _verseWordObjectList$, _verseWordObjectList$2, _verseWordObjectList$3, vwolStrongs, vwolLemma, vwolMorph;\n\n                            return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee4$(_context4) {\n                              while (1) {\n                                switch (_context4.prev = _context4.next) {\n                                  case 0:\n                                    // functionLog(`checkWAttributes(${zalnContents})…`);\n                                    // The parameter normally starts with a |\n                                    Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(repoCode !== 'UHB' && repoCode !== 'UGNT', \"checkZALNAttributes did not expect an original language repo: '\".concat(repoCode, \"'\"));\n                                    attributeCounter = 0;\n                                    attributes = {};\n\n                                    while (regexMatchObject = ATTRIBUTE_REGEX.exec(zalnContents)) {\n                                      attributeCounter += 1; // debugLog(`  Got attribute Regex in \\\\zaln-s: ${attributeCounter} '${JSON.stringify(regexMatchObject2)}`);\n\n                                      _attributeName2 = regexMatchObject[1], attributeValue = regexMatchObject[2];\n                                      attributes[_attributeName2] = attributeValue;\n\n                                      if (attributeCounter === 1) {\n                                        if (_attributeName2 !== 'x-strong') addNoticePartial({\n                                          priority: 830,\n                                          message: \"Unexpected first \\\\zaln-s attribute\",\n                                          details: details,\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: regexMatchObject[0],\n                                          location: lineLocation\n                                        });\n                                      } else if (attributeCounter === 2) {\n                                        if (_attributeName2 !== 'x-lemma') addNoticePartial({\n                                          priority: 829,\n                                          message: \"Unexpected second \\\\zaln-s attribute\",\n                                          details: details,\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: regexMatchObject[0],\n                                          location: lineLocation\n                                        });\n                                      } else if (attributeCounter === 3) {\n                                        if (_attributeName2 !== 'x-morph') addNoticePartial({\n                                          priority: 828,\n                                          message: \"Unexpected third \\\\zaln-s attribute\",\n                                          details: details,\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: regexMatchObject[0],\n                                          location: lineLocation\n                                        });\n                                      } else if (attributeCounter === 4) {\n                                        if (_attributeName2 !== 'x-occurrence') addNoticePartial({\n                                          priority: 827,\n                                          message: \"Unexpected fourth \\\\zaln-s attribute\",\n                                          details: details,\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: regexMatchObject[0],\n                                          location: lineLocation\n                                        });\n                                      } else if (attributeCounter === 5) {\n                                        if (_attributeName2 !== 'x-occurrences') addNoticePartial({\n                                          priority: 826,\n                                          message: \"Unexpected fifth \\\\zaln-s attribute\",\n                                          details: details,\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: regexMatchObject[0],\n                                          location: lineLocation\n                                        });\n                                      } else if (attributeCounter === 6) {\n                                        if (_attributeName2 !== 'x-content') addNoticePartial({\n                                          priority: 825,\n                                          message: \"Unexpected sixth \\\\zaln-s attribute\",\n                                          details: details,\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: regexMatchObject[0],\n                                          location: lineLocation\n                                        });\n                                      } else // #7 or more\n                                        addNoticePartial({\n                                          priority: 833,\n                                          message: \"Unexpected extra \\\\zaln-s attribute\",\n                                          details: details,\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: regexMatchObject[0],\n                                          location: lineLocation\n                                        });\n                                    }\n\n                                    if (attributeCounter < 6) addNoticePartial({\n                                      priority: 834,\n                                      message: \"Seems too few translation \\\\zaln-s attributes\",\n                                      details: \"expected six attributes but only found \".concat(attributeCounter),\n                                      lineNumber: lineNumber,\n                                      C: C,\n                                      V: V,\n                                      excerpt: regexMatchObject1[0],\n                                      location: lineLocation\n                                    }); // debugLog(`checkZALNAttributes has ${bookID} ${C}:${V} attributes: ${JSON.stringify(attributes)}`);\n                                    // The Strongs, lemma and morph fields are copied from the original UHB/UGNT files\n                                    //  during alignment by tC\n                                    //  so we need to check them as it’s possible for them to get out of sync\n\n                                    if (!((checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.disableAllLinkFetchingFlag) !== true)) {\n                                      _context4.next = 34;\n                                      break;\n                                    }\n\n                                    _context4.next = 8;\n                                    return getOriginalWordLists(bookID, C, V, checkingOptions);\n\n                                  case 8:\n                                    wordListResult = _context4.sent;\n                                    originalLanguageRepoCode = wordListResult.originalLanguageRepoCode, verseWordList = wordListResult.verseWordList, verseWordObjectList = wordListResult.verseWordObjectList; // debugLog(`checkZALNAttributes has '${originalLanguageRepoCode}' ${bookID} ${C}:${V} ${verseWordList} ${JSON.stringify(verseWordObjectList)}`);\n\n                                    _context4.prev = 10;\n                                    // Could fail here if any of those attributes were missing (already notified, so don’t worry here)\n                                    oWord = attributes['x-content'];\n                                    oOccurrence = attributes['x-occurrence'];\n                                    oOccurrences = attributes['x-occurrences'];\n                                    oStrong = attributes['x-strong'];\n                                    oLemma = attributes['x-lemma'];\n                                    oMorph = attributes['x-morph']; // debugLog(`checkZALNAttributes has ${bookID} ${C}:${V} '${oWord}' ${oOccurrence}/${oOccurrences} ${oStrong} '${oLemma}' ${oMorph}`);\n\n                                    oOccurrenceInt = parseInt(oOccurrence), oOccurrencesInt = parseInt(oOccurrences); // debugLog(`checkZALNAttributes has ${bookID} ${C}:${V} ${oOccurrenceInt}/${oOccurrencesInt}`);\n\n                                    if (oOccurrenceInt > oOccurrencesInt) addNoticePartial({\n                                      priority: 801,\n                                      message: \"Aligned x-occurrence for original word is higher than Occurrences\",\n                                      details: \"\".concat(oOccurrence, \" > \").concat(oOccurrences),\n                                      lineNumber: lineNumber,\n                                      C: C,\n                                      V: V,\n                                      excerpt: zalnContents,\n                                      location: lineLocation\n                                    });\n                                    /* Now checked below\n                                    const oWordCount = countOccurrencesInList(verseWordList, oWord);\n                                    if (oWordCount < oOccurrenceInt)\n                                        addNoticePartial({ priority: 802, message: \"AAA Aligned x-occurrence for original word is too high\", details: `only found ${oWordCount} occurrences of '${oWord}' instead of ${oOccurrence}`, lineNumber, C, V, excerpt: zalnContents, location: lineLocation });\n                                    */\n                                    // Find the index of the correct occurrence of the word (index into the original language verse words list)\n\n                                    gotCount = 0;\n                                    ix = 0;\n\n                                  case 21:\n                                    if (!(ix < verseWordList.length)) {\n                                      _context4.next = 28;\n                                      break;\n                                    }\n\n                                    if (!(verseWordList[ix] === oWord)) {\n                                      _context4.next = 25;\n                                      break;\n                                    }\n\n                                    if (!(++gotCount === oOccurrenceInt)) {\n                                      _context4.next = 25;\n                                      break;\n                                    }\n\n                                    return _context4.abrupt(\"break\", 28);\n\n                                  case 25:\n                                    ix++;\n                                    _context4.next = 21;\n                                    break;\n\n                                  case 28:\n                                    if (gotCount !== oOccurrenceInt) {\n                                        // Can’t do checks below coz ix is invalid\n                                        if (gotCount === 0) addNoticePartial({\n                                          priority: 803,\n                                          message: \"Word can’t be found in original text\",\n                                          details: \"found NO occurrences of '\".concat(oWord, \"' instead of \").concat(oOccurrence, \" from \").concat(verseWordList.join(', ')),\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: zalnContents,\n                                          location: lineLocation\n                                        });else addNoticePartial({\n                                          priority: 802,\n                                          message: \"Aligned x-occurrence for original word is too high\",\n                                          details: \"only found \".concat(gotCount, \" occurrence\").concat(gotCount === 1 ? '' : 's', \" of '\").concat(oWord, \"' instead of \").concat(oOccurrence, \" from \").concat(verseWordList.join(', ')),\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: zalnContents,\n                                          location: lineLocation\n                                        });\n                                    } else {\n                                      vwolStrongs = (_verseWordObjectList$ = verseWordObjectList[ix]) === null || _verseWordObjectList$ === void 0 ? void 0 : _verseWordObjectList$.strongs;\n\n                                      if (vwolStrongs !== oStrong) {\n                                        addNoticePartial({\n                                          priority: 805,\n                                          message: \"Aligned x-strong number doesn’t match original\",\n                                          details: \"\".concat(originalLanguageRepoCode, \" had '\").concat(vwolStrongs, \"'\"),\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: zalnContents,\n                                          location: lineLocation\n                                        });\n                                        zalnSuggestion = zalnContents.replace(\"\\\"\".concat(oStrong, \"\\\"\"), \"\\\"\".concat(vwolStrongs, \"\\\"\"));\n                                      }\n\n                                      vwolLemma = (_verseWordObjectList$2 = verseWordObjectList[ix]) === null || _verseWordObjectList$2 === void 0 ? void 0 : _verseWordObjectList$2.lemma;\n\n                                      if (vwolLemma !== oLemma) {\n                                        addNoticePartial({\n                                          priority: 806,\n                                          message: \"Aligned x-lemma doesn’t match original\",\n                                          details: \"\".concat(originalLanguageRepoCode, \" had '\").concat(vwolLemma, \"'\"),\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: zalnContents,\n                                          location: lineLocation\n                                        });\n                                        zalnSuggestion = zalnContents.replace(\"\\\"\".concat(oLemma, \"\\\"\"), \"\\\"\".concat(vwolLemma, \"\\\"\"));\n                                      }\n\n                                      vwolMorph = (_verseWordObjectList$3 = verseWordObjectList[ix]) === null || _verseWordObjectList$3 === void 0 ? void 0 : _verseWordObjectList$3.morph;\n\n                                      if (vwolMorph !== oMorph) {\n                                        addNoticePartial({\n                                          priority: 804,\n                                          message: \"Aligned x-morph doesn’t match original\",\n                                          details: \"\".concat(originalLanguageRepoCode, \" had '\").concat(vwolMorph, \"'\"),\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: zalnContents,\n                                          location: lineLocation\n                                        });\n                                        zalnSuggestion = zalnContents.replace(\"\\\"\".concat(oMorph, \"\\\"\"), \"\\\"\".concat(vwolMorph, \"\\\"\"));\n                                      }\n                                    }\n                                    _context4.next = 34;\n                                    break;\n\n                                  case 31:\n                                    _context4.prev = 31;\n                                    _context4.t0 = _context4[\"catch\"](10);\n                                    Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"debugLog\"])(\"checkZALNAttributes1: why couldn\\u2019t we get word attributes out of \".concat(JSON.stringify(attributes), \": \").concat(_context4.t0.message));\n\n                                  case 34:\n                                    return _context4.abrupt(\"return\", zalnSuggestion);\n\n                                  case 35:\n                                  case \"end\":\n                                    return _context4.stop();\n                                }\n                              }\n                            }, _callee4, null, [[10, 31]]);\n                          }));\n                          return _checkZALNAttributes.apply(this, arguments);\n                        };\n\n                        checkZALNAttributes = function _checkZALNAttributes2(_x47) {\n                          return _checkZALNAttributes.apply(this, arguments);\n                        };\n\n                        _getOriginalWordLists = function _getOriginalWordLists3() {\n                          _getOriginalWordLists = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee3(bookID, C, V, checkingOptions) {\n                            var username, branch, getFile_, verseWordList, verseWordObjectList, bookNumberAndName, whichTestament, originalLanguageRepoLanguageCode, originalLanguageRepoCode, originalLanguageRepoName, filename, originalUSFM, foundChapter, foundVerse, wLinesVerseText, _iterator25, _step25, bookLine, regexMatchObject1, _regexMatchObject2, _regexMatchObject3, _totalLink, word, lemma, strongs, morph;\n\n                            return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee3$(_context3) {\n                              while (1) {\n                                switch (_context3.prev = _context3.next) {\n                                  case 0:\n                                    // TODO: Cache these ???\n                                    // functionLog(`getOriginalWordLists(${bookID}, ${C}:${V}, )…`);\n                                    try {\n                                      username = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.originalLanguageRepoUsername;\n                                    } catch (qcoError) {}\n\n                                    if (!username) username = languageCode === 'en' ? 'unfoldingWord' : 'Door43-Catalog'; // ??? !!!\n\n                                    try {\n                                      branch = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.originalLanguageRepoBranch;\n                                    } catch (qcunError) {}\n\n                                    if (!branch) branch = 'master';\n                                    getFile_ = checkingOptions && (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile) ? checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile : _getApi__WEBPACK_IMPORTED_MODULE_8__[\"cachedGetFile\"];\n                                    verseWordList = [], verseWordObjectList = [];\n                                    bookNumberAndName = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"usfmNumberName\"](bookID);\n\n                                    try {\n                                      whichTestament = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"testament\"](bookID); // returns 'old' or 'new'\n                                    } catch (bNNerror) {\n                                      if (_books_books__WEBPACK_IMPORTED_MODULE_7__[\"isValidBookID\"](bookID)) // must be in FRT, BAK, etc.\n                                        whichTestament = 'other';\n                                    }\n\n                                    Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"logicAssert\"])(whichTestament === 'old' || whichTestament === 'new', \"getOriginalPassage() couldn\\u2019t find testament for '\".concat(bookID, \"'\"));\n                                    originalLanguageRepoLanguageCode = whichTestament === 'old' ? 'hbo' : 'el-x-koine';\n                                    originalLanguageRepoCode = whichTestament === 'old' ? 'UHB' : 'UGNT';\n                                    originalLanguageRepoName = \"\".concat(originalLanguageRepoLanguageCode, \"_\").concat(originalLanguageRepoCode.toLowerCase());\n                                    filename = \"\".concat(bookNumberAndName, \".usfm\");\n\n                                    if (!(originalLanguageRepoCode === 'UHB')) {\n                                      _context3.next = 26;\n                                      break;\n                                    }\n\n                                    _context3.prev = 14;\n                                    _context3.next = 17;\n                                    return getFile_({\n                                      username: username,\n                                      repository: originalLanguageRepoName,\n                                      path: filename,\n                                      branch: branch\n                                    });\n\n                                  case 17:\n                                    originalUSFM = _context3.sent;\n                                    _context3.next = 24;\n                                    break;\n\n                                  case 20:\n                                    _context3.prev = 20;\n                                    _context3.t0 = _context3[\"catch\"](14);\n                                    // NOTE: The error can depend on whether the zipped repo is cached or not\n                                    console.error(\"getOriginalPassage(\".concat(bookID, \", \").concat(C, \":\").concat(V, \", \").concat(JSON.stringify(checkingOptions), \") failed to load UHB\"), username, originalLanguageRepoCode, filename, branch, _context3.t0.message);\n                                    addNoticePartial({\n                                      priority: 601,\n                                      message: \"Unable to load file\",\n                                      details: \"error=\".concat(_context3.t0),\n                                      username: username,\n                                      filename: filename,\n                                      location: ourLocation,\n                                      extra: originalLanguageRepoName\n                                    });\n\n                                  case 24:\n                                    _context3.next = 37;\n                                    break;\n\n                                  case 26:\n                                    if (!(originalLanguageRepoCode === 'UGNT')) {\n                                      _context3.next = 37;\n                                      break;\n                                    }\n\n                                    _context3.prev = 27;\n                                    _context3.next = 30;\n                                    return getFile_({\n                                      username: username,\n                                      repository: originalLanguageRepoName,\n                                      path: filename,\n                                      branch: branch\n                                    });\n\n                                  case 30:\n                                    originalUSFM = _context3.sent;\n                                    _context3.next = 37;\n                                    break;\n\n                                  case 33:\n                                    _context3.prev = 33;\n                                    _context3.t1 = _context3[\"catch\"](27);\n                                    // NOTE: The error can depend on whether the zipped repo is cached or not\n                                    console.error(\"getOriginalPassage(\".concat(bookID, \", \").concat(C, \":\").concat(V, \", \").concat(JSON.stringify(checkingOptions), \") failed to load UGNT\"), username, originalLanguageRepoCode, filename, branch, _context3.t1.message);\n                                    addNoticePartial({\n                                      priority: 601,\n                                      message: \"Unable to load file\",\n                                      details: \"error=\".concat(_context3.t1),\n                                      username: username,\n                                      filename: filename,\n                                      location: ourLocation,\n                                      extra: originalLanguageRepoName\n                                    });\n\n                                  case 37:\n                                    if (originalUSFM) {\n                                      _context3.next = 40;\n                                      break;\n                                    }\n\n                                    Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"debugLog\"])(\"Oops: getOriginalWordLists(\".concat(bookID, \", \").concat(C, \":\").concat(V, \", ) didn\\u2019t find a file!!!\"));\n                                    return _context3.abrupt(\"return\", null);\n\n                                  case 40:\n                                    // Do global fixes\n                                    // originalUSFM = originalUSFM.replace(/\\\\k-e\\\\\\*/g, ''); // Remove \\k-e self-closed milestones\n                                    // originalUSFM = originalUSFM.replace(/\\\\k-s.+?\\\\\\*/g, ''); // Remove \\k-s self-closed milestones\n                                    // Now find the desired C:V\n                                    foundChapter = false, foundVerse = false;\n                                    wLinesVerseText = '';\n                                    _iterator25 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(originalUSFM.split('\\n'));\n                                    _context3.prev = 43;\n\n                                    _iterator25.s();\n\n                                  case 45:\n                                    if ((_step25 = _iterator25.n()).done) {\n                                      _context3.next = 57;\n                                      break;\n                                    }\n\n                                    bookLine = _step25.value;\n\n                                    if (!(!foundChapter && bookLine === \"\\\\c \".concat(C))) {\n                                      _context3.next = 50;\n                                      break;\n                                    }\n\n                                    foundChapter = true;\n                                    return _context3.abrupt(\"continue\", 55);\n\n                                  case 50:\n                                    if (foundChapter && !foundVerse && bookLine.startsWith(\"\\\\v \".concat(V))) {\n                                      foundVerse = true;\n                                      bookLine = bookLine.slice(3 + V.length); // Delete verse number so below bit doesn’t fail\n                                    }\n\n                                    if (!foundVerse) {\n                                      _context3.next = 55;\n                                      break;\n                                    }\n\n                                    if (!(bookLine.startsWith('\\\\v ') || bookLine.startsWith('\\\\c '))) {\n                                      _context3.next = 54;\n                                      break;\n                                    }\n\n                                    return _context3.abrupt(\"break\", 57);\n\n                                  case 54:\n                                    // Don’t go into the next verse or chapter\n                                    if (bookLine.indexOf('\\\\w ') !== -1 || bookLine.indexOf('\\\\+w ') !== -1) wLinesVerseText += bookLine;\n\n                                  case 55:\n                                    _context3.next = 45;\n                                    break;\n\n                                  case 57:\n                                    _context3.next = 62;\n                                    break;\n\n                                  case 59:\n                                    _context3.prev = 59;\n                                    _context3.t2 = _context3[\"catch\"](43);\n\n                                    _iterator25.e(_context3.t2);\n\n                                  case 62:\n                                    _context3.prev = 62;\n\n                                    _iterator25.f();\n\n                                    return _context3.finish(62);\n\n                                  case 65:\n                                    while (regexMatchObject1 = W_FIELDS_REGEX.exec(wLinesVerseText)) {\n                                      // debugLog(`Got ${repoCode} wFields Regex in ${bookID} ${C}:${V}: (${regexMatchObject1.length}) ${JSON.stringify(regexMatchObject1)}`);\n                                      // eslint-disable-next-line no-unused-vars\n                                      _regexMatchObject2 = regexMatchObject1, _regexMatchObject3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_regexMatchObject2, 5), _totalLink = _regexMatchObject3[0], word = _regexMatchObject3[1], lemma = _regexMatchObject3[2], strongs = _regexMatchObject3[3], morph = _regexMatchObject3[4];\n                                      verseWordList.push(word);\n                                      verseWordObjectList.push({\n                                        lemma: lemma,\n                                        strongs: strongs,\n                                        morph: morph\n                                      });\n                                    } // debugLog(`  getOriginalWordLists(${bookID} ${C}:${V}) is returning (${verseWordList.length}) ${verseWordList} (${verseWordObjectList.length}) ${JSON.stringify(verseWordObjectList)}`);\n\n\n                                    return _context3.abrupt(\"return\", {\n                                      originalLanguageRepoCode: originalLanguageRepoCode,\n                                      verseWordList: verseWordList,\n                                      verseWordObjectList: verseWordObjectList\n                                    });\n\n                                  case 67:\n                                  case \"end\":\n                                    return _context3.stop();\n                                }\n                              }\n                            }, _callee3, null, [[14, 20], [27, 33], [43, 59, 62, 65]]);\n                          }));\n                          return _getOriginalWordLists.apply(this, arguments);\n                        };\n\n                        getOriginalWordLists = function _getOriginalWordLists2(_x43, _x44, _x45, _x46) {\n                          return _getOriginalWordLists.apply(this, arguments);\n                        };\n\n                        _checkWAttributes = function _checkWAttributes3() {\n                          _checkWAttributes = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee2(wContents) {\n                            var regexMatchObject, attributeCounter, _attributeName, attributeValue, _regexMatchObject;\n\n                            return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee2$(_context2) {\n                              while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                  case 0:\n                                    // functionLog(`checkWAttributes(${wContents})…`);\n                                    attributeCounter = 0;\n\n                                  case 1:\n                                    if (!(regexMatchObject = ATTRIBUTE_REGEX.exec(wContents))) {\n                                      _context2.next = 26;\n                                      break;\n                                    }\n\n                                    attributeCounter += 1; // debugLog(`  Got attribute Regex in \\\\w: ${attributeCounter} '${JSON.stringify(regexMatchObject2)}`);\n\n                                    _attributeName = regexMatchObject[1], attributeValue = regexMatchObject[2];\n\n                                    if (!(repoCode === 'UHB' || repoCode === 'UGNT')) {\n                                      _context2.next = 20;\n                                      break;\n                                    }\n\n                                    if (attributeCounter === 1) {\n                                      if (_attributeName !== 'lemma') addNoticePartial({\n                                        priority: 857,\n                                        message: \"Unexpected first original \\\\w attribute\",\n                                        details: \"expected 'lemma'\",\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: regexMatchObject[0],\n                                        location: lineLocation\n                                      });\n                                    } else if (attributeCounter === 2) {\n                                      if (_attributeName !== 'strong') addNoticePartial({\n                                        priority: 856,\n                                        message: \"Unexpected second original \\\\w attribute\",\n                                        details: \"expected 'strong'\",\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: regexMatchObject[0],\n                                        location: lineLocation\n                                      });\n                                    } else if (attributeCounter === 3) {\n                                      if (_attributeName !== 'x-morph') addNoticePartial({\n                                        priority: 855,\n                                        message: \"Unexpected third original \\\\w attribute\",\n                                        details: \"expected 'x-morph'\",\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: regexMatchObject[0],\n                                        location: lineLocation\n                                      });\n                                    } else if (attributeCounter === 4) {\n                                      if (_attributeName !== 'x-tw') // we can have TWO of these -- THREE EVEN in EXO 15:23 and 1KI 21:9!!!\n                                        addNoticePartial({\n                                          priority: 854,\n                                          message: \"Unexpected fourth original \\\\w attribute\",\n                                          details: \"expected 'x-tw'\",\n                                          lineNumber: lineNumber,\n                                          C: C,\n                                          V: V,\n                                          excerpt: regexMatchObject[0],\n                                          location: lineLocation\n                                        });\n                                    } else if (attributeCounter === 5) {\n                                      if (_attributeName !== 'x-tw') addNoticePartial({\n                                        priority: 854,\n                                        message: \"Unexpected fifth original \\\\w attribute\",\n                                        details: \"expected second 'x-tw'\",\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: regexMatchObject[0],\n                                        location: lineLocation\n                                      });\n                                    } else if (attributeCounter === 6) {\n                                      if (_attributeName !== 'x-tw') addNoticePartial({\n                                        priority: 854,\n                                        message: \"Unexpected sixth original \\\\w attribute\",\n                                        details: \"expected third 'x-tw'\",\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: regexMatchObject[0],\n                                        location: lineLocation\n                                      });\n                                    } else // #7 or more\n                                      addNoticePartial({\n                                        priority: 853,\n                                        message: \"Unexpected extra original \\\\w attribute\",\n                                        details: details,\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: regexMatchObject[0],\n                                        location: lineLocation\n                                      });\n\n                                    if (!(_attributeName === 'lemma' && repoCode === 'UHB')) {\n                                      _context2.next = 11;\n                                      break;\n                                    }\n\n                                    _regexMatchObject = _text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"HEBREW_CANTILLATION_REGEX\"].exec(attributeValue);\n\n                                    if (_regexMatchObject) {\n                                      // it’s null if no matches\n                                      // debugLog(`Got cantillation regexMatchObject: (${regexMatchObject.length}) ${JSON.stringify(regexMatchObject)}`);\n                                      addNoticePartial({\n                                        priority: 905,\n                                        message: \"Unexpected Hebrew cantillation mark in lemma field\",\n                                        details: \"found \".concat(_regexMatchObject.length, \" '\").concat(_regexMatchObject, \"'\"),\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: attributeValue,\n                                        location: lineLocation\n                                      });\n                                    }\n\n                                    _context2.next = 18;\n                                    break;\n\n                                  case 11:\n                                    if (!(_attributeName === 'x-morph' && (repoCode === 'UHB' && !attributeValue.startsWith('He,') && !attributeValue.startsWith('Ar,') || repoCode === 'UGNT' && !attributeValue.startsWith('Gr,')))) {\n                                      _context2.next = 15;\n                                      break;\n                                    }\n\n                                    addNoticePartial({\n                                      priority: 852,\n                                      message: \"Unexpected original \\\\w x-morph language prefix\",\n                                      details: \"Expected 'He,' 'Ar,' or 'Gr,'\",\n                                      lineNumber: lineNumber,\n                                      C: C,\n                                      V: V,\n                                      excerpt: regexMatchObject[0],\n                                      location: lineLocation\n                                    });\n                                    _context2.next = 18;\n                                    break;\n\n                                  case 15:\n                                    if (!(_attributeName === 'x-tw')) {\n                                      _context2.next = 18;\n                                      break;\n                                    }\n\n                                    _context2.next = 18;\n                                    return ourCheckNotesLinksToOutside(lineNumber, C, V, marker, attributeValue, lineLocation, checkingOptions);\n\n                                  case 18:\n                                    _context2.next = 21;\n                                    break;\n\n                                  case 20:\n                                    // a translation -- perhaps LT or ST, but not UHB or UGNT\n                                    if (attributeCounter === 1) {\n                                      if (_attributeName !== 'x-occurrence') addNoticePartial({\n                                        priority: 848,\n                                        message: \"Unexpected first translation \\\\w attribute\",\n                                        details: \"expected 'x-occurrence'\",\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: regexMatchObject[0],\n                                        location: lineLocation\n                                      });\n                                    } else if (attributeCounter === 2) {\n                                      if (_attributeName !== 'x-occurrences') addNoticePartial({\n                                        priority: 847,\n                                        message: \"Unexpected second translation \\\\w attribute\",\n                                        details: \"expected 'x-occurrences'\",\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: regexMatchObject[0],\n                                        location: lineLocation\n                                      });\n                                    } else // #3 or more\n                                      addNoticePartial({\n                                        priority: 846,\n                                        message: \"Unexpected extra translation \\\\w attribute\",\n                                        details: details,\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: regexMatchObject[0],\n                                        location: lineLocation\n                                      });\n\n                                  case 21:\n                                    if (!(_attributeName === 'strong' || _attributeName === 'x-strong')) {\n                                      _context2.next = 24;\n                                      break;\n                                    }\n\n                                    _context2.next = 24;\n                                    return ourCheckStrongsField(lineNumber, C, V, marker, _attributeName, attributeValue, lineLocation, checkingOptions);\n\n                                  case 24:\n                                    _context2.next = 1;\n                                    break;\n\n                                  case 26:\n                                    if (repoCode === 'UHB' || repoCode === 'UGNT') {\n                                      if (attributeCounter < 3) addNoticePartial({\n                                        priority: 837,\n                                        message: \"Seems too few original \\\\w attributes\",\n                                        details: \"expected 3-4 attributes but only found \".concat(attributeCounter),\n                                        lineNumber: lineNumber,\n                                        C: C,\n                                        V: V,\n                                        excerpt: regexMatchObject1[0],\n                                        location: lineLocation\n                                      });\n                                    } else if (attributeCounter < 2) addNoticePartial({\n                                      priority: 836,\n                                      message: \"Seems too few translation \\\\w attributes\",\n                                      details: \"expected two attributes but only found \".concat(attributeCounter),\n                                      lineNumber: lineNumber,\n                                      C: C,\n                                      V: V,\n                                      excerpt: regexMatchObject1[0],\n                                      location: lineLocation\n                                    });\n\n                                  case 27:\n                                  case \"end\":\n                                    return _context2.stop();\n                                }\n                              }\n                            }, _callee2);\n                          }));\n                          return _checkWAttributes.apply(this, arguments);\n                        };\n\n                        checkWAttributes = function _checkWAttributes2(_x42) {\n                          return _checkWAttributes.apply(this, arguments);\n                        };\n\n                        _ourCheckStrongsField = function _ourCheckStrongsField3() {\n                          _ourCheckStrongsField = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee(lineNumber, C, V, marker, fieldName, fieldText, location, checkingOptions) {\n                            var adjustedLanguageCode, csfResultObject, _iterator22, _step22, coqNoticeEntry, _iterator23, _step23, checkedRepoName, _iterator24, _step24, checkedFilenameExtension;\n\n                            return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {\n                              while (1) {\n                                switch (_context.prev = _context.next) {\n                                  case 0:\n                                    // Checks that the Strongs number field is valid\n                                    // Updates the global list of notices\n                                    // functionLog(`checkUSFMText ourCheckStrongsField(${lineNumber}, ${C}:${V}, ${marker}, ${fieldName}, (${fieldText.length}) '${fieldText}', ${location}, ${JSON.stringify(checkingOptions)})`);\n                                    //parameterAssert(marker !== undefined, \"checkUSFMText ourCheckStrongsField: 'marker' parameter should be defined\");\n                                    //parameterAssert(typeof marker === 'string', `checkUSFMText ourCheckStrongsField: 'marker' parameter should be a string not a '${typeof marker}': ${marker}`);\n                                    //parameterAssert(fieldName !== undefined, \"checkUSFMText ourCheckStrongsField: 'fieldName' parameter should be defined\");\n                                    //parameterAssert(typeof fieldName === 'string', `checkUSFMText ourCheckStrongsField: 'fieldName' parameter should be a string not a '${typeof fieldName}': ${fieldName}`);\n                                    //parameterAssert(fieldText !== undefined, \"checkUSFMText ourCheckStrongsField: 'fieldText' parameter should be defined\");\n                                    //parameterAssert(typeof fieldText === 'string', `checkUSFMText ourCheckStrongsField: 'fieldText' parameter should be a string not a '${typeof fieldText}': ${fieldText}`);\n                                    //parameterAssert(checkingOptions !== undefined, \"checkUSFMText ourCheckStrongsField: 'checkingOptions' parameter should be defined\");\n                                    if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkUSFMText ourCheckStrongsField: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n                                    }\n\n                                    adjustedLanguageCode = languageCode; // This is the language code of the resource with the link\n\n                                    if (languageCode === 'hbo' || languageCode === 'el-x-koine') adjustedLanguageCode = 'en'; // This is a guess (and won’t be needed for TWs when we switch to TWLs)\n\n                                    _context.next = 5;\n                                    return Object(_strongs_field_check__WEBPACK_IMPORTED_MODULE_11__[\"checkStrongsField\"])(username, languageCode, repoCode, fieldName, fieldText, bookID, C, V, location, Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, checkingOptions), {}, {\n                                      defaultLanguageCode: adjustedLanguageCode\n                                    }));\n\n                                  case 5:\n                                    csfResultObject = _context.sent;\n                                    // debugLog(`csfResultObject=${JSON.stringify(csfResultObject)}`);\n                                    // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n                                    //  process results line by line\n                                    _iterator22 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(csfResultObject.noticeList);\n\n                                    try {\n                                      for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n                                        coqNoticeEntry = _step22.value;\n                                        // debugLog(`checkUSFMText ourCheckStrongsField got: ${JSON.stringify(coqNoticeEntry)}`);\n                                        Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"logicAssert\"])(coqNoticeEntry.extra ? coqNoticeEntry.extra !== 'UGNT' : true, \"Expected extra to be a lexicon from \".concat(JSON.stringify(coqNoticeEntry)));\n                                        if (coqNoticeEntry.extra) // it must be an indirect check on a UHAL or UGL article from a lexicon check\n                                          usfmResultObject.noticeList.push(coqNoticeEntry); // Just copy the complete notice as is\n                                        else // For our direct checks, we add the repoCode as an extra value\n                                          addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, coqNoticeEntry), {}, {\n                                            lineNumber: lineNumber,\n                                            C: C,\n                                            V: V,\n                                            fieldName: marker\n                                          }));\n                                      } // The following is needed coz we might be checking the linked UHAL and/or UGL lexicon entries\n\n                                    } catch (err) {\n                                      _iterator22.e(err);\n                                    } finally {\n                                      _iterator22.f();\n                                    }\n\n                                    if (csfResultObject.checkedFileCount && csfResultObject.checkedFileCount > 0) if (typeof usfmResultObject.checkedFileCount === 'number') usfmResultObject.checkedFileCount += csfResultObject.checkedFileCount;else usfmResultObject.checkedFileCount = csfResultObject.checkedFileCount;\n                                    if (csfResultObject.checkedFilesizes && csfResultObject.checkedFilesizes > 0) if (typeof usfmResultObject.checkedFilesizes === 'number') usfmResultObject.checkedFilesizes += csfResultObject.checkedFilesizes;else usfmResultObject.checkedFilesizes = csfResultObject.checkedFilesizes;\n\n                                    if (csfResultObject.checkedRepoNames && csfResultObject.checkedRepoNames.length > 0) {\n                                      _iterator23 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(csfResultObject.checkedRepoNames);\n\n                                      try {\n                                        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n                                          checkedRepoName = _step23.value;\n\n                                          try {\n                                            if (usfmResultObject.checkedRepoNames.indexOf(checkedRepoName) < 0) usfmResultObject.checkedRepoNames.push(checkedRepoName);\n                                          } catch (_unused2) {\n                                            usfmResultObject.checkedRepoNames = [checkedRepoName];\n                                          }\n                                        }\n                                      } catch (err) {\n                                        _iterator23.e(err);\n                                      } finally {\n                                        _iterator23.f();\n                                      }\n                                    }\n\n                                    if (csfResultObject.checkedFilenameExtensions && csfResultObject.checkedFilenameExtensions.length > 0) {\n                                      _iterator24 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(csfResultObject.checkedFilenameExtensions);\n\n                                      try {\n                                        for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n                                          checkedFilenameExtension = _step24.value;\n\n                                          try {\n                                            if (usfmResultObject.checkedFilenameExtensions.indexOf(checkedFilenameExtension) < 0) usfmResultObject.checkedFilenameExtensions.push(checkedFilenameExtension);\n                                          } catch (_unused3) {\n                                            usfmResultObject.checkedFilenameExtensions = [checkedFilenameExtension];\n                                          }\n                                        }\n                                      } catch (err) {\n                                        _iterator24.e(err);\n                                      } finally {\n                                        _iterator24.f();\n                                      }\n                                    } // if (result.checkedFilenameExtensions) debugLog(`ourCheckStrongsField result: ${JSON.stringify(result)}`);\n\n\n                                  case 12:\n                                  case \"end\":\n                                    return _context.stop();\n                                }\n                              }\n                            }, _callee);\n                          }));\n                          return _ourCheckStrongsField.apply(this, arguments);\n                        };\n\n                        ourCheckStrongsField = function _ourCheckStrongsField2(_x34, _x35, _x36, _x37, _x38, _x39, _x40, _x41) {\n                          return _ourCheckStrongsField.apply(this, arguments);\n                        };\n\n                        // Looks for USFM fields with attributes, e.g., \\w, \\zaln-s, \\k-s\n                        // functionLog(`checkUSFMLineAttributes(${lineNumber}, ${C}:${V}, ${marker}='${rest}', ${lineLocation}, ${JSON.stringify(checkingOptions)})…`);\n                        // functionLog(`checkUSFMLineAttributes(${lineNumber}, ${C}:${V}, ${marker}=${rest.length} chars, ${lineLocation}, ${JSON.stringify(checkingOptions)})…`);\n                        details = \"line marker='\\\\\".concat(marker, \"'\"); // Put marker inside string so easy to do RegExp searches\n\n                        adjustedRest = \"\\\\\".concat(marker, \" \").concat(rest);\n                        if (adjustedRest.indexOf('=\"') !== -1) Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(adjustedRest.indexOf('\\\\w ') !== -1 || adjustedRest.indexOf('\\\\+w ') !== -1 || adjustedRest.indexOf('\\\\zaln-s ') !== -1 || adjustedRest.indexOf('\\\\k-s ') !== -1, \"Something wrong in USFM line \".concat(lineNumber, \" \").concat(C, \":\").concat(V, \"'\").concat(adjustedRest, \"' \\\\w=\").concat(adjustedRest.indexOf('\\\\w '), \" \\\\+w=\").concat(adjustedRest.indexOf('\\\\+w '), \" \\\\zaln-s=\").concat(adjustedRest.indexOf('\\\\zaln-s '), \" \\\\k-s=\").concat(adjustedRest.indexOf('\\\\k-s ')));\n                        Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(adjustedRest, '\\\\w ') === Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(adjustedRest, '\\\\w*'), \"checkUSFMLineAttributes expected all \\\\w fields to be closed in \".concat(adjustedRest));\n                        Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(adjustedRest, '\\\\+w ') === Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(adjustedRest, '\\\\+w*'), \"checkUSFMLineAttributes expected all \\\\+w fields to be closed in \".concat(adjustedRest)); // dataAssert(countOccurrencesInString(adjustedRest, '\\\\zaln-s ') === countOccurrencesInString(adjustedRest, '\\\\zaln-s*'), `checkUSFMLineAttributes expected all \\\\zaln-s fields to be closed in ${adjustedRest}`);\n                        // dataAssert(countOccurrencesInString(adjustedRest, '\\\\k-s ') === countOccurrencesInString(adjustedRest, '\\\\k-s*'), `checkUSFMLineAttributes expected all \\\\k-s fields to be closed in ${adjustedRest}`);\n\n                      case 13:\n                        if (!(regexMatchObject1 = W_REGEX.exec(adjustedRest))) {\n                          _context5.next = 18;\n                          break;\n                        }\n\n                        _context5.next = 16;\n                        return checkWAttributes(regexMatchObject1[1]);\n\n                      case 16:\n                        _context5.next = 13;\n                        break;\n\n                      case 18:\n                        while (regexMatchObject1 = KS_REGEX.exec(adjustedRest)) {\n                          // debugLog(`Got ${repoCode} \\\\k-s Regex in ${C}:${V} line: '${JSON.stringify(regexMatchObject1)}`);\n                          Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(repoCode === 'UHB' || repoCode === 'UGNT', \"checkUSFMLineAttributes expected an original language repo not '\".concat(repoCode, \"'\"));\n                          attributeCounter = 0;\n\n                          while (regexMatchObject2 = ATTRIBUTE_REGEX.exec(regexMatchObject1[1])) {\n                            attributeCounter += 1; // debugLog(`  Got attribute Regex in \\\\k-s: ${attributeCounter} '${JSON.stringify(regexMatchObject2)}`);\n\n                            attributeName = regexMatchObject2[1]; //, attributeValue = regexMatchObject2[2];\n\n                            if (attributeCounter === 1) {\n                              if (attributeName !== 'x-tw') addNoticePartial({\n                                priority: 839,\n                                message: \"Unexpected first \\\\k-s attribute\",\n                                details: \"expected 'x-tw'\",\n                                lineNumber: lineNumber,\n                                C: C,\n                                V: V,\n                                excerpt: regexMatchObject2[0],\n                                location: lineLocation\n                              });\n                            } else // #2 or more\n                              addNoticePartial({\n                                priority: 838,\n                                message: \"Unexpected extra \\\\k-s attribute\",\n                                details: details,\n                                lineNumber: lineNumber,\n                                C: C,\n                                V: V,\n                                excerpt: regexMatchObject2[0],\n                                location: lineLocation\n                              });\n                          }\n\n                          if (attributeCounter < 1) addNoticePartial({\n                            priority: 835,\n                            message: \"Seems too few original \\\\k-s attributes\",\n                            details: \"expected one attribute but only found \".concat(attributeCounter),\n                            lineNumber: lineNumber,\n                            C: C,\n                            V: V,\n                            excerpt: regexMatchObject1[0],\n                            location: lineLocation\n                          });\n                        }\n\n                      case 19:\n                        if (!(regexMatchObject1 = ZALN_S_REGEX.exec(adjustedRest))) {\n                          _context5.next = 26;\n                          break;\n                        }\n\n                        _context5.next = 22;\n                        return checkZALNAttributes(regexMatchObject1[1]);\n\n                      case 22:\n                        zalnSuggestion = _context5.sent;\n                        // The only call of this function\n                        if (zalnSuggestion) suggestion = rest.replace(regexMatchObject1[1], zalnSuggestion);\n                        _context5.next = 19;\n                        break;\n\n                      case 26:\n                        return _context5.abrupt(\"return\", suggestion);\n\n                      case 27:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n              return _checkUSFMLineAttributes.apply(this, arguments);\n            };\n\n            checkUSFMLineAttributes = function _checkUSFMLineAttribu(_x9, _x10, _x11, _x12, _x13, _x14, _x15) {\n              return _checkUSFMLineAttributes.apply(this, arguments);\n            };\n\n            checkUSFMLineText = function _checkUSFMLineText(lineNumber, C, V, marker, rest, lineLocation, checkingOptions) {\n              // Removes character formatting within the line contents and checks the remaining text\n              // functionLog(`checkUSFMLineText(${lineNumber}, ${C}:${V}, ${marker}='${rest}', ${lineLocation}, ${JSON.stringify(checkingOptions)})…`);\n              // functionLog(`checkUSFMLineText(${lineNumber}, ${C}:${V}, ${marker}=${rest.length} chars, ${lineLocation}, ${JSON.stringify(checkingOptions)})…`);\n              //if (C !== '0' && C !== '1') { parameterAssert(bookID !== '2JN' && bookID !== '3JN' && bookID !== 'JUD', `checkUSFMLineText() can’t have ${C}:${V} for ${bookID}`); }\n              var details = \"line marker='\\\\\".concat(marker, \"'\"); // Check for invalid character combinations\n\n              if (languageCode === 'hbo') {\n                var regexMatchObject; // NOTE: Use else statements so we only get ONE of these types of errors\n                // NOTE: We have no while loops, so only get one error per line, even if there's multiple errors!!!\n\n                if (regexMatchObject = BAD_HEBREW_SIN_SHIN_DOT_REGEX.exec(rest)) {\n                  // it’s null if no matches\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"debugLog\"])(\"checkUSFMLineText 865: \".concat(bookID, \" \").concat(C, \":\").concat(V, \" line \").concat(lineNumber, \" got BAD character before shin/sin dot regexMatchObject: (\").concat(regexMatchObject.length, \") \").concat(JSON.stringify(regexMatchObject)));\n                  var _characterIndex = regexMatchObject.index;\n                  var excerpt = (_characterIndex > excerptHalfLength ? '…' : '') + rest.substring(_characterIndex - excerptHalfLength, _characterIndex + excerptHalfLengthPlus) + (_characterIndex + excerptHalfLengthPlus < rest.length ? '…' : '');\n                  addNoticePartial({\n                    priority: 865,\n                    message: \"Unexpected Hebrew character before shin/sin dot\",\n                    details: \"found \".concat(regexMatchObject.length, \" '\").concat(regexMatchObject, \"'\"),\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: _characterIndex,\n                    excerpt: excerpt,\n                    location: lineLocation\n                  });\n                } else if (regexMatchObject = BAD_HEBREW_VOWEL_DAGESH_REGEX.exec(rest)) {\n                  // it’s null if no matches\n                  // debugLog(`checkUSFMLineText 864: ${bookID} ${C}:${V} line ${lineNumber} got BAD dagesh after vowel character order regexMatchObject: (${regexMatchObject.length}) ${JSON.stringify(regexMatchObject)}`);\n                  var _characterIndex2 = regexMatchObject.index;\n\n                  var _excerpt = (_characterIndex2 > excerptHalfLength ? '…' : '') + rest.substring(_characterIndex2 - excerptHalfLength, _characterIndex2 + excerptHalfLengthPlus) + (_characterIndex2 + excerptHalfLengthPlus < rest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 864,\n                    message: \"Unexpected Hebrew dagesh after vowel\",\n                    details: \"found \".concat(regexMatchObject.length, \" '\").concat(regexMatchObject, \"'\"),\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: _characterIndex2,\n                    excerpt: _excerpt,\n                    location: lineLocation\n                  });\n                } else if (regexMatchObject = BAD_HEBREW_DAGESH_MAPIQ_REGEX.exec(rest)) {\n                  // it’s null if no matches\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"debugLog\"])(\"checkUSFMLineText 863: \".concat(bookID, \" \").concat(C, \":\").concat(V, \" line \").concat(lineNumber, \" got BAD character before dagesh regexMatchObject: (\").concat(regexMatchObject.length, \") \").concat(JSON.stringify(regexMatchObject)));\n                  var _characterIndex3 = regexMatchObject.index;\n\n                  var _excerpt2 = (_characterIndex3 > excerptHalfLength ? '…' : '') + rest.substring(_characterIndex3 - excerptHalfLength, _characterIndex3 + excerptHalfLengthPlus) + (_characterIndex3 + excerptHalfLengthPlus < rest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 863,\n                    message: \"Unexpected Hebrew character before dagesh or mappiq\",\n                    details: \"found \".concat(regexMatchObject.length, \" '\").concat(regexMatchObject, \"'\"),\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: _characterIndex3,\n                    excerpt: _excerpt2,\n                    location: lineLocation\n                  });\n                } else if (regexMatchObject = BAD_HEBREW_CANTILLATION_DAGESH_REGEX.exec(rest)) {\n                  // it’s null if no matches\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"debugLog\"])(\"checkUSFMLineText 862: \".concat(bookID, \" \").concat(C, \":\").concat(V, \" line \").concat(lineNumber, \" got BAD cantillation mark character before dagesh regexMatchObject: (\").concat(regexMatchObject.length, \") \").concat(JSON.stringify(regexMatchObject)));\n                  var _characterIndex4 = regexMatchObject.index;\n\n                  var _excerpt3 = (_characterIndex4 > excerptHalfLength ? '…' : '') + rest.substring(_characterIndex4 - excerptHalfLength, _characterIndex4 + excerptHalfLengthPlus) + (_characterIndex4 + excerptHalfLengthPlus < rest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 862,\n                    message: \"Unexpected Hebrew cantillation mark before dagesh\",\n                    details: \"found \".concat(regexMatchObject.length, \" '\").concat(regexMatchObject, \"'\"),\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: _characterIndex4,\n                    excerpt: _excerpt3,\n                    location: lineLocation\n                  });\n                } else if ((regexMatchObject = BAD_HEBREW_CANTILLATION_VOWEL_REGEX.exec(rest) // it’s null if no matches\n                // These are the actual accents that occur before the hiriq vowel (5B4) -- others could conceivable occur also\n                ) && (regexMatchObject[0] !== \"\\u0591\\u05B4\" && regexMatchObject[0] !== \"\\u0596\\u05B4\" && regexMatchObject[0] !== \"\\u059B\\u05B4\" && regexMatchObject[0] !== \"\\u05A3\\u05B4\" && regexMatchObject[0] !== \"\\u05A5\\u05B4\" && regexMatchObject[0] !== \"\\u05A7\\u05B4\" && regexMatchObject[0] !== \"\\u05AB\\u05B4\" || rest.indexOf('וּשָׁל') === -1)) {\n                  // Yerushalayim has an exception -- a vowel after a cantillation mark\n                  // debugLog(`checkUSFMLineText 861 regexMatchObject: ${typeof regexMatchObject} (${regexMatchObject.length}) '${regexMatchObject}' ${JSON.stringify(regexMatchObject)}`);\n                  // debugLog(`checkUSFMLineText 861 regexMatchObject: ${typeof regexMatchObject} ${Object.keys(regexMatchObject)}`); // object with keys: 0,index,input,groups\n                  // debugLog(`checkUSFMLineText 861 regexMatchObject: ${typeof regexMatchObject[0]} (${regexMatchObject[0].length}) '${regexMatchObject[0]}'  ${typeof regexMatchObject[0][0]} (${regexMatchObject[0][0].length}) '${regexMatchObject[0][0]}'`);\n                  // debugLog(`checkUSFMLineText 861 regexMatchObject: ${regexMatchObject[0] !== '\\u0591\\u05B4'} ${regexMatchObject[0] !== '\\u0596\\u05B4'} ${rest.indexOf('וּשָׁל') === -1} => ${(regexMatchObject[0] !== '\\u0591\\u05B4' && regexMatchObject[0] !== '\\u0596\\u05B4') || rest.indexOf('וּשָׁל') === -1} '${rest}'`);\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"debugLog\"])(\"checkUSFMLineText 861: \".concat(bookID, \" \").concat(C, \":\").concat(V, \" line \").concat(lineNumber, \" got BAD vowel after cantillation mark character order regexMatchObject: (\").concat(regexMatchObject.length, \") \").concat(JSON.stringify(regexMatchObject)));\n                  var _characterIndex5 = regexMatchObject.index;\n\n                  var _excerpt4 = (_characterIndex5 > excerptHalfLength ? '…' : '') + rest.substring(_characterIndex5 - excerptHalfLength, _characterIndex5 + excerptHalfLengthPlus) + (_characterIndex5 + excerptHalfLengthPlus < rest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 861,\n                    message: \"Unexpected Hebrew vowel after cantillation mark\",\n                    details: \"found \".concat(regexMatchObject.length, \" '\").concat(regexMatchObject, \"'\"),\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: _characterIndex5,\n                    excerpt: _excerpt4,\n                    location: lineLocation\n                  });\n                } else if (regexMatchObject = BAD_HEBREW_FINAL_CONSONANT_REGEX.exec(rest)) {\n                  // it’s null if no matches\n                  // debugLog(`checkUSFMLineText 860 regexMatchObject: ${typeof regexMatchObject} (${regexMatchObject.length}) '${regexMatchObject}' ${JSON.stringify(regexMatchObject)}`);\n                  // debugLog(`checkUSFMLineText 860 regexMatchObject: ${typeof regexMatchObject} ${Object.keys(regexMatchObject)}`); // object with keys: 0,index,input,groups\n                  // debugLog(`checkUSFMLineText 860 regexMatchObject: ${typeof regexMatchObject[0]} (${regexMatchObject[0].length}) '${regexMatchObject[0]}'  ${typeof regexMatchObject[0][0]} (${regexMatchObject[0][0].length}) '${regexMatchObject[0][0]}'`);\n                  // debugLog(`checkUSFMLineText 860: ${bookID} ${C}:${V} line ${lineNumber} got BAD final consonant regexMatchObject: (${regexMatchObject.length}) ${JSON.stringify(regexMatchObject)}`);\n                  var _characterIndex6 = regexMatchObject.index;\n\n                  var _excerpt5 = (_characterIndex6 > excerptHalfLength ? '…' : '') + rest.substring(_characterIndex6 - excerptHalfLength, _characterIndex6 + excerptHalfLengthPlus) + (_characterIndex6 + excerptHalfLengthPlus < rest.length ? '…' : '');\n\n                  if (_excerpt5.indexOf('ןׄ') === -1) // Allow this one exception for ְׄ⁠אַׄהֲׄרֹ֛ׄןׄ in Num 3:39\n                    addNoticePartial({\n                      priority: 860,\n                      message: \"Unexpected Hebrew final consonant not at word end\",\n                      details: \"found \".concat(regexMatchObject.length, \" '\").concat(regexMatchObject, \"'\"),\n                      lineNumber: lineNumber,\n                      C: C,\n                      V: V,\n                      characterIndex: _characterIndex6,\n                      excerpt: _excerpt5,\n                      location: lineLocation\n                    });\n                }\n              } // Check that no \\w markers touch, i.e., shouldn’t have '\\w*\\w' in file\n\n\n              var characterIndex;\n\n              if ((characterIndex = rest.indexOf('\\\\w*\\\\w')) !== -1) {\n                // NOTE: There’s one example of this in ULT 1 Kings 6:1 \"480th\"\n                //  \\w 480|x-occurrence=\"1\" x-occurrences=\"1\"\\w*\\w th|x-occurrence=\"1\" x-occurrences=\"1\"\\w*\n                // Also UST Ezra 6:19 \"14th\" and Ezra 10:9 \"20th\"\n                var badCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(rest, '\\\\w*\\\\w');\n\n                if (badCount > 1 || rest.indexOf('\\\\w*\\\\w th|') === -1 && rest.indexOf('\\\\w*\\\\w st|') === -1 && rest.indexOf('\\\\w*\\\\w nd|') === -1 && rest.indexOf('\\\\w*\\\\w rd|') === -1) {\n                  // there’s multiple cases or it’s not an ordinal like 1st, 2nd, 3rd, 4th\n                  var _excerpt6 = (characterIndex > excerptHalfLength ? '…' : '') + rest.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus) + (characterIndex + excerptHalfLengthPlus < rest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 444,\n                    message: \"Shouldn’t have consecutive word fields without a space\",\n                    details: badCount > 1 ? details + \"\".concat(badCount, \" occurrences found in line\") : details,\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: characterIndex,\n                    excerpt: _excerpt6,\n                    location: lineLocation\n                  });\n                }\n              } // Check that no \\f or \\x markers follow a space\n\n\n              if ((characterIndex = rest.indexOf(' \\\\f ')) !== -1) {\n                var _badCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(rest, ' \\\\f ');\n\n                if (_badCount > 1 || marker !== 'v' || characterIndex > 3) {\n                  // Accept it if it seems to be after the space after a verse number\n                  var _excerpt7 = (characterIndex > excerptHalfLength ? '…' : '') + rest.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus).replace(/ /g, '␣') + (characterIndex + excerptHalfLengthPlus < rest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 443,\n                    message: \"Shouldn’t have a footnote after a space\",\n                    details: _badCount > 1 ? details + \"\".concat(_badCount, \" occurrences found in line\") : details,\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: characterIndex,\n                    excerpt: _excerpt7,\n                    location: lineLocation\n                  });\n                }\n              }\n\n              if ((characterIndex = rest.indexOf(' \\\\x ')) !== -1) {\n                var _badCount2 = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(rest, ' \\\\x ');\n\n                if (_badCount2 > 1 || marker !== 'v' || characterIndex > 3) {\n                  // Accept it if it seems to be after the space after a verse number\n                  var _excerpt8 = (characterIndex > excerptHalfLength ? '…' : '') + rest.substring(characterIndex - excerptHalfLength, characterIndex + excerptHalfLengthPlus).replace(/ /g, '␣') + (characterIndex + excerptHalfLengthPlus < rest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 442,\n                    message: \"Shouldn’t have a cross-reference after a space\",\n                    details: _badCount2 > 1 ? details + \"\".concat(_badCount2, \" occurrences found in line\") : details,\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: characterIndex,\n                    excerpt: _excerpt8,\n                    location: lineLocation\n                  });\n                }\n              } // Remove any self-closed milestones and internal \\v markers\n              // NOTE: replaceAll() is not generally available in browsers yet, so need to use RegExps\n\n\n              var adjustedRest = rest.replace(/\\\\zaln-e\\\\\\*/g, '').replace(/\\\\ts\\\\\\*/g, '').replace(/\\\\k-e\\\\\\*/g, '').replace(/\\\\v /g, '').replace(/\\\\k-s[^\\\\]+\\\\\\*/g, ''); // This last one is a genuine RegExp because it includes the field contents\n              // Remove any simple character markers\n              // NOTE: replaceAll() is not generally available in browsers yet, so need to use RegExps\n\n              var _iterator21 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(SIMPLE_INTERNAL_MARKERS_LIST),\n                  _step21;\n\n              try {\n                for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n                  var charMarker = _step21.value;\n                  // oldTODO: Move the regEx creation so it’s only done once -- not for every line!!!\n                  // const startRegex = new RegExp(`\\\\${charMarker} `, 'g');\n                  // // eslint-disable-next-line no-useless-escape\n                  // const endRegex = new RegExp(`\\\\${charMarker}\\*`, 'g');\n                  // adjustedRest = adjustedRest.replace(startRegex, '').replace(endRegex, '');\n                  adjustedRest = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"ourDeleteAll\"])(adjustedRest, \"\\\\\".concat(charMarker, \" \"));\n                  adjustedRest = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"ourDeleteAll\"])(adjustedRest, \"\\\\\".concat(charMarker, \"*\"));\n                } // if (adjustedRest !== rest) {userLog(`Still Got \\n'${adjustedRest}' from \\n'${rest}'`); return;}\n\n              } catch (err) {\n                _iterator21.e(err);\n              } finally {\n                _iterator21.f();\n              }\n\n              var ixEnd;\n\n              if (marker === 'w') {\n                // Handle first \\w field (i.e., if marker==w) -- there may be more \\w fields in rest\n                var ixWordEnd = adjustedRest.indexOf('|');\n\n                if (ixWordEnd < 0 && adjustedRest.indexOf('lemma=\"') !== -1) {\n                  var _characterIndex7 = 5; // Presumably, a little bit into the word\n\n                  var _excerpt9 = (_characterIndex7 > excerptHalfLength ? '…' : '') + adjustedRest.substring(_characterIndex7 - excerptHalfLength, _characterIndex7 + excerptHalfLengthPlus).replace(/ /g, '␣') + (_characterIndex7 + excerptHalfLengthPlus < adjustedRest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 912,\n                    message: 'Missing | character in \\\\w line',\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: _characterIndex7,\n                    excerpt: _excerpt9,\n                    location: lineLocation\n                  });\n                }\n\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(ixWordEnd >= 1, \"Why1 is w| = \".concat(ixWordEnd, \"? \").concat(languageCode, \" \").concat(bookID, \" \").concat(C, \":\").concat(V, \" \").concat(lineNumber, \" '\\\\\").concat(marker, \"'\"));\n                ixEnd = adjustedRest.indexOf('\\\\w*');\n                if (ixEnd >= 0) adjustedRest = adjustedRest.slice(0, ixWordEnd) + adjustedRest.slice(ixEnd + 3, adjustedRest.length);else Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(false, \"Why is ixEnd = \".concat(ixEnd, \"? \").concat(languageCode, \" \").concat(bookID, \" \").concat(C, \":\").concat(V, \" \").concat(lineNumber, \" '\\\\\").concat(marker, \"'\"));\n              } else if (marker === 'zaln-s') {\n                // Remove first \\zaln-s milestone (if marker == zaln-s)\n                ixEnd = adjustedRest.indexOf('\\\\*');\n                if (ixEnd >= 0) adjustedRest = adjustedRest.slice(ixEnd + 2, adjustedRest.length);else Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(false, \"Why is ixEnd = \".concat(ixEnd, \"? \").concat(languageCode, \" \").concat(bookID, \" \").concat(C, \":\").concat(V, \" \").concat(lineNumber, \" '\\\\\").concat(marker, \"'\"));\n              } else if (marker === 'k-s') {\n                // Remove first \\k-s milestone (if marker == k-s)\n                ixEnd = adjustedRest.indexOf('\\\\*');\n                if (ixEnd >= 0) adjustedRest = adjustedRest.slice(ixEnd + 2, adjustedRest.length);else Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(false, \"Why is ixEnd = \".concat(ixEnd, \"? \").concat(languageCode, \" \").concat(bookID, \" \").concat(C, \":\").concat(V, \" \").concat(lineNumber, \" '\\\\\").concat(marker, \"'\"));\n              } else if (marker === 'f') {\n                // Handle first footnote (if marker == f)\n                ixEnd = adjustedRest.indexOf('\\\\f*');\n                var startIndex = adjustedRest.startsWith('+ ') ? 2 : 0;\n                if (ixEnd >= 0) adjustedRest = adjustedRest.slice(startIndex, ixEnd) + adjustedRest.slice(ixEnd + 3, adjustedRest.length);else {\n                  // dataAssert(false, `Why is ixEnd = ${ixEnd}? ${languageCode} ${bookID} ${C}:${V} ${lineNumber} '\\\\${marker}'`);\n                  addNoticePartial({\n                    priority: 312,\n                    message: 'Possible unclosed footnote',\n                    details: details,\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    location: lineLocation\n                  });\n                } // debugLog(`After removing f field: '${adjustedRest}' from '${rest}'`);\n              } else if (marker === 'va') adjustedRest = adjustedRest.replace('\\\\va*', '');else if (marker === 'ca') adjustedRest = adjustedRest.replace('\\\\ca*', '');else if (marker === 'qs') adjustedRest = adjustedRest.replace('\\\\qs*', ''); // Remove any other \\zaln-s fields in the line\n              // if (adjustedRest.indexOf('\\\\z') !== -1) userLog(`checkUSFMLineText here first at ${lineNumber} ${C}:${V} with ${marker}='${adjustedRest}'`);\n\n\n              var nextZIndex;\n\n              while ((nextZIndex = adjustedRest.indexOf('\\\\zaln-s ')) !== -1) {\n                // functionLog(`checkUSFMLineText here with ${marker}='${adjustedRest}'`);\n                var ixZEnd = adjustedRest.indexOf('\\\\*'); // debugLog(`  ${nextZIndex} and ${ixZEnd}`);\n\n                if (ixZEnd >= 0) {\n                  // dataAssert(ixZEnd > nextZIndex, `Expected closure at ${ixZEnd} to be AFTER \\\\zaln-s (${nextZIndex})`);\n                  adjustedRest = adjustedRest.slice(0, nextZIndex) + adjustedRest.slice(ixZEnd + 2, adjustedRest.length); // debugLog(`  Now '${adjustedRest}'`);\n                } else {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"userLog\"])(\"\\\\zaln-s seems unclosed: 'adjustedRest' from '\".concat(rest, \"'\"));\n                  break;\n                }\n              } // Remove any other \\w fields in the line\n\n\n              var nextWIndex;\n\n              while ((nextWIndex = adjustedRest.indexOf('\\\\w ')) !== -1) {\n                var _ixWordEnd = adjustedRest.indexOf('|');\n\n                if (_ixWordEnd < 0 && adjustedRest.indexOf('lemma=\"') !== -1) {\n                  var _characterIndex8 = nextWIndex + 5; // Presumably, a little bit into the word\n\n\n                  var _excerpt10 = (_characterIndex8 > excerptHalfLength ? '…' : '') + adjustedRest.substring(_characterIndex8 - excerptHalfLength, _characterIndex8 + excerptHalfLengthPlus).replace(/ /g, '␣') + (_characterIndex8 + excerptHalfLengthPlus < adjustedRest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 911,\n                    message: 'Missing | character in \\\\w field',\n                    details: details,\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: _characterIndex8,\n                    excerpt: _excerpt10,\n                    location: lineLocation\n                  });\n                  adjustedRest = ''; // Avoid follow-on errors\n\n                  break;\n                }\n\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(_ixWordEnd > nextWIndex + 3, \"Why2 is w| = \".concat(_ixWordEnd, \"? nextWIndex=\").concat(nextWIndex, \" \").concat(languageCode, \" \").concat(bookID, \" \").concat(C, \":\").concat(V, \" \").concat(lineNumber));\n                var ixWEnd = adjustedRest.indexOf('\\\\w*');\n\n                if (ixWEnd >= 0) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(ixWEnd > nextWIndex, \"Expected closure at \".concat(ixWEnd, \" to be AFTER \\\\w (\").concat(nextWIndex, \")\"));\n                  adjustedRest = adjustedRest.slice(0, nextWIndex) + adjustedRest.slice(nextWIndex + 3, _ixWordEnd) + adjustedRest.slice(ixWEnd + 3, adjustedRest.length); // debugLog(`After removing w field, got '${adjustedRest}'`);\n                } else {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"userLog\"])(\"\\\\w seems unclosed: 'adjustedRest' from '\".concat(rest, \"'\"));\n                  break;\n                }\n              } // Remove any other \\+w fields in the line\n\n\n              while ((nextWIndex = adjustedRest.indexOf('\\\\+w ')) !== -1) {\n                var _ixWordEnd2 = adjustedRest.indexOf('|');\n\n                if (_ixWordEnd2 < 0 && adjustedRest.indexOf('lemma=\"') !== -1) {\n                  var _characterIndex9 = nextWIndex + 6; // Presumably, a little bit into the word\n\n\n                  var _excerpt11 = (_characterIndex9 > excerptHalfLength ? '…' : '') + adjustedRest.substring(_characterIndex9 - excerptHalfLength, _characterIndex9 + excerptHalfLengthPlus).replace(/ /g, '␣') + (_characterIndex9 + excerptHalfLengthPlus < adjustedRest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 911,\n                    message: 'Missing | character in \\\\+w field',\n                    details: details,\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    characterIndex: _characterIndex9,\n                    excerpt: _excerpt11,\n                    location: lineLocation\n                  });\n                  adjustedRest = ''; // Avoid follow-on errors\n\n                  break;\n                }\n\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(_ixWordEnd2 > nextWIndex + 4, \"Why2 is +w| = \".concat(_ixWordEnd2, \"? nextWIndex=\").concat(nextWIndex, \" \").concat(languageCode, \" \").concat(bookID, \" \").concat(C, \":\").concat(V, \" \").concat(lineNumber));\n\n                var _ixWEnd = adjustedRest.indexOf('\\\\+w*');\n\n                if (_ixWEnd >= 0) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(_ixWEnd > nextWIndex, \"Expected closure at \".concat(_ixWEnd, \" to be AFTER \\\\+w (\").concat(nextWIndex, \")\"));\n                  adjustedRest = adjustedRest.slice(0, nextWIndex) + adjustedRest.slice(nextWIndex + 4, _ixWordEnd2) + adjustedRest.slice(_ixWEnd + 4, adjustedRest.length); // debugLog(`After removing w field, got '${adjustedRest}'`);\n                } else {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"userLog\"])(\"\\\\+w seems unclosed: 'adjustedRest' from '\".concat(rest, \"'\"));\n                  break;\n                }\n              } // Remove any other \\f fields in the line\n\n\n              var nextFIndex;\n\n              while ((nextFIndex = adjustedRest.indexOf('\\\\f + ')) !== -1) {\n                var ixFEnd = adjustedRest.indexOf('\\\\f*');\n\n                if (ixFEnd >= 0) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"dataAssert\"])(ixFEnd > nextWIndex, \"Expected closure at \".concat(ixFEnd, \" to be AFTER \\\\w (\").concat(nextFIndex, \")\"));\n                  adjustedRest = \"\".concat(adjustedRest.slice(0, nextFIndex), \" \").concat(adjustedRest.slice(nextFIndex + 5, ixFEnd)).concat(adjustedRest.slice(ixFEnd + 3, adjustedRest.length)); // functionLog(`checkUSFMLineText(${lineNumber}, ${C}:${V}, ${marker}='${rest}', ${lineLocation}, ${JSON.stringify(checkingOptions)})…`);\n                  // debugLog(`After removing footnote: '${adjustedRest}'`);\n                } else {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"userLog\"])(\"\\\\f seems unclosed: 'adjustedRest' from '\".concat(rest, \"'\"));\n                  break;\n                }\n              }\n\n              if (adjustedRest) {\n                var _characterIndex10;\n\n                if ((_characterIndex10 = adjustedRest.indexOf('\"')) !== -1) {\n                  var _excerpt12 = (_characterIndex10 > excerptHalfLength ? '…' : '') + adjustedRest.substring(_characterIndex10 - excerptHalfLength, _characterIndex10 + excerptHalfLengthPlus).replace(/ /g, '␣') + (_characterIndex10 + excerptHalfLengthPlus < adjustedRest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 776,\n                    message: 'Unexpected \" straight quote character',\n                    details: details,\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    excerpt: _excerpt12,\n                    location: lineLocation\n                  }); // debugLog(`ERROR 776: in ${marker} '${adjustedRest}' from '${rest}'`);\n                }\n\n                if ((_characterIndex10 = adjustedRest.indexOf(\"'\")) >= 0) {\n                  var _excerpt13 = (_characterIndex10 > excerptHalfLength ? '…' : '') + adjustedRest.substring(_characterIndex10 - excerptHalfLength, _characterIndex10 + excerptHalfLengthPlus).replace(/ /g, '␣') + (_characterIndex10 + excerptHalfLengthPlus < adjustedRest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 775,\n                    message: \"Unexpected ' straight quote character\",\n                    details: details,\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    excerpt: _excerpt13,\n                    location: lineLocation\n                  }); // debugLog(`ERROR 775: in ${marker} '${adjustedRest}' from '${rest}'`);\n                }\n\n                if ((_characterIndex10 = adjustedRest.indexOf('\\\\')) !== -1 || adjustedRest.indexOf('|') !== -1) {\n                  // functionLog(`checkUSFMLineText ${languageCode} ${filename} ${lineNumber} ${C}:${V} somehow ended up with ${marker}='${adjustedRest}'`);\n                  if (_characterIndex10 === -1) _characterIndex10 = adjustedRest.indexOf('|');\n\n                  var _excerpt14 = (_characterIndex10 > excerptHalfLength ? '…' : '') + adjustedRest.substring(_characterIndex10 - excerptHalfLength, _characterIndex10 + excerptHalfLengthPlus).replace(/ /g, '␣') + (_characterIndex10 + excerptHalfLengthPlus < adjustedRest.length ? '…' : '');\n\n                  addNoticePartial({\n                    priority: 875,\n                    message: \"Unexpected USFM field\",\n                    details: details,\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V,\n                    excerpt: _excerpt14,\n                    location: lineLocation\n                  });\n                }\n\n                if (adjustedRest !== rest) // Only re-check if line has changed (because original is checked in checkUSFMLineInternals())\n                  // Note: false (below) is for allowedLinks flag\n                  ourCheckTextField(lineNumber, C, V, 'raw USFM line', \"adjusted text from \\\\\".concat(marker), adjustedRest, false, lineLocation, checkingOptions);\n              }\n            };\n\n            checkUSFMFileContents = function _checkUSFMFileContent(filename, fileText, markerSet, fileLocation, checkingOptions) {\n              // Does global checks on the file\n              // Note: These run the risk of duplicating messages that are found within individual lines.\n              //          However, it’s common in USFM for parentheses to open '(' in one verse\n              //                      and close ')' in another. So the USFM line check can’t check that.\n              //          Also, the USFM v3.0 spec seems to allow/require whitespace reduction,\n              //              i.e., newLines can conceivably appear WITHIN a footnote for example.\n              // functionLog(`checkUSFMFileContents(${filename}, ${fileText.length}, ${markerSet}, ${fileLocation}, ${JSON.stringify(checkingOptions)})…`);\n              // NOTE: Better to do this for each line for most uW USFM files\n              // Check matched pairs of markers like \\add ... \\add*, \\f .. \\f*\n              if (!['en', 'hbo', 'el-x-koine'].includes(languageCode)) {\n                var _iterator16 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(MATCHED_CHARACTER_FORMATTING_FILE_PAIRS_LIST),\n                    _step16;\n\n                try {\n                  for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n                    var punctSet = _step16.value;\n                    var opener = \"\\\\\".concat(punctSet[0], \" \"),\n                        closer = \"\\\\\".concat(punctSet[1]);\n                    var lCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(fileText, opener);\n                    var rCount = Object(_text_handling_functions__WEBPACK_IMPORTED_MODULE_6__[\"countOccurrencesInString\"])(fileText, closer);\n                    if (lCount !== rCount) addNoticePartial({\n                      priority: 873,\n                      message: \"Mismatched \".concat(opener).concat(closer, \" fields\"),\n                      details: \"(opening=\".concat(lCount.toLocaleString(), \", closing=\").concat(rCount.toLocaleString(), \")\"),\n                      location: fileLocation\n                    });\n                  }\n                } catch (err) {\n                  _iterator16.e(err);\n                } finally {\n                  _iterator16.f();\n                }\n              } // Now do the general global checks (e.g., for general punctuation)\n\n\n              ourBasicFileChecks(filename, fileText, fileLocation, checkingOptions);\n\n              var _iterator17 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(EXPECTED_MARKERS_LIST),\n                  _step17;\n\n              try {\n                for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n                  var _expectedMarker2 = _step17.value;\n                  if (!markerSet.has(_expectedMarker2) && (!_expectedMarker2.endsWith('1') || !markerSet.has(_expectedMarker2.slice(0, _expectedMarker2.length - 1)))) // NOTE: \\mt(1) is required by Proskomma so increased this priority\n                    addNoticePartial({\n                      priority: _expectedMarker2 === 'mt1' ? 921 : 519,\n                      message: \"Missing expected USFM line\",\n                      excerpt: \"missing \\\\\".concat(_expectedMarker2),\n                      location: fileLocation\n                    });\n                }\n              } catch (err) {\n                _iterator17.e(err);\n              } finally {\n                _iterator17.f();\n              }\n\n              if (_books_books__WEBPACK_IMPORTED_MODULE_7__[\"isExtraBookID\"](bookID)) {\n                var _iterator18 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(EXPECTED_PERIPHERAL_BOOK_MARKER_LIST),\n                    _step18;\n\n                try {\n                  for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n                    var expectedMarker = _step18.value;\n                    if (!markerSet.has(expectedMarker)) addNoticePartial({\n                      priority: 517,\n                      message: \"Missing expected USFM line\",\n                      excerpt: \"missing \\\\\".concat(expectedMarker),\n                      location: fileLocation\n                    });else {\n                      var _iterator19 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(EXPECTED_BIBLE_BOOK_MARKERS_LIST),\n                          _step19;\n\n                      try {\n                        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n                          var _expectedMarker = _step19.value;\n                          if (!markerSet.has(_expectedMarker)) addNoticePartial({\n                            priority: 518,\n                            message: \"Missing expected USFM line\",\n                            excerpt: \"missing \\\\\".concat(_expectedMarker),\n                            location: fileLocation\n                          });\n                        }\n                      } catch (err) {\n                        _iterator19.e(err);\n                      } finally {\n                        _iterator19.f();\n                      }\n                    }\n                  }\n                } catch (err) {\n                  _iterator18.e(err);\n                } finally {\n                  _iterator18.f();\n                }\n              }\n\n              var _iterator20 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(DEPRECATED_MARKERS_LIST),\n                  _step20;\n\n              try {\n                for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                  var deprecatedMarker = _step20.value;\n                  if (markerSet.has(deprecatedMarker)) addNoticePartial({\n                    priority: 218,\n                    message: \"Using deprecated USFM marker\",\n                    excerpt: \"\\\\\".concat(deprecatedMarker),\n                    location: fileLocation\n                  });\n                }\n              } catch (err) {\n                _iterator20.e(err);\n              } finally {\n                _iterator20.f();\n              }\n            };\n\n            ourBasicFileChecks = function _ourBasicFileChecks(filename, fileText, fileLocation, checkingOptions) {\n              // Does basic checks for small errors like leading/trailing spaces, etc.\n              // We assume that checking for compulsory fields is done elsewhere\n              // Updates the global list of notices\n              //parameterAssert(filename !== undefined, \"cUSFM ourBasicFileChecks: 'filename' parameter should be defined\");\n              //parameterAssert(typeof filename === 'string', `cUSFM ourBasicFileChecks: 'filename' parameter should be a string not a '${typeof filename}'`);\n              //parameterAssert(fileText !== undefined, \"cUSFM ourBasicFileChecks: 'fileText' parameter should be defined\");\n              //parameterAssert(typeof fileText === 'string', `cUSFM ourBasicFileChecks: 'fileText' parameter should be a string not a '${typeof fileText}'`);\n              //parameterAssert(checkingOptions !== undefined, \"cUSFM ourBasicFileChecks: 'checkingOptions' parameter should be defined\");\n              var resultObject = Object(_file_text_check__WEBPACK_IMPORTED_MODULE_10__[\"checkTextfileContents\"])(username, languageCode, repoCode, 'USFM', filename, fileText, fileLocation, checkingOptions); // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n              //  process results line by line\n\n              var _iterator15 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(resultObject.noticeList),\n                  _step15;\n\n              try {\n                for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                  var noticeEntry = _step15.value;\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"logicAssert\"])(Object.keys(noticeEntry).length >= 5, \"USFM ourBasicFileChecks notice length=\".concat(Object.keys(noticeEntry).length));\n                  addNoticePartial(noticeEntry);\n                }\n              } catch (err) {\n                _iterator15.e(err);\n              } finally {\n                _iterator15.f();\n              }\n            };\n\n            ourCheckTextField = function _ourCheckTextField(lineNumber, C, V, fieldType, fieldName, fieldText, allowedLinks, fieldLocation, checkingOptions) {\n              // Does basic checks for small errors like leading/trailing spaces, etc.\n              // We assume that checking for compulsory fields is done elsewhere\n              // Updates the global list of notices\n              // debugLog(`cUSFM ourCheckTextField(${lineNumber}, ${C}:${V}, ${fieldName}, (${fieldText.length} chars), ${allowedLinks}, ${fieldLocation}, ${JSON.stringify(checkingOptions)})…`);\n              //parameterAssert(lineNumber !== undefined, \"cUSFM ourCheckTextField: 'lineNumber' parameter should be defined\");\n              //parameterAssert(typeof lineNumber === 'number', `cUSFM ourCheckTextField: 'lineNumber' parameter should be a number not a '${typeof lineNumber}'`);\n              //parameterAssert(C !== undefined, \"cUSFM ourCheckTextField: 'C' parameter should be defined\");\n              //parameterAssert(typeof C === 'string', `cUSFM ourCheckTextField: 'C' parameter should be a string not a '${typeof C}'`);\n              //parameterAssert(V !== undefined, \"cUSFM ourCheckTextField: 'V' parameter should be defined\");\n              //parameterAssert(typeof V === 'string', `cUSFM ourCheckTextField: 'V' parameter should be a string not a '${typeof V}'`);\n              //parameterAssert(fieldType !== undefined, \"cUSFM ourCheckTextField: 'fieldType' parameter should be defined\");\n              //parameterAssert(typeof fieldType === 'string', `cUSFM ourCheckTextField: 'fieldType' parameter should be a string not a '${typeof fieldType}'`);\n              //parameterAssert(fieldType === 'USFM line' || fieldType === 'raw USFM line', `cUSFM ourCheckTextField: Unrecognized 'fieldType' parameter: ${fieldType}`);\n              //parameterAssert(fieldName !== undefined, \"cUSFM ourCheckTextField: 'fieldName' parameter should be defined\");\n              //parameterAssert(typeof fieldName === 'string', `cUSFM ourCheckTextField: 'fieldName' parameter should be a string not a '${typeof fieldName}'`);\n              //parameterAssert(fieldName !== '', `cUSFM ourCheckTextField: ${fieldType} 'fieldName' parameter should be not be an empty string`);\n              //parameterAssert(fieldText !== undefined, \"cUSFM ourCheckTextField: 'fieldText' parameter should be defined\");\n              //parameterAssert(typeof fieldText === 'string', `cUSFM ourCheckTextField: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n              //parameterAssert(allowedLinks === true || allowedLinks === false, \"cUSFM ourCheckTextField: allowedLinks parameter must be either true or false\");\n              //parameterAssert(fieldLocation !== undefined, \"cUSFM ourCheckTextField: 'fieldLocation' parameter should be defined\");\n              //parameterAssert(typeof fieldLocation === 'string', `cUSFM ourCheckTextField: 'fieldLocation' parameter should be a string not a '${typeof fieldLocation}'`);\n              var dbtcResultObject = Object(_field_text_check__WEBPACK_IMPORTED_MODULE_9__[\"checkTextField\"])(username, languageCode, repoCode, fieldType, fieldName, fieldText, allowedLinks, fieldLocation, checkingOptions); // Process noticeList line by line to filter out potential false positives\n              //  for this particular kind of text field\n\n              var _iterator14 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(dbtcResultObject.noticeList),\n                  _step14;\n\n              try {\n                for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                  var noticeEntry = _step14.value;\n                  // debugLog(\"Notice keys\", JSON.stringify(Object.keys(noticeEntry)));\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"logicAssert\"])(Object.keys(noticeEntry).length >= 4, \"USFM ourCheckTextField notice length=\".concat(Object.keys(noticeEntry).length));\n                  addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                    lineNumber: lineNumber,\n                    C: C,\n                    V: V\n                  })); // }\n                }\n              } catch (err) {\n                _iterator14.e(err);\n              } finally {\n                _iterator14.f();\n              }\n            };\n\n            CVCheck = function _CVCheck(bookID, givenText, CVlocation) {\n              /*\n              This check uses the USFM-JS package to parse the USFM\n                  and then it checks the results to make sure all expected verses are there.\n               This has the side advantage that it’s using exactly the same code/package that’s\n                  used by tCore and tC Create.\n               Note that for verse bridges, USFM-JS returns the bridge, e.g., 24-25\n                  AS WELL AS an entry for the bridged verses, e.g., 24 and 25.\n               Sadly this package doesn’t return any errors or warnings from its parsing\n                  so that’s handle other ways in other places.\n               Note that this code below does NOT check for chapters and verses\n                  being in the correct order. That’s done elsewhere.\n              */\n              // functionLog(`Running CVCheck(${bookID}, ${givenText.length}, ${CVlocation}) using USFM-JS (can take quite a while for a large book)…`);\n              var chapterNumberString, verseNumberString;\n              var MINIMUM_TEXT_WORDS = 4;\n              var MINIMUM_WORD_LENGTH = 2;\n\n              function hasText(verseObjects) {\n                var gotDeep = false;\n\n                var _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(verseObjects),\n                    _step2;\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    var someObject = _step2.value;\n                    // debugLog(\"someObject\", JSON.stringify(someObject));\n                    if (someObject['type'] === 'text' && someObject['text'].length > MINIMUM_TEXT_WORDS) return true;\n                    if (someObject['type'] === 'word' && someObject['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                    if (someObject['type'] === 'milestone') {\n                      var _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someObject['children']),\n                          _step3;\n\n                      try {\n                        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                          var someSubobject = _step3.value;\n                          // debugLog(\"someSubobject\", JSON.stringify(someSubobject));\n                          if (someSubobject['type'] === 'text' && someSubobject['text'].length > MINIMUM_TEXT_WORDS) return true;\n                          if (someSubobject['type'] === 'word' && someSubobject['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                          if (someSubobject['type'] === 'milestone') {\n                            var _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someSubobject['children']),\n                                _step4;\n\n                            try {\n                              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                                var someSub2object = _step4.value;\n                                // debugLog(\"someSub2object\", JSON.stringify(someSub2object));\n                                if (someSub2object['type'] === 'text' && someSub2object['text'].length > MINIMUM_TEXT_WORDS) return true;\n                                if (someSub2object['type'] === 'word' && someSub2object['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                                if (someSub2object['type'] === 'milestone') {\n                                  var _iterator5 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someSub2object['children']),\n                                      _step5;\n\n                                  try {\n                                    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                                      var someSub3object = _step5.value;\n                                      // debugLog(\"someSub3object\", JSON.stringify(someSub3object));\n                                      if (someSub3object['type'] === 'text' && someSub3object['text'].length > MINIMUM_TEXT_WORDS) return true;\n                                      if (someSub3object['type'] === 'word' && someSub3object['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                                      if (someSub3object['type'] === 'milestone') {\n                                        var _iterator6 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someSub3object['children']),\n                                            _step6;\n\n                                        try {\n                                          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                                            var someSub4object = _step6.value;\n                                            // debugLog(\"someSub4object\", JSON.stringify(someSub4object));\n                                            if (someSub4object['type'] === 'text' && someSub4object['text'].length > MINIMUM_TEXT_WORDS) return true;\n                                            if (someSub4object['type'] === 'word' && someSub4object['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                                            if (someSub4object['type'] === 'milestone') {\n                                              var _iterator7 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someSub4object['children']),\n                                                  _step7;\n\n                                              try {\n                                                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                                                  var someSub5object = _step7.value;\n                                                  // debugLog(\"someSub5object\", JSON.stringify(someSub5object));\n                                                  if (someSub5object['type'] === 'text' && someSub5object['text'].length > MINIMUM_TEXT_WORDS) return true;\n                                                  if (someSub5object['type'] === 'word' && someSub5object['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                                                  if (someSub5object['type'] === 'milestone') {\n                                                    var _iterator8 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someSub5object['children']),\n                                                        _step8;\n\n                                                    try {\n                                                      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                                                        var someSub6object = _step8.value;\n                                                        // debugLog(\"someSub6object\", bookID, CVlocation, JSON.stringify(someSub6object));\n                                                        if (someSub6object['type'] === 'text' && someSub6object['text'].length > MINIMUM_TEXT_WORDS) return true;\n                                                        if (someSub6object['type'] === 'word' && someSub6object['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                                                        if (someSub6object['type'] === 'milestone') {\n                                                          var _iterator9 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someSub6object['children']),\n                                                              _step9;\n\n                                                          try {\n                                                            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                                                              var someSub7object = _step9.value;\n                                                              // debugLog(\"someSub7object\", bookID, CVlocation, JSON.stringify(someSub7object));\n                                                              if (someSub7object['type'] === 'text' && someSub7object['text'].length > MINIMUM_TEXT_WORDS) return true;\n                                                              if (someSub7object['type'] === 'word' && someSub7object['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                                                              if (someSub7object['type'] === 'milestone') {\n                                                                // UST Luke 15:3 has eight levels of nesting !!!\n                                                                var _iterator10 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someSub7object['children']),\n                                                                    _step10;\n\n                                                                try {\n                                                                  for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                                                                    var someSub8object = _step10.value;\n                                                                    // debugLog(\"someSub8object\", bookID, CVlocation, JSON.stringify(someSub8object));\n                                                                    if (someSub8object['type'] === 'text' && someSub8object['text'].length > MINIMUM_TEXT_WORDS) return true;\n                                                                    if (someSub8object['type'] === 'word' && someSub8object['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                                                                    if (someSub8object['type'] === 'milestone') {\n                                                                      var _iterator11 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someSub8object['children']),\n                                                                          _step11;\n\n                                                                      try {\n                                                                        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                                                                          var someSub9object = _step11.value;\n                                                                          // debugLog(\"someSub9object\", bookID, CVlocation, JSON.stringify(someSub9object));\n                                                                          if (someSub9object['type'] === 'text' && someSub9object['text'].length > MINIMUM_TEXT_WORDS) return true;\n                                                                          if (someSub9object['type'] === 'word' && someSub9object['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                                                                          if (someSub9object['type'] === 'milestone') {\n                                                                            var _iterator12 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someSub9object['children']),\n                                                                                _step12;\n\n                                                                            try {\n                                                                              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                                                                                var someSub10object = _step12.value;\n                                                                                // debugLog(\"someSub10object\", bookID, CVlocation, JSON.stringify(someSub10object));\n                                                                                if (someSub10object['type'] === 'text' && someSub10object['text'].length > MINIMUM_TEXT_WORDS) return true;\n                                                                                if (someSub10object['type'] === 'word' && someSub10object['text'].length > MINIMUM_WORD_LENGTH) return true;\n\n                                                                                if (someSub10object['type'] === 'milestone') {\n                                                                                  // UST Obadiah 1:8 has eleven levels of nesting !!!\n                                                                                  var _iterator13 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(someSub10object['children']),\n                                                                                      _step13;\n\n                                                                                  try {\n                                                                                    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                                                                                      var someSub11object = _step13.value;\n                                                                                      // debugLog(\"someSub11object\", bookID, CVlocation, JSON.stringify(someSub11object));\n                                                                                      if (someSub11object['type'] === 'text' && someSub11object['text'].length > MINIMUM_TEXT_WORDS) return true;\n                                                                                      if (someSub11object['type'] === 'word' && someSub11object['text'].length > MINIMUM_WORD_LENGTH) return true;\n                                                                                      if (someSub11object['type'] === 'milestone') gotDeep = true;\n                                                                                    }\n                                                                                  } catch (err) {\n                                                                                    _iterator13.e(err);\n                                                                                  } finally {\n                                                                                    _iterator13.f();\n                                                                                  }\n                                                                                }\n                                                                              }\n                                                                            } catch (err) {\n                                                                              _iterator12.e(err);\n                                                                            } finally {\n                                                                              _iterator12.f();\n                                                                            }\n                                                                          }\n                                                                        }\n                                                                      } catch (err) {\n                                                                        _iterator11.e(err);\n                                                                      } finally {\n                                                                        _iterator11.f();\n                                                                      }\n                                                                    }\n                                                                  }\n                                                                } catch (err) {\n                                                                  _iterator10.e(err);\n                                                                } finally {\n                                                                  _iterator10.f();\n                                                                }\n                                                              }\n                                                            }\n                                                          } catch (err) {\n                                                            _iterator9.e(err);\n                                                          } finally {\n                                                            _iterator9.f();\n                                                          }\n                                                        }\n                                                      }\n                                                    } catch (err) {\n                                                      _iterator8.e(err);\n                                                    } finally {\n                                                      _iterator8.f();\n                                                    }\n                                                  }\n                                                }\n                                              } catch (err) {\n                                                _iterator7.e(err);\n                                              } finally {\n                                                _iterator7.f();\n                                              }\n                                            }\n                                          }\n                                        } catch (err) {\n                                          _iterator6.e(err);\n                                        } finally {\n                                          _iterator6.f();\n                                        }\n                                      }\n                                    }\n                                  } catch (err) {\n                                    _iterator5.e(err);\n                                  } finally {\n                                    _iterator5.f();\n                                  }\n                                }\n                              }\n                            } catch (err) {\n                              _iterator4.e(err);\n                            } finally {\n                              _iterator4.f();\n                            }\n                          }\n                        }\n                      } catch (err) {\n                        _iterator3.e(err);\n                      } finally {\n                        _iterator3.f();\n                      }\n                    }\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                if (gotDeep) Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"logicAssert\"])(false, \"We need to add more depth levels to hasText() for \".concat(bookID, \" \").concat(chapterNumberString, \":\").concat(verseNumberString)); // debugLog(`hasText() for ${chapterNumberString}:${verseNumberString} returning false with ${typeof verseObjects} (${verseObjects.length}): ${JSON.stringify(verseObjects)}`);\n\n                return false;\n              } // end of hasText function\n              // Main code for CVCheck function\n              // const lowercaseBookID = bookID.toLowerCase();\n\n\n              var expectedVersesPerChapterList = [];\n\n              try {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"logicAssert\"])(lowercaseBookID !== 'obs', \"Shouldn’t happen in usfm-text-check1\");\n                expectedVersesPerChapterList = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"expectedVersesPerChapterList\"](bookID); // A list of integers -- numVerses for each chapter\n                // debugLog(\"Got chapterList\", JSON.stringify(expectedVersesPerChapterList));\n              } catch (_unused) {} // Try doing this using USFM-JS via runUsfmJsCheck()\n\n\n              var result1 = Object(_usfm_js_check__WEBPACK_IMPORTED_MODULE_12__[\"runUsfmJsCheck\"])(givenText); // debugLog(\"Got a JSON result\", JSON.stringify(result1));\n              // debugLog(\"Got a JSON headers result\", JSON.stringify(result1.returnedJSON.headers));\n              // debugLog(\"Got a JSON chapters result\", JSON.stringify(result1.returnedJSON.chapters));\n\n              for (chapterNumberString in result1.returnedJSON.chapters) {\n                // debugLog(`chapterNumberString=${chapterNumberString}`);\n                // if (chapterNumberString === '3')\n                //     userLog(`chapter ${chapterNumberString} ${JSON.stringify(result1.returnedJSON.chapters[chapterNumberString])}`);\n                var chapterInt = void 0;\n\n                try {\n                  chapterInt = Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"ourParseInt\"])(chapterNumberString);\n                } catch (usfmCIerror) {\n                  Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"userLog\"])(\"CVCheck couldn\\u2019t convert \".concat(bookID, \" chapter '\").concat(chapterNumberString, \"': \").concat(usfmCIerror));\n                }\n\n                if (chapterInt < 1 || chapterInt > expectedVersesPerChapterList.length) addNoticePartial({\n                  priority: 869,\n                  message: \"Chapter number out of range\",\n                  C: chapterNumberString,\n                  excerpt: \"\".concat(bookID, \" \").concat(chapterNumberString),\n                  location: CVlocation\n                });else {\n                  var discoveredVerseList = [],\n                      discoveredVerseWithTextList = []; // debugLog(`Chapter ${chapterNumberString} verses ${Object.keys(result1.returnedJSON.chapters[chapterNumberString])}`);\n\n                  for (verseNumberString in result1.returnedJSON.chapters[chapterNumberString]) {\n                    if (verseNumberString === 'front') continue; // skip the rest here\n                    // if (chapterNumberString === '3')\n                    //     userLog(`verseNumberString=${verseNumberString}`);\n                    // if (chapterNumberString === '3' && verseNumberString === '14')\n                    //     userLog(`verse ${verseNumberString} ${JSON.stringify(result1.returnedJSON.chapters[chapterNumberString][verseNumberString])}`);\n\n                    var verseObjects = result1.returnedJSON.chapters[chapterNumberString][verseNumberString]['verseObjects']; // if (chapterNumberString === '3' && verseNumberString === '14')\n                    //     userLog(`verseObjects=${verseObjects}`);\n\n                    var verseHasText = hasText(verseObjects);\n\n                    if (verseNumberString.indexOf('-') !== -1) {\n                      // It’s a verse bridge\n                      var bits = verseNumberString.split('-');\n                      var firstVString = bits[0],\n                          secondVString = bits[1];\n                      var intFirstV = void 0,\n                          intSecondV = void 0;\n\n                      try {\n                        intFirstV = Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"ourParseInt\"])(firstVString);\n                        intSecondV = Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"ourParseInt\"])(secondVString);\n\n                        for (var v = intFirstV; v <= intSecondV; v++) {\n                          discoveredVerseList.push(v);\n                          if (verseHasText) discoveredVerseWithTextList.push(v);\n                        }\n                      } catch (usfmVIerror) {\n                        addNoticePartial({\n                          priority: 762,\n                          message: \"Unable to convert verse bridge numbers to integers\",\n                          C: chapterNumberString,\n                          V: verseNumberString,\n                          characterIndex: 3,\n                          excerpt: verseNumberString,\n                          location: \"\".concat(CVlocation, \" with \").concat(usfmVIerror)\n                        });\n                      }\n                    } else {\n                      // It’s NOT a verse bridge\n                      var verseInt = void 0;\n\n                      try {\n                        verseInt = Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"ourParseInt\"])(verseNumberString);\n                        discoveredVerseList.push(verseInt);\n                      } catch (usfmPIerror) {\n                        Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"userLog\"])(\"We couldn\\u2019t convert \".concat(bookID, \" \").concat(chapterNumberString, \" verse '\").concat(verseNumberString, \"': \").concat(usfmPIerror));\n                      }\n\n                      if (verseInt < 1 || verseInt > expectedVersesPerChapterList[chapterInt - 1]) addNoticePartial({\n                        priority: 868,\n                        message: \"Verse number out of range\",\n                        C: chapterNumberString,\n                        V: verseNumberString,\n                        excerpt: \"\".concat(bookID, \" \").concat(chapterNumberString, \":\").concat(verseNumberString),\n                        location: CVlocation\n                      });\n                      if (verseHasText) discoveredVerseWithTextList.push(verseInt);\n                    }\n                  } // Check that expected verses numbers were actually all there\n                  // debugLog(\"Doing missing verse check\");\n\n\n                  for (var _v = 1; _v <= expectedVersesPerChapterList[chapterInt - 1]; _v++) {\n                    if (!discoveredVerseList.includes(_v)) if (_books_books__WEBPACK_IMPORTED_MODULE_7__[\"isOftenMissing\"](bookID, chapterInt, _v)) addNoticePartial({\n                      priority: 67,\n                      C: chapterNumberString,\n                      V: \"\".concat(_v),\n                      message: \"Verse appears to be left out\",\n                      location: CVlocation\n                    });else addNoticePartial({\n                      priority: 867,\n                      C: chapterNumberString,\n                      V: \"\".concat(_v),\n                      message: \"Verse appears to be missing\",\n                      location: CVlocation\n                    }); // Check for existing verses but missing text\n\n                    if (!discoveredVerseWithTextList.includes(_v)) {\n                      // const firstVerseObject = result1.returnedJSON.chapters[chapterNumberString][v]['verseObjects'][0];\n                      // debugLog(\"firstVerseObject\", JSON.stringify(firstVerseObject));\n                      addNoticePartial({\n                        priority: 866,\n                        C: chapterNumberString,\n                        V: \"\".concat(_v),\n                        message: \"Verse seems to have no text\",\n                        location: CVlocation\n                      });\n                    }\n                  }\n                }\n              }\n\n              addSuccessMessage(\"Checked C:V patterns for \".concat(bookID).concat(CVlocation));\n            };\n\n            ourRunBCSGrammarCheck = function _ourRunBCSGrammarChec(filename, fileText, fileLocation) {\n              // Runs the BCS USFM Grammar checker\n              //  which can be quite time-consuming on large, complex USFM files\n              // functionLog(\"Running our BCS USFM grammar check (can take quite a while for a large book)…\");\n              var grammarCheckResult;\n\n              try {\n                grammarCheckResult = Object(_BCS_usfm_grammar_check__WEBPACK_IMPORTED_MODULE_13__[\"runBCSGrammarCheck\"])('strict', bookID, fileText, filename, fileLocation, checkingOptions); // NOTE: We haven’t figured out how to get ERRORS out of this parser yet\n                // debugLog(`  Finished our BCS USFM grammar check with ${grammarCheckResult.isValidUSFM} and ${grammarCheckResult.warnings.length} warnings.`);\n\n                addSuccessMessage(\"Checked USFM Grammar (strict mode) \".concat(grammarCheckResult.isValidUSFM ? \"without errors\" : \" (but the USFM DIDN’T validate)\"));\n              } catch (e) {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"userLog\"])(\"ourRunBCSGrammarCheck got error: \".concat(e));\n                addNoticePartial({\n                  priority: 400,\n                  message: \"USFMGrammar failed to run\",\n                  details: \"for \".concat(bookID, \" got \").concat(e),\n                  location: fileLocation\n                });\n                return;\n              } // if (!grammarCheckResult.isValidUSFM) // TEMP DEGRADE TO WARNING 994 -> 544 ................XXXXXXXXXXXXXXXXXXXXXX\n              // Don’t do this since we add the actual error message elsewhere now\n              // addNoticePartial({priority:994, '', '', `USFM3 Grammar Check (strict mode) doesn’t pass`, location:fileLocation});\n              // We only get one error if it fails\n\n\n              if (grammarCheckResult.error && grammarCheckResult.error.priority) // Prevent these false alarms (from Ohm schema issues, esp. empty lemma=\"\" fields)\n                if (!grammarCheckResult.error.excerpt // Note: checking the excerpt might not always be reliable if they choose a length < 10\n                || grammarCheckResult.error.excerpt.indexOf('mma=\"\" ') < 0 // see https://github.com/Bridgeconn/usfm-grammar/issues/87\n                && grammarCheckResult.error.message.indexOf('Expected \"c\", \"v\", ') < 0 // forgotten what this prevents ???\n                && grammarCheckResult.error.message.indexOf('Expected \"f*\", \"+\", ') < 0 // see https://github.com/Bridgeconn/usfm-grammar/issues/86\n                ) addNoticePartial(grammarCheckResult.error); // debugLog(\"  Warnings:\", JSON.stringify(grammarCheckResult.warnings));\n              // Display these warnings but with a lower priority\n\n              var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(grammarCheckResult.warnings),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var warningString = _step.value;\n                  if (!warningString.startsWith(\"Empty lines present\") // we allow empty lines in our USFM\n                  && !warningString.startsWith(\"Trailing spaces present at line end\") // we find these ourselves\n                  ) addNoticePartial({\n                    priority: 102,\n                    message: \"USFMGrammar: \".concat(warningString),\n                    location: fileLocation\n                  });\n                }\n                /* Disable this extra check -- no real advantage gained I think\n                if (!grammarCheckResult.isValidUSFM) {\n                    userLog(`  Now running the BCS USFMGrammar RELAXED checker for ${repoCode} ${bookID}…`);\n                    const relaxedGrammarCheckResult = runBCSGrammarCheck('relaxed', bookID, fileText, filename, fileLocation);\n                    addSuccessMessage(`Checked USFM Grammar (relaxed mode) ${relaxedGrammarCheckResult.isValidUSFM ? \"without errors\" : \" (but the USFM DIDN’T validate)\"}`);\n                    if (!relaxedGrammarCheckResult.isValidUSFM)\n                        addNoticePartial({ priority: 644, message: \"USFM3 Grammar Check (relaxed mode) doesn’t pass either\", location: fileLocation });\n                }\n                */\n\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // debugLog(\"checkUSFMText addNoticePartial:\", JSON.stringify(incompleteNoticeObject));\n              // functionLog(`checkUSFMText addNoticePartial: (priority=${incompleteNoticeObject.priority}) ${incompleteNoticeObject.C}:${incompleteNoticeObject.V} ${incompleteNoticeObject.message}${incompleteNoticeObject.characterIndex > 0 ? ` (at character ${incompleteNoticeObject.characterIndex})` : \"\"}${incompleteNoticeObject.excerpt ? ` ${incompleteNoticeObject.excerpt}` : \"\"}${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"cUSFM addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `cUSFM addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"cUSFM addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `cUSFM addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(C !== undefined, \"cUSFM addNoticePartial: 'C' parameter should be defined\");\n              if (incompleteNoticeObject.C) {//parameterAssert(typeof incompleteNoticeObject.C === 'string', `cUSFM addNoticePartial: 'C' parameter should be a string not a '${typeof incompleteNoticeObject.C}': ${incompleteNoticeObject.C}`);\n              } // parameterAssert(V !== undefined, \"cUSFM addNoticePartial: 'V' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.V) {//parameterAssert(typeof incompleteNoticeObject.V === 'string', `cUSFM addNoticePartial: 'V' parameter should be a string not a '${typeof incompleteNoticeObject.V}': ${incompleteNoticeObject.V}`);\n              } // parameterAssert(characterIndex !== undefined, \"cUSFM addNoticePartial: 'characterIndex' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.characterIndex !== undefined) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `cUSFM addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"cUSFM addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `cUSFM addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"cUSFM addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `cUSFM addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n              // Doublecheck -- we don’t want \"Mismatched {}\" per line, only per file\n              // eslint-disable-next-line no-unused-vars\n\n\n              var noticeObjectString = JSON.stringify(incompleteNoticeObject); //parameterAssert(incompleteNoticeObject.message.indexOf(\"Mismatched {}\") === -1 || incompleteNoticeObject.lineNumber === undefined, `checkUSFMText addNoticePartial: got bad notice: ${noticeObjectString}`);\n              //parameterAssert(noticeObjectString.indexOf('NONE') === -1 && noticeObjectString.indexOf('SPECIAL') === -1, `checkUSFMText addNoticePartial: 'NONE' & 'SPECIAL' shouldn’t make it thru to end user: ${noticeObjectString}`)\n\n              if (incompleteNoticeObject.debugChain) incompleteNoticeObject.debugChain = \"checkUSFMText \".concat(incompleteNoticeObject.debugChain);\n              Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"aboutToOverwrite\"])('checkUSFMText', ['bookID', 'filename'], incompleteNoticeObject, {\n                bookID: bookID,\n                filename: filename\n              });\n              usfmResultObject.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                filename: filename\n              }));\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // functionLog(`checkUSFMText success: ${successString}`);\n              usfmResultObject.successList.push(successString);\n            };\n\n            /* This function is optimised for checking the entire file, i.e., all lines.\n             bookID is a three-character UPPERCASE USFM book identifier.\n             filename parameter can be an empty string if we don’t have one.\n              Returns a result object containing a successList and a noticeList\n             */\n            // functionLog(`checkUSFMText(${languageCode}, ${repoCode}, ${bookID}, ${filename}, ${givenText.length.toLocaleString()} chars, '${givenLocation}', ${JSON.stringify(checkingOptions)})…`);\n            // const regexMatchObject = HEBREW_CANTILLATION_REGEX.exec('\\\\f + \\\\ft Q \\\\+w הִנֵּ֤ה|lemma=\"הִנֵּ֤ה\" strong=\"H2009\" x-morph=\"He,Tm\"\\\\+w*\\\\f*');\n            // console.log(`Got test cantillation regexMatchObject: (${regexMatchObject.length}) ${JSON.stringify(regexMatchObject)}`);\n            //parameterAssert(languageCode !== undefined, \"checkUSFMText: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkUSFMText: 'languageCode' parameter should be a string not a '${typeof languageCode}'`);\n            //parameterAssert(repoCode !== undefined, \"checkUSFMText: 'repoCode' parameter should be defined\");\n            //parameterAssert(typeof repoCode === 'string', `checkUSFMText: 'repoCode' parameter should be a string not a '${typeof repoCode}'`);\n            //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkUSFMText: 'repoCode' parameter should not be '${repoCode}'`);\n            //parameterAssert(bookID !== undefined, \"checkUSFMText: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkUSFMText: 'bookID' parameter should be a string not a '${typeof bookID}'`);\n            //parameterAssert(bookID.length === 3, `checkUSFMText: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkUSFMText: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkUSFMText: '${bookID}' is not a valid USFM book identifier`);\n            //parameterAssert(filename !== undefined, \"checkUSFMText: 'filename' parameter should be defined\");\n            //parameterAssert(typeof filename === 'string', `checkUSFMText: 'filename' parameter should be a string not a '${typeof filename}'`);\n            //parameterAssert(givenLocation !== undefined, \"checkUSFMText: 'givenRowLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkUSFMText: 'givenRowLocation' parameter should be a string not a '${typeof givenLocation}'`);\n            //parameterAssert(checkingOptions !== undefined, \"checkUSFMText: 'checkingOptions' parameter should be defined\");\n            if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkUSFMText: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n            }\n\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation);\n\n            try {\n              excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n            } catch (usfmELerror) {}\n\n            if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n              excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_5__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n            }\n\n            if (languageCode === 'hbo') {\n              // Hebrew vowels don't take up much horizontal space\n              // const previousExcerptLength = excerptLength;\n              excerptLength = Math.floor(excerptLength * 1.3); // debugLog(`checkUSFMText adjusted ${languageCode} excerptLength from ${previousExcerptLength} to ${excerptLength}`);\n            } // else\n            // debugLog(`Using supplied excerptLength=${excerptLength} cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n\n\n            excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n\n            excerptHalfLengthPlus = Math.floor((excerptLength + 1) / 2); // rounded up\n            // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n            lowercaseBookID = bookID.toLowerCase();\n            validLineStartCharacters = VALID_LINE_START_CHARACTERS;\n            if (repoCode === 'ST') validLineStartCharacters += '{';\n            usfmResultObject = {\n              successList: [],\n              noticeList: []\n            };\n            // end of mainUSFMCheck function\n\n            /* function runSlowTask(which) {\n                // Ideally these should be run in parallel using multiprocessing\n                //  See https://hackernoon.com/multithreading-multiprocessing-and-the-nodejs-event-loop-5b2929bd450b\n                userLog(`runSlowTask(${which})`)\n                return (which === 1)\n                    ? mainUSFMCheck(bookID, filename, givenText, location)\n                    : runBCSGrammarCheck(filename, givenText, location);\n            } */\n            // Main code for checkUSFMText()\n            // debugLog(\"Starting USFM checking tasks…\");\n            // const tasks = [1,2].map(runSlowTask);\n            // const allResults = await Promise.all(tasks);\n            // userLog(`  Finished all tasks with ${JSON.stringify(allResults)}.`);\n            // userLog(\"  Finished all tasks.\");\n            // if (!allResults[1].isValidUSFM)\n            //     addNoticePartial({priority: 942, \"USFM Grammar check fails\", location});\n            // userLog(\"  Warnings:\", JSON.stringify(allResults[1].warnings));\n            // // Display these warnings but with a lower priority\n            // for (const warningString of allResults[1].warnings)\n            //     addNoticePartial({priority:103, `USFMGrammar: ${warningString.trim()}`, location});\n            // NOTE: If we're careful about how/when we add their notices to our global list,\n            //  we should be able to run these three slowish checks in parallel on different threads/processes\n            allResults = [];\n            _context10.t0 = allResults;\n            _context10.next = 32;\n            return mainUSFMCheck(bookID, filename, givenText, ourLocation);\n\n          case 32:\n            _context10.t1 = _context10.sent;\n\n            _context10.t0.push.call(_context10.t0, _context10.t1);\n\n            allResults.push(CVCheck(bookID, givenText, ourLocation));\n\n            if (!_books_books__WEBPACK_IMPORTED_MODULE_7__[\"isExtraBookID\"](bookID)) {\n              numChapters = _books_books__WEBPACK_IMPORTED_MODULE_7__[\"chaptersInBook\"](bookID);\n              kB = Math.trunc(givenText.length / 1024);\n\n              if (numChapters < 20 || kB < 2048) {\n                // 2MB -- large files can run the grammar checker out of memory\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"userLog\"])(\"Running the BCS USFMGrammar checker for \".concat(repoCode, \" \").concat(bookID, \" (\").concat(kB.toLocaleString(), \" KB) -- may take several \").concat(kB > 1200 ? 'minutes' : 'seconds', \"\\u2026\"));\n                allResults.push(ourRunBCSGrammarCheck(filename, givenText, ourLocation));\n              } else {\n                Object(_utilities__WEBPACK_IMPORTED_MODULE_15__[\"userLog\"])(\"Skipped running BCS USFMGrammar checker for \".concat(repoCode, \" \").concat(bookID, \" (\").concat(kB.toLocaleString(), \" KB with \").concat(numChapters, \" chapters)\")); // Success message seems not to be displayed in the demos\n\n                addSuccessMessage(\"Skipped running BCS USFMGrammar checker for \".concat(repoCode, \" \").concat(bookID, \" (\").concat(kB.toLocaleString(), \" KB with \").concat(numChapters, \" chapters)\"));\n                addNoticePartial({\n                  priority: 25,\n                  message: \"Note: skipped running BCS USFMGrammar checker for large book\",\n                  details: \"\".concat(numChapters, \" chapters (\").concat(kB.toLocaleString(), \" KB)\"),\n                  location: ourLocation\n                });\n              }\n            } // logicAssert(allResults.length === 2);\n            // debugLog(\"allResults\", JSON.stringify(allResults));\n            // if (!allResults[1].isValidUSFM)\n            //     addNoticePartial({priority: 941, \"USFM Grammar check fails\", location});\n            // debugLog(\"  Warnings:\", JSON.stringify(allResults[1].warnings));\n            // // Display these warnings but with a lower priority\n            // for (const warningString of allResults[1].warnings)\n            // addNoticePartial({priority:103, `USFMGrammar: ${warningString.trim()}`, location});\n\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              // functionLog(`checkUSFMText: calling removeDisabledNotices(${result.noticeList.length}) having ${JSON.stringify(checkingOptions)}`);\n              usfmResultObject.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_16__[\"removeDisabledNotices\"])(usfmResultObject.noticeList);\n            } // debugLog(`  checkUSFMText returning with ${result.successList.length.toLocaleString()} success(es) and ${result.noticeList.length.toLocaleString()} notice(s).`);\n            // functionLog(`checkUSFMText result is ${JSON.stringify(result)}`);\n\n\n            return _context10.abrupt(\"return\", usfmResultObject);\n\n          case 38:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _checkUSFMText.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/usfm-text-check.js?");

/***/ }),

/***/ "./src/core/utilities.js":
/*!*******************************!*\
  !*** ./src/core/utilities.js ***!
  \*******************************/
/*! exports provided: userLog, debugLog, functionLog, parameterAssert, logicAssert, dataAssert, aboutToOverwrite, consoleLogObject, displayPropertyNames, ourParseInt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userLog\", function() { return userLog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debugLog\", function() { return debugLog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"functionLog\", function() { return functionLog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parameterAssert\", function() { return parameterAssert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logicAssert\", function() { return logicAssert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dataAssert\", function() { return dataAssert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"aboutToOverwrite\", function() { return aboutToOverwrite; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"consoleLogObject\", function() { return consoleLogObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"displayPropertyNames\", function() { return displayPropertyNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ourParseInt\", function() { return ourParseInt; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n\n// utilities.js\n\n/**\n *\n * @param {string} logString\n * @param {string} optionalParameter2\n */\nfunction userLog(logString, optionalParameter2) {\n  // We can remove them all by disabling the next line\n  console.log(\"uw-content-validation: \".concat(logString));\n  if (optionalParameter2) userLog(\"userLog note: we have a 2nd parameter: '\".concat(optionalParameter2, \"' after '\").concat(logString, \"'\"));\n}\n/**\n *\n * @param {string} logString\n * @param {string} optionalParameter2\n */\n\nfunction debugLog(logString, optionalParameter2) {\n  // We can remove them all by disabling the next line\n  console.log(\"uw-content-validation debug: \".concat(logString));\n  if (optionalParameter2) debugLog(\"debugLog note: we have a 2nd parameter: '\".concat(optionalParameter2, \"' after '\").concat(logString, \"'\"));\n}\n/**\n *\n * @param {string} logString\n * @param {string} optionalParameter2\n */\n\nfunction functionLog(logString, optionalParameter2) {\n  // We can remove them all by disabling the next line\n  console.log(\"uw-content-validation function call: \".concat(logString));\n  if (optionalParameter2) functionLog(\"functionLog note: we have a 2nd parameter: '\".concat(optionalParameter2, \"' after '\").concat(logString, \"'\"));\n}\n/**\n *\n * @param {*} truthStatement\n * @param {string} optionalMessage\n */\n\nfunction parameterAssert(truthStatement, optionalMessage) {\n  // We can remove them all by disabling the next line\n  console.assert(truthStatement, \"uw-content-validation parameterAssert: \".concat(optionalMessage));\n}\n/**\n *\n * @param {*} truthStatement\n * @param {string} optionalMessage\n */\n\nfunction logicAssert(truthStatement, optionalMessage) {\n  // We can remove them all by disabling the next line\n  console.assert(truthStatement, \"uw-content-validation logicAssert: \".concat(optionalMessage));\n}\n/**\n *\n * @param {*} truthStatement\n * @param {string} optionalMessage\n */\n\nfunction dataAssert(truthStatement, optionalMessage) {\n  // We can remove them all by disabling the next line\n  console.assert(truthStatement, \"uw-content-validation dataAssert: \".concat(optionalMessage));\n}\n/**\n *\n * @param {string} location\n * @param {Array} fieldList\n * @param {Object} currentObject\n */\n\nfunction aboutToOverwrite(location, fieldList, currentObject, objectWithNewFields) {\n  var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(fieldList),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var thisFieldName = _step.value;\n      if (currentObject[thisFieldName] !== undefined) // NOTE: comment out the following line if trying to find/log useless operations (overwriting a value with the same value)\n        if (objectWithNewFields[thisFieldName] !== currentObject[thisFieldName]) // then overwriting with something different\n          console.log(\"WARNING: \".concat(location, \" is about to overwrite \").concat(thisFieldName, \" field '\").concat(currentObject[thisFieldName], \"' with '\").concat(objectWithNewFields[thisFieldName], \"' for \").concat(JSON.stringify(currentObject)));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n/**\n *\n * @param {string} clTitle\n * @param {Object} clObject\n */\n\nfunction consoleLogObject(clTitle, clObject) {\n  // Print an object’s componenets to the console\n  // Note: the following line succeeds even if length and/or size are undefined\n  var clOutput = \"cLO: \".concat(clTitle, \" \").concat(typeof clObject, \" (length=\").concat(clObject.length, \") (size=\").concat(clObject.size, \"):\\n\");\n\n  for (var clPropertyName in clObject) {\n    // debugLog(\"   \", clTitle, clPropertyName); // for debugging only!\n    var thisPropertyContents = \"\" + clObject[clPropertyName];\n    if (thisPropertyContents.length > 50) thisPropertyContents = \"(\".concat(thisPropertyContents.length, \") \").concat(thisPropertyContents.slice(0, 50), \"\\u2026\");\n    var oType = typeof clObject[clPropertyName]; // From https://stackoverflow.com/questions/12996871/why-does-typeof-array-with-objects-return-object-and-not-array#12996879\n\n    if (oType === \"object\" && Object.prototype.toString.call(clObject[clPropertyName]) === \"[object Array]\") oType = \"array\";\n    clOutput += \"  \".concat(clPropertyName, \" (type=\").concat(oType, \")\");\n    var oLength = void 0;\n\n    try {\n      oLength = clObject[clPropertyName].length;\n    } catch (olError) {\n      oLength = \"null\";\n    }\n\n    if (oLength !== undefined) clOutput += \" (length=\".concat(oLength, \")\");\n    if (thisPropertyContents !== undefined) clOutput += \": \".concat(thisPropertyContents, \"\\n\");\n  }\n\n  userLog(clOutput);\n} // end of consoleLogObject function\n\n/**\n *\n * @param {string} givenTitle\n * @param {Object} givenObject\n */\n\nfunction displayPropertyNames(givenTitle, givenObject) {\n  var output = \"dPN: \".concat(givenTitle, \" \").concat(typeof givenObject, \":\\n\");\n\n  for (var propertyName in givenObject) {\n    output += \"  \".concat(propertyName, \" (type=\").concat(typeof givenObject[propertyName], \")\\n\");\n  }\n\n  userLog(output);\n} // end of displayPropertyNames function\n\n/**\n *\n * @param {string} givenString\n */\n\nfunction ourParseInt(givenString) {\n  /*\n  The regular parseInt() function is too forgiving\n   See https://stackoverflow.com/questions/1133770/how-to-convert-a-string-to-an-integer-in-javascript\n   This one throws an error if the entire field doesn’t give an integer.\n  */\n\n  /* First attempt\n  const int1 = parseInt(givenString, 10); // Don’t let the function guess the base (if the string has a leading zero)\n  const int2 = givenString * 1; // This one is less forgiving it seems\n  if (int1!==int2) userLog(`From '${givenString}' we got ${int1} (${typeof int1}) and ${int2} (${typeof int2})`)\n  if (isNaN(int2) || isNaN(int1)\n  || int2===undefined || int1==undefined\n  || int2!==int1)\n      throw \"String is not a simple integer\";\n  return int1;\n  */\n  //parameterAssert(typeof givenString === 'string', `ourParseInt: 'givenString' parameter should be a string not a '${typeof givenString}': ${givenString}`);\n  //parameterAssert(givenString.length > 0, \"ourParseInt: 'givenString' parameter should be not be an empty string!\");\n  // eslint-disable-next-line no-throw-literal\n  if (givenString.length === 0) throw \"String '\".concat(givenString, \"'is empty\"); // Optimised version\n\n  var int = givenString * 1; // This one is less forgiving it seems\n  // eslint-disable-next-line no-throw-literal\n\n  if (isNaN(int)) throw \"String '\".concat(givenString, \"' is not a simple integer\");\n  return int;\n}\n/*\n *\n * @param {string} bookID - 3-character UPPERCASE Book Id\n * @requires {number} 0..99\n */\n\n/*\nexport function getBookNumber(bookID) {\n    // debugLog(`getBookNumber(${bookID})…`)\n    let numberResult = 99; // default 'unknown' value\n    if (bookID==='FRT') numberResult = 0;\n    else if (bookID==='BAK') numberResult = 68;\n    else if (bookID==='OBS') numberResult = 80;\n    else if (bookID==='MANIFEST') numberResult = 81;\n    else if (bookID==='MEDIA') numberResult = 82;\n    else if (bookID==='LICENSE') numberResult = 83;\n    else if (bookID==='README') numberResult = 84;\n    else {\n        const thisUSFMNumberName = usfmNumberName(bookID);\n        numberResult = ourParseInt(thisUSFMNumberName.slice(0, 2)); // 01..67 converted to number\n    // } catch {}\n    }\n    // For everything else\n    // debugLog(`getBookNumber(${bookID})) returning ${numberResult}`);\n    return numberResult;\n}\n*/\n\n/*\n// function to convert an array to an object\n// with keys being 0..n\nexport const array_to_obj = ( ar => {\n  const ob = {};\n  Object.assign(ob,ar);\n  return ob;\n});\n\n// function to convert map to object\nexport const map_to_obj = ( mp => {\n  const ob = {};\n  mp.forEach((v,k) => {ob[k]=v});\n  return ob;\n});\n\n// function to convert object to a map\nexport const obj_to_map = ( ob => {\n  const mp = new Map();\n  Object.keys ( ob ).forEach (k => { mp.set(k, ob[k]) });\n  return mp;\n});\n\n// function to convert word frequency map\n// to an object suitable for MaterialTable\nexport const wf_to_mt = ( ob => {\n  const mt = {};\n  mt.title = \"Word Frequency\";\n  mt.columns = [\n      { title: \"Word\", field: \"word\" },\n      { title: \"Count\", field: \"check\" },\n  ];\n  mt.data = [];\n  Object.keys(ob).forEach ( w => {\n      mt.data.push({ word: w, check: ob[w] })\n  })\n\n  mt.options = { sorting: true, exportButton: true };\n\n  return mt;\n});\n\n// function to convert an array of words to\n// an object suitable for MaterialTable\nexport const aw_to_mt = ( ar => {\n  // first convert array to object\n  const ob = array_to_obj(ar);\n  const mt = {};\n  mt.title = \"All Words in Text Order\";\n  mt.columns = [\n      { title: \"Order\", field: \"order\" , type: \"numeric\"},\n      { title: \"Word\", field: \"word\" },\n  ];\n  mt.data = [];\n  Object.keys(ob).forEach ( n => {\n      mt.data.push({ order: n, word: ob[n] })\n  });\n\n  mt.options = { sorting: true };\n\n  return mt;\n});\n*/\n\n//# sourceURL=webpack:///./src/core/utilities.js?");

/***/ }),

/***/ "./src/core/wrapper.js":
/*!*****************************!*\
  !*** ./src/core/wrapper.js ***!
  \*****************************/
/*! exports provided: checkTN_TSV7Table, checkSN_TSV7Table, checkTQ_TSV7Table, checkSQ_TSV7Table, checkTWL_TSV6Table, checkTA_markdownArticle, checkTW_markdownArticle, checkDeprecatedTN_TSV9Table */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkTN_TSV7Table\", function() { return checkTN_TSV7Table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkSN_TSV7Table\", function() { return checkSN_TSV7Table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkTQ_TSV7Table\", function() { return checkTQ_TSV7Table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkSQ_TSV7Table\", function() { return checkSQ_TSV7Table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkTWL_TSV6Table\", function() { return checkTWL_TSV6Table; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkTA_markdownArticle\", function() { return checkTA_markdownArticle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkTW_markdownArticle\", function() { return checkTW_markdownArticle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkDeprecatedTN_TSV9Table\", function() { return checkDeprecatedTN_TSV9Table; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _notes_tsv7_table_check__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notes-tsv7-table-check */ \"./src/core/notes-tsv7-table-check.js\");\n/* harmony import */ var _tn_tsv9_table_check__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tn-tsv9-table-check */ \"./src/core/tn-tsv9-table-check.js\");\n/* harmony import */ var _questions_tsv7_table_check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./questions-tsv7-table-check */ \"./src/core/questions-tsv7-table-check.js\");\n/* harmony import */ var _twl_tsv6_table_check__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./twl-tsv6-table-check */ \"./src/core/twl-tsv6-table-check.js\");\n/* harmony import */ var _markdown_file_contents_check__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./markdown-file-contents-check */ \"./src/core/markdown-file-contents-check.js\");\n/* harmony import */ var _disabled_notices__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./disabled-notices */ \"./src/core/disabled-notices.js\");\n\n\n\n// This file wraps our internal functions for tC Create and the Content Validation App\n//    and other unfoldingWord tools to use more easily\n//\n// NOTE: We also remove disabled notices before returning these results\n//\n// These wrapper functions were requested by Cecil New in October 2021\n//\n\n\n\n\n\n // NOTE: We don't need to know the org name or the repo name here\n//        because if we check linked articles, the function to do this will be provided in checkingOptions\n\nfunction checkTN_TSV7Table(_x, _x2, _x3, _x4, _x5) {\n  return _checkTN_TSV7Table.apply(this, arguments);\n}\n\nfunction _checkTN_TSV7Table() {\n  _checkTN_TSV7Table = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, bookID, tableText, checkingOptions) {\n    var checkResults;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Object(_notes_tsv7_table_check__WEBPACK_IMPORTED_MODULE_3__[\"checkNotesTSV7Table\"])(username, languageCode, bookID === 'OBS' ? 'OBS-TN' : 'TN', bookID, '', tableText, '', Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, checkingOptions), {}, {\n              suppressNoticeDisablingFlag: false\n            }));\n\n          case 2:\n            checkResults = _context.sent;\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              checkResults.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_8__[\"removeDisabledNotices\"])(checkResults.noticeList);\n            }\n\n            return _context.abrupt(\"return\", checkResults);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _checkTN_TSV7Table.apply(this, arguments);\n}\n\nfunction checkSN_TSV7Table(_x6, _x7, _x8, _x9, _x10) {\n  return _checkSN_TSV7Table.apply(this, arguments);\n}\n\nfunction _checkSN_TSV7Table() {\n  _checkSN_TSV7Table = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(username, languageCode, bookID, tableText, checkingOptions) {\n    var checkResults;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return Object(_notes_tsv7_table_check__WEBPACK_IMPORTED_MODULE_3__[\"checkNotesTSV7Table\"])(username, languageCode, bookID === 'OBS' ? 'OBS-SN' : 'SN', bookID, '', tableText, '', Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, checkingOptions), {}, {\n              suppressNoticeDisablingFlag: false\n            }));\n\n          case 2:\n            checkResults = _context2.sent;\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              checkResults.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_8__[\"removeDisabledNotices\"])(checkResults.noticeList);\n            }\n\n            return _context2.abrupt(\"return\", checkResults);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _checkSN_TSV7Table.apply(this, arguments);\n}\n\nfunction checkTQ_TSV7Table(_x11, _x12, _x13, _x14, _x15) {\n  return _checkTQ_TSV7Table.apply(this, arguments);\n}\n\nfunction _checkTQ_TSV7Table() {\n  _checkTQ_TSV7Table = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(username, languageCode, bookID, tableText, checkingOptions) {\n    var checkResults;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Object(_questions_tsv7_table_check__WEBPACK_IMPORTED_MODULE_5__[\"checkQuestionsTSV7Table\"])(username, languageCode, bookID === 'OBS' ? 'OBS-TQ' : 'TQ', bookID, '', tableText, '', checkingOptions);\n\n          case 2:\n            checkResults = _context3.sent;\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              checkResults.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_8__[\"removeDisabledNotices\"])(checkResults.noticeList);\n            }\n\n            return _context3.abrupt(\"return\", checkResults);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _checkTQ_TSV7Table.apply(this, arguments);\n}\n\nfunction checkSQ_TSV7Table(_x16, _x17, _x18, _x19, _x20) {\n  return _checkSQ_TSV7Table.apply(this, arguments);\n}\n\nfunction _checkSQ_TSV7Table() {\n  _checkSQ_TSV7Table = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(username, languageCode, bookID, tableText, checkingOptions) {\n    var checkResults;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Object(_questions_tsv7_table_check__WEBPACK_IMPORTED_MODULE_5__[\"checkQuestionsTSV7Table\"])(username, languageCode, bookID === 'OBS' ? 'OBS-SQ' : 'SQ', bookID, '', tableText, '', checkingOptions);\n\n          case 2:\n            checkResults = _context4.sent;\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              checkResults.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_8__[\"removeDisabledNotices\"])(checkResults.noticeList);\n            }\n\n            return _context4.abrupt(\"return\", checkResults);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _checkSQ_TSV7Table.apply(this, arguments);\n}\n\nfunction checkTWL_TSV6Table(_x21, _x22, _x23, _x24, _x25) {\n  return _checkTWL_TSV6Table.apply(this, arguments);\n}\n\nfunction _checkTWL_TSV6Table() {\n  _checkTWL_TSV6Table = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5(username, languageCode, bookID, tableText, checkingOptions) {\n    var checkResults;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return Object(_twl_tsv6_table_check__WEBPACK_IMPORTED_MODULE_6__[\"internalCheckTWL_TSV6Table\"])(username, languageCode, bookID === 'OBS' ? 'OBS-TWL' : 'TWL', bookID, '', tableText, '', checkingOptions);\n\n          case 2:\n            checkResults = _context5.sent;\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              checkResults.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_8__[\"removeDisabledNotices\"])(checkResults.noticeList);\n            }\n\n            return _context5.abrupt(\"return\", checkResults);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _checkTWL_TSV6Table.apply(this, arguments);\n}\n\nfunction checkTA_markdownArticle(_x26, _x27, _x28, _x29, _x30) {\n  return _checkTA_markdownArticle.apply(this, arguments);\n}\n\nfunction _checkTA_markdownArticle() {\n  _checkTA_markdownArticle = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6(username, languageCode, articleFilepathInRepo, articleFileContent, checkingOptions) {\n    var checkResults;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return Object(_markdown_file_contents_check__WEBPACK_IMPORTED_MODULE_7__[\"checkMarkdownFileContents\"])(username, languageCode, 'TA', articleFilepathInRepo, articleFileContent, '', checkingOptions);\n\n          case 2:\n            checkResults = _context6.sent;\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              checkResults.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_8__[\"removeDisabledNotices\"])(checkResults.noticeList);\n            }\n\n            return _context6.abrupt(\"return\", checkResults);\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _checkTA_markdownArticle.apply(this, arguments);\n}\n\nfunction checkTW_markdownArticle(_x31, _x32, _x33, _x34, _x35) {\n  return _checkTW_markdownArticle.apply(this, arguments);\n} // This format is scheduled to be deprecated\n\nfunction _checkTW_markdownArticle() {\n  _checkTW_markdownArticle = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee7(username, languageCode, articleFilepathInRepo, articleFileContent, checkingOptions) {\n    var checkResults;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return Object(_markdown_file_contents_check__WEBPACK_IMPORTED_MODULE_7__[\"checkMarkdownFileContents\"])(username, languageCode, 'TW', articleFilepathInRepo, articleFileContent, '', checkingOptions);\n\n          case 2:\n            checkResults = _context7.sent;\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              checkResults.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_8__[\"removeDisabledNotices\"])(checkResults.noticeList);\n            }\n\n            return _context7.abrupt(\"return\", checkResults);\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _checkTW_markdownArticle.apply(this, arguments);\n}\n\nfunction checkDeprecatedTN_TSV9Table(_x36, _x37, _x38, _x39, _x40) {\n  return _checkDeprecatedTN_TSV9Table.apply(this, arguments);\n}\n\nfunction _checkDeprecatedTN_TSV9Table() {\n  _checkDeprecatedTN_TSV9Table = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee8(username, languageCode, bookID, tableText, checkingOptions) {\n    var checkResults;\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return Object(_tn_tsv9_table_check__WEBPACK_IMPORTED_MODULE_4__[\"internalCheckTN_TSV9Table\"])(username, languageCode, 'TN', bookID, '', tableText, '', Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, checkingOptions), {}, {\n              suppressNoticeDisablingFlag: false\n            }));\n\n          case 2:\n            checkResults = _context8.sent;\n\n            if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n              checkResults.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_8__[\"removeDisabledNotices\"])(checkResults.noticeList);\n            }\n\n            return _context8.abrupt(\"return\", checkResults);\n\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _checkDeprecatedTN_TSV9Table.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/core/wrapper.js?");

/***/ }),

/***/ "./src/core/yaml-text-check.js":
/*!*************************************!*\
  !*** ./src/core/yaml-text-check.js ***!
  \*************************************/
/*! exports provided: checkYAMLText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkYAMLText\", function() { return checkYAMLText; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var yaml__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! yaml */ \"./node_modules/yaml/browser/index.js\");\n/* harmony import */ var yaml__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(yaml__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _field_text_check__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./field-text-check */ \"./src/core/field-text-check.js\");\n/* harmony import */ var _file_text_check__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./file-text-check */ \"./src/core/file-text-check.js\");\n/* harmony import */ var _disabled_notices__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./disabled-notices */ \"./src/core/disabled-notices.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utilities */ \"./src/core/utilities.js\");\n\n\n // eslint-disable-next-line no-unused-vars\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n\nvar YAML_VALIDATOR_VERSION_STRING = '0.5.0';\n/**\n *\n * @param {string} username\n * @param {string} languageCode\n * @param {string} repoCode -- e.g., 'TN' or 'TQ', etc.\n * @param {string} textName -- e.g., 'TOC.yaml'\n * @param {string} YAMLText -- the text itself to be checked\n * @param {string} givenLocation\n * @param {Object} checkingOptions\n */\n\nfunction checkYAMLText(username, languageCode, repoCode, textName, YAMLText, givenLocation, checkingOptions) {\n  /* This function is optimised for checking the entire file, i.e., all lines.\n    Returns a result object containing a successList and a noticeList,\n      as well as the parsed YAML for further checking.\n    */\n  // functionLog(`checkYAMLText(${textName}, ${YAMLText.length}, ${givenLocation})…`);\n  //parameterAssert(languageCode !== undefined, \"checkYAMLText: 'languageCode' parameter should be defined\");\n  //parameterAssert(typeof languageCode === 'string', `checkYAMLText: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n  //parameterAssert(repoCode !== undefined, \"checkYAMLText: 'repoCode' parameter should be defined\");\n  //parameterAssert(typeof repoCode === 'string', `checkYAMLText: 'repoCode' parameter should be a string not a '${typeof repoCode}': ${repoCode}`);\n  //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkYAMLText: 'repoCode' parameter should not be '${repoCode}'`);\n  //parameterAssert(textName !== undefined, \"checkYAMLText: 'textName' parameter should be defined\");\n  //parameterAssert(typeof textName === 'string', `checkYAMLText: 'textName' parameter should be a string not a '${typeof textName}': ${textName}`);\n  //parameterAssert(YAMLText !== undefined, \"checkYAMLText: 'YAMLText' parameter should be defined\");\n  //parameterAssert(typeof YAMLText === 'string', `checkYAMLText: 'YAMLText' parameter should be a string not a '${typeof YAMLText}': ${YAMLText}`);\n  //parameterAssert(givenLocation !== undefined, \"checkYAMLText: 'optionalFieldLocation' parameter should be defined\");\n  //parameterAssert(typeof givenLocation === 'string', `checkYAMLText: 'optionalFieldLocation' parameter should be a string not a '${typeof givenLocation}': ${givenLocation}`);\n  //parameterAssert(givenLocation.indexOf('true') === -1, `checkYAMLText: 'optionalFieldLocation' parameter should not be '${givenLocation}'`);\n  //parameterAssert(checkingOptions !== undefined, \"checkYAMLText: 'checkingOptions' parameter should be defined\");\n  if (checkingOptions !== undefined) {//parameterAssert(typeof checkingOptions === 'object', `checkYAMLText: 'checkingOptions' parameter should be an object not a '${typeof checkingOptions}': ${JSON.stringify(checkingOptions)}`);\n  }\n\n  var ourLocation = givenLocation;\n  if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation); // if (textName) ourLocation = ` in ${textName}${ourLocation}`;\n\n  var excerptLength;\n\n  try {\n    excerptLength = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.excerptLength;\n  } catch (ytcError) {}\n\n  if (typeof excerptLength !== 'number' || isNaN(excerptLength)) {\n    excerptLength = _defaults__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_EXCERPT_LENGTH\"]; // debugLog(`Using default excerptLength=${excerptLength}`);\n  } // else\n  // debugLog(`Using supplied excerptLength=${excerptLength}`, `cf. default=${DEFAULT_EXCERPT_LENGTH}`);\n  // const excerptHalfLength = Math.floor(excerptLength / 2); // rounded down\n  // const excerptHalfLengthPlus = Math.floor((excerptLength+1) / 2); // rounded up\n  // debugLog(`Using excerptHalfLength=${excerptHalfLength}`, `excerptHalfLengthPlus=${excerptHalfLengthPlus}`);\n\n\n  var cytResult = {\n    successList: [],\n    noticeList: []\n  };\n\n  function addSuccessMessage(successString) {\n    // functionLog(`checkYAMLText success: ${successString}`);\n    cytResult.successList.push(successString);\n  }\n\n  function addNotice(noticeObject) {\n    // functionLog(`checkYAMLText Notice: (priority=${priority}) ${message}${characterIndex > 0 ? ` (at character ${characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n    //parameterAssert(noticeObject.priority !== undefined, \"cYt addNotice: 'priority' parameter should be defined\");\n    //parameterAssert(typeof noticeObject.priority === 'number', `cManT addNotice: 'priority' parameter should be a number not a '${typeof noticeObject.priority}': ${noticeObject.priority}`);\n    //parameterAssert(noticeObject.message !== undefined, \"cYt addNotice: 'message' parameter should be defined\");\n    //parameterAssert(typeof noticeObject.message === 'string', `cManT addNotice: 'message' parameter should be a string not a '${typeof noticeObject.message}': ${noticeObject.message}`);\n    // parameterAssert(characterIndex!==undefined, \"cYt addNotice: 'characterIndex' parameter should be defined\");\n    if (noticeObject.characterIndex) {//parameterAssert(typeof noticeObject.characterIndex === 'number', `cManT addNotice: 'characterIndex' parameter should be a number not a '${typeof noticeObject.characterIndex}': ${noticeObject.characterIndex}`);\n    } // parameterAssert(excerpt!==undefined, \"cYt addNotice: 'excerpt' parameter should be defined\");\n\n\n    if (noticeObject.excerpt) {//parameterAssert(typeof noticeObject.excerpt === 'string', `cManT addNotice: 'excerpt' parameter should be a string not a '${typeof noticeObject.excerpt}': ${noticeObject.excerpt}`);\n    } //parameterAssert(noticeObject.location !== undefined, \"cYt addNotice: 'location' parameter should be defined\");\n    //parameterAssert(typeof noticeObject.location === 'string', `cYt addNotice: 'location' parameter should be a string not a '${typeof noticeObject.location}': ${noticeObject.location}`);\n\n\n    if (noticeObject.debugChain) noticeObject.debugChain = \"checkYAMLText \".concat(noticeObject.debugChain);\n    cytResult.noticeList.push(noticeObject);\n  }\n\n  function ourCheckTextField(lineNumber, fieldText, allowedLinks, optionalFieldLocation, checkingOptions) {\n    /**\n    * @description - checks the given text field and processes the returned results\n    * @param {string} fieldName - name of the field being checked\n    * @param {string} fieldText - the actual text of the field being checked\n    * @param {boolean} allowedLinks - true if links are allowed in the field, otherwise false\n    * @param {string} optionalFieldLocation - description of where the field is located\n    * @param {Object} checkingOptions - parameters that might affect the check\n    */\n    // Does basic checks for small errors like leading/trailing spaces, etc.\n    // We assume that checking for compulsory fields is done elsewhere\n    // Updates the global list of notices\n    // debugLog(`cYt ourCheckTextField(${fieldName}, (${fieldText.length}), ${allowedLinks}, ${fieldLocation}, …)`);\n    //parameterAssert(fieldText !== undefined, \"cYt ourCheckTextField: 'fieldText' parameter should be defined\");\n    //parameterAssert(typeof fieldText === 'string', `cYt ourCheckTextField: 'fieldText' parameter should be a string not a '${typeof fieldText}'`);\n    //parameterAssert(allowedLinks === true || allowedLinks === false, \"cYt ourCheckTextField: allowedLinks parameter must be either true or false\");\n    //parameterAssert(optionalFieldLocation !== undefined, \"cYt ourCheckTextField: 'optionalFieldLocation' parameter should be defined\");\n    //parameterAssert(typeof optionalFieldLocation === 'string', `cYt ourCheckTextField: 'optionalFieldLocation' parameter should be a string not a '${typeof optionalFieldLocation}'`);\n    var resultObject = Object(_field_text_check__WEBPACK_IMPORTED_MODULE_4__[\"checkTextField\"])(username, languageCode, repoCode, 'YAML', \"\".concat(textName, \" line\"), fieldText, allowedLinks, optionalFieldLocation, checkingOptions); // Concat is faster if we don’t need to process each notice individually\n    // cytResult.noticeList = cytResult.noticeList.concat(resultObject.noticeList);\n    // // Process noticeList line by line\n    // //  suppressing undesired errors\n\n    var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(resultObject.noticeList),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var noticeEntry = _step.value;\n        addNotice(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, noticeEntry), {}, {\n          lineNumber: lineNumber\n        }));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } // end of ourCheckTextField function\n\n\n  function checkYAMLLineContents(lineNumber, lineText, lineLocation) {\n    // functionLog(`checkYAMLLineContents for '${lineNumber} ${lineText}' at${lineLocation}`);\n    var thisText = lineText; // Remove leading spaces\n\n    thisText = thisText.replace(/^ +/g, ''); // debugLog(`After removing leading spaces have '${thisText}'`);\n    // Remove leading hyphens\n\n    thisText = thisText.replace(/^-/g, ''); // debugLog(`After removing hyphens have '${thisText}'`);\n    // Remove leading spaces again now\n\n    thisText = thisText.replace(/^ +/g, ''); // debugLog(`After removing more leading spaces have '${thisText}'`);\n\n    var allowedLinksInLine = thisText.startsWith('url:') || thisText.startsWith('chapter_url:') || thisText.startsWith('rc:');\n    if (thisText) ourCheckTextField(lineNumber, thisText, allowedLinksInLine, lineLocation, checkingOptions);\n  } // end of checkYAMLLine function\n\n\n  function ourBasicFileChecks(filename, fileText, fileLocation, checkingOptions) {\n    // Does basic checks for small errors like leading/trailing spaces, etc.\n    // We assume that checking for compulsory fields is done elsewhere\n    // Updates the global list of notices\n    //parameterAssert(filename !== undefined, \"cYT ourBasicFileChecks: 'filename' parameter should be defined\");\n    //parameterAssert(typeof filename === 'string', `cYT ourBasicFileChecks: 'filename' parameter should be a string not a '${typeof filename}'`);\n    //parameterAssert(fileText !== undefined, \"cYT ourBasicFileChecks: 'fileText' parameter should be defined\");\n    //parameterAssert(typeof fileText === 'string', `cYT ourBasicFileChecks: 'fileText' parameter should be a string not a '${typeof fileText}'`);\n    //parameterAssert(checkingOptions !== undefined, \"cYT ourBasicFileChecks: 'checkingOptions' parameter should be defined\");\n    var resultObject = Object(_file_text_check__WEBPACK_IMPORTED_MODULE_5__[\"checkTextfileContents\"])(username, languageCode, repoCode, 'YAML', filename, fileText, fileLocation, checkingOptions); // If we need to put everything through addNoticePartial, e.g., for debugging or filtering\n    //  process results line by line\n\n    var _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(resultObject.noticeList),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var noticeEntry = _step2.value;\n        //parameterAssert(Object.keys(noticeEntry).length >= 5, `USFM ourBasicFileChecks notice length=${Object.keys(noticeEntry).length}`);\n        addNotice(noticeEntry);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  } // end of ourBasicFileChecks function\n  // Main code for checkYAMLText function\n\n\n  var lines = YAMLText.split('\\n'); // debugLog(`  '${location}' has ${lines.length.toLocaleString()} total lines`);\n\n  var formData;\n\n  try {\n    formData = yaml__WEBPACK_IMPORTED_MODULE_2___default.a.parse(YAMLText); // debugLog(\"yaml.parse(YAMLText) got formData\", JSON.stringify(formData));\n  } catch (yamlError) {\n    // console.error(`yaml parse error: ${yamlError.message}`);\n    addNotice({\n      priority: 920,\n      message: yamlError.message,\n      location: ourLocation\n    });\n  } // Add the parsed YAML to our result\n\n\n  cytResult.formData = formData; // let lastNumLeadingSpaces = 0;\n  // let lastLineContents;\n\n  for (var n = 1; n <= lines.length; n++) {\n    var line = lines[n - 1]; // let numLeadingSpaces;\n    // if (line) {\n    //     numLeadingSpaces = line.match(/^ */)[0].length;\n    // debugLog(`Got numLeadingSpaces=${numLeadingSpaces} for ${line}${atString}`);\n    //     if (numLeadingSpaces && lastNumLeadingSpaces && numLeadingSpaces!=lastNumLeadingSpaces)\n    //         addNotice({472, \"Nesting seems confused\", 0, '', atString);\n\n    checkYAMLLineContents(n, line, ourLocation); // } else {\n    //     // This is a blank line\n    //     numLeadingSpaces = 0;\n    // }\n    // lastLineContents = line;\n    // lastNumLeadingSpaces = numLeadingSpaces;\n  } // Do basic file checks\n\n\n  ourBasicFileChecks(textName, YAMLText, givenLocation, checkingOptions);\n\n  if (!(checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.suppressNoticeDisablingFlag)) {\n    // functionLog(`checkYAMLText: calling removeDisabledNotices(${cytResult.noticeList.length}) having ${JSON.stringify(checkingOptions)}`);\n    cytResult.noticeList = Object(_disabled_notices__WEBPACK_IMPORTED_MODULE_6__[\"removeDisabledNotices\"])(cytResult.noticeList);\n  }\n\n  addSuccessMessage(\"Checked all \".concat(lines.length.toLocaleString(), \" line\").concat(lines.length === 1 ? '' : 's').concat(ourLocation));\n  if (cytResult.noticeList.length) addSuccessMessage(\"checkYAMLText v\".concat(YAML_VALIDATOR_VERSION_STRING, \" finished with \").concat(cytResult.noticeList.length ? cytResult.noticeList.length.toLocaleString() : \"zero\", \" notice\").concat(cytResult.noticeList.length === 1 ? '' : 's'));else addSuccessMessage(\"No errors or warnings found by checkYAMLText v\".concat(YAML_VALIDATOR_VERSION_STRING)); // debugLog(`  checkYAMLText returning with ${cytResult.successList.length.toLocaleString()} success(es), ${cytResult.noticeList.length.toLocaleString()} notice(s).`);\n  // debugLog(\"checkYAMLText result is\", JSON.stringify(result));\n\n  return cytResult;\n} // end of checkYAMLText function\n\n//# sourceURL=webpack:///./src/core/yaml-text-check.js?");

/***/ }),

/***/ "./src/demos/RenderProcessedResults.js":
/*!*********************************************!*\
  !*** ./src/demos/RenderProcessedResults.js ***!
  \*********************************************/
/*! exports provided: RenderCheckedFilesList, RenderElapsedTime, RenderTotals, RenderNumberedLines, RenderObject, RenderRawResults, RenderSuccessesErrorsWarnings, RenderSuccessesSevereMediumLow, RenderSuccessesNoticesGradient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderCheckedFilesList\", function() { return RenderCheckedFilesList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderElapsedTime\", function() { return RenderElapsedTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderTotals\", function() { return RenderTotals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderNumberedLines\", function() { return RenderNumberedLines; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderObject\", function() { return RenderObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderRawResults\", function() { return RenderRawResults; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderSuccessesErrorsWarnings\", function() { return RenderSuccessesErrorsWarnings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderSuccessesSevereMediumLow\", function() { return RenderSuccessesSevereMediumLow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderSuccessesNoticesGradient\", function() { return RenderSuccessesNoticesGradient; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utilities */ \"./src/core/utilities.js\");\n/* harmony import */ var material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! material-table */ \"./node_modules/material-table/dist/index.js\");\n/* harmony import */ var material_table__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(material_table__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _material_ui_icons_AddBox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @material-ui/icons/AddBox */ \"./node_modules/@material-ui/icons/AddBox.js\");\n/* harmony import */ var _material_ui_icons_AddBox__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_AddBox__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @material-ui/icons/ArrowDownward */ \"./node_modules/@material-ui/icons/ArrowDownward.js\");\n/* harmony import */ var _material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _material_ui_icons_Check__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @material-ui/icons/Check */ \"./node_modules/@material-ui/icons/Check.js\");\n/* harmony import */ var _material_ui_icons_Check__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_Check__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _material_ui_icons_ChevronLeft__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @material-ui/icons/ChevronLeft */ \"./node_modules/@material-ui/icons/ChevronLeft.js\");\n/* harmony import */ var _material_ui_icons_ChevronLeft__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_ChevronLeft__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _material_ui_icons_ChevronRight__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @material-ui/icons/ChevronRight */ \"./node_modules/@material-ui/icons/ChevronRight.js\");\n/* harmony import */ var _material_ui_icons_ChevronRight__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_ChevronRight__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _material_ui_icons_Clear__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @material-ui/icons/Clear */ \"./node_modules/@material-ui/icons/Clear.js\");\n/* harmony import */ var _material_ui_icons_Clear__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_Clear__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _material_ui_icons_DeleteOutline__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @material-ui/icons/DeleteOutline */ \"./node_modules/@material-ui/icons/DeleteOutline.js\");\n/* harmony import */ var _material_ui_icons_DeleteOutline__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_DeleteOutline__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @material-ui/icons/Edit */ \"./node_modules/@material-ui/icons/Edit.js\");\n/* harmony import */ var _material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _material_ui_icons_FilterList__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @material-ui/icons/FilterList */ \"./node_modules/@material-ui/icons/FilterList.js\");\n/* harmony import */ var _material_ui_icons_FilterList__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_FilterList__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _material_ui_icons_FirstPage__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @material-ui/icons/FirstPage */ \"./node_modules/@material-ui/icons/FirstPage.js\");\n/* harmony import */ var _material_ui_icons_FirstPage__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_FirstPage__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _material_ui_icons_LastPage__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @material-ui/icons/LastPage */ \"./node_modules/@material-ui/icons/LastPage.js\");\n/* harmony import */ var _material_ui_icons_LastPage__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_LastPage__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _material_ui_icons_Remove__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @material-ui/icons/Remove */ \"./node_modules/@material-ui/icons/Remove.js\");\n/* harmony import */ var _material_ui_icons_Remove__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_Remove__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var _material_ui_icons_SaveAlt__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @material-ui/icons/SaveAlt */ \"./node_modules/@material-ui/icons/SaveAlt.js\");\n/* harmony import */ var _material_ui_icons_SaveAlt__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_SaveAlt__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var _material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @material-ui/icons/Search */ \"./node_modules/@material-ui/icons/Search.js\");\n/* harmony import */ var _material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _material_ui_icons_ViewColumn__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @material-ui/icons/ViewColumn */ \"./node_modules/@material-ui/icons/ViewColumn.js\");\n/* harmony import */ var _material_ui_icons_ViewColumn__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_material_ui_icons_ViewColumn__WEBPACK_IMPORTED_MODULE_19__);\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // NOTE: The following line is currently giving compile warnings -- a problem in a dependency it seems\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar tableIcons = {\n  Add: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_AddBox__WEBPACK_IMPORTED_MODULE_5___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  Check: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_Check__WEBPACK_IMPORTED_MODULE_7___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  Clear: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_Clear__WEBPACK_IMPORTED_MODULE_10___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  Delete: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_DeleteOutline__WEBPACK_IMPORTED_MODULE_11___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  DetailPanel: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_ChevronRight__WEBPACK_IMPORTED_MODULE_9___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  Edit: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_12___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  Export: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_SaveAlt__WEBPACK_IMPORTED_MODULE_17___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  Filter: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_FilterList__WEBPACK_IMPORTED_MODULE_13___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  FirstPage: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_FirstPage__WEBPACK_IMPORTED_MODULE_14___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  LastPage: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_LastPage__WEBPACK_IMPORTED_MODULE_15___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  NextPage: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_ChevronRight__WEBPACK_IMPORTED_MODULE_9___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  PreviousPage: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_ChevronLeft__WEBPACK_IMPORTED_MODULE_8___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  ResetSearch: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_Clear__WEBPACK_IMPORTED_MODULE_10___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  Search: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_18___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  SortArrow: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  ThirdStateCheck: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_Remove__WEBPACK_IMPORTED_MODULE_16___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  }),\n  ViewColumn: Object(react__WEBPACK_IMPORTED_MODULE_2__[\"forwardRef\"])(function (props, ref) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_material_ui_icons_ViewColumn__WEBPACK_IMPORTED_MODULE_19___default.a, Object.assign({}, props, {\n      ref: ref\n    }));\n  })\n}; // const RENDER_PROCESSED_RESULTS_VERSION = '0.7.4';\n\n/**\n *\n * @param {Object} param0 with username string and results object\n * @returns a rendered list of files that have been checked\n */\n\nfunction RenderCheckedFilesList(_ref) {\n  var username = _ref.username,\n      results = _ref.results;\n  // Also used in some of the lower-level demo results\n  if ((results === null || results === void 0 ? void 0 : results.checkedFileCount) > 0) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"p\", null, \"\\xA0\\xA0\\xA0\\xA0Successfully checked \", results.checkedFileCount.toLocaleString(), \" file\", results.checkedFileCount === 1 ? '' : 's', \" from \", results.checkedRepoNames.length.toLocaleString(), \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"i\", null, username), \" repo\", results.checkedRepoNames.length === 1 ? '' : 's', \": \", results.checkedRepoNames.join(', '), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"br\", null), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0including \", results.checkedFilenameExtensions.length, \" file type\", results.checkedFilenameExtensions.length === 1 ? '' : 's', \": \", results.checkedFilenameExtensions.join(', '), \".\");else return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"p\", null, \"\\xA0\\xA0\\xA0\\xA0No files checked!\");\n}\n/**\n *\n * @param {Object} param0 with elapsedSeconds\n * @returns the elapsed time rendered appropriately for the human reader\n */\n\nfunction RenderElapsedTime(_ref2) {\n  var elapsedSeconds = _ref2.elapsedSeconds;\n  var seconds = Math.round(elapsedSeconds % 60);\n  var remainingTime = Math.floor(elapsedSeconds / 60);\n  var minutes = Math.round(remainingTime % 60);\n  remainingTime = Math.floor(remainingTime / 60);\n  var hours = Math.round(remainingTime % 24);\n  remainingTime = Math.floor(remainingTime / 24); //parameterAssert(remainingTime === 0, `Elapsed time also contains ${remainingTime} days`);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, hours ? \"\".concat(hours, \" hour\") : '', hours && hours !== 1 ? 's' : '', hours ? ', ' : '', minutes ? \"\".concat(minutes, \" minute\") : '', minutes && minutes !== 1 ? 's' : '', minutes ? ', ' : '', seconds, \" second\", seconds === 1 ? '' : 's');\n}\n/**\n *\n * @param {Object} param0 with rawNoticeListLength and results object\n * @returns\n */\n\nfunction RenderTotals(_ref3) {\n  var rawNoticeListLength = _ref3.rawNoticeListLength,\n      results = _ref3.results;\n\n  if ((results === null || results === void 0 ? void 0 : results.numIgnoredNotices) || (results === null || results === void 0 ? void 0 : results.numDisabledNotices)) {\n    var netNumNotices = rawNoticeListLength - results.numIgnoredNotices - results.numDisabledNotices;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"p\", null, \"\\xA0\\xA0\\xA0\\xA0Finished in \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderElapsedTime, {\n      elapsedSeconds: results.elapsedSeconds\n    }), \" with \", netNumNotices === 0 ? 'no' : netNumNotices.toLocaleString(), \" notice\", netNumNotices === 1 ? ' ' : 's ', \"(\", rawNoticeListLength === 0 ? 'no' : rawNoticeListLength.toLocaleString(), \" raw notice\", rawNoticeListLength === 1 ? '' : 's', \" but\", results.numIgnoredNotices ? \" \".concat(results.numIgnoredNotices.toLocaleString(), \" ignored notice\").concat(results.numIgnoredNotices === 1 ? '' : 's') : \"\", results.numIgnoredNotices && results.numDisabledNotices ? ' and' : '', results.numDisabledNotices ? \" \".concat(results.numDisabledNotices.toLocaleString(), \" expected/disabled notice\").concat(results.numDisabledNotices === 1 ? '' : 's') : \"\", \").\", results.checkedOptions.cutoffPriorityLevel ? \" Priority level \".concat(results.checkedOptions.cutoffPriorityLevel, \" or lower were not included.\") : '');\n  } else // it’s much simpler\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"p\", null, \"\\xA0\\xA0\\xA0\\xA0Finished in \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderElapsedTime, {\n      elapsedSeconds: results.elapsedSeconds\n    }), \" with \", rawNoticeListLength === 0 ? 'no' : rawNoticeListLength.toLocaleString(), \" notice\", rawNoticeListLength === 1 ? '' : 's', \".\", results.checkedOptions.cutoffPriorityLevel ? \" Priority level \".concat(results.checkedOptions.cutoffPriorityLevel, \" or lower were not included.\") : '');\n}\n\nfunction RenderSuppressedCount(_ref4) {\n  var suppressedCount = _ref4.suppressedCount;\n  if (suppressedCount === 0) return null; // else\n  // debugLog(`RenderSuppressedCount have ${suppressedCount.toLocaleString()} suppressed notices`);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"p\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, suppressedCount ? suppressedCount.toLocaleString() + \" excess notice\" + (suppressedCount === 1 ? '' : 's') + \" suppressed.\" : '')));\n}\n\nfunction RenderCutoffCount(_ref5) {\n  var cutoffCount = _ref5.cutoffCount,\n      cutoffLevel = _ref5.cutoffLevel;\n  if (cutoffCount === 0) return null; // else\n  // debugLog(`RenderCutoffCount have ${suppressedCount.toLocaleString()} suppressed notices`);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"p\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, cutoffCount ? cutoffCount.toLocaleString() + \" low priority notice\" + (cutoffCount === 1 ? '' : 's') + \" (below level \" + cutoffLevel + \") dropped.\" : '')));\n}\n/**\n * @description - Displays a given piece of text (which can include newline characters)\n * @param {Object} param0 with text - text to render as numbered lines\n * @return {String} - rendered HTML for the numbered list of lines\n */\n\n\nfunction RenderNumberedLines(_ref6) {\n  var text = _ref6.text;\n  // This function is only used in some of the demos\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"ol\", null, text.split('\\n').map(function (line, index) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"li\", {\n      key: 'RNL' + index\n    }, line);\n  }));\n}\nvar MAX_ARRAY_ITEMS_TO_DISPLAY = 8; // Or do we want this as a parameter?\n\n/**\n* @description - Displays whatever is in the object\n* @param {Object} thisObject - object to render\n* @param {Array} excludeList - optional list of object property names to be ignored\n* @return {String} - rendered HTML for list of thisObject properties\n*/\n\nfunction RenderObject(_ref7) {\n  var thisObject = _ref7.thisObject,\n      excludeList = _ref7.excludeList;\n  // functionLog(\"RenderObject\");\n  // consoleLogObject('RenderObject settings', settings);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"ul\", null, Object.keys(thisObject).map(function (key, keyIndex) {\n    if (!excludeList || !excludeList.includes(key)) {\n      var displayObject = thisObject[key];\n      if (Array.isArray(displayObject) && displayObject.length > MAX_ARRAY_ITEMS_TO_DISPLAY) displayObject = \"(only first \".concat(MAX_ARRAY_ITEMS_TO_DISPLAY, \" displayed here) \").concat(JSON.stringify(displayObject.slice(0, MAX_ARRAY_ITEMS_TO_DISPLAY)), \", etc\\u2026\");\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"li\", {\n        key: 'RO' + keyIndex\n      }, \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"span\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", null, key), Array.isArray(thisObject[key]) ? \" (\".concat(thisObject[key].length.toLocaleString(), \") \") : '', \": \", typeof displayObject === 'object' ? JSON.stringify(displayObject) : displayObject));\n    }\n\n    return null;\n  }, []));\n}\n/**\n* @description - Displays the raw noticeList in a table\n* @param {Object} results - object containing noticeList\n* @return {String} - rendered HTML for table of notices\n*/\n\nfunction RenderRawResults(_ref8) {\n  var results = _ref8.results;\n  // This function is flexible enough to handle notice objects:\n  //      including bookID,C,V or not\n  //      including repoName, filename, lineNumber or not\n  //      including extra or not\n  // functionLog(\"RenderRawResults\");\n  // consoleLogObject('RenderRawResults results', results);\n  // displayPropertyNames('RenderRawResults results', results);\n  // Create a list of other property names\n  // let propertyList = [], newObject = {};\n  // for (const propertyName in results)\n  //     if (propertyName !== 'noticeList') {\n  //         newObject[propertyName] = results[propertyName];\n  //         propertyList.push(<p>{propertyName} = {results[propertyName]}</p>);\n  //     }\n  // consoleLogObject('propertyList', propertyList);\n  if (!results.noticeList || !results.noticeList.length) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"p\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", null, \"Raw Results\"), \" (no notices were produced):\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderObject, {\n    thisObject: results,\n    excludeList: ['noticeList']\n  })); // If we get here, we have notices.\n  // debugLog(`RenderRawResults got ${results.noticeList.length} notices`);\n  // Discover what fields we have in our notice objects (in order to set our table headers below)\n\n  var allPropertiesSet = new Set();\n  var haveOBS = false,\n      haveBible = false; // debugLog( \"allPropertiesSet-A\", JSON.stringify([...allPropertiesSet]));\n\n  var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(results.noticeList),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var noticeEntry = _step.value;\n\n      // debugLog(\"noticeEntry\", JSON.stringify(noticeEntry));\n      // debugLog(`RenderRawResults found (${Object.keys(noticeEntry).length}) ${Object.keys(noticeEntry)}`);\n      for (var _i = 0, _Object$entries = Object.entries(noticeEntry); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_Object$entries[_i], 2),\n            noticePropertyName = _Object$entries$_i[0],\n            noticePropertyValue = _Object$entries$_i[1];\n\n        // debugLog(\"  Found\", noticePropertyName, \"=\", noticeEntry[noticePropertyName]);\n        if (noticePropertyValue !== undefined) {\n          allPropertiesSet.add(noticePropertyName);\n\n          if (noticePropertyName === 'bookID' && noticePropertyValue) {\n            if (noticePropertyValue === 'OBS') haveOBS = true;else haveBible = true;\n          }\n        }\n      }\n    } // debugLog( \"RenderRawResults allPropertiesSet-Z\", JSON.stringify([...allPropertiesSet]));\n    // Adjust the headers according to the column sets that we actually have in the noticeList\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var headerData = [{\n    title: 'Priority',\n    field: 'priority',\n    type: 'numeric'\n  }, {\n    title: 'Message',\n    field: 'message'\n  }];\n  if (allPropertiesSet.has('details')) headerData = headerData.concat([{\n    title: 'Details',\n    field: 'details'\n  }]);\n  if (allPropertiesSet.has('bookID')) headerData = headerData.concat([{\n    title: 'Book',\n    field: 'bookID'\n  }]);\n\n  if (allPropertiesSet.has('C') || allPropertiesSet.has('V')) {\n    var CName = '???',\n        VName = '???';\n\n    if (haveBible && !haveOBS) {\n      CName = 'Chapter';\n      VName = 'Verse';\n    } else if (haveOBS && !haveBible) {\n      CName = 'Story';\n      VName = 'Frame';\n    } else if (haveBible && haveOBS) {\n      CName = 'Chapter/Story';\n      VName = 'Verse/Frame';\n    }\n\n    headerData = headerData.concat([{\n      title: CName,\n      field: 'C'\n    }, {\n      title: VName,\n      field: 'V'\n    }]);\n  }\n\n  if (allPropertiesSet.has('rowID')) headerData = headerData.concat([{\n    title: 'row ID',\n    field: 'rowID'\n  }]);\n  if (allPropertiesSet.has('repoCode')) headerData = headerData.concat([{\n    title: 'RepoCode',\n    field: 'repoCode'\n  }]);\n  if (allPropertiesSet.has('username')) headerData = headerData.concat([{\n    title: 'Username',\n    field: 'username'\n  }]);\n  if (allPropertiesSet.has('repoName')) headerData = headerData.concat([{\n    title: 'RepoName',\n    field: 'repoName'\n  }]);\n  if (allPropertiesSet.has('filename')) headerData = headerData.concat([{\n    title: 'Filename',\n    field: 'filename'\n  }]);\n  if (allPropertiesSet.has('fieldName')) headerData = headerData.concat([{\n    title: 'Field',\n    field: 'fieldName'\n  }]);\n  if (allPropertiesSet.has('lineNumber')) headerData = headerData.concat([{\n    title: 'Line',\n    field: 'lineNumber'\n  }]);\n  if (allPropertiesSet.has('characterIndex')) headerData = headerData.concat([{\n    title: 'CharIndex',\n    field: 'characterIndex'\n  }]);\n  if (allPropertiesSet.has('excerpt')) headerData = headerData.concat([{\n    title: 'Excerpt',\n    field: 'excerpt'\n  }]);\n  if (allPropertiesSet.has('location')) headerData = headerData.concat([{\n    title: 'Location',\n    field: 'location'\n  }]);\n  if (allPropertiesSet.has('extra')) headerData = headerData.concat([{\n    title: 'Extra',\n    field: 'extra'\n  }]); // debugLog(\"headerData\", headerData.length, JSON.stringify(headerData));\n  // Make the actual table and return it\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", null, \"Raw Results\"), \":\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderObject, {\n    thisObject: results\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(material_table__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    icons: tableIcons,\n    title: \"All \".concat(results.noticeList.length.toLocaleString(), \" Raw Notices\"),\n    columns: headerData,\n    data: results.noticeList,\n    options: {\n      sorting: true,\n      exportButton: true,\n      exportAllData: true,\n      columnsButton: true,\n      filtering: true\n    }\n  }));\n}\n\nfunction RenderSuccessesSummaryLine(_ref9) {\n  var haveErrorsOrWarnings = _ref9.haveErrorsOrWarnings,\n      results = _ref9.results;\n  // functionLog(`RenderSuccessesSummaryLine(${haveErrorsOrWarnings}, ${results})`);\n  var successCount;\n  if (results.successList.length === 1) successCount = 'One';else if (results.successList.length === 2) successCount = 'Two';else if (results.successList.length === 3) successCount = 'Three';else if (results.successList.length === 4) successCount = 'Four';else if (results.successList.length === 5) successCount = 'Five';else if (results.successList.length === 6) successCount = 'Six';else successCount = results.successList.length.toLocaleString();\n  var currentDate = new Date();\n  var dateString = currentDate.toLocaleDateString(undefined, {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n  var timeString = currentDate.toLocaleTimeString([], {\n    hour12: false,\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", {\n    style: {\n      color: haveErrorsOrWarnings ? 'limegreen' : 'green'\n    }\n  }, successCount.toLocaleString(), \" check\", results.successList.length === 1 ? '' : 's', \" completed \", dateString, \" at \", timeString, results.successList.length ? ':' : ''));\n}\n\nfunction RenderSuccessesColored(_ref10) {\n  var results = _ref10.results;\n  // Display our array of success message strings in a nicer format\n  //\n  // Expects results to contain:\n  //      1/ successList\n  // functionLog(\"RenderSuccessesColored with \", successList);\n  // consoleLogObject('RenderSuccessesColored results', results);\n  var haveWarnings;\n\n  try {\n    haveWarnings = results.errorList.length || results.warningList.length;\n  } catch (e1) {\n    try {\n      haveWarnings = results.severeList.length || results.mediumList.length || results.lowList.length;\n    } catch (e2) {\n      haveWarnings = results.warningList.length;\n    }\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"ul\", null, results.successList.map(function (listEntry, index) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"li\", {\n      key: 'RSC' + index\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", {\n      style: {\n        color: haveWarnings ? 'limegreen' : 'green'\n      }\n    }, listEntry));\n  }));\n}\n/**\n* @description - Displays the message plus details if specified\n* @param {string} color - color field for the message style\n* @param {string} message - notice text\n* @param {string} details - (optional) extra notice text\n* @return {String} - rendered HTML for the given reference\n*/\n\n\nfunction RenderMessage(_ref11) {\n  var color = _ref11.color,\n      message = _ref11.message,\n      details = _ref11.details;\n  var detailsString = '';\n  if (details) if (details.startsWith('verse text ◗')) detailsString = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, \" with verse text \\u25D7\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"span\", {\n    style: {\n      backgroundColor: 'LemonChiffon'\n    }\n  }, details.slice(12, -1)), \"\\u25D6\");else if (details.length) detailsString = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, \" with '\", details, \"'\");\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", {\n    style: {\n      color: color\n    }\n  }, message), detailsString);\n}\n/**\n* @description - Displays the bookcode and chapter/verse details if specified\n* @param {string} bookID - (optional) 3-character UPPERCASE USFM bookcode or 'OBS'.\n* @param {string} C - (optional) chapter info\n* @param {string} V - (optional) verse info\n* @return {String} - rendered HTML for the given reference\n*/\n\n\nfunction RenderBCV(_ref12) {\n  var bookID = _ref12.bookID,\n      C = _ref12.C,\n      V = _ref12.V;\n  // These are all optional parameters - they may be undefined or blank if irrelevant\n  // functionLog(`RenderBCV(${bookID}, ${C}, ${V})`);\n  if (!bookID && !C && !V) return null; // They're all undefined or blank!\n  // debugLog(`RenderBCV2 ${bookID}, ${C}, ${V}`);\n\n  var result;\n  if (bookID && bookID.length) result = bookID;\n  if (C && C.length) result = \"\".concat(result).concat(result.length ? ' ' : '').concat(C);\n  if (V && V.length) result = \"\".concat(result).concat(result.length ? ':' : '').concat(V);\n  if (result.length) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, \" \", V && V.length ? 'at' : 'in', \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", null, result));\n  return null;\n}\n/**\n* @description - Displays the repoName and filename/lineNumber details if specified\n* @param {string} username - (optional) username/orgName string\n* @param {string} repoName - (optional) repo name string\n* @param {string} filename - (optional) filename string\n* @param {number} lineNumber - (optional) line number integer (1-based)\n* @param {string} rowID - (optional) 4-character ID field\n* @param {string} fieldName - (optional) name of field\n* @return {String} - rendered HTML for the given reference\n*/\n\n\nfunction RenderFileDetails(_ref13) {\n  var _givenEntry$repoName, _adjustedRepoName;\n\n  var givenEntry = _ref13.givenEntry;\n  // These are all optional parameters - they may be undefined or blank if irrelevant\n  // functionLog(`RenderFileDetails(${JSON.stringify(givenEntry)})`);\n  // debugLog(`RenderFileDetails(${username}, ${repoName}, ${branch}, ${filename}, ${lineNumber}, ${rowID}, ${fieldName})`);\n  if (!givenEntry.repoName && !givenEntry.filename && !givenEntry.lineNumber && !givenEntry.rowID && !givenEntry.fieldName) return null; // They're all undefined or blank!\n\n  if (!givenEntry.branch) givenEntry.branch = ((_givenEntry$repoName = givenEntry.repoName) === null || _givenEntry$repoName === void 0 ? void 0 : _givenEntry$repoName.endsWith('2')) ? 'newFormat' : 'master'; // default but with TEMP code for newFormat\n  // debugLog(`RenderFileDetails2 ${repoName}, ${filename}, ${lineNumber}`);\n  // debugLog(`RenderFileDetails got givenEntry.branch='${givenEntry.branch}'`);\n  // Not sure if this happens with BP check, but filecheck for TN was giving bad links for TA warnings\n\n  var adjustedRepoName = givenEntry.repoName;\n  var firstMsgWord = givenEntry.message.split(' ')[0]; // This might be the former 'extra' field\n\n  if (['TA', 'TW'].indexOf(firstMsgWord) >= 0) {\n    var adjustedLanguageCode = givenEntry.repoName.split('_')[0];\n    if (adjustedLanguageCode === 'hbo' || adjustedLanguageCode === 'el-x-koine') adjustedLanguageCode = 'en'; // This is a guess (and won’t be needed for TWs when we switch to TWLs)\n\n    adjustedRepoName = \"\".concat(adjustedLanguageCode, \"_\").concat(firstMsgWord.toLowerCase());\n    if (adjustedRepoName !== givenEntry.repoName) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"debugLog\"])(\"RenderFileDetails: trying adjusting repoName from '\".concat(givenEntry.repoName, \"' to '\").concat(adjustedRepoName, \"' for \").concat(JSON.stringify(givenEntry)));\n  } // debugLog(`RenderFileDetails got adjustedRepoName='${adjustedRepoName}'`);\n\n\n  var resultStart = '',\n      lineResult = '',\n      resultEnd = '',\n      fileLineLink = '',\n      fileLink = '';\n  if ((_adjustedRepoName = adjustedRepoName) === null || _adjustedRepoName === void 0 ? void 0 : _adjustedRepoName.length) resultStart += \" in \".concat(adjustedRepoName, \" repository\");\n\n  if (givenEntry.username && adjustedRepoName && givenEntry.filename) {\n    try {\n      // use blame so we can see the actual line!\n      if (givenEntry.filename.endsWith('.tsv') || givenEntry.filename.endsWith('.md')) {\n        var folder = '';\n\n        if (givenEntry.filename !== 'README.md' && givenEntry.filename !== 'LICENSE.md') {\n          if (adjustedRepoName.endsWith('_obs')) folder = 'content/';else if (adjustedRepoName.endsWith('_tw') && !givenEntry.filename.startsWith('bible/')) {\n            folder = 'bible/';\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"dataAssert\"])(givenEntry.filename.indexOf('/') === 1); // filename actually contains the subfolder\n          }\n        }\n\n        fileLink = \"https://git.door43.org/\".concat(givenEntry.username, \"/\").concat(adjustedRepoName, \"/blame/branch/\").concat(givenEntry.branch, \"/\").concat(folder).concat(givenEntry.filename);\n      } else // not TSV or MD\n        fileLink = \"https://git.door43.org/\".concat(givenEntry.username, \"/\").concat(adjustedRepoName, \"/src/branch/\").concat(givenEntry.branch, \"/\").concat(givenEntry.filename);\n    } catch (someErr) {\n      Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"debugLog\"])(\"What was someErr here: \".concat(someErr));\n    }\n\n    if (givenEntry === null || givenEntry === void 0 ? void 0 : givenEntry.filename.length) resultStart += \" in file \".concat(givenEntry.filename);\n\n    if (givenEntry.lineNumber) {\n      resultStart += ' on ';\n      if (fileLink && givenEntry.lineNumber) fileLineLink = \"\".concat(fileLink, \"#L\").concat(givenEntry.lineNumber);\n      lineResult = \"line \".concat(givenEntry.lineNumber.toLocaleString());\n    } // else resultEnd += \" no lineNumber\";\n\n  } // else if (!username) resultEnd += \" no username\";\n  // else if (!repoName) resultEnd += \" no repoName\";\n  // else if (!filename) resultEnd += \" no filename\";\n\n\n  if (givenEntry.rowID && givenEntry.rowID.length) resultEnd = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, resultEnd, \" with row ID \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"span\", {\n    style: {\n      fontFamily: 'Courier New, courier, monospace'\n    }\n  }, givenEntry.rowID)));\n  if (givenEntry.fieldName && givenEntry.fieldName.length) resultEnd = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, resultEnd, \" in \", givenEntry.fieldName, \" field\"); // debugLog(`RenderFileDetails got resultStart='${resultStart}'`);\n  // debugLog(`RenderFileDetails got lineResult='${lineResult}'`);\n  // debugLog(`RenderFileDetails got fileLineLink='${fileLineLink}'`);\n  // debugLog(`RenderFileDetails got fileLink='${fileLink}'`);\n  // debugLog(`RenderFileDetails got resultEnd='${resultEnd}'`);\n\n  if (fileLineLink.length) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, resultStart, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"a\", {\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    href: fileLineLink\n  }, lineResult), resultEnd);else if (fileLink.length) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, resultStart, \" in file \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"a\", {\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    href: fileLink\n  }, givenEntry.filename), resultEnd);else if (lineResult.length) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, resultStart, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", null, lineResult), resultEnd);else return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, resultStart, \" with file \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", null, givenEntry.filename), resultEnd);\n} // end of RenderFileDetails\n\n\nfunction RenderExcerpt(_ref14) {\n  var excerpt = _ref14.excerpt,\n      message = _ref14.message;\n\n  // functionLog(`RenderExcerpt(${excerpt}, ${message})`);\n  // NOTE: These message strings must match notes-links-check.js (priority 82, and priority 32,)\n  // Note that messages might start with a repo code, e.g., \"TN Actual message start\"\n  // if (message.endsWith(\"Untested general/outside link\")\n  //     || message.endsWith(\"Error loading general link\")\n  //     || message.endsWith(\"Should http link be https\")) {\n  // debugLog(`Here1 RenderExcerpt(${excerpt}, ${message})`);\n  if (excerpt && excerpt[0] === '[' && excerpt.slice(-1) === ')' && excerpt.indexOf('](') !== -1) {\n    // then the excerpt is a link so let's liven it\n    // debugLog(`Here2 RenderExcerpt(${excerpt}, ${message})`);\n    var ix = excerpt.indexOf('](');\n    var displayPart = excerpt.slice(1, ix); // Start after the [ until before the ](\n\n    var linkPart = excerpt.slice(ix + 2, excerpt.length - 1); // Step past the ]( but don’t include the final )\n\n    var adjLinkPart = message === \"Should http link be https\" ? linkPart.replace('http:', 'https:') : linkPart; // debugLog(`RenderExcerpt from '${excerpt}' got ix=${ix}, displayPart='${displayPart}', linkPart='${linkPart}', adjLinkPart='${adjLinkPart}'`);\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"span\", {\n      style: {\n        color: 'DimGray'\n      }\n    }, \"` around \\u25D7[\", displayPart, \"](\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"a\", {\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      href: adjLinkPart\n    }, linkPart), \")\\u25D6`\"));\n  } // }\n\n\n  if (excerpt && excerpt.length) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, \" around \\u25D7\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"span\", {\n    style: {\n      color: 'DarkOrange'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", null, excerpt)), \"\\u25D6\"); // else\n\n  return null;\n} // end of RenderExcerpt\n\n/**\n *\n * @param {Object} props.entry -- the given notice entry object\n */\n\n\nfunction RenderPriority(_ref15) {\n  var entry = _ref15.entry;\n  // Also displays the debugChain (after the priority) if the debugChain string exists\n  if (entry.debugChain) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"span\", {\n    style: {\n      color: 'Gray'\n    }\n  }, \" (\", \"Priority \" + entry.priority, \")\"), \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"span\", {\n    style: {\n      color: 'Purple'\n    }\n  }, \"[\", entry.debugChain, \"]\"));else return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, \" (\", \"Priority \" + entry.priority, \")\");\n}\n/**\n *\n * @param {Object} param0\n * @returns JSX rendered entry\n */\n\n\nfunction RenderOneEntry(_ref16) {\n  var color = _ref16.color,\n      entry = _ref16.entry;\n  // functionLog(`RenderOneEntry with ${color} and ${JSON.stringify(entry)}`);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderMessage, {\n    color: color,\n    message: entry.message,\n    details: entry.details\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderBCV, {\n    bookID: entry.bookID,\n    C: entry.C,\n    V: entry.V\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderFileDetails, {\n    givenEntry: entry\n  }), entry.characterIndex > 0 ? \" (at character \" + (entry.characterIndex + 1) + \")\" : \"\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderExcerpt, {\n    excerpt: entry.excerpt,\n    message: entry.message\n  }), entry.location, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderPriority, {\n    entry: entry\n  }));\n}\n\nfunction RenderHiddenNotices(_ref17) {\n  var color = _ref17.color,\n      suppressedNoticeList = _ref17.suppressedNoticeList;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"ul\", null, suppressedNoticeList.map(function (suppressedEntry, index) {\n    // debugLog(`RenderHiddenNotices ${index} ${JSON.stringify(suppressedEntry)}`);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"li\", {\n      key: 'RHN' + index\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderOneEntry, {\n      color: color,\n      entry: suppressedEntry\n    }));\n  }));\n}\n/**\n *\n * @param {Object} param0 with arrayType of 'w','e','s' and an array of results\n * @returns JSX rendered table\n */\n\n\nfunction RenderProcessedArray(_ref18) {\n  var arrayType = _ref18.arrayType,\n      results = _ref18.results;\n  // Display our array of objects in a nicer format\n  //  priority (integer), message (string)\n  //  plus optional fields:\n  //      bookID, C, V, repoName, filename, lineNumber\n  //      characterIindex (integer), excerpt (string), location (string)\n  //\n  // functionLog(\"RenderProcessedArray with \", arrayType);\n  // consoleLogObject('RenderProcessedArray results', results);\n  if (arrayType === 's') return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderSuccessesColored, {\n    results: results\n  }));else {\n    // not 's' (successList)\n    var myList = arrayType === 'e' ? results.errorList : results.warningList; // if (myList === undefined) {\n    //     debugLog(`RenderProcessedArray couldn't find errorList or warningList from ${JSON.stringify(results)}`);\n    //     return null;\n    // }\n\n    var thisColor = arrayType === 'e' ? 'red' : 'orange';\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"ul\", null, myList.map(function (listEntry, index) {\n      if (listEntry.location === undefined) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"debugLog\"])(\"RenderProcessedArray: why is location undefined for \".concat(JSON.stringify(listEntry)));else if (listEntry.location.indexOf(' HIDDEN') >= 0 && listEntry.hiddenNotices) // This is a \"MORE SIMILAR ERRORS/WARNINGS/NOTICES SUPRESSED\" message with other notices embedded\n        //  so we allow it to be expanded using HTML5 \"details\" feature.\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"li\", {\n          key: 'RPA' + index\n        }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"details\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"summary\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderOneEntry, {\n          color: thisColor,\n          entry: listEntry\n        })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderHiddenNotices, {\n          color: thisColor,\n          suppressedNoticeList: listEntry.hiddenNotices\n        }))); // else (a regular message)\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"li\", {\n        key: 'RPA' + index\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderOneEntry, {\n        color: thisColor,\n        entry: listEntry\n      }));\n    }));\n  }\n}\n\nfunction RenderErrors(_ref19) {\n  var results = _ref19.results;\n  // functionLog(\"RenderErrors\");\n  // consoleLogObject('RenderErrors results', results);\n  Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"userLog\"])(\"Displaying \".concat(results.errorList.length.toLocaleString(), \" error(s) with \").concat(results.numHiddenErrors.toLocaleString(), \" hidden\"));\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", {\n    style: {\n      color: results.errorList.length ? 'red' : 'green'\n    }\n  }, results.errorList.length.toLocaleString(), \" error\", results.errorList.length === 1 ? '' : 's'), results.errorList.length ? ':' : '', /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, results.numHiddenErrors ? \" (\" + results.numHiddenErrors.toLocaleString() + \" similar one\" + (results.numHiddenErrors === 1 ? '' : 's') + \" hidden)\" : ''), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderProcessedArray, {\n    results: results,\n    arrayType: \"e\"\n  }));\n}\n\nfunction RenderWarnings(_ref20) {\n  var results = _ref20.results;\n  // functionLog(\"RenderWarnings\");\n  // consoleLogObject('RenderWarnings results', results);\n  Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"userLog\"])(\"Displaying \".concat(results.warningList.length.toLocaleString(), \" warnings(s) with \").concat(results.numHiddenWarnings.toLocaleString(), \" hidden\"));\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", {\n    style: {\n      color: results.warningList.length ? 'orange' : 'green'\n    }\n  }, results.warningList.length.toLocaleString(), \" warning\", results.warningList.length === 1 ? '' : 's'), results.warningList.length ? ':' : '', /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, results.numHiddenWarnings ? \" (\" + results.numHiddenWarnings.toLocaleString() + \" similar one\" + (results.numHiddenWarnings === 1 ? '' : 's') + \" hidden)\" : ''), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderProcessedArray, {\n    results: results,\n    arrayType: \"w\"\n  }));\n}\n\nfunction RenderErrorsAndWarnings(_ref21) {\n  var results = _ref21.results;\n  // functionLog(\"RenderErrorsAndWarnings\");\n  // consoleLogObject('RenderErrorsAndWarnings results', results);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, results.numSuppressedNotices ? \" (\" + results.numSuppressedNotices.toLocaleString() + \" similar one\" + (results.numSuppressedNotices === 1 ? '' : 's') + \" suppressed)\" : ''), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderErrors, {\n    results: results\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderWarnings, {\n    results: results\n  }));\n}\n\nfunction RenderSuccessesErrorsWarnings(_ref22) {\n  var results = _ref22.results;\n  // Not used internally here -- called from Demo check functions\n  // functionLog(\"RenderSuccessesErrorsWarnings\");\n  // consoleLogObject('RenderSuccessesErrorsWarnings results', results);\n  var haveErrorsOrWarnings = results.errorList.length || results.warningList.length;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderSuccessesSummaryLine, {\n    haveErrorsOrWarnings: haveErrorsOrWarnings,\n    results: results\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderSuccessesColored, {\n    results: results\n  }), haveErrorsOrWarnings ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderErrorsAndWarnings, {\n    results: results\n  }) : \"\");\n}\n\nfunction RenderGivenArray(_ref23) {\n  var color = _ref23.color,\n      array = _ref23.array;\n  // Display our array of objects in a nicer format\n  //  priority (integer), message (string),\n  //  plus possible optional fields:\n  //      bookID, C, V,\n  //      repoName, filename, lineNumber,\n  //      characterIndex (integer), excerpt (string), location (descriptive string)\n  //\n  // Called from RenderSevere, RenderMedium, RenderLow\n  //\n  // functionLog(\"RenderGivenArray with \", arrayType);\n  // consoleLogObject('RenderGivenArray results', results);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"ul\", null, array.map(function (listEntry, index) {\n    // debugLog(`RenderGivenArray ${index} ${JSON.stringify(listEntry)}`);\n    if (listEntry.location === undefined) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"debugLog\"])(\"RenderGivenArray: why is location undefined for \".concat(JSON.stringify(listEntry)));else if (listEntry.location.indexOf(' HIDDEN') >= 0 && listEntry.hiddenNotices) // This is a \"MORE SIMILAR ERRORS/WARNINGS/NOTICES SUPRESSED\" message with other notices embedded\n      //  so we allow it to be expanded using HTML5 \"details\" feature.\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"li\", {\n        key: 'RGA' + index\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"details\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"summary\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderOneEntry, {\n        color: color,\n        entry: listEntry\n      })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderHiddenNotices, {\n        color: color,\n        suppressedNoticeList: listEntry.hiddenNotices\n      }))); // else (a regular message)\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"li\", {\n      key: 'RGA' + index\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderOneEntry, {\n      color: color,\n      entry: listEntry\n    }));\n  }));\n}\n\nfunction RenderSevere(_ref24) {\n  var results = _ref24.results;\n  // functionLog(\"RenderSevere\");\n  // consoleLogObject('RenderSevere results', results);\n  Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"userLog\"])(\"RenderSevere displaying \".concat(results.severeList.length.toLocaleString(), \" severe notice(s) with \").concat(results.numHiddenSevere.toLocaleString(), \" hidden\"));\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", {\n    style: {\n      color: results.severeList.length ? 'red' : 'green'\n    }\n  }, results.severeList.length.toLocaleString(), \" severe error\", results.severeList.length === 1 ? '' : 's'), results.severeList.length ? ':' : '', /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, results.numHiddenSevere ? \" (\" + results.numHiddenSevere.toLocaleString() + \" similar one\" + (results.numHiddenSevere === 1 ? '' : 's') + \" hidden)\" : ''), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderGivenArray, {\n    color: \"red\",\n    array: results.severeList\n  }));\n}\n\nfunction RenderMedium(_ref25) {\n  var results = _ref25.results;\n  // functionLog(\"RenderMedium\");\n  // consoleLogObject('RenderSevere results', results);\n  Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"userLog\"])(\"RenderMedium displaying \".concat(results.mediumList.length.toLocaleString(), \" medium notice(s) with \").concat(results.numHiddenMedium.toLocaleString(), \" hidden\"));\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", {\n    style: {\n      color: results.mediumList.length ? 'maroon' : 'green'\n    }\n  }, results.mediumList.length.toLocaleString(), \" medium error\", results.mediumList.length === 1 ? '' : 's'), results.mediumList.length ? ':' : '', /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, results.numHiddenMedium ? \" (\" + results.numHiddenMedium.toLocaleString() + \" similar one\" + (results.numHiddenMedium === 1 ? '' : 's') + \" hidden)\" : ''), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderGivenArray, {\n    color: \"maroon\",\n    array: results.mediumList\n  }));\n}\n\nfunction RenderLow(_ref26) {\n  var results = _ref26.results;\n  // functionLog(\"RenderLow\");\n  // consoleLogObject('RenderLow results', results);\n  Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"userLog\"])(\"RenderLow displaying \".concat(results.lowList.length.toLocaleString(), \" low notice(s) with \").concat(results.numHiddenLow.toLocaleString(), \" hidden\"));\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", {\n    style: {\n      color: results.lowList.length ? 'orange' : 'green'\n    }\n  }, results.lowList.length.toLocaleString(), \" other warning\", results.lowList.length === 1 ? '' : 's'), results.lowList.length ? ':' : '', /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, results.numHiddenLow ? \" (\" + results.numHiddenLow.toLocaleString() + \" similar one\" + (results.numHiddenLow === 1 ? '' : 's') + \" hidden)\" : ''), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderGivenArray, {\n    color: \"orange\",\n    array: results.lowList\n  }));\n}\n\nfunction RenderSevereMediumLow(_ref27) {\n  var results = _ref27.results;\n  // functionLog(\"RenderSevereMediumLow\");\n  // consoleLogObject('RenderSevereMediumLow results', results);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, results.numSuppressedNotices ? \" (\" + results.numSuppressedNotices.toLocaleString() + \" similar one\" + (results.numSuppressedNotices === 1 ? '' : 's') + \" suppressed)\" : ''), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderSevere, {\n    results: results\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderMedium, {\n    results: results\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderLow, {\n    results: results\n  }));\n}\n\nfunction RenderSuccessesSevereMediumLow(_ref28) {\n  var results = _ref28.results;\n  // Not used internally here -- called from Demo check functions\n  // functionLog(\"RenderSuccessesSevereMediumLow\");\n  // consoleLogObject('RenderSuccessesSevereMediumLow results', results);\n  var haveErrorsOrWarnings = results.severeList.length || results.mediumList.length || results.lowList.length;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderSuccessesSummaryLine, {\n    haveErrorsOrWarnings: haveErrorsOrWarnings,\n    results: results\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderSuccessesColored, {\n    results: results\n  }), haveErrorsOrWarnings ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderSevereMediumLow, {\n    results: results\n  }) : \"\");\n}\n\nfunction getGradientcolor(priorityValue) {\n  // priorityValue is in range 1..999\n  //\n  // Returns a color value from red (highest priority) to orange (lower)\n  var red = \"0\".concat(Math.floor(priorityValue * 255 / 999).toString(16)).slice(-2); // const green = `0${Math.floor((1000-priorityValue) * 55 / 999).toString(16)}`.slice(-2);\n  // debugLog(`getGradientcolor(${priorityValue}) -> red='${red}' green='${green}'`)\n\n  return \"#\".concat(red, \"0000\"); // or `#${red}${green}00`\n}\n\nfunction RenderNoticesGradient(_ref29) {\n  var results = _ref29.results;\n  // Display our array of 8-part lists in a nicer format\n  //  1/ priority number, 2/ bookID, 3/ C, 4/ V, 5/ message,\n  //      6/ index (integer), 7/ excerpt (optional), 8/ location\n  //\n  // Expects results to contain:\n  //      1/ warningList\n  //\n  // Called from RenderSuccessesNoticesGradient below\n  //\n  // functionLog(`RenderNoticesGradient with ${results.warningList}`);\n  // consoleLogObject('RenderNoticesGradient results', results);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"ul\", null, results.warningList.map(function (listEntry, index) {\n    // debugLog(`RenderNoticesGradient ${index} ${JSON.stringify(listEntry)}`);\n    var thisColor = getGradientcolor(listEntry.priority);\n    if (listEntry.location === undefined) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"debugLog\"])(\"RenderNoticesGradient: why is location undefined for \".concat(JSON.stringify(listEntry)));else if (listEntry.location.indexOf(' HIDDEN') >= 0 && listEntry.hiddenNotices) // This is a \"MORE SIMILAR ERRORS/WARNINGS/NOTICES SUPRESSED\" message with other notices embedded\n      //  so we allow it to be expanded using HTML5 \"details\" feature.\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"li\", {\n        key: 'RWG' + index\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"details\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"summary\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderOneEntry, {\n        color: thisColor,\n        entry: listEntry\n      })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderHiddenNotices, {\n        color: thisColor,\n        suppressedNoticeList: listEntry.hiddenNotices\n      }))); // else (a regular message)\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"li\", {\n      key: 'RWG' + index\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderOneEntry, {\n      color: thisColor,\n      entry: listEntry\n    }));\n  }));\n}\n\nfunction RenderSuccessesNoticesGradient(_ref30) {\n  var results = _ref30.results;\n  // Not used internally here -- called from Demo check functions\n  // functionLog(`RenderSuccessesNoticesGradient(${Object.keys(results)})`);\n  // consoleLogObject('RenderSuccessesNoticesGradient results', results);\n  var haveErrorsOrWarnings = results.warningList.length;\n  Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"userLog\"])(\"RenderSuccessesNoticesGradient displaying \".concat(results.warningList.length.toLocaleString(), \" gradient notice(s) with \").concat(results.numHiddenNotices.toLocaleString(), \" hidden\"));\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderSuccessesSummaryLine, {\n    haveErrorsOrWarnings: haveErrorsOrWarnings,\n    results: results\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderSuccessesColored, {\n    results: results\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderSuppressedCount, {\n    suppressedCount: results.numSuppressedNotices\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"b\", {\n    style: {\n      color: results.warningList.length ? 'orange' : 'green'\n    }\n  }, results.warningList.length.toLocaleString(), \" warning notice\", results.warningList.length === 1 ? '' : 's'), results.warningList.length ? ':' : '', /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\"small\", {\n    style: {\n      color: 'Gray'\n    }\n  }, results.numHiddenNotices ? \" (\" + results.numHiddenNotices.toLocaleString() + \" similar one\" + (results.numHiddenNotices === 1 ? '' : 's') + \" hidden)\" : ''), haveErrorsOrWarnings ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderNoticesGradient, {\n    results: results\n  }) : \"\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(RenderCutoffCount, {\n    cutoffCount: results.numCutoffNotices,\n    cutoffLevel: results.processingOptions.cutoffPriorityLevel\n  }));\n}\n\n//# sourceURL=webpack:///./src/demos/RenderProcessedResults.js?");

/***/ }),

/***/ "./src/demos/all-book-packages-check/AllBookPackagesCheck.js":
/*!*******************************************************************!*\
  !*** ./src/demos/all-book-packages-check/AllBookPackagesCheck.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _core_books_books__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core */ \"./src/core/index.js\");\n/* harmony import */ var _book_packages_check_checkBookPackages__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../book-packages-check/checkBookPackages */ \"./src/demos/book-packages-check/checkBookPackages.js\");\n/* harmony import */ var _notice_processing_functions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../notice-processing-functions */ \"./src/demos/notice-processing-functions.js\");\n/* harmony import */ var _RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utilities */ \"./src/core/utilities.js\");\n\n\n\n\n // import { withStyles } from '@material-ui/core/styles';\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const ALL_BPS_VALIDATOR_VERSION_STRING = '0.3.17';\n\nvar OLD_TESTAMENT_BOOK_CODES = 'GEN,EXO,LEV,NUM,DEU,JOS,JDG,RUT,1SA,2SA,1KI,2KI,1CH,2CH,EZR,NEH,EST,JOB,PSA,PRO,ECC,SNG,ISA,JER,LAM,EZK,DAN,HOS,JOL,AMO,OBA,JON,MIC,NAM,HAB,ZEP,HAG,ZEC,MAL';\nvar NEW_TESTAMENT_BOOK_CODES = 'MAT,MRK,LUK,JHN,ACT,ROM,1CO,2CO,GAL,EPH,PHP,COL,1TH,2TH,1TI,2TI,TIT,PHM,HEB,JAS,1PE,2PE,1JN,2JN,3JN,JUD,REV';\n\nfunction AllBookPackagesCheck(\n/*username, languageCode, bookIDs,*/\nprops) {\n  // Check a single Bible book across many repositories\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(\"Waiting-CheckAllBookPackages\"),\n      _useState2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_useState, 2),\n      result = _useState2[0],\n      setResultValue = _useState2[1]; // debugLog(`I'm here in AllBookPackagesCheckBookPackagesCheck v${ALL_BPS_VALIDATOR_VERSION_STRING}`);\n  // consoleLogObject(\"props\", props);\n  // consoleLogObject(\"props.classes\", props.classes);\n\n\n  var username = props.username; // debugLog(`username='${username}'`);\n\n  var languageCode = props.languageCode; // debugLog(`languageCode='${languageCode}'`);\n\n  var testament = props.testament; // debugLog(`testament='${testament}'`);\n\n  var includeOBS = props.includeOBS; // debugLog(`includeOBS='${includeOBS}'`);\n\n  var dataSet = props.dataSet; // debugLog(`dataSet='${dataSet}'`);\n\n  var branch = props.branch; // debugLog(`branch='${branch}'`);\n  // Enter a string containing UPPERCASE USFM book identifiers separated only by commas\n  //  and can also include OBS (for Open Bible Stories)\n\n  var bookIDsString = '';\n  var haveOT = false,\n      haveNT = false;\n\n  if (testament.toUpperCase() === 'OT' || testament.toUpperCase() === 'OLD') {\n    bookIDsString = OLD_TESTAMENT_BOOK_CODES;\n    haveOT = true;\n  } else if (testament.toUpperCase() === 'NT' || testament.toUpperCase() === 'NEW') {\n    bookIDsString = NEW_TESTAMENT_BOOK_CODES;\n    haveNT = true;\n  } else if (testament.toUpperCase() === 'ALL' || testament.toUpperCase() === 'BOTH') {\n    bookIDsString = \"\".concat(OLD_TESTAMENT_BOOK_CODES, \",\").concat(NEW_TESTAMENT_BOOK_CODES);\n    haveOT = true;\n    haveNT = true;\n  } else setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n    style: {\n      color: 'red'\n    }\n  }, \"No testament selected\"));\n\n  if (includeOBS.toUpperCase() === 'Y' || includeOBS.toUpperCase() === 'YES') bookIDsString += ',OBS';\n  var bookIDList = [];\n  var bookIDInvalid;\n\n  var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(bookIDsString.split(',')),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var bookID = _step.value;\n      bookID = bookID.trim();\n\n      if (!_core_books_books__WEBPACK_IMPORTED_MODULE_5__[\"isValidBookID\"](bookID) && bookID !== 'OBS') {\n        bookIDInvalid = bookID;\n      }\n\n      bookIDList.push(bookID);\n    } // TODO: I don’t understand why this command gets executed multiple times!!!\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  Object(_core_utilities__WEBPACK_IMPORTED_MODULE_10__[\"userLog\"])(\"AllBookPackagesCheck bookIDList (\".concat(bookIDList.length, \") = \").concat(bookIDList.join(', ')));\n  var checkingOptions = {\n    // Uncomment any of these to test them\n    // excerptLength: 25,\n    suppressNoticeDisablingFlag: true,\n    // Leave this one as true (otherwise demo checks are less efficient)\n    checkType: 'AllBookPackages' // Always leave this one in\n\n  }; // Or this allows the parameters to be specified as a AllBookPackagesCheck property\n\n  if (props.excerptLength) checkingOptions.excerptLength = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.excerptLength);\n  if (props.cutoffPriorityLevel) checkingOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n  if (props.disableAllLinkFetchingFlag) checkingOptions.disableAllLinkFetchingFlag = props.disableAllLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTAArticlesCheckFlag) checkingOptions.disableLinkedTAArticlesCheckFlag = props.disableLinkedTAArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTWArticlesCheckFlag) checkingOptions.disableLinkedTWArticlesCheckFlag = props.disableLinkedTWArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLexiconLinkFetchingFlag) checkingOptions.disableLexiconLinkFetchingFlag = props.disableLexiconLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedLexiconEntriesCheckFlag) checkingOptions.disableLinkedLexiconEntriesCheckFlag = props.disableLinkedLexiconEntriesCheckFlag.toLowerCase() === 'true';\n  Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(function () {\n    // debugLog(\"BookPackagesCheck.useEffect() called with \", JSON.stringify(props));\n    // Use an IIFE (Immediately Invoked Function Expression)\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\n    Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n      var repoPreloadList, obsRepoPreloadList, successFlag, rawABPsResults, processOptions, displayType, renderSummary, processedResults, _processedResults, _processedResults2;\n\n      return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              renderSummary = function _renderSummary(processedResults) {\n                return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", null, \"Checked \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, username, \" \", languageCode, \" \", bookIDList.join(', ')), \" (from \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"i\", null, branch === undefined ? 'DEFAULT' : branch), \" branches)\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderCheckedFilesList\"], {\n                  username: username,\n                  results: processedResults\n                }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderTotals\"], {\n                  rawNoticeListLength: rawABPsResults.noticeList.length,\n                  results: processedResults\n                }));\n              };\n\n              if (!(!props.wait || props.wait !== 'N')) {\n                _context.next = 4;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"span\", {\n                style: {\n                  color: 'blue'\n                }\n              }, \"Waiting for user\\u2026\"), \" (Adjust settings below as necessary and then set \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, \"wait='N'\"), \" to start)\"));\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(props.reloadAllFilesFirst && props.reloadAllFilesFirst.slice(0).toUpperCase() === 'Y')) {\n                _context.next = 11;\n                break;\n              }\n\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_10__[\"userLog\"])(\"Clearing cache before running all book packages check…\");\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n                style: {\n                  color: 'orange'\n                }\n              }, \"Clearing cache before running all book packages check\\u2026\"));\n              _context.next = 9;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"clearCaches\"])();\n\n            case 9:\n              _context.next = 13;\n              break;\n\n            case 11:\n              _context.next = 13;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"clearCheckedArticleCache\"])();\n\n            case 13:\n              // otherwise we wouldn’t see any of the warnings again from checking these\n              // Load whole repos, especially if we are going to check files in manifests\n              repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TA', 'TW', 'TQ']; // for DEFAULT\n\n              if (dataSet === 'OLD') repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TA', 'TW', 'TQ1'];else if (dataSet === 'NEW') repoPreloadList = ['TWL', 'LT', 'ST', 'TN2', 'TA', 'TW', 'TQ'];else if (dataSet === 'BOTH') repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TN2', 'TA', 'TW', 'TQ'];\n              if (haveNT) repoPreloadList.unshift('UGNT'); // These go on the front, so do in reverse order\n\n              if (haveOT) repoPreloadList.unshift('UHB');\n\n              if (!checkingOptions.disableAllLinkFetchingFlag) {\n                repoPreloadList.push(checkingOptions.disableLinkedTWArticlesCheckFlag ? 'TWtree' : 'TW');\n                repoPreloadList.push(checkingOptions.disableLinkedTAArticlesCheckFlag ? 'TAtree' : 'TA');\n\n                if (!checkingOptions.disableLexiconLinkFetchingFlag) {\n                  repoPreloadList.push(checkingOptions.disableLinkedLexiconEntriesCheckFlag ? 'UHALtree' : 'UHAL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n\n                  repoPreloadList.push(checkingOptions.disableLinkedLexiconEntriesCheckFlag ? 'UGLtree' : 'UGL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n                }\n              }\n\n              if (bookIDList.includes('OBS')) {\n                obsRepoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ']; // for DEFAULT\n\n                if (dataSet === 'OLD') obsRepoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN1', 'OBS-TQ1', 'OBS-SN1', 'OBS-SQ1'];else if (dataSet === 'NEW') obsRepoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];else if (dataSet === 'BOTH') obsRepoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];\n                repoPreloadList.push.apply(repoPreloadList, obsRepoPreloadList);\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Preloading \", repoPreloadList.length, \" repos for \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"i\", null, username), \" \", languageCode, \" ready for all book packages check\\u2026\"));\n              _context.next = 22;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"preloadReposIfNecessary\"])(username, languageCode, bookIDList, branch, repoPreloadList);\n\n            case 22:\n              successFlag = _context.sent;\n              if (!successFlag) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_10__[\"userLog\"])(\"AllBookPackagesCheck error: Failed to pre-load all repos\"); // Display our \"waiting\" message\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Checking \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"i\", null, username), \" \", languageCode, \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, bookIDList.join(', ')), \" book packages\\u2026\"));\n              rawABPsResults = {};\n\n              if (!bookIDList.length) {\n                _context.next = 30;\n                break;\n              }\n\n              _context.next = 29;\n              return Object(_book_packages_check_checkBookPackages__WEBPACK_IMPORTED_MODULE_7__[\"checkBookPackages\"])(username, languageCode, bookIDList, setResultValue, checkingOptions);\n\n            case 29:\n              rawABPsResults = _context.sent;\n\n            case 30:\n              // Add some extra fields to our rawCBPsResults object in case we need this information again later\n              rawABPsResults.checkType = 'AllBookPackages';\n              rawABPsResults.username = username;\n              rawABPsResults.languageCode = languageCode;\n              rawABPsResults.bookIDs = bookIDsString;\n              rawABPsResults.bookIDList = bookIDList;\n              rawABPsResults.checkedOptions = checkingOptions; // debugLog(\"Here with CBPs rawCBPsResults\", typeof rawCBPsResults);\n              // Now do our final handling of the result -- we have some options available\n\n              processOptions = {// Uncomment any of these to test them\n                // 'maximumSimilarMessages': 4, // default is 3 -- 0 means don’t suppress\n                // 'errorPriorityLevel': 800, // default is 700\n                // 'cutoffPriorityLevel': 100, // default is 0\n                // 'sortBy': 'ByRepo', // default is 'ByPriority', also have 'AsFound'\n                // 'ignorePriorityNumberList': [123, 202], // default is []\n              }; // Or this allows the parameters to be specified as a BookPackagesCheck property\n\n              if (props.maximumSimilarMessages) processOptions.maximumSimilarMessages = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.maximumSimilarMessages);\n              if (props.errorPriorityLevel) processOptions.errorPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.errorPriorityLevel);\n              if (props.cutoffPriorityLevel) processOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n              if (props.sortBy) processOptions.sortBy = props.sortBy; // if (props.ignorePriorityNumberList) processOptions.ignorePriorityNumberList = props.ignorePriorityNumberList;\n\n              displayType = 'ErrorsWarnings'; // default\n\n              if (props.displayType) displayType = props.displayType;\n\n              if (displayType === 'ErrorsWarnings') {\n                processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_8__[\"processNoticesToErrorsWarnings\"])(rawABPsResults, processOptions); //       userLog(`AllBookPackagesCheck got back processedResults with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                // numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenErrors=${processedResults.numHiddenErrors.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n                // debugLog(\"Here now in rendering bit!\");\n\n                if (processedResults.errorList.length || processedResults.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesErrorsWarnings\"], {\n                  results: processedResults\n                })));else // no errors or warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesErrorsWarnings\"], {\n                    results: processedResults\n                  })));\n              } else if (displayType === 'SevereMediumLow') {\n                _processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_8__[\"processNoticesToSevereMediumLow\"])(rawABPsResults, processOptions); //                 userLog(`AllBookPackagesCheck got processed results with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenErrors=${processedResults.numHiddenErrors.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults.severeList.length || _processedResults.mediumList.length || _processedResults.lowList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesSevereMediumLow\"], {\n                  results: _processedResults\n                })));else // no severe, medium, or low notices\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesSevereMediumLow\"], {\n                    results: _processedResults\n                  })));\n              } else if (displayType === 'SingleList') {\n                _processedResults2 = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_8__[\"processNoticesToSingleList\"])(rawABPsResults, processOptions); //       userLog(`AllBookPackagesCheck got processed results with ${processedResults.successList.length.toLocaleString()} success message(s) and ${processedResults.warningList.length.toLocaleString()} notice(s)\n                // numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults2.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesNoticesGradient\"], {\n                  results: _processedResults2\n                })));else // no warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesNoticesGradient\"], {\n                    results: _processedResults2\n                  })));\n              } else setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"Invalid displayType='\", displayType, \"'\")); // debugLog(\"Finished rendering bit.\");\n\n\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))(); // end of async part in unnamedFunction\n    // Doesn’t work if we add this to next line: bookIDList,bookIDs,username,branch,checkingOptions,languageCode,props\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [JSON.stringify(bookIDList), bookIDsString, branch, JSON.stringify(checkingOptions), languageCode, JSON.stringify(props), username]); // end of useEffect part\n\n  if (bookIDInvalid) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", null, \"Please enter only valid USFM book identifiers separated by commas. ('\", bookIDInvalid, \"' is not valid.)\");\n  } // {/* <div className={classes.root}> */}\n\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", {\n    className: \"whatGoesHere\"\n  }, result);\n} // BookPackagesCheck.propTypes = {\n//   /** @ignore */\n//   username: PropTypes.object.isRequired,\n//   /** @ignore */\n//   languageCode: PropTypes.object.isRequired,\n//   bookIDs: PropTypes.object.isRequired,\n//   props: PropTypes.object,\n// };\n// const styles = theme => ({\n//   root: {\n//   },\n// });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AllBookPackagesCheck);\n\n//# sourceURL=webpack:///./src/demos/all-book-packages-check/AllBookPackagesCheck.js?");

/***/ }),

/***/ "./src/demos/book-package-check/BookPackageCheck.js":
/*!**********************************************************!*\
  !*** ./src/demos/book-package-check/BookPackageCheck.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _core_books_books__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core */ \"./src/core/index.js\");\n/* harmony import */ var _notice_processing_functions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../notice-processing-functions */ \"./src/demos/notice-processing-functions.js\");\n/* harmony import */ var _RenderProcessedResults__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\");\n/* harmony import */ var _checkBookPackage__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./checkBookPackage */ \"./src/demos/book-package-check/checkBookPackage.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utilities */ \"./src/core/utilities.js\");\n\n\n\n\n // import { withStyles } from '@material-ui/core/styles';\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const BP_VALIDATOR_VERSION_STRING = '0.5.19';\n\nfunction BookPackageCheck(\n/*username, languageCode, bookID,*/\nprops) {\n  // Check a single Bible book across many repositories\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(\"Waiting-CheckBookPackage\"),\n      _useState2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_useState, 2),\n      result = _useState2[0],\n      setResultValue = _useState2[1]; // debugLog(`I'm here in BookPackageCheck v${BP_VALIDATOR_VERSION_STRING}`);\n  // consoleLogObject(\"props\", props);\n  // consoleLogObject(\"props.classes\", props.classes);\n\n\n  var username = props.username; // debugLog(`username='${username}'`);\n\n  var languageCode = props.languageCode; // debugLog(`languageCode='${languageCode}'`);\n\n  var bookID = props.bookID; // debugLog(`bookID='${bookID}'`);\n\n  var dataSet = props.dataSet; // debugLog(`dataSet='${dataSet}'`);\n\n  var branch = props.branch; // debugLog(`branch='${branch}'`);\n\n  var checkingOptions = {\n    // Uncomment any of these to test them\n    dataSet: dataSet,\n    // Can be 'OLD' (Markdown, etc.), 'NEW' (TSV only), or 'BOTH', or 'DEFAULT'\n    // excerptLength: 25, // default is 20 characters\n    checkManifestFlag: true,\n    checkReadmeFlag: true,\n    checkLicenseFlag: true,\n    suppressNoticeDisablingFlag: true,\n    // Leave this one as true (otherwise demo checks are less efficient)\n    checkType: 'BookPackage' // Always leave this one in\n\n  }; // Or this allows the parameters to be specified as a BookPackageCheck property\n\n  if (props.excerptLength) checkingOptions.excerptLength = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.excerptLength);\n  if (props.cutoffPriorityLevel) checkingOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n  if (props.disableAllLinkFetchingFlag) checkingOptions.disableAllLinkFetchingFlag = props.disableAllLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTAArticlesCheckFlag) checkingOptions.disableLinkedTAArticlesCheckFlag = props.disableLinkedTAArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTWArticlesCheckFlag) checkingOptions.disableLinkedTWArticlesCheckFlag = props.disableLinkedTWArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLexiconLinkFetchingFlag) checkingOptions.disableLexiconLinkFetchingFlag = props.disableLexiconLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedLexiconEntriesCheckFlag) checkingOptions.disableLinkedLexiconEntriesCheckFlag = props.disableLinkedLexiconEntriesCheckFlag.toLowerCase() === 'true'; // functionLog(`checkingOptions.disableLinkedTAArticlesCheckFlag ${checkingOptions.disableLinkedTAArticlesCheckFlag} from '${props.disableLinkedTAArticlesCheckFlag}'`);\n  // functionLog(`checkingOptions.disableLinkedTWArticlesCheckFlag ${checkingOptions.disableLinkedTWArticlesCheckFlag} from '${props.disableLinkedTWArticlesCheckFlag}'`);\n  // functionLog(`checkingOptions.disableLinkedLexiconEntriesCheckFlag ${checkingOptions.disableLinkedLexiconEntriesCheckFlag} from '${props.disableLinkedLexiconEntriesCheckFlag}'`);\n\n  Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(function () {\n    // const newProps = { bookID, branch, checkingOptions, languageCode, cutoffPriorityLevel: props.cutoffPriorityLevel, displayType: props.displayType, errorPriorityLevel: props.errorPriorityLevel, maximumSimilarMessages: props.maximumSimilarMessages, sortBy: props.sortBy, username};\n    // debugLog(\"BookPackageCheck.useEffect() called with \", JSON.stringify(newProps));\n    // Use an IIFE (Immediately Invoked Function Expression)\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\n    Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n      var whichTestament, repoPreloadList, origLangRepo, successFlag, rawCBPResults, processOptions, _iterator, _step, stringBit, intBit, displayType, renderSummary, processedResults, _processedResults, _processedResults2;\n\n      return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              renderSummary = function _renderSummary(processedResults) {\n                return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", null, \"Checked \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, username, \" \", languageCode, \" \", bookID), \" (from \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"i\", null, branch === undefined ? 'DEFAULT' : branch), \" branches)\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_8__[\"RenderCheckedFilesList\"], {\n                  username: username,\n                  results: processedResults\n                }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_8__[\"RenderTotals\"], {\n                  rawNoticeListLength: rawCBPResults.noticeList.length,\n                  results: processedResults\n                }));\n              };\n\n              if (!(!props.wait || props.wait !== 'N')) {\n                _context.next = 4;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"span\", {\n                style: {\n                  color: 'blue'\n                }\n              }, \"Waiting for user\\u2026\"), \" (Adjust settings below as necessary and then set \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, \"wait='N'\"), \" to start)\"));\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(bookID !== 'OBS' && !_core_books_books__WEBPACK_IMPORTED_MODULE_5__[\"isValidBookID\"](bookID))) {\n                _context.next = 8;\n                break;\n              }\n\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_10__[\"userLog\"])(\"Invalid '\".concat(bookID, \"' bookID given!\"));\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"Please enter a valid USFM book identifier or 'OBS'. ('\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, bookID), \"' is not valid.)\"));\n              return _context.abrupt(\"return\");\n\n            case 8:\n              if (!(props.reloadAllFilesFirst && props.reloadAllFilesFirst.slice(0).toUpperCase() === 'Y')) {\n                _context.next = 15;\n                break;\n              }\n\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_10__[\"userLog\"])(\"Clearing cache before running book package check…\");\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n                style: {\n                  color: 'orange'\n                }\n              }, \"Clearing cache before running book package check\\u2026\"));\n              _context.next = 13;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"clearCaches\"])();\n\n            case 13:\n              _context.next = 17;\n              break;\n\n            case 15:\n              _context.next = 17;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"clearCheckedArticleCache\"])();\n\n            case 17:\n              // otherwise we wouldn’t see any of the warnings again from checking these\n              // Load whole repo zip files which is maybe faster than loading several individual files\n              //  especially if we are going to also check the manifests, license, and ReadMe files as well as the book file.\n              // Remember that the manifest check actually checks the existence of all the projects, i.e., all files in the repo\n              // NOTE: We preload TA and TW by default because we are likely to have many links to those repos\n              //        We preload TQ by default because it has thousands of files (17,337), so individual file fetches might be slow\n              //          even for one book which might have several hundred files.\n              whichTestament = bookID === 'OBS' ? 'none' : _core_books_books__WEBPACK_IMPORTED_MODULE_5__[\"testament\"](bookID); // returns 'old' or 'new'\n\n              if (bookID === 'OBS') {\n                repoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ']; // for DEFAULT\n\n                if (dataSet === 'OLD') repoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN1', 'OBS-TQ1', 'OBS-SN1', 'OBS-SQ1'];else if (dataSet === 'NEW') repoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];else if (dataSet === 'BOTH') repoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];\n              } else {\n                // not OBS\n                repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TQ', 'SN', 'SQ']; // for DEFAULT\n\n                if (dataSet === 'OLD') repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TQ'];else if (dataSet === 'NEW') repoPreloadList = ['TWL', 'LT', 'ST', 'TN2', 'TQ', 'SN', 'SQ'];else if (dataSet === 'BOTH') repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TN2', 'TQ', 'SN', 'SQ'];\n                origLangRepo = whichTestament === 'old' ? 'UHB' : 'UGNT';\n                repoPreloadList.unshift(origLangRepo); // This one goes on the front, so gets fetched first\n              }\n\n              if (!checkingOptions.disableAllLinkFetchingFlag) {\n                // Both Bible books and OBS refer to TW and TA\n                repoPreloadList.push(checkingOptions.disableLinkedTWArticlesCheckFlag ? 'TWtree' : 'TW');\n                repoPreloadList.push(checkingOptions.disableLinkedTAArticlesCheckFlag ? 'TAtree' : 'TA');\n\n                if (!checkingOptions.disableLexiconLinkFetchingFlag) {\n                  // TODO: What if it's OBS (whichTestament === 'none' ???)\n                  // const lexiconRepo = whichTestament === 'old' ? 'UHAL' : 'UGL';\n                  // repoPreloadList.push(whichTestament === 'old' ? 'UHAL' : 'UGL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n                  repoPreloadList.push(checkingOptions.disableLinkedLexiconEntriesCheckFlag ? 'UHALtree' : 'UHAL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n\n                  repoPreloadList.push(checkingOptions.disableLinkedLexiconEntriesCheckFlag ? 'UGLtree' : 'UGL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n                }\n              } // debugLog(`BookPackageCheck got repoPreloadList=${repoPreloadList} for dataSet=${dataSet}`)\n              // if (bookID !== 'OBS') { // Preload the reference repos\n\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Preloading \", repoPreloadList.length, \" repos for \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"i\", null, username), \" \", languageCode, \" ready for \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, bookID), \" book package check\\u2026\"));\n              _context.next = 23;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"preloadReposIfNecessary\"])(username, languageCode, [bookID], branch, repoPreloadList);\n\n            case 23:\n              successFlag = _context.sent;\n              if (!successFlag) console.error(\"BookPackageCheck error: Failed to pre-load all repos\"); // }\n              // Display our \"waiting\" message\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Checking \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"i\", null, username), \" \", languageCode, \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, bookID), \" book package\\u2026\"));\n              _context.next = 28;\n              return Object(_checkBookPackage__WEBPACK_IMPORTED_MODULE_9__[\"checkBookPackage\"])(username, languageCode, bookID, setResultValue, checkingOptions);\n\n            case 28:\n              rawCBPResults = _context.sent;\n              // Add some extra fields to our rawCBPResults object in case we need this information again later\n              rawCBPResults.checkType = 'BookPackage';\n              rawCBPResults.username = username;\n              rawCBPResults.languageCode = languageCode;\n              rawCBPResults.bookID = bookID;\n              rawCBPResults.checkedOptions = checkingOptions; // debugLog(\"Here with CBP rawCBPResults\", typeof rawCBPResults);\n              // Now do our final handling of the result -- we have some options available\n\n              processOptions = {// Uncomment any of these to test them\n                // 'maximumSimilarMessages': 4, // default is 3 -- 0 means don’t suppress\n                // 'errorPriorityLevel': 800, // default is 700\n                // 'cutoffPriorityLevel': 100, // default is 0\n                // 'sortBy': 'ByRepo', // default is 'ByPriority', also have 'AsFound'\n                // 'ignorePriorityNumberList': [123, 202], // default is []\n              }; // Or this allows the parameters to be specified as a BookPackageCheck property\n\n              if (props.maximumSimilarMessages) processOptions.maximumSimilarMessages = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.maximumSimilarMessages);\n              if (props.errorPriorityLevel) processOptions.errorPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.errorPriorityLevel);\n              if (props.cutoffPriorityLevel) processOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n              if (props.sortBy) processOptions.sortBy = props.sortBy;\n\n              if (props.ignorePriorityNumberList) {\n                // We need to convert from string to Array\n                //parameterAssert(props.ignorePriorityNumberList[0] === '[' && props.ignorePriorityNumberList[props.ignorePriorityNumberList.length - 1] === ']', `Format of props.ignorePriorityNumberList '${props.ignorePriorityNumberList}' is wrong should be enclosed in []`)\n                processOptions.ignorePriorityNumberList = [];\n                _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(props.ignorePriorityNumberList.slice(1, props.ignorePriorityNumberList.length - 1).split(','));\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    stringBit = _step.value;\n                    intBit = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(stringBit.trim()); // trim allows comma,space to also be used as separator\n\n                    processOptions.ignorePriorityNumberList.push(intBit);\n                  } // debugLog(`Now have processOptions.ignorePriorityNumberList=${JSON.stringify(processOptions.ignorePriorityNumberList)}`);\n\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n              }\n\n              if (props.showDisabledNoticesFlag) processOptions.showDisabledNoticesFlag = props.showDisabledNoticesFlag.toLowerCase() === 'true';\n              displayType = 'ErrorsWarnings'; // default\n\n              if (props.displayType) displayType = props.displayType;\n\n              if (displayType === 'ErrorsWarnings') {\n                processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_7__[\"processNoticesToErrorsWarnings\"])(rawCBPResults, processOptions); //             userLog(`BookPackageCheck got back processedResults with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenErrors=${processedResults.numHiddenErrors.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n                // debugLog(\"Here now in rendering bit!\");\n\n                if (processedResults.errorList.length || processedResults.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_8__[\"RenderSuccessesErrorsWarnings\"], {\n                  results: processedResults\n                })));else // no errors or warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_8__[\"RenderSuccessesErrorsWarnings\"], {\n                    results: processedResults\n                  })));\n              } else if (displayType === 'SevereMediumLow') {\n                _processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_7__[\"processNoticesToSevereMediumLow\"])(rawCBPResults, processOptions); //             userLog(`BookPackageCheck got back processedResults with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenErrors=${processedResults.numHiddenErrors.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults.severeList.length || _processedResults.mediumList.length || _processedResults.lowList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_8__[\"RenderSuccessesSevereMediumLow\"], {\n                  results: _processedResults\n                })));else // no severe, medium, or low notices\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_8__[\"RenderSuccessesSevereMediumLow\"], {\n                    results: _processedResults\n                  })));\n              } else if (displayType === 'SingleList') {\n                _processedResults2 = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_7__[\"processNoticesToSingleList\"])(rawCBPResults, processOptions); // debugLog(`BookPackageCheck got back processedResults with ${processedResults.successList.length.toLocaleString()} success message(s) and ${processedResults.warningList.length.toLocaleString()} notice(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults2.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_8__[\"RenderSuccessesNoticesGradient\"], {\n                  results: _processedResults2\n                })));else // no warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_8__[\"RenderSuccessesNoticesGradient\"], {\n                    results: _processedResults2\n                  })));\n              } else setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"Invalid displayType='\", displayType, \"'\")); // debugLog(\"Finished rendering bit.\");\n\n\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))(); // end of async part in unnamedFunction\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [bookID, branch, JSON.stringify(checkingOptions), languageCode, JSON.stringify(props), username]); // end of useEffect part\n  // {/* <div className={classes.root}> */}\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", {\n    className: \"Fred\"\n  }, result);\n} // BookPackageCheck.propTypes = {\n//   /** @ignore */\n//   username: PropTypes.object.isRequired,\n//   /** @ignore */\n//   languageCode: PropTypes.object.isRequired,\n//   bookID: PropTypes.object.isRequired,\n//   props: PropTypes.object,\n// };\n// const styles = theme => ({\n//   root: {\n//   },\n// });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BookPackageCheck);\n\n//# sourceURL=webpack:///./src/demos/book-package-check/BookPackageCheck.js?");

/***/ }),

/***/ "./src/demos/book-package-check/checkBookPackage.js":
/*!**********************************************************!*\
  !*** ./src/demos/book-package-check/checkBookPackage.js ***!
  \**********************************************************/
/*! exports provided: checkBookPackage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkBookPackage\", function() { return checkBookPackage; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _core_defaults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _core_books_books__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core */ \"./src/core/index.js\");\n/* harmony import */ var _file_check_checkFileContents__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../file-check/checkFileContents */ \"./src/demos/file-check/checkFileContents.js\");\n/* harmony import */ var _repo_check_checkRepo__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../repo-check/checkRepo */ \"./src/demos/repo-check/checkRepo.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const BP_VALIDATOR_VERSION_STRING = '0.9.7';\n\nvar STANDARD_MANIFEST_FILENAME = 'manifest.yaml';\n/*\n    checkBookPackage\n*/\n\n/**\n *\n * @param {string} username, e.g., 'unfoldingWord'\n * @param {string} languageCode, e.g., 'en'\n * @param {string} bookID -- 3-character USFM book ID or 'OBS'\n * @param {Function} setResultValue function\n * @param {Object} checkingOptions -- can contain: getFile (function), originalLanguageRepoUsername, taRepoUsername, checkManifestFlag\n * @return {Object} - containing successList and noticeList\n */\n\nfunction checkBookPackage(_x, _x2, _x3, _x4, _x5) {\n  return _checkBookPackage.apply(this, arguments);\n}\n\nfunction _checkBookPackage() {\n  _checkBookPackage = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(username, languageCode, bookID, setResultValue, checkingOptions) {\n    var abortFlag, startTime, checkedFileCount, checkedFilenames, checkedFilenameExtensions, totalCheckedSize, checkedRepoNames, checkBookPackageResult, dataSet, newCheckingOptions, getFile_, originalBranch, generalLocation, addSuccessMessage, addNoticePartial, ourCheckBPFileContents, _ourCheckBPFileContents, ourCheckManifestFile, _ourCheckManifestFile, ourCheckMarkdownFile, _ourCheckMarkdownFile, repoCodeList, bookNumberAndName, whichTestament, origLangRepoCode, checkedManifestDetails, numCheckedRepos, _iterator, _step, thisRepoCode, adjustedUsername, adjustedRepoCode, adjustedBranch, repoName, repoLocation, filename, crResultObject, tqResultObject, _filename, repoFileContent, notice, numCheckedCharacters, _filename2, _numCheckedCharacters, _filename3, _numCheckedCharacters2;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _ourCheckMarkdownFile = function _ourCheckMarkdownFile3() {\n              _ourCheckMarkdownFile = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(username, repoCode, repoName, repoBranch, filename, markdownLocation, checkingOptions) {\n                var markdownFileContent, notice, cmfcResultObject, _iterator6, _step6, cmfcNoticeEntry, thisYear, fullYearString;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return getFile_({\n                          username: username,\n                          repository: repoName,\n                          path: filename,\n                          branch: repoBranch\n                        });\n\n                      case 3:\n                        markdownFileContent = _context3.sent;\n                        _context3.next = 18;\n                        break;\n\n                      case 6:\n                        _context3.prev = 6;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        // NOTE: The error can depend on whether the zipped repo is cached or not\n                        console.error(\"checkBookPackage ourCheckMarkdownFile(\".concat(username, \", \").concat(languageCode, \", \").concat(bookID, \", (fn), \").concat(JSON.stringify(checkingOptions), \") failed to load markdown\"), username, repoName, filename, originalBranch, _context3.t0 + '');\n                        _context3.next = 11;\n                        return Object(_core__WEBPACK_IMPORTED_MODULE_8__[\"repositoryExistsOnDoor43\"])({\n                          username: username,\n                          repository: repoName\n                        });\n\n                      case 11:\n                        if (_context3.sent) {\n                          _context3.next = 15;\n                          break;\n                        }\n\n                        checkBookPackageResult.noticeList.push({\n                          priority: 997,\n                          message: \"Repository doesn’t exist\",\n                          username: username,\n                          repoCode: repoCode,\n                          repoName: repoName,\n                          location: markdownLocation,\n                          extra: repoCode\n                        });\n                        _context3.next = 18;\n                        break;\n\n                      case 15:\n                        notice = {\n                          priority: 996,\n                          message: \"Unable to load file\",\n                          username: username,\n                          repoName: repoName,\n                          filename: filename,\n                          location: markdownLocation,\n                          extra: repoCode\n                        }; // eslint-disable-next-line eqeqeq\n\n                        if (_context3.t0 != 'TypeError: repoFileContent is null') notice.details = \"error=\".concat(_context3.t0);\n                        addNoticePartial(notice);\n\n                      case 18:\n                        if (!markdownFileContent) {\n                          _context3.next = 26;\n                          break;\n                        }\n\n                        _context3.next = 21;\n                        return Object(_core__WEBPACK_IMPORTED_MODULE_8__[\"checkMarkdownFileContents\"])(username, languageCode, repoCode, filename.slice(0, filename.length - 3), markdownFileContent, markdownLocation, checkingOptions);\n\n                      case 21:\n                        cmfcResultObject = _context3.sent;\n                        // debugLog(`ourCheckMarkdownFile checkMarkdownFileContents(${repoName}) returned ${cmtResultObject.successList.length} success message(s) and ${cmtResultObject.noticeList.length} notice(s)`);\n                        // debugLog(`ourCheckMarkdownFile checkMarkdownFileContents(${repoName}) returned ${JSON.stringify(cmtResultObject)}`);\n                        // NOTE: We ignore the returned success messages here\n                        // for (const successEntry of cfResultObject.successList) debugLog(\"  ourCheckBPFileContents:\", successEntry);\n                        // debugLog(\"cfcResultObject\", JSON.stringify(cfcResultObject));\n                        // Process noticeList line by line,  appending the repoCode as an extra field as we go\n                        _iterator6 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cmfcResultObject.noticeList);\n\n                        try {\n                          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                            cmfcNoticeEntry = _step6.value;\n                            // NOTE: We don’t use addNoticePartial, because it adds a misleading BookID\n                            // addNoticePartial({ ...cfcNoticeEntry, filename, extra: `${repoCode} markdown` });\n                            checkBookPackageResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, cmfcNoticeEntry), {}, {\n                              username: username,\n                              repoCode: repoCode,\n                              repoName: repoName,\n                              filename: filename,\n                              extra: repoCode\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator6.e(err);\n                        } finally {\n                          _iterator6.f();\n                        }\n\n                        if (filename === 'LICENSE.md') {\n                          thisYear = new Date().getFullYear();\n                          fullYearString = \"\".concat(thisYear); // debugLog(`Year ${fullYearString} is ${typeof fullYearString}`);\n\n                          if (markdownFileContent.indexOf(fullYearString) === -1 && markdownFileContent.indexOf(\"\".concat(thisYear - 1)) === -1) // Can’t find this year or previous year in file\n                            // NOTE: We don’t use addNoticePartial, because it adds a misleading BookID\n                            checkBookPackageResult.noticeList.push({\n                              priority: 256,\n                              message: \"Possibly missing current copyright year\",\n                              details: \"possibly expecting '\".concat(fullYearString, \"'\"),\n                              username: username,\n                              repoName: repoName,\n                              filename: filename,\n                              location: markdownLocation,\n                              extra: repoCode\n                            });\n                        }\n\n                        return _context3.abrupt(\"return\", markdownFileContent.length);\n\n                      case 26:\n                        // NOTE: We don’t use addNoticePartial, because it adds a misleading BookID\n                        // addNoticePartial({ priority: 956, message: \"Got empty markdown file\", repoName, filename, location: markdownLocation, extra: `${repoCode} markdown` });\n                        checkBookPackageResult.noticeList.push({\n                          priority: 956,\n                          message: \"Got empty markdown file\",\n                          repoName: repoName,\n                          filename: filename,\n                          location: markdownLocation,\n                          extra: repoCode\n                        });\n                        return _context3.abrupt(\"return\", 0);\n\n                      case 28:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 6]]);\n              }));\n              return _ourCheckMarkdownFile.apply(this, arguments);\n            };\n\n            ourCheckMarkdownFile = function _ourCheckMarkdownFile2(_x28, _x29, _x30, _x31, _x32, _x33, _x34) {\n              return _ourCheckMarkdownFile.apply(this, arguments);\n            };\n\n            _ourCheckManifestFile = function _ourCheckManifestFile3() {\n              _ourCheckManifestFile = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(username, repoCode, repoName, repoBranch, manifestLocation, checkingOptions) {\n                var manifestFileContent, notice, cmtResultObject, _iterator5, _step5, cfcNoticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return getFile_({\n                          username: username,\n                          repository: repoName,\n                          path: STANDARD_MANIFEST_FILENAME,\n                          branch: repoBranch\n                        });\n\n                      case 3:\n                        manifestFileContent = _context2.sent;\n                        _context2.next = 18;\n                        break;\n\n                      case 6:\n                        _context2.prev = 6;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        // NOTE: The error can depend on whether the zipped repo is cached or not\n                        console.error(\"checkBookPackage ourCheckManifestFile(\".concat(username, \", \").concat(languageCode, \", \").concat(bookID, \", (fn), \").concat(JSON.stringify(checkingOptions), \") failed to load manifest\"), username, repoName, repoBranch, _context2.t0 + '');\n                        _context2.next = 11;\n                        return Object(_core__WEBPACK_IMPORTED_MODULE_8__[\"repositoryExistsOnDoor43\"])({\n                          username: username,\n                          repository: repoName\n                        });\n\n                      case 11:\n                        if (_context2.sent) {\n                          _context2.next = 15;\n                          break;\n                        }\n\n                        checkBookPackageResult.noticeList.push({\n                          priority: 997,\n                          message: \"Repository doesn’t exist\",\n                          username: username,\n                          repoCode: repoCode,\n                          repoName: repoName,\n                          location: manifestLocation,\n                          extra: repoCode\n                        });\n                        _context2.next = 18;\n                        break;\n\n                      case 15:\n                        notice = {\n                          priority: 996,\n                          message: \"Unable to load file\",\n                          username: username,\n                          repoName: repoName,\n                          filename: STANDARD_MANIFEST_FILENAME,\n                          location: manifestLocation,\n                          extra: repoCode\n                        }; // eslint-disable-next-line eqeqeq\n\n                        if (_context2.t0 != 'TypeError: repoFileContent is null') notice.details = \"error=\".concat(_context2.t0);\n                        addNoticePartial(notice);\n\n                      case 18:\n                        if (!manifestFileContent) {\n                          _context2.next = 25;\n                          break;\n                        }\n\n                        _context2.next = 21;\n                        return Object(_core__WEBPACK_IMPORTED_MODULE_8__[\"checkManifestText\"])(username, languageCode, repoCode, repoName, repoBranch, manifestFileContent, manifestLocation, checkingOptions);\n\n                      case 21:\n                        cmtResultObject = _context2.sent;\n                        // debugLog(`ourCheckManifestFile checkManifestText(${repoName}) returned ${cmtResultObject.successList.length} success message(s) and ${cmtResultObject.noticeList.length} notice(s)`);\n                        // debugLog(`ourCheckManifestFile checkManifestText(${repoName}) returned ${JSON.stringify(cmtResultObject)}`);\n                        // NOTE: We ignore the returned success messages here\n                        // for (const successEntry of cfResultObject.successList) debugLog(\"  ourCheckBPFileContents:\", successEntry);\n                        // debugLog(\"cfcResultObject\", JSON.stringify(cfcResultObject));\n                        // Process noticeList line by line,  appending the repoCode as an extra field as we go\n                        _iterator5 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cmtResultObject.noticeList);\n\n                        try {\n                          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                            cfcNoticeEntry = _step5.value;\n                            // NOTE: We don’t use addNoticePartial, because it adds a misleading BookID\n                            // addNoticePartial({ ...cfcNoticeEntry, filename: STANDARD_MANIFEST_FILENAME, extra: `${repoCode} MANIFEST` });\n                            checkBookPackageResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, cfcNoticeEntry), {}, {\n                              username: username,\n                              repoCode: repoCode,\n                              repoName: repoName,\n                              filename: STANDARD_MANIFEST_FILENAME,\n                              extra: \"\".concat(repoCode, \" MANIFEST\")\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator5.e(err);\n                        } finally {\n                          _iterator5.f();\n                        }\n\n                        return _context2.abrupt(\"return\", manifestFileContent.length);\n\n                      case 25:\n                        // NOTE: We don’t use addNoticePartial, because it adds a misleading BookID\n                        // addNoticePartial({ priority: 956, message: \"Got empty manifest file\", repoName, filename: STANDARD_MANIFEST_FILENAME, location: manifestLocation, extra: `${repoCode} MANIFEST` });\n                        checkBookPackageResult.noticeList.push({\n                          priority: 956,\n                          message: \"Got empty manifest file\",\n                          repoName: repoName,\n                          filename: STANDARD_MANIFEST_FILENAME,\n                          location: manifestLocation,\n                          extra: \"\".concat(repoCode, \" MANIFEST\")\n                        });\n                        return _context2.abrupt(\"return\", 0);\n\n                      case 27:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 6]]);\n              }));\n              return _ourCheckManifestFile.apply(this, arguments);\n            };\n\n            ourCheckManifestFile = function _ourCheckManifestFile2(_x22, _x23, _x24, _x25, _x26, _x27) {\n              return _ourCheckManifestFile.apply(this, arguments);\n            };\n\n            _ourCheckBPFileContents = function _ourCheckBPFileConten2() {\n              _ourCheckBPFileContents = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, repoCode, repoName, repoBranch, cfFilename, fileContent, fileLocation, checkingOptions) {\n                var adjustedLanguageCode, cfcResultObject, _iterator2, _step2, cfcNoticeEntry, _iterator3, _step3, checkedRepoName, _iterator4, _step4, checkedFilenameExtension;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        // functionLog(`checkBookPackage ourCheckBPFileContents(rC='${repoCode}', rN='${repoName}', rBr='${repoBranch}', fn='${cfFilename}', ${fileContent.length}, ${fileLocation}, ${JSON.stringify(checkingOptions)})…`);\n                        // Updates the global list of notices\n                        //parameterAssert(repoCode !== undefined, \"cBP ourCheckBPFileContents: 'repoCode' parameter should be defined\");\n                        //parameterAssert(typeof repoCode === 'string', `cBP ourCheckBPFileContents: 'repoCode' parameter should be a string not a '${typeof repoCode}'`);\n                        //parameterAssert(REPO_CODES_LIST.includes(repoCode), `cBP ourCheckBPFileContents: 'repoCode' parameter should not be '${repoCode}'`);\n                        //parameterAssert(repoName !== undefined, \"cBP ourCheckBPFileContents: 'repoName' parameter should be defined\");\n                        //parameterAssert(typeof repoName === 'string', `cBP ourCheckBPFileContents: 'repoName' parameter should be a string not a '${typeof repoName}': ${repoName}`);\n                        //parameterAssert(repoBranch !== undefined, \"cBP ourCheckBPFileContents: 'repoBranch' parameter should be defined\");\n                        //parameterAssert(typeof repoBranch === 'string', `cBP ourCheckBPFileContents: 'repoBranch' parameter should be a string not a '${typeof repoBranch}': ${repoBranch}`);\n                        //parameterAssert(cfFilename !== undefined, \"cBP ourCheckBPFileContents: 'cfFilename' parameter should be defined\");\n                        //parameterAssert(typeof cfFilename === 'string', `cBP ourCheckBPFileContents: 'cfFilename' parameter should be a string not a '${typeof cfFilename}'`);\n                        //parameterAssert(fileContent !== undefined, \"cBP ourCheckBPFileContents: 'fileContent' parameter should be defined\");\n                        //parameterAssert(typeof fileContent === 'string', `cBP ourCheckBPFileContents: 'fileContent' parameter should be a string not a '${typeof fileContent}'`);\n                        //parameterAssert(fileLocation !== undefined, \"cBP ourCheckBPFileContents: 'fileLocation' parameter should be defined\");\n                        //parameterAssert(typeof fileLocation === 'string', `cBP ourCheckBPFileContents: 'fileLocation' parameter should be a string not a '${typeof fileLocation}'`);\n                        //parameterAssert(checkingOptions !== undefined, \"cBP ourCheckBPFileContents: 'checkingOptions' parameter should be defined\");\n                        adjustedLanguageCode = languageCode; // if (repoCode === 'UHB') adjustedLanguageCode = 'hbo'; // NO -- we need the languageCode of the BP being checked (so we can resolve TW links with * for language) !!!\n                        // else if (repoCode === 'UGNT') adjustedLanguageCode = 'el-x-koine';\n\n                        _context.next = 3;\n                        return Object(_file_check_checkFileContents__WEBPACK_IMPORTED_MODULE_9__[\"checkFileContents\"])(username, adjustedLanguageCode, repoCode, repoBranch, cfFilename, fileContent, fileLocation, checkingOptions);\n\n                      case 3:\n                        cfcResultObject = _context.sent;\n                        // debugLog(\"checkFileContents() returned\", cfResultObject.successList.length, \"success message(s) and\", cfResultObject.noticeList.length, \"notice(s)\");\n                        // for (const successEntry of cfResultObject.successList) debugLog(\"  ourCheckBPFileContents:\", successEntry);\n                        // debugLog(\"cfcResultObject\", JSON.stringify(cfcResultObject));\n                        // Process noticeList line by line,  appending the repoCode as an extra field as we go\n                        _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cfcResultObject.noticeList);\n\n                        try {\n                          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                            cfcNoticeEntry = _step2.value;\n                            // noticeEntry is an object\n                            if (cfcNoticeEntry.extra) // it must be an indirect check on a TA/TW article from a TN2 check or UHAL/UGL lexicon check\n                              checkBookPackageResult.noticeList.push(cfcNoticeEntry); // Just copy the complete notice as is\n                            else // For our direct checks, we add the repoCode as an extra value (unless it’s already there from a TA or TW check)\n                              addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, cfcNoticeEntry), {}, {\n                                repoCode: repoCode,\n                                repoName: repoName,\n                                branch: repoBranch,\n                                filename: cfFilename,\n                                extra: cfcNoticeEntry.extra ? cfcNoticeEntry.extra : repoCode\n                              }));\n                          } // The following is needed coz we might be checking the linked TA/TW articles from TN2 TSV files or UHAL/UGL entries\n\n                        } catch (err) {\n                          _iterator2.e(err);\n                        } finally {\n                          _iterator2.f();\n                        }\n\n                        if (cfcResultObject.checkedFileCount && cfcResultObject.checkedFileCount > 0) {\n                          checkedFileCount += cfcResultObject.checkedFileCount; // TODO: How could we distinguish these different sources below???\n\n                          addSuccessMessage(\"Checked \".concat(cfcResultObject.checkedFileCount, \" linked TA/TW articles or HALx/GkLx entries\"));\n                        }\n\n                        if (cfcResultObject.checkedFilesizes && cfcResultObject.checkedFilesizes > 0) totalCheckedSize += cfcResultObject.checkedFilesizes;\n\n                        if (cfcResultObject.checkedRepoNames && cfcResultObject.checkedRepoNames.length > 0) {\n                          _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cfcResultObject.checkedRepoNames);\n\n                          try {\n                            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                              checkedRepoName = _step3.value;\n                              // try { if (checkedRepoNames.indexOf(checkedRepoName) < 0) checkedRepoNames.push(checkedRepoName); }\n                              // catch { checkedRepoNames = [checkedRepoName]; }\n                              checkedRepoNames.add(checkedRepoName);\n                            }\n                          } catch (err) {\n                            _iterator3.e(err);\n                          } finally {\n                            _iterator3.f();\n                          }\n                        }\n\n                        if (cfcResultObject.checkedFilenameExtensions && cfcResultObject.checkedFilenameExtensions.length > 0) {\n                          _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cfcResultObject.checkedFilenameExtensions);\n\n                          try {\n                            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                              checkedFilenameExtension = _step4.value;\n                              checkedFilenameExtensions.add(checkedFilenameExtension);\n                            }\n                          } catch (err) {\n                            _iterator4.e(err);\n                          } finally {\n                            _iterator4.f();\n                          }\n                        }\n\n                      case 10:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _ourCheckBPFileContents.apply(this, arguments);\n            };\n\n            ourCheckBPFileContents = function _ourCheckBPFileConten(_x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20, _x21) {\n              return _ourCheckBPFileContents.apply(this, arguments);\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n              // functionLog(`checkBookPackage addNoticePartial: (priority=${incompleteNoticeObject.priority}) ${incompleteNoticeObject.bookID} ${incompleteNoticeObject.C}:${incompleteNoticeObject.V} ${incompleteNoticeObject.message}${incompleteNoticeObject.characterIndex > 0 ? ` (at character ${incompleteNoticeObject.characterIndex})` : \"\"}${excerpt ? ` ${excerpt}` : \"\"}${location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"cBP addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `cBP addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}': ${incompleteNoticeObject.priority}`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"cBP addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `cBP addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}': ${incompleteNoticeObject.message}`);\n              // parameterAssert(bookID !== undefined, \"cBP addNoticePartial: 'bookID' parameter should be defined\");\n              if (incompleteNoticeObject.bookID) {//parameterAssert(typeof incompleteNoticeObject.bookID === 'string', `cBP addNoticePartial: 'bookID' parameter should be a string not a '${typeof incompleteNoticeObject.bookID}': ${incompleteNoticeObject.bookID}`);\n                //parameterAssert(incompleteNoticeObject.bookID.length === 3, `cBP addNoticePartial: 'bookID' parameter should be three characters long not ${incompleteNoticeObject.bookID.length}`);\n                //parameterAssert(bookID === 'OBS' || books.isValidBookID(incompleteNoticeObject.bookID), `cBP addNoticePartial: '${incompleteNoticeObject.bookID}' is not a valid USFM book identifier`);\n              } // parameterAssert(C !== undefined, \"cBP addNoticePartial: 'C' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.C) {//parameterAssert(typeof incompleteNoticeObject.C === 'string', `cBP addNoticePartial: 'C' parameter should be a string not a '${typeof incompleteNoticeObject.C}': ${incompleteNoticeObject.C}`);\n              } // parameterAssert(V !== undefined, \"cBP addNoticePartial: 'V' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.V) {//parameterAssert(typeof incompleteNoticeObject.V === 'string', `cBP addNoticePartial: 'V' parameter should be a string not a '${typeof incompleteNoticeObject.V}': ${incompleteNoticeObject.V}`);\n              } // parameterAssert(characterIndex !== undefined, \"cBP addNoticePartial: 'characterIndex' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `cBP addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}': ${incompleteNoticeObject.characterIndex}`);\n              } // parameterAssert(excerpt !== undefined, \"cBP addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `cBP addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}': ${incompleteNoticeObject.excerpt}`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"cBP addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `cBP addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}': ${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.extra !== undefined, \"cBP addNoticePartial: 'extra' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.extra === 'string', `cBP addNoticePartial: 'extra' parameter should be a string not a '${typeof incompleteNoticeObject.extra}': ${incompleteNoticeObject.extra}`);\n\n\n              if (incompleteNoticeObject.debugChain) incompleteNoticeObject.debugChain = \"checkBookPackage \".concat(incompleteNoticeObject.debugChain);\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"aboutToOverwrite\"])('checkBookPackage', ['bookID', 'username'], incompleteNoticeObject, {\n                bookID: bookID,\n                username: username\n              });\n              checkBookPackageResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                bookID: bookID,\n                username: username\n              }));\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // functionLog(`checkBookPackage success: ${successString}`);\n              checkBookPackageResult.successList.push(successString);\n            };\n\n            /*\n            Note: You may want to run clearCaches() and/or preloadReposIfNecessary() before running this function???\n             Note that bookID here can also be the 'OBS' pseudo bookID.\n            */\n            // functionLog(`checkBookPackage(un='${username}', lC='${languageCode}', bk='${bookID}', (fn), ${JSON.stringify(checkingOptions)})…`)\n            //parameterAssert(username !== undefined, \"checkBookPackage: 'username' parameter should be defined\");\n            //parameterAssert(typeof username === 'string', `checkBookPackage: 'username' parameter should be a string not a '${typeof username}': ${username}`);\n            //parameterAssert(languageCode !== undefined, \"checkBookPackage: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkBookPackage: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n            //parameterAssert(bookID !== undefined, \"checkBookPackage: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkBookPackage: 'bookID' parameter should be a string not a '${typeof bookID}': ${bookID}`);\n            //parameterAssert(bookID.length === 3, `checkBookPackage: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkBookPackage: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkBookPackage: '${bookID}' is not a valid USFM book identifier`);\n            abortFlag = false;\n            startTime = new Date();\n            bookID = bookID.toUpperCase(); // normalise to USFM standard\n\n            checkedFileCount = 0, checkedFilenames = [], checkedFilenameExtensions = new Set(), totalCheckedSize = 0, checkedRepoNames = new Set();\n            checkBookPackageResult = {\n              successList: [],\n              noticeList: []\n            };\n            dataSet = checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.dataSet; // Can be 'DEFAULT', 'OLD' (Markdown, etc.), 'NEW' (TSV only), or 'BOTH'\n\n            if (!dataSet) dataSet = 'DEFAULT';\n            newCheckingOptions = checkingOptions ? Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, checkingOptions) : {}; // clone before modify\n\n            getFile_ = newCheckingOptions.getFile ? newCheckingOptions.getFile : _core__WEBPACK_IMPORTED_MODULE_8__[\"cachedGetFile\"]; // default to using caching of files\n\n            newCheckingOptions.getFile = getFile_; // use same getFile_ when we call core functions\n\n            if (!newCheckingOptions.originalLanguageRepoUsername) newCheckingOptions.originalLanguageRepoUsername = username;\n            if (!newCheckingOptions.taRepoUsername) newCheckingOptions.taRepoUsername = username;\n            if (!newCheckingOptions.twRepoUsername) newCheckingOptions.twRepoUsername = username; // No point in passing the branch through as a parameter\n            //  coz if it’s not 'master', it’s unlikely to be common for all the repos\n\n            originalBranch = 'master'; // If it’s a big book, drop this location string to reduce memory use in case of thousands of errors\n\n            generalLocation = bookID === 'OBS' ? \" in \".concat(languageCode, \" \").concat(bookID, \" from \").concat(username, \" \").concat(originalBranch, \" branch\") : _core_books_books__WEBPACK_IMPORTED_MODULE_7__[\"chaptersInBook\"](bookID) > 10 ? '' : \" in \".concat(languageCode, \" \").concat(bookID, \" book package from \").concat(username, \" \").concat(originalBranch, \" branch\");\n\n            if (!(bookID === 'OBS')) {\n              _context4.next = 27;\n              break;\n            }\n\n            // NOTE: No code below to handle OBS TN and TQ which are markdown repos\n            if (dataSet === 'DEFAULT') repoCodeList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];else if (dataSet === 'OLD') repoCodeList = ['OBS', 'OBS-TN1', 'OBS-TQ1', 'OBS-SN1', 'OBS-SQ1'];else if (dataSet === 'NEW') repoCodeList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];else if (dataSet === 'BOTH') repoCodeList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];\n            _context4.next = 42;\n            break;\n\n          case 27:\n            _context4.prev = 27;\n            bookNumberAndName = _core_books_books__WEBPACK_IMPORTED_MODULE_7__[\"usfmNumberName\"](bookID);\n            whichTestament = _core_books_books__WEBPACK_IMPORTED_MODULE_7__[\"testament\"](bookID); // returns 'old' or 'new'\n\n            _context4.next = 40;\n            break;\n\n          case 32:\n            _context4.prev = 32;\n            _context4.t0 = _context4[\"catch\"](27);\n\n            if (!_core_books_books__WEBPACK_IMPORTED_MODULE_7__[\"isValidBookID\"](bookID)) {\n              _context4.next = 38;\n              break;\n            }\n\n            // must be in FRT, BAK, etc.\n            whichTestament = 'other';\n            _context4.next = 40;\n            break;\n\n          case 38:\n            addNoticePartial({\n              priority: 902,\n              message: \"Bad function call: should be given a valid book abbreviation\",\n              excerpt: bookID,\n              location: \" (not '\".concat(bookID, \"')\").concat(generalLocation)\n            });\n            return _context4.abrupt(\"return\", checkBookPackageResult);\n\n          case 40:\n            // debugLog(`checkBookPackage: bookNumberAndName='${bookNumberAndName}' (${whichTestament} testament)`);\n            // So now we want to work through checking this one specified Bible book in various repos\n            origLangRepoCode = whichTestament === 'old' ? 'UHB' : 'UGNT';\n            if (dataSet === 'DEFAULT') repoCodeList = languageCode === 'en' ? [origLangRepoCode, 'TWL', 'LT', 'ST', 'TN', 'TQ', 'SN', 'SQ'] : [origLangRepoCode, 'LT', 'ST', 'TN', 'TQ'];else if (dataSet === 'OLD') repoCodeList = languageCode === 'en' ? [origLangRepoCode, 'TWL', 'LT', 'ST', 'TN', 'TQ1'] : [origLangRepoCode, 'LT', 'ST', 'TN', 'TQ1'];else if (dataSet === 'NEW') repoCodeList = languageCode === 'en' ? [origLangRepoCode, 'TWL', 'LT', 'ST', 'TN2', 'TQ', 'SN', 'SQ'] : [origLangRepoCode, 'LT', 'ST', 'TN', 'TQ'];else if (dataSet === 'BOTH') repoCodeList = languageCode === 'en' ? [origLangRepoCode, 'TWL', 'LT', 'ST', 'TN2', 'TN', 'TQ', 'SN', 'SQ'] : [origLangRepoCode, 'LT', 'ST', 'TN', 'TQ'];\n\n          case 42:\n            // Main loop for checkBookPackage()\n            checkedManifestDetails = [];\n            numCheckedRepos = 0;\n            _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(repoCodeList);\n            _context4.prev = 45;\n\n            _iterator.s();\n\n          case 47:\n            if ((_step = _iterator.n()).done) {\n              _context4.next = 157;\n              break;\n            }\n\n            thisRepoCode = _step.value;\n\n            if (!abortFlag) {\n              _context4.next = 51;\n              break;\n            }\n\n            return _context4.abrupt(\"break\", 157);\n\n          case 51:\n            adjustedUsername = username, adjustedRepoCode = thisRepoCode, adjustedBranch = originalBranch;\n\n            if (username === 'Door43-Catalog' && _core_defaults__WEBPACK_IMPORTED_MODULE_6__[\"CATALOG_NEXT_ONLY_REPO_CODES_LIST\"].includes(thisRepoCode) && languageCode === 'en') {\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"checkBookPackage: switching \".concat(thisRepoCode, \" username from 'Door43-Catalog' to 'unfoldingWord'\"));\n              adjustedUsername = 'unfoldingWord'; // TODO: Ideally we should also make it get the latest release (rather than master)\n            }\n\n            if (adjustedRepoCode.endsWith('1')) {\n              adjustedRepoCode = adjustedRepoCode.slice(0, adjustedRepoCode.length - 1); // Remove the '1' from the end\n              // generalLocation = generalLocation.replace(originalBranch, adjustedBranch);\n            } else if (adjustedRepoCode.endsWith('2')) {\n              adjustedRepoCode = adjustedRepoCode.slice(0, adjustedRepoCode.length - 1); // Remove the '2' from the end\n\n              adjustedBranch = 'newFormat';\n              generalLocation = generalLocation.replace(originalBranch, adjustedBranch);\n            } // } else // doesn’t end with 1 or 2\n            //   generalLocation = generalLocation.replace(adjustedBranch, originalBranch);\n\n\n            repoName = Object(_core__WEBPACK_IMPORTED_MODULE_8__[\"formRepoName\"])(languageCode, adjustedRepoCode);\n            repoLocation = \" in \".concat(thisRepoCode).concat(generalLocation);\n            if (adjustedRepoCode.startsWith('OBS-')) adjustedRepoCode = adjustedRepoCode.slice(4); // Remove the 'OBS-' from the beginning\n\n            if ((adjustedRepoCode === 'UHB' || adjustedRepoCode === 'UGNT') && adjustedUsername !== 'Door43-Catalog' && adjustedUsername !== 'unfoldingWord') {\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"checkBookPackage: switching \".concat(adjustedRepoCode, \" username from '\").concat(adjustedUsername, \"' to 'Door43-Catalog'\"));\n              adjustedUsername = 'Door43-Catalog';\n            } // if (bookID === 'OBS' && dataSet === 'OLD' && repoCode !== 'OBS' && repoCode !== 'TWL' && repoName === `${languageCode}_${adjustedRepoCode.toLowerCase()}`)\n            //   repoName = `${languageCode}_obs-${adjustedRepoCode.toLowerCase()}`;\n\n\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"checkBookPackage: check \".concat(languageCode, \" \").concat(bookID, \" in \").concat(thisRepoCode, \" (\").concat(adjustedRepoCode, \") from \").concat(adjustedUsername, \" \").concat(repoName, \" \").concat(adjustedBranch, \"\\u2026\")); // Update our \"waiting\" message\n\n            setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"p\", {\n              style: {\n                color: 'magenta'\n              }\n            }, \"Checking \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"i\", null, adjustedUsername), \" \", languageCode, \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"b\", null, bookID), \" book package in \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"b\", null, thisRepoCode), \" (checked \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"b\", null, numCheckedRepos), \"/\", repoCodeList.length, \" repos)\\u2026\"));\n            filename = void 0;\n\n            if (!(thisRepoCode === 'UHB' || thisRepoCode === 'UGNT' || thisRepoCode === 'LT' || thisRepoCode === 'ST')) {\n              _context4.next = 65;\n              break;\n            }\n\n            // TODO: Might we need specific releases/tags for some of these (e.g., from the TN2 manifest)???\n            // TODO: Do we need to hard-code where to find the UHB and UGNT???\n            filename = \"\".concat(bookNumberAndName, \".usfm\");\n            _context4.next = 81;\n            break;\n\n          case 65:\n            if (!(adjustedRepoCode === 'TWL' || thisRepoCode.endsWith('TN2') || thisRepoCode.endsWith('TQ') || adjustedRepoCode === 'SN' || adjustedRepoCode === 'SQ' || thisRepoCode === 'OBS-TN')) {\n              _context4.next = 69;\n              break;\n            }\n\n            filename = \"\".concat(adjustedRepoCode.toLowerCase(), \"_\").concat(bookID, \".tsv\");\n            _context4.next = 81;\n            break;\n\n          case 69:\n            if (!(adjustedRepoCode === 'TN' && !thisRepoCode.startsWith('OBS-'))) {\n              _context4.next = 81;\n              break;\n            }\n\n            _context4.prev = 70;\n            _context4.next = 73;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_8__[\"cachedGetBookFilenameFromManifest\"])({\n              username: adjustedUsername,\n              repository: repoName,\n              branch: originalBranch,\n              bookID: bookID.toLowerCase()\n            });\n\n          case 73:\n            filename = _context4.sent;\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"logicAssert\"])(filename.startsWith(\"\".concat(languageCode, \"_\")), \"Expected TN filename '\".concat(filename, \"' to start with the language code '\").concat(languageCode, \"_'\"));\n            _context4.next = 80;\n            break;\n\n          case 77:\n            _context4.prev = 77;\n            _context4.t1 = _context4[\"catch\"](70);\n            // console.error(`cachedGetBookFilenameFromManifest failed with: ${e}`);\n            filename = \"\".concat(languageCode, \"_tn_\").concat(bookNumberAndName, \".tsv\"); // Take a guess\n\n          case 80:\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"logicAssert\"])(filename.endsWith('.tsv'), \"Expected TN filename '\".concat(filename, \"' to end with '.tsv'\"));\n\n          case 81:\n            if (!(thisRepoCode === 'OBS')) {\n              _context4.next = 91;\n              break;\n            }\n\n            _context4.next = 84;\n            return Object(_repo_check_checkRepo__WEBPACK_IMPORTED_MODULE_10__[\"checkRepo\"])(adjustedUsername, \"\".concat(languageCode, \"_obs\"), originalBranch, generalLocation, setResultValue, newCheckingOptions);\n\n          case 84:\n            crResultObject = _context4.sent;\n            // Adds the notices to checkBookPackageResult\n            // debugLog(`checkRepo('OBS') returned ${crResultObject.successList.length} success message(s) and ${crResultObject.noticeList.length} notice(s)`);\n            // debugLog(`crResultObject keys: ${JSON.stringify(Object.keys(crResultObject))}`);\n            // debugLog(`crResultObject checkedRepoNames: ${crResultObject.checkedRepoNames}`);\n            checkBookPackageResult.successList = checkBookPackageResult.successList.concat(crResultObject.successList);\n            checkBookPackageResult.noticeList = checkBookPackageResult.noticeList.concat(crResultObject.noticeList);\n\n            if (crResultObject.checkedFileCount > 0) {\n              checkedFilenames = checkedFilenames.concat(crResultObject.checkedFilenames);\n              checkedFilenameExtensions = new Set([].concat(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedFilenameExtensions), Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(crResultObject.checkedFilenameExtensions)));\n              checkedFileCount += crResultObject.checkedFileCount;\n              totalCheckedSize += crResultObject.totalCheckedSize;\n              checkedRepoNames.add(repoName);\n            }\n\n            addSuccessMessage(\"Checked \".concat(languageCode, \" OBS repo from \").concat(adjustedUsername));\n            _context4.next = 134;\n            break;\n\n          case 91:\n            if (!(thisRepoCode === 'TQ1' || thisRepoCode === 'OBS-TN1' || thisRepoCode === 'OBS-TQ1' || thisRepoCode === 'OBS-SN1' || thisRepoCode === 'OBS-SQ1')) {\n              _context4.next = 100;\n              break;\n            }\n\n            _context4.next = 94;\n            return checkMarkdownBook(adjustedUsername, languageCode, thisRepoCode, repoName, originalBranch, bookID, newCheckingOptions);\n\n          case 94:\n            tqResultObject = _context4.sent;\n            checkBookPackageResult.successList = checkBookPackageResult.successList.concat(tqResultObject.successList);\n            checkBookPackageResult.noticeList = checkBookPackageResult.noticeList.concat(tqResultObject.noticeList);\n\n            if (tqResultObject.checkedFileCount > 0) {\n              checkedFilenames = checkedFilenames.concat(tqResultObject.checkedFilenames);\n              checkedFilenameExtensions = new Set([].concat(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedFilenameExtensions), Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(tqResultObject.checkedFilenameExtensions)));\n              checkedFileCount += tqResultObject.checkedFileCount;\n              totalCheckedSize += tqResultObject.totalCheckedSize;\n              checkedRepoNames.add(repoName);\n            }\n\n            _context4.next = 134;\n            break;\n\n          case 100:\n            // For repos other than OBS and TQ1, we only have one file to check\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"logicAssert\"])((_filename = filename) === null || _filename === void 0 ? void 0 : _filename.length, \"filename should be set by now for un=\".concat(adjustedUsername, \" rC=\").concat(thisRepoCode, \" aRC=\").concat(adjustedRepoCode, \" rN=\").concat(repoName, \" aBr=\").concat(adjustedBranch));\n            repoFileContent = void 0;\n            _context4.prev = 102;\n            _context4.next = 105;\n            return getFile_({\n              username: adjustedUsername,\n              repository: repoName,\n              path: filename,\n              branch: adjustedBranch\n            });\n\n          case 105:\n            repoFileContent = _context4.sent;\n            // debugLog(`checkBookPackage fetched fileContent for ${adjustedUsername}, ${repoName}, ${adjustedBranch}, ${filename}, ${typeof repoFileContent}, ${repoFileContent.length}`);\n            checkedFilenames.push(filename);\n            totalCheckedSize += repoFileContent.length;\n            checkedRepoNames.add(repoName);\n            _context4.next = 125;\n            break;\n\n          case 111:\n            _context4.prev = 111;\n            _context4.t2 = _context4[\"catch\"](102);\n            _context4.t3 = (_context4.t2 + '').startsWith('Tests could not find');\n\n            if (_context4.t3) {\n              _context4.next = 118;\n              break;\n            }\n\n            _context4.next = 117;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_8__[\"repositoryExistsOnDoor43\"])({\n              username: adjustedUsername,\n              repository: repoName\n            });\n\n          case 117:\n            _context4.t3 = !_context4.sent;\n\n          case 118:\n            if (!_context4.t3) {\n              _context4.next = 122;\n              break;\n            }\n\n            checkBookPackageResult.noticeList.push({\n              priority: 997,\n              message: \"Repository doesn’t exist\",\n              username: adjustedUsername,\n              repoCode: thisRepoCode,\n              repoName: repoName,\n              location: repoLocation,\n              extra: thisRepoCode\n            });\n            _context4.next = 125;\n            break;\n\n          case 122:\n            notice = {\n              priority: thisRepoCode === 'SN' || thisRepoCode === 'SQ' ? 196 : 996,\n              message: \"Unable to load book package file\",\n              username: adjustedUsername,\n              repoCode: thisRepoCode,\n              repoName: repoName,\n              filename: filename,\n              location: repoLocation,\n              extra: thisRepoCode\n            }; // eslint-disable-next-line eqeqeq\n\n            if (_context4.t2 != 'TypeError: repoFileContent is null') notice.details = \"error=\".concat(_context4.t2);\n            addNoticePartial(notice);\n\n          case 125:\n            if (!repoFileContent) {\n              _context4.next = 133;\n              break;\n            }\n\n            _context4.next = 128;\n            return ourCheckBPFileContents(adjustedUsername, languageCode, thisRepoCode, repoName, adjustedBranch, filename, repoFileContent, generalLocation, newCheckingOptions);\n\n          case 128:\n            // Adds the notices to checkBookPackageResult\n            checkedFileCount += 1;\n            checkedFilenameExtensions.add(filename.split('.').pop());\n            addSuccessMessage(\"Checked \".concat(adjustedUsername !== username ? \"\".concat(adjustedUsername, \" \") : '').concat(thisRepoCode.toUpperCase(), \" file: \").concat(filename));\n            _context4.next = 134;\n            break;\n\n          case 133:\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"debugLog\"])(\"checkBookPackage: No fileContent to check for \".concat(adjustedUsername, \", \").concat(repoName, \", \").concat(adjustedBranch, \", \").concat(filename));\n\n          case 134:\n            if (newCheckingOptions === null || newCheckingOptions === void 0 ? void 0 : newCheckingOptions.disableAllLinkFetchingFlag) {\n              _context4.next = 154;\n              break;\n            }\n\n            if (checkedManifestDetails.includes(repoName)) {\n              _context4.next = 154;\n              break;\n            }\n\n            // Don’t want to check more than once\n            checkedManifestDetails.push(repoName); // Remember that we checked this one\n            // debugLog(`Maybe checking MANIFEST etc. for ${repoName}`);\n\n            if (!(newCheckingOptions === null || newCheckingOptions === void 0 ? void 0 : newCheckingOptions.checkManifestFlag)) {\n              _context4.next = 142;\n              break;\n            }\n\n            _context4.next = 140;\n            return ourCheckManifestFile(adjustedUsername, thisRepoCode, repoName, adjustedBranch, generalLocation, newCheckingOptions);\n\n          case 140:\n            numCheckedCharacters = _context4.sent;\n\n            if (numCheckedCharacters > 0) {\n              checkedFileCount += 1;\n              checkedFilenames.push('manifest.yaml');\n              checkedFilenameExtensions.add('yaml');\n              totalCheckedSize += numCheckedCharacters;\n              addSuccessMessage(\"Checked \".concat(adjustedUsername !== username ? \"\".concat(adjustedUsername, \" \") : '').concat(repoName, \" manifest file\"));\n            }\n\n          case 142:\n            if (!(newCheckingOptions === null || newCheckingOptions === void 0 ? void 0 : newCheckingOptions.checkReadmeFlag)) {\n              _context4.next = 148;\n              break;\n            }\n\n            // debugLog(`checkBookPackage: checking README for ${adjustedUsername} ${repoName}`);\n            _filename2 = 'README.md';\n            _context4.next = 146;\n            return ourCheckMarkdownFile(adjustedUsername, thisRepoCode, repoName, adjustedBranch, _filename2, generalLocation, newCheckingOptions);\n\n          case 146:\n            _numCheckedCharacters = _context4.sent;\n\n            if (_numCheckedCharacters > 0) {\n              checkedFileCount += 1;\n              checkedFilenames.push(_filename2);\n              checkedFilenameExtensions.add('md');\n              totalCheckedSize += _numCheckedCharacters;\n              addSuccessMessage(\"Checked \".concat(adjustedUsername !== username ? \"\".concat(adjustedUsername, \" \") : '').concat(repoName, \" README file\"));\n            }\n\n          case 148:\n            if (!(newCheckingOptions === null || newCheckingOptions === void 0 ? void 0 : newCheckingOptions.checkLicenseFlag)) {\n              _context4.next = 154;\n              break;\n            }\n\n            // debugLog(`Checking LICENSE for ${adjustedUsername} ${repoName}`);\n            _filename3 = 'LICENSE.md';\n            _context4.next = 152;\n            return ourCheckMarkdownFile(adjustedUsername, thisRepoCode, repoName, adjustedBranch, _filename3, generalLocation, newCheckingOptions);\n\n          case 152:\n            _numCheckedCharacters2 = _context4.sent;\n\n            if (_numCheckedCharacters2 > 0) {\n              checkedFileCount += 1;\n              checkedFilenames.push(_filename3);\n              checkedFilenameExtensions.add('md');\n              totalCheckedSize += _numCheckedCharacters2;\n              addSuccessMessage(\"Checked \".concat(adjustedUsername !== username ? \"\".concat(adjustedUsername, \" \") : '').concat(repoName, \" LICENSE file\"));\n            }\n\n          case 154:\n            // end of linkFetching not disabled\n            // else debugLog(`NOT fetching MANIFEST, etc. for ${repoName}`);\n            numCheckedRepos += 1; // debugLog(`At end of loop having checked ${numCheckedRepos} repos`);\n\n          case 155:\n            _context4.next = 47;\n            break;\n\n          case 157:\n            _context4.next = 162;\n            break;\n\n          case 159:\n            _context4.prev = 159;\n            _context4.t4 = _context4[\"catch\"](45);\n\n            _iterator.e(_context4.t4);\n\n          case 162:\n            _context4.prev = 162;\n\n            _iterator.f();\n\n            return _context4.finish(162);\n\n          case 165:\n            // end of repo loop\n            // Add some extra fields to our checkFileResult object\n            //  in case we need this information again later\n            checkBookPackageResult.checkedFileCount = checkedFileCount;\n            checkBookPackageResult.checkedFilenames = checkedFilenames;\n            checkBookPackageResult.checkedFilenameExtensions = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedFilenameExtensions); // convert Set to Array\n\n            checkBookPackageResult.checkedFilesizes = totalCheckedSize;\n            checkBookPackageResult.checkedRepoNames = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedRepoNames); // convert Set to Array\n            // checkBookPackageResult.checkedOptions = newCheckingOptions; // This is done at the caller level\n\n            checkBookPackageResult.elapsedSeconds = (new Date() - startTime) / 1000; // seconds\n            // debugLog(\"checkBookPackageResult:\", JSON.stringify(checkBookPackageResult));\n            // debugLog(`checkBookPackageResult(${bookID}): elapsedSeconds = ${checkBookPackageResult.elapsedSeconds}, notices count = ${checkBookPackageResult.noticeList.length}`);\n\n            return _context4.abrupt(\"return\", checkBookPackageResult);\n\n          case 172:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[27, 32], [45, 159, 162, 165], [70, 77], [102, 111]]);\n  }));\n  return _checkBookPackage.apply(this, arguments);\n}\n\n; // end of checkBookPackage()\n\n/*\n    checkMarkdownBook\n*/\n\n/**\n *\n * @param {string} username\n * @param {string} languageCode\n * @param {string} repoCode -- 'TQ' or 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'\n * @param {string} repoName\n * @param {string} branch\n * @param {string} bookID -- 3-character USFM book ID or 'OBS'\n * @param {Object} checkingOptions\n * @return {Object} - containing successList and noticeList\n */\n\nfunction checkMarkdownBook(_x6, _x7, _x8, _x9, _x10, _x11, _x12) {\n  return _checkMarkdownBook.apply(this, arguments);\n} // end of checkMarkdownBook function\n\n\nfunction _checkMarkdownBook() {\n  _checkMarkdownBook = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6(username, languageCode, repoCode, repoName, branch, bookID, checkingOptions) {\n    var generalLocation, ctqResult, addSuccessMessage, addNoticePartial, ourCheckFileContents, _ourCheckFileContents, getFileListFromZip_, checkedFileCount, checkedFilenames, checkedFilenameExtensions, totalCheckedSize, folderpath, pathList, details, _iterator7, _step7, thisPath, pathParts, C, V, _getFile_, tqFileContent, notice;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _ourCheckFileContents = function _ourCheckFileContents3() {\n              _ourCheckFileContents = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5(repoCode, bookID, C, V, cfFilename, fileContent, fileLocation, checkingOptions) {\n                var cfResultObject, _iterator8, _step8, noticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.next = 2;\n                        return Object(_file_check_checkFileContents__WEBPACK_IMPORTED_MODULE_9__[\"checkFileContents\"])(username, languageCode, repoCode, branch, cfFilename, fileContent, fileLocation, checkingOptions);\n\n                      case 2:\n                        cfResultObject = _context5.sent;\n                        // debugLog(\"checkFileContents() returned\", cfResultObject.successList.length, \"success message(s) and\", cfResultObject.noticeList.length, \"notice(s)\");\n                        // for (const successEntry of cfResultObject.successList) debugLog(\"  ourCheckFileContents:\", successEntry);\n                        // Process noticeList line by line,  appending the repoCode as an extra field as we go\n                        _iterator8 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cfResultObject.noticeList);\n\n                        try {\n                          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                            noticeEntry = _step8.value;\n                            // noticeEntry is an array of eight fields: 1=priority, 2=bookID, 3=C, 4=V, 5=msg, 6=characterIndex, 7=excerpt, 8=location\n                            // parameterAssert(Object.keys(noticeEntry).length === 5, `cTQ ourCheckFileContents notice length=${Object.keys(noticeEntry).length}`);\n                            // We add the repoCode as an extra value\n                            addNoticePartial(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, noticeEntry), {}, {\n                              bookID: bookID,\n                              C: C,\n                              V: V,\n                              extra: repoCode\n                            }));\n                          }\n                        } catch (err) {\n                          _iterator8.e(err);\n                        } finally {\n                          _iterator8.f();\n                        }\n\n                      case 5:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n              return _ourCheckFileContents.apply(this, arguments);\n            };\n\n            ourCheckFileContents = function _ourCheckFileContents2(_x35, _x36, _x37, _x38, _x39, _x40, _x41, _x42) {\n              return _ourCheckFileContents.apply(this, arguments);\n            };\n\n            addNoticePartial = function _addNoticePartial2(incompleteNoticeObject) {\n              // bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n              // functionLog(`checkMarkdownBook addNoticePartial: ${incompleteNoticeObject.priority}:${incompleteNoticeObject.message} ${incompleteNoticeObject.bookID} ${incompleteNoticeObject.C}:${incompleteNoticeObject.V} ${incompleteNoticeObject.filename}:${incompleteNoticeObject.lineNumber} ${incompleteNoticeObject.characterIndex > 0 ? ` (at character ${incompleteNoticeObject.characterIndex})` : \"\"}${incompleteNoticeObject.excerpt ? ` ${incompleteNoticeObject.excerpt}` : \"\"}${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"cTQ addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `cTQ addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}'`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"cTQ addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `cTQ addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}'`);\n              //parameterAssert(incompleteNoticeObject.bookID !== undefined, \"cTQ addNoticePartial: 'bookID' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.bookID === 'string', `cTQ addNoticePartial: 'bookID' parameter should be a string not a '${typeof incompleteNoticeObject.bookID}'`);\n              //parameterAssert(incompleteNoticeObject.bookID.length === 3, `cTQ addNoticePartial: 'bookID' parameter should be three characters long not ${incompleteNoticeObject.bookID.length}`);\n              //parameterAssert(incompleteNoticeObject.bookID === 'OBS' || books.isValidBookID(incompleteNoticeObject.bookID), `cTQ addNoticePartial: '${incompleteNoticeObject.bookID}' is not a valid USFM book identifier`);\n              // parameterAssert(C !== undefined, \"cTQ addNoticePartial: 'C' parameter should be defined\");\n              if (incompleteNoticeObject.C) {//parameterAssert(typeof incompleteNoticeObject.C === 'string', `cTQ addNoticePartial: 'C' parameter should be a string not a '${typeof incompleteNoticeObject.C}'`);\n              } // parameterAssert(V !== undefined, \"cTQ addNoticePartial: 'V' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.V) {//parameterAssert(typeof incompleteNoticeObject.V === 'string', `cTQ addNoticePartial: 'V' parameter should be a string not a '${typeof incompleteNoticeObject.V}'`);\n              } // parameterAssert(characterIndex !== undefined, \"cTQ addNoticePartial: 'characterIndex' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `cTQ addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}'`);\n              } // parameterAssert(excerpt !== undefined, \"cTQ addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `cTQ addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}'`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"cTQ addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `cTQ addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}'`);\n              //parameterAssert(incompleteNoticeObject.extra !== undefined, \"cTQ addNoticePartial: 'extra' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.extra === 'string', `cTQ addNoticePartial: 'extra' parameter should be a string not a '${typeof incompleteNoticeObject.extra}'`);\n\n\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"aboutToOverwrite\"])('checkMarkdownBook', ['username', 'repoCode', 'repoName', 'bookID'], incompleteNoticeObject, {\n                username: username,\n                repoCode: repoCode,\n                repoName: repoName,\n                bookID: bookID\n              });\n              ctqResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                username: username,\n                repoCode: repoCode,\n                repoName: repoName,\n                bookID: bookID\n              }));\n            };\n\n            addSuccessMessage = function _addSuccessMessage2(successString) {\n              // functionLog(`checkBookPackage success: ${successString}`);\n              ctqResult.successList.push(successString);\n            };\n\n            // functionLog(`checkBookPackage checkMarkdownBook(${username}, ${languageCode}, rC=${repoCode} rN=${repoName}, ${branch}, ${bookID}, ${JSON.stringify(checkingOptions)})…`)\n            //parameterAssert(username !== undefined, \"checkMarkdownBook: 'username' parameter should be defined\");\n            //parameterAssert(typeof username === 'string', `checkMarkdownBook: 'username' parameter should be a string not a '${typeof username}': '${username}'`);\n            //parameterAssert(languageCode !== undefined, \"checkMarkdownBook: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkMarkdownBook: 'languageCode' parameter should be a string not a '${typeof languageCode}': '${languageCode}'`);\n            //parameterAssert(repoCode !== undefined, \"checkMarkdownBook: 'repoCode' parameter should be defined\");\n            //parameterAssert(typeof repoCode === 'string', `checkMarkdownBook: 'repoCode' parameter should be a string not a '${typeof repoCode}': '${repoCode}'`);\n            //parameterAssert(repoCode === 'TQ' || repoCode === 'OBS-TN' || repoCode === 'OBS-TQ' || repoCode === 'OBS-SN' || repoCode === 'OBS-SQ', `checkMarkdownBook: 'repoCode' parameter should be 'TQ' or 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ' not '${repoCode}'`);\n            //parameterAssert(repoName !== undefined, \"checkMarkdownBook: 'repoName' parameter should be defined\");\n            //parameterAssert(typeof repoName === 'string', `checkMarkdownBook: 'repoName' parameter should be a string not a '${typeof repoName}': ${repoName}`);\n            //parameterAssert(branch !== undefined, \"checkMarkdownBook: 'branch' parameter should be defined\");\n            //parameterAssert(typeof branch === 'string', `checkMarkdownBook: 'branch' parameter should be a string not a '${typeof branch}': '${branch}'`);\n            //parameterAssert(bookID !== undefined, \"checkMarkdownBook: 'bookID' parameter should be defined\");\n            //parameterAssert(typeof bookID === 'string', `checkMarkdownBook: 'bookID' parameter should be a string not a '${typeof bookID}': ${bookID}`);\n            //parameterAssert(bookID.length === 3, `checkMarkdownBook: 'bookID' parameter should be three characters long not ${bookID.length}`);\n            //parameterAssert(bookID.toUpperCase() === bookID, `checkMarkdownBook: 'bookID' parameter should be UPPERCASE not '${bookID}'`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkMarkdownBook: '${bookID}' is not a valid USFM book identifier`);\n            generalLocation = \" in \".concat(username, \" (\").concat(branch, \")\");\n            ctqResult = {\n              successList: [],\n              noticeList: []\n            };\n            // end of ourCheckFileContents function\n            // Main code for checkMarkdownBook\n            // We need to find and check all the markdown folders/files for this book\n            getFileListFromZip_ = (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFileListFromZip) ? checkingOptions.getFileListFromZip : _core__WEBPACK_IMPORTED_MODULE_8__[\"getFileListFromZip\"];\n            checkedFileCount = 0, checkedFilenames = [], checkedFilenameExtensions = new Set(), totalCheckedSize = 0;\n            folderpath = bookID === 'OBS' ? 'content/' : \"\".concat(bookID.toLowerCase(), \"/\");\n            _context6.next = 11;\n            return getFileListFromZip_({\n              username: username,\n              repository: repoName,\n              branchOrRelease: branch,\n              optionalPrefix: folderpath\n            });\n\n          case 11:\n            pathList = _context6.sent;\n\n            if (!(!Array.isArray(pathList) || !pathList.length)) {\n              _context6.next = 23;\n              break;\n            }\n\n            // debugLog(`checkMarkdownBook for ${repoCode} failed to find ${username} ${repoName} ${branch} ${folderpath}`);\n            details = \"folder=\".concat(folderpath);\n            _context6.next = 16;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_8__[\"repositoryExistsOnDoor43\"])({\n              username: username,\n              repository: repoName\n            });\n\n          case 16:\n            if (_context6.sent) {\n              _context6.next = 20;\n              break;\n            }\n\n            ctqResult.noticeList.push({\n              priority: 997,\n              message: \"Repository doesn’t exist\",\n              details: details,\n              username: username,\n              repoCode: repoCode,\n              repoName: repoName,\n              location: generalLocation,\n              extra: repoCode\n            });\n            _context6.next = 21;\n            break;\n\n          case 20:\n            addNoticePartial({\n              priority: 996,\n              message: \"Unable to load file\",\n              details: details,\n              bookID: bookID,\n              location: generalLocation,\n              extra: repoCode\n            });\n\n          case 21:\n            _context6.next = 69;\n            break;\n\n          case 23:\n            // debugLog(`  checkMarkdownBook: Got ${pathList.length} pathList entries`)\n            _iterator7 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(pathList);\n            _context6.prev = 24;\n\n            _iterator7.s();\n\n          case 26:\n            if ((_step7 = _iterator7.n()).done) {\n              _context6.next = 60;\n              break;\n            }\n\n            thisPath = _step7.value;\n            // debugLog(`checkMarkdownBook for ${repoCode}: Try to load ${username}, ${repoName}, ${thisPath}, ${branch}`);\n            //parameterAssert(thisPath.endsWith('.md'), `Expected ${ thisPath } to end with .md`);\n            // const filename = thisPath.split('/').pop();\n            pathParts = thisPath.slice(0, -3).split('/');\n            C = pathParts[pathParts.length - 2].replace(/^0+(?=\\d)/, ''); // Remove leading zeroes\n\n            V = pathParts[pathParts.length - 1].replace(/^0+(?=\\d)/, ''); // Remove leading zeroes\n\n            _getFile_ = (checkingOptions === null || checkingOptions === void 0 ? void 0 : checkingOptions.getFile) ? checkingOptions.getFile : _core__WEBPACK_IMPORTED_MODULE_8__[\"cachedGetFile\"];\n            tqFileContent = void 0;\n            _context6.prev = 33;\n            _context6.next = 36;\n            return _getFile_({\n              username: username,\n              repository: repoName,\n              path: thisPath,\n              branch: branch\n            });\n\n          case 36:\n            tqFileContent = _context6.sent;\n            // debugLog(`checkMarkdownBook for ${repoCode}: Fetched fileContent for ${repoName} ${thisPath} ${typeof tqFileContent} ${tqFileContent.length}`);\n            checkedFilenames.push(thisPath);\n            totalCheckedSize += tqFileContent.length;\n            _context6.next = 53;\n            break;\n\n          case 41:\n            _context6.prev = 41;\n            _context6.t0 = _context6[\"catch\"](33);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            console.error(\"checkMarkdownBook failed to load \".concat(username, \" \").concat(repoName, \" \").concat(branch, \" \").concat(thisPath, \" \").concat(_context6.t0 + ''));\n            _context6.next = 46;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_8__[\"repositoryExistsOnDoor43\"])({\n              username: username,\n              repository: repoName\n            });\n\n          case 46:\n            if (_context6.sent) {\n              _context6.next = 50;\n              break;\n            }\n\n            ctqResult.noticeList.push({\n              priority: 997,\n              message: \"Repository doesn’t exist\",\n              username: username,\n              repoCode: repoCode,\n              repoName: repoName,\n              location: generalLocation,\n              extra: repoCode\n            });\n            _context6.next = 53;\n            break;\n\n          case 50:\n            notice = {\n              priority: 996,\n              message: \"Unable to load file\",\n              username: username,\n              bookID: bookID,\n              C: C,\n              V: V,\n              filename: thisPath,\n              location: \"\".concat(generalLocation, \" \").concat(thisPath, \" \"),\n              extra: repoCode\n            }; // eslint-disable-next-line eqeqeq\n\n            if (_context6.t0 != 'TypeError: repoFileContent is null') notice.details = \"error = \".concat(_context6.t0, \" \");\n            addNoticePartial(notice);\n\n          case 53:\n            if (!tqFileContent) {\n              _context6.next = 58;\n              break;\n            }\n\n            _context6.next = 56;\n            return ourCheckFileContents(repoCode, bookID, C, V, thisPath, tqFileContent, generalLocation, checkingOptions);\n\n          case 56:\n            // Adds the notices to checkBookPackageResult\n            checkedFileCount += 1;\n            checkedFilenameExtensions.add('md'); // addSuccessMessage(`Checked ${ repoCode.toUpperCase() } file: ${ thisPath }`);\n\n          case 58:\n            _context6.next = 26;\n            break;\n\n          case 60:\n            _context6.next = 65;\n            break;\n\n          case 62:\n            _context6.prev = 62;\n            _context6.t1 = _context6[\"catch\"](24);\n\n            _iterator7.e(_context6.t1);\n\n          case 65:\n            _context6.prev = 65;\n\n            _iterator7.f();\n\n            return _context6.finish(65);\n\n          case 68:\n            addSuccessMessage(\"Checked \".concat(checkedFileCount.toLocaleString(), \" \").concat(repoCode.toUpperCase(), \" file\").concat(checkedFileCount === 1 ? '' : 's'));\n\n          case 69:\n            ctqResult.checkedFileCount = checkedFileCount;\n            ctqResult.checkedFilenames = checkedFilenames;\n            ctqResult.checkedFilenameExtensions = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedFilenameExtensions); // convert Set to Array\n\n            ctqResult.checkedFilesizes = totalCheckedSize; // debugLog(`  checkMarkdownBook returning ${ JSON.stringify(ctqResult) }`);\n\n            return _context6.abrupt(\"return\", ctqResult);\n\n          case 74:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[24, 62, 65, 68], [33, 41]]);\n  }));\n  return _checkMarkdownBook.apply(this, arguments);\n}\n\n//# sourceURL=webpack:///./src/demos/book-package-check/checkBookPackage.js?");

/***/ }),

/***/ "./src/demos/book-packages-check/BookPackagesCheck.js":
/*!************************************************************!*\
  !*** ./src/demos/book-packages-check/BookPackagesCheck.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _core_books_books__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core */ \"./src/core/index.js\");\n/* harmony import */ var _checkBookPackages__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./checkBookPackages */ \"./src/demos/book-packages-check/checkBookPackages.js\");\n/* harmony import */ var _notice_processing_functions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../notice-processing-functions */ \"./src/demos/notice-processing-functions.js\");\n/* harmony import */ var _RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utilities */ \"./src/core/utilities.js\");\n\n\n\n\n // import { withStyles } from '@material-ui/core/styles';\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const BPS_VALIDATOR_VERSION_STRING = '0.2.18';\n\n/**\n *\n * @param {Object} props\n */\n\nfunction BookPackagesCheck(\n/*username, languageCode, bookIDs,*/\nprops) {\n  // Check a single Bible book across many repositories\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(\"Waiting-CheckBookPackages\"),\n      _useState2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_useState, 2),\n      result = _useState2[0],\n      setResultValue = _useState2[1]; // debugLog(`I'm here in BookPackagesCheck v${BPS_VALIDATOR_VERSION_STRING}`);\n  // consoleLogObject(\"props\", props);\n  // consoleLogObject(\"props.classes\", props.classes);\n\n\n  var username = props.username; // debugLog(`username='${username}'`);\n\n  var languageCode = props.languageCode; // debugLog(`languageCode='${languageCode}'`);\n\n  var bookIDs = props.bookIDs; // debugLog(`bookIDs='${bookIDs}'`);\n\n  var dataSet = props.dataSet; // debugLog(`dataSet='${dataSet}'`);\n\n  var branch = props.branch; // debugLog(`branch='${branch}'`);\n\n  var bookIDList = [];\n  var bookIDInvalid;\n  var haveOT = false,\n      haveNT = false;\n\n  var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(bookIDs.split(',')),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var bookID = _step.value;\n      bookID = bookID.trim();\n\n      if (!_core_books_books__WEBPACK_IMPORTED_MODULE_5__[\"isValidBookID\"](bookID) && bookID !== 'OBS') {\n        bookIDInvalid = bookID;\n      }\n\n      bookIDList.push(bookID);\n\n      if (_core_books_books__WEBPACK_IMPORTED_MODULE_5__[\"isValidBookID\"](bookID)) {\n        var whichTestament = _core_books_books__WEBPACK_IMPORTED_MODULE_5__[\"testament\"](bookID);\n        Object(_core_utilities__WEBPACK_IMPORTED_MODULE_10__[\"logicAssert\"])(whichTestament === 'old' || whichTestament === 'new', \"BookPackagesCheck() couldn\\u2019t find testament for '\".concat(bookID, \"'\"));\n        if (whichTestament === 'old') haveOT = true;\n        if (whichTestament === 'new') haveNT = true;\n      }\n    } // debugLog(`bookIDList (${bookIDList.length}) = ${bookIDList.join(', ')}`);\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var checkingOptions = {\n    // Uncomment any of these to test them\n    dataSet: dataSet,\n    // Can be 'OLD' (Markdown, etc.), 'NEW' (TSV only), or 'BOTH', or 'DEFAULT'\n    // excerptLength: 25,\n    suppressNoticeDisablingFlag: true,\n    // Leave this one as true (otherwise demo checks are less efficient)\n    checkType: 'BookPackages' // Always leave this one in\n\n  }; // Or this allows the parameters to be specified as a BookPackagesCheck property\n\n  if (props.excerptLength) checkingOptions.excerptLength = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.excerptLength);\n  if (props.cutoffPriorityLevel) checkingOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n  if (props.disableAllLinkFetchingFlag) checkingOptions.disableAllLinkFetchingFlag = props.disableAllLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTAArticlesCheckFlag) checkingOptions.disableLinkedTAArticlesCheckFlag = props.disableLinkedTAArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTWArticlesCheckFlag) checkingOptions.disableLinkedTWArticlesCheckFlag = props.disableLinkedTWArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLexiconLinkFetchingFlag) checkingOptions.disableLexiconLinkFetchingFlag = props.disableLexiconLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedLexiconEntriesCheckFlag) checkingOptions.disableLinkedLexiconEntriesCheckFlag = props.disableLinkedLexiconEntriesCheckFlag.toLowerCase() === 'true'; // functionLog(`checkingOptions.disableLinkedTAArticlesCheckFlag ${checkingOptions.disableLinkedTAArticlesCheckFlag} from '${props.disableLinkedTAArticlesCheckFlag}'`);\n  // functionLog(`checkingOptions.disableLinkedTWArticlesCheckFlag ${checkingOptions.disableLinkedTWArticlesCheckFlag} from '${props.disableLinkedTWArticlesCheckFlag}'`);\n  // functionLog(`checkingOptions.disableLinkedLexiconEntriesCheckFlag ${checkingOptions.disableLinkedLexiconEntriesCheckFlag} from '${props.disableLinkedLexiconEntriesCheckFlag}'`);\n\n  Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(function () {\n    // debugLog(\"BookPackagesCheck.useEffect() called with \", JSON.stringify(props));\n    // Use an IIFE (Immediately Invoked Function Expression)\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\n    Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n      var repoPreloadList, obsRepoPreloadList, successFlag, rawCBPsResults, processOptions, displayType, renderSummary, processedResults, _processedResults, _processedResults2;\n\n      return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              renderSummary = function _renderSummary(processedResults) {\n                return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", null, \"Checked \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, username, \" \", languageCode, \" \", bookIDList.join(', ')), \" (from \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"i\", null, branch === undefined ? 'DEFAULT' : branch), \" branches)\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderCheckedFilesList\"], {\n                  username: username,\n                  results: processedResults\n                }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderTotals\"], {\n                  rawNoticeListLength: rawCBPsResults.noticeList.length,\n                  results: processedResults\n                }));\n              };\n\n              if (!(!props.wait || props.wait !== 'N')) {\n                _context.next = 4;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"span\", {\n                style: {\n                  color: 'blue'\n                }\n              }, \"Waiting for user\\u2026\"), \" (Adjust settings below as necessary and then set \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, \"wait='N'\"), \" to start)\"));\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(props.reloadAllFilesFirst && props.reloadAllFilesFirst.slice(0).toUpperCase() === 'Y')) {\n                _context.next = 11;\n                break;\n              }\n\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_10__[\"userLog\"])(\"Clearing cache before running book packages check…\");\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n                style: {\n                  color: 'orange'\n                }\n              }, \"Clearing cache before running book packages check\\u2026\"));\n              _context.next = 9;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"clearCaches\"])();\n\n            case 9:\n              _context.next = 13;\n              break;\n\n            case 11:\n              _context.next = 13;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"clearCheckedArticleCache\"])();\n\n            case 13:\n              // otherwise we wouldn’t see any of the warnings again from checking these\n              // Load whole repos, especially if we are going to check files in manifests\n              repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TQ', 'SN', 'SQ']; // for DEFAULT\n\n              if (dataSet === 'OLD') repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TQ1'];else if (dataSet === 'NEW') repoPreloadList = ['TWL', 'LT', 'ST', 'TN2', 'TQ', 'SN', 'SQ'];else if (dataSet === 'BOTH') repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TN2', 'TQ', 'SN', 'SQ'];\n              if (haveNT) repoPreloadList.unshift('UGNT'); // These go on the front, so do in reverse order\n\n              if (haveOT) repoPreloadList.unshift('UHB');\n\n              if (!checkingOptions.disableAllLinkFetchingFlag) {\n                repoPreloadList.push(checkingOptions.disableLinkedTWArticlesCheckFlag ? 'TWtree' : 'TW');\n                repoPreloadList.push(checkingOptions.disableLinkedTAArticlesCheckFlag ? 'TAtree' : 'TA');\n\n                if (!checkingOptions.disableLexiconLinkFetchingFlag) {\n                  repoPreloadList.push(checkingOptions.disableLinkedLexiconEntriesCheckFlag ? 'UHALtree' : 'UHAL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n\n                  repoPreloadList.push(checkingOptions.disableLinkedLexiconEntriesCheckFlag ? 'UGLtree' : 'UGL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n                }\n              }\n\n              if (bookIDList.includes('OBS')) {\n                obsRepoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ']; // for DEFAULT\n\n                if (dataSet === 'OLD') obsRepoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN1', 'OBS-TQ1', 'OBS-SN1', 'OBS-SQ1'];else if (dataSet === 'NEW') obsRepoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];else if (dataSet === 'BOTH') obsRepoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];\n                repoPreloadList.push.apply(repoPreloadList, obsRepoPreloadList);\n              } // debugLog(`BookPackagesCheck got repoPreloadList=${repoPreloadList} for dataSet=${dataSet}`)\n\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Preloading \", repoPreloadList.length, \" repos for \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"i\", null, username), \" \", languageCode, \" ready for check of \", bookIDList.length, \" book package\", bookIDList.length === 1 ? '' : 's', \"\\u2026\"));\n              _context.next = 22;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"preloadReposIfNecessary\"])(username, languageCode, bookIDList, branch, repoPreloadList);\n\n            case 22:\n              successFlag = _context.sent;\n              if (!successFlag) console.error(\"BookPackagesCheck error: Failed to pre-load all repos\"); // Display our \"waiting\" message\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Checking \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"i\", null, username), \" \", languageCode, \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", null, bookIDList.join(', ')), \" book packages\\u2026\"));\n              _context.next = 27;\n              return Object(_checkBookPackages__WEBPACK_IMPORTED_MODULE_7__[\"checkBookPackages\"])(username, languageCode, bookIDList, setResultValue, checkingOptions);\n\n            case 27:\n              rawCBPsResults = _context.sent;\n              // Add some extra fields to our rawCBPsResults object in case we need this information again later\n              rawCBPsResults.checkType = 'BookPackages';\n              rawCBPsResults.username = username;\n              rawCBPsResults.languageCode = languageCode;\n              rawCBPsResults.bookIDs = bookIDs;\n              rawCBPsResults.bookIDList = bookIDList;\n              rawCBPsResults.checkedOptions = checkingOptions; // debugLog(\"Here with CBPs rawCBPsResults\", typeof rawCBPsResults);\n              // Now do our final handling of the result -- we have some options available\n\n              processOptions = {// Uncomment any of these to test them\n                // 'maximumSimilarMessages': 4, // default is 3 -- 0 means don’t suppress\n                // 'errorPriorityLevel': 800, // default is 700\n                // 'cutoffPriorityLevel': 100, // default is 0\n                // 'sortBy': 'ByRepo', // default is 'ByPriority', also have 'AsFound'\n                // 'ignorePriorityNumberList': [123, 202], // default is []\n              }; // Or this allows the parameters to be specified as a BookPackagesCheck property\n\n              if (props.maximumSimilarMessages) processOptions.maximumSimilarMessages = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.maximumSimilarMessages);\n              if (props.errorPriorityLevel) processOptions.errorPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.errorPriorityLevel);\n              if (props.cutoffPriorityLevel) processOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_6__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n              if (props.sortBy) processOptions.sortBy = props.sortBy; // if (props.ignorePriorityNumberList) processOptions.ignorePriorityNumberList = props.ignorePriorityNumberList;\n\n              if (props.showDisabledNoticesFlag) processOptions.showDisabledNoticesFlag = props.showDisabledNoticesFlag.toLowerCase() === 'true';\n              displayType = 'ErrorsWarnings'; // default\n\n              if (props.displayType) displayType = props.displayType;\n\n              if (displayType === 'ErrorsWarnings') {\n                processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_8__[\"processNoticesToErrorsWarnings\"])(rawCBPsResults, processOptions); //       userLog(`BookPackagesCheck got back processedResults with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                // numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenErrors=${processedResults.numHiddenErrors.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n                // debugLog(\"Here now in rendering bit!\");\n\n                if (processedResults.errorList.length || processedResults.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesErrorsWarnings\"], {\n                  results: processedResults\n                })));else // no errors or warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesErrorsWarnings\"], {\n                    results: processedResults\n                  })));\n              } else if (displayType === 'SevereMediumLow') {\n                _processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_8__[\"processNoticesToSevereMediumLow\"])(rawCBPsResults, processOptions); //                 userLog(`BookPackagesCheck got processed results with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenErrors=${processedResults.numHiddenErrors.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults.severeList.length || _processedResults.mediumList.length || _processedResults.lowList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesSevereMediumLow\"], {\n                  results: _processedResults\n                })));else // no severe, medium, or low notices\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesSevereMediumLow\"], {\n                    results: _processedResults\n                  })));\n              } else if (displayType === 'SingleList') {\n                _processedResults2 = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_8__[\"processNoticesToSingleList\"])(rawCBPsResults, processOptions); //       userLog(`BookPackagesCheck got processed results with ${processedResults.successList.length.toLocaleString()} success message(s) and ${processedResults.warningList.length.toLocaleString()} notice(s)\n                // numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults2.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", null, renderSummary(_processedResults2), _processedResults2.numIgnoredNotices ? \" (but \".concat(_processedResults2.numIgnoredNotices.toLocaleString(), \" ignored errors/warnings)\") : \"\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesNoticesGradient\"], {\n                  results: _processedResults2\n                })));else // no warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_9__[\"RenderSuccessesNoticesGradient\"], {\n                    results: _processedResults2\n                  })));\n              } else setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"b\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"Invalid displayType='\", displayType, \"'\")); // debugLog(\"Finished rendering bit.\");\n\n\n            case 43:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))(); // end of async part in unnamedFunction\n    // Doesn’t work if we add this to next line: bookIDList,bookIDs,username,branch,checkingOptions,languageCode,props\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [JSON.stringify(bookIDList), bookIDs, branch, JSON.stringify(checkingOptions), languageCode, JSON.stringify(props), username]); // end of useEffect part\n\n  if (bookIDInvalid) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"p\", null, \"Please enter only valid USFM book identifiers separated by commas. ('\", bookIDInvalid, \"' is not valid.)\");\n  } // {/* <div className={classes.root}> */}\n\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(\"div\", {\n    className: \"Fred\"\n  }, result);\n} // BookPackagesCheck.propTypes = {\n//   /** @ignore */\n//   username: PropTypes.object.isRequired,\n//   /** @ignore */\n//   languageCode: PropTypes.object.isRequired,\n//   bookIDs: PropTypes.object.isRequired,\n//   props: PropTypes.object,\n// };\n// const styles = theme => ({\n//   root: {\n//   },\n// });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BookPackagesCheck);\n\n//# sourceURL=webpack:///./src/demos/book-packages-check/BookPackagesCheck.js?");

/***/ }),

/***/ "./src/demos/book-packages-check/checkBookPackages.js":
/*!************************************************************!*\
  !*** ./src/demos/book-packages-check/checkBookPackages.js ***!
  \************************************************************/
/*! exports provided: checkBookPackages */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkBookPackages\", function() { return checkBookPackages; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _core_books_books__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _book_package_check_checkBookPackage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../book-package-check/checkBookPackage */ \"./src/demos/book-package-check/checkBookPackage.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const BPs_VALIDATOR_VERSION_STRING = '0.2.6';\n\n/**\n *\n * @param {string} username -- Door43 username/orgname\n * @param {string} languageCode\n * @param {*} bookIDList\n * @param {Function} setResultValue\n * @param {Object} checkingOptions\n */\n\nfunction checkBookPackages(_x, _x2, _x3, _x4, _x5) {\n  return _checkBookPackages.apply(this, arguments);\n}\n\nfunction _checkBookPackages() {\n  _checkBookPackages = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, bookIDList, setResultValue, checkingOptions) {\n    var abortFlag, startTime, checkBookPackagesResult, addNotice, checkedFileCount, checkedFilenames, checkedFilenameExtensions, totalCheckedSize, checkedRepoNames, checkedBibleBPManifestFlag, _iterator, _step, bookID, bookNumberAndName, checkManifestFlag, checkReadmeFlag, checkLicenseFlag, cbpResultObject, index;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            addNotice = function _addNotice(noticeObject) {\n              // bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_6__[\"userLog\"])(\"cBPs addNotice: (priority=\".concat(noticeObject.priority, \") \").concat(noticeObject.extra, \" \").concat(noticeObject.message).concat(noticeObject.characterIndex > 0 ? \" (at character \".concat(noticeObject.characterIndex, \")\") : \"\").concat(noticeObject.excerpt ? \" \".concat(noticeObject.excerpt) : \"\").concat(noticeObject.location)); //parameterAssert(noticeObject.priority !== undefined, \"cBPs addNotice: 'priority' parameter should be defined\");\n              //parameterAssert(typeof noticeObject.priority === 'number', `cBPs addNotice: 'priority' parameter should be a number not a '${typeof noticeObject.priority}'`);\n              //parameterAssert(noticeObject.message !== undefined, \"cBPs addNotice: 'message' parameter should be defined\");\n              //parameterAssert(typeof noticeObject.message === 'string', `cBPs addNotice: 'message' parameter should be a string not a '${typeof noticeObject.message}'`);\n              // parameterAssert(bookID !== undefined, \"cBPs addNotice: 'bookID' parameter should be defined\");\n\n              if (noticeObject.bookID) {//parameterAssert(typeof noticeObject.bookID === 'string', `cBPs addNotice: 'bookID' parameter should be a string not a '${typeof noticeObject.bookID}'`);\n                //parameterAssert(noticeObject.bookID.length === 3, `cBPs addNotice: 'bookID' parameter should be three characters long not ${noticeObject.bookID.length}`);\n                //parameterAssert(books.isValidBookID(noticeObject.bookID), `cBPs addNotice: '${noticeObject.bookID}' is not a valid USFM book identifier`);\n              } // parameterAssert(C !== undefined, \"cBPs addNotice: 'C' parameter should be defined\");\n\n\n              if (noticeObject.C) {\n                Object(_core_utilities__WEBPACK_IMPORTED_MODULE_6__[\"parameterAssert\"])(typeof noticeObject.C === 'string', \"cBPs addNotice: 'C' parameter should be a string not a '\".concat(typeof noticeObject.C, \"'\"));\n              } // parameterAssert(V !== undefined, \"cBPs addNotice: 'V' parameter should be defined\");\n\n\n              if (noticeObject.V) {\n                Object(_core_utilities__WEBPACK_IMPORTED_MODULE_6__[\"parameterAssert\"])(typeof noticeObject.V === 'string', \"cBPs addNotice: 'V' parameter should be a string not a '\".concat(typeof noticeObject.V, \"'\"));\n              } // parameterAssert(characterIndex !== undefined, \"cBPs addNotice: 'characterIndex' parameter should be defined\");\n\n\n              if (noticeObject.characterIndex) {\n                Object(_core_utilities__WEBPACK_IMPORTED_MODULE_6__[\"parameterAssert\"])(typeof noticeObject.characterIndex === 'number', \"cBPs addNotice: 'characterIndex' parameter should be a number not a '\".concat(typeof noticeObject.characterIndex, \"'\"));\n              } // parameterAssert(excerpt !== undefined, \"cBPs addNotice: 'excerpt' parameter should be defined\");\n\n\n              if (noticeObject.excerpt) {\n                Object(_core_utilities__WEBPACK_IMPORTED_MODULE_6__[\"parameterAssert\"])(typeof noticeObject.excerpt === 'string', \"cBPs addNotice: 'excerpt' parameter should be a string not a '\".concat(typeof noticeObject.excerpt, \"'\"));\n              } //parameterAssert(noticeObject.location !== undefined, \"cBPs addNotice: 'location' parameter should be defined\");\n              //parameterAssert(typeof noticeObject.location === 'string', `cBPs addNotice: 'location' parameter should be a string not a '${typeof noticeObject.location}'`);\n              //parameterAssert(noticeObject.extra !== undefined, \"cBPs addNotice: 'extra' parameter should be defined\");\n              //parameterAssert(typeof noticeObject.extra === 'string', `cBPs addNotice: 'extra' parameter should be a string not a '${typeof extra}'`);\n\n\n              checkBookPackagesResult.noticeList.push(noticeObject);\n            };\n\n            // NOTE: dataSet is simply passed through here to checkBookPackage in checkingOptions\n            //\n            // userLog(`I'm here in checkBookPackages v${VALIDATOR_VERSION_STRING}\n            //   with ${username}, ${languageCode}, ${bookIDList}, ${JSON.stringify(checkingOptions)}`);\n            abortFlag = false;\n            startTime = new Date();\n            checkBookPackagesResult = {\n              successList: [],\n              noticeList: []\n            }; // function addSuccessMessage(successString) {\n            //     // functionLog(`checkBookPackages success: ${successString}`);\n            //     checkBookPackagesResult.successList.push(successString);\n            // }\n\n            // Main code for checkBookPackages()\n            checkedFileCount = 0, checkedFilenames = [], checkedFilenameExtensions = new Set(), totalCheckedSize = 0, checkedRepoNames = new Set();\n            checkedBibleBPManifestFlag = false;\n            _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(bookIDList);\n            _context.prev = 7;\n\n            _iterator.s();\n\n          case 9:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 40;\n              break;\n            }\n\n            bookID = _step.value;\n\n            if (!abortFlag) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"break\", 40);\n\n          case 13:\n            if (!(bookID !== 'OBS')) {\n              _context.next = 23;\n              break;\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            bookNumberAndName = void 0;\n            _context.prev = 15;\n            bookNumberAndName = _core_books_books__WEBPACK_IMPORTED_MODULE_4__[\"usfmNumberName\"](bookID);\n            _context.next = 23;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](15);\n            addNotice({\n              priority: 900,\n              message: \"Bad parameter: should be given a valid book abbreviation\",\n              excerpt: bookIDList,\n              location: \" (not '\".concat(bookIDList, \"')\")\n            });\n            return _context.abrupt(\"return\", checkBookPackagesResult);\n\n          case 23:\n            // We only want to check the manifest files for ONE Bible BP AND for OBS\n            checkManifestFlag = false, checkReadmeFlag = false, checkLicenseFlag = false;\n\n            if (bookID === 'OBS') {\n              checkManifestFlag = true;\n              checkReadmeFlag = true;\n              checkLicenseFlag = true;\n            } else // it’s a Bible book\n              if (!checkedBibleBPManifestFlag) {\n                checkManifestFlag = true;\n                checkReadmeFlag = true;\n                checkLicenseFlag = true;\n                checkedBibleBPManifestFlag = true; // so we only do it once for Bible books\n              }\n\n            checkingOptions.checkManifestFlag = checkManifestFlag;\n            checkingOptions.checkReadmeFlag = checkReadmeFlag;\n            checkingOptions.checkLicenseFlag = checkLicenseFlag; // We use the generalLocation here (does not include repo name)\n            //  so that we can adjust the returned strings ourselves\n\n            _context.next = 30;\n            return Object(_book_package_check_checkBookPackage__WEBPACK_IMPORTED_MODULE_5__[\"checkBookPackage\"])(username, languageCode, bookID, setResultValue, checkingOptions);\n\n          case 30:\n            cbpResultObject = _context.sent;\n            // functionLog(`checkBookPackage() returned ${cbpResultObject.successList.length} success message(s) and ${cbpResultObject.noticeList.length} notice(s)`);\n            // Concat is faster if we don’t need to process each success message individually\n            checkBookPackagesResult.successList = checkBookPackagesResult.successList.concat(cbpResultObject.successList); // Process noticeList line by line,  appending the repoCode/bookID as an extra field as we go\n            // for (const successEntry of cbpResultObject.successList) {\n            //     // debugLog(\"  ourCheckBookPackage:\", successEntry);\n            //     addSuccessMessage(successEntry);\n            // }\n            // Concat is faster if we don’t need to process each notice individually\n\n            checkBookPackagesResult.noticeList = checkBookPackagesResult.noticeList.concat(cbpResultObject.noticeList); // for (const noticeEntry of cbpResultObject.noticeList)\n            //     // noticeEntry is an array of eight fields: 1=priority, 2=bookID, 3=C, 4=V, 5=msg, 6=characterIndex, 7=excerpt, 8=location\n            //     // The extra value from checkBookPackage is the repo name\n            //     addNotice({noticeEntry.priority, noticeEntry[1], noticeEntry[2], noticeEntry[3], noticeEntry[4], noticeEntry[5], noticeEntry[6], noticeEntry[7], noticeEntry[5]);\n\n            checkedFileCount += cbpResultObject.checkedFileCount;\n            checkedFilenames = [].concat(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedFilenames), Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(cbpResultObject.checkedFilenames));\n            checkedFilenameExtensions = new Set([].concat(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedFilenameExtensions), Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(cbpResultObject.checkedFilenameExtensions)));\n            totalCheckedSize += cbpResultObject.checkedFilesizes;\n            checkedRepoNames = new Set([].concat(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedRepoNames), Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(cbpResultObject.checkedRepoNames))); // addSuccessMessage(`${checkedFileCount.toLocaleString()}/ Checked ${bookID} book package`);\n\n          case 38:\n            _context.next = 9;\n            break;\n\n          case 40:\n            _context.next = 45;\n            break;\n\n          case 42:\n            _context.prev = 42;\n            _context.t1 = _context[\"catch\"](7);\n\n            _iterator.e(_context.t1);\n\n          case 45:\n            _context.prev = 45;\n\n            _iterator.f();\n\n            return _context.finish(45);\n\n          case 48:\n            // Add some extra fields to our checkFileResult object\n            //  in case we need this information again later\n            checkBookPackagesResult.checkedFileCount = checkedFileCount;\n            checkBookPackagesResult.checkedFilenames = checkedFilenames;\n            checkBookPackagesResult.checkedFilenameExtensions = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedFilenameExtensions); // convert Set to Array\n\n            checkBookPackagesResult.checkedFilesizes = totalCheckedSize;\n            checkedRepoNames = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedRepoNames); // Convert set to Array\n\n            index = checkedRepoNames.indexOf(\"\".concat(username, \"/\").concat(languageCode, \"_obs\"));\n            if (index !== -1) checkedRepoNames[index] = 'OBS'; // Looks tidier here\n\n            checkBookPackagesResult.checkedRepoNames = checkedRepoNames; // checkBookPackagesResult.checkedOptions = checkingOptions; // This is done at the caller level\n            // debugLog(\"checkBookPackages() is returning\", checkBookPackagesResult.successList.length.toLocaleString(), \"success message(s) and\", checkBookPackagesResult.noticeList.length.toLocaleString(), \"notice(s)\");\n\n            checkBookPackagesResult.elapsedSeconds = (new Date() - startTime) / 1000; // seconds\n\n            return _context.abrupt(\"return\", checkBookPackagesResult);\n\n          case 58:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[7, 42, 45, 48], [15, 19]]);\n  }));\n  return _checkBookPackages.apply(this, arguments);\n}\n\n; // end of checkBookPackages()\n\n//# sourceURL=webpack:///./src/demos/book-packages-check/checkBookPackages.js?");

/***/ }),

/***/ "./src/demos/clear-cache/ClearCache.js":
/*!*********************************************!*\
  !*** ./src/demos/clear-cache/ClearCache.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @material-ui/core/styles */ \"./node_modules/@material-ui/core/esm/styles/index.js\");\n/* harmony import */ var _core_getApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/getApi */ \"./src/core/getApi.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\nfunction ClearCache({\n  areYouSure\n}) {\n  Object(_core_utilities__WEBPACK_IMPORTED_MODULE_3__[\"userLog\"])(\"ClearCache(\".concat(areYouSure, \")\"));\n  let ccResult;\n\n  if (areYouSure === 'Y') {\n    Object(_core_getApi__WEBPACK_IMPORTED_MODULE_2__[\"clearCaches\"])();\n    ccResult = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"b\", {\n      style: {\n        color: 'orange'\n      }\n    }, \"Cleared stored caches!\");\n  } else ccResult = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"span\", {\n    style: {\n      color: 'gray'\n    }\n  }, \"Inactive\"); // {/* <div className={classes.root}> */}\n\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"Fred\"\n  }, ccResult);\n} // BookPackagesCheck.propTypes = {\n//   /** @ignore */\n//   username: PropTypes.object.isRequired,\n//   /** @ignore */\n//   languageCode: PropTypes.object.isRequired,\n//   bookIDs: PropTypes.object.isRequired,\n//   props: PropTypes.object,\n// };\n\n\nconst styles = theme => ({\n  root: {}\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__[\"withStyles\"])(styles)(ClearCache));\n\n//# sourceURL=webpack:///./src/demos/clear-cache/ClearCache.js?");

/***/ }),

/***/ "./src/demos/file-check/FileCheck.js":
/*!*******************************************!*\
  !*** ./src/demos/file-check/FileCheck.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @material-ui/core/styles */ \"./node_modules/@material-ui/core/esm/styles/index.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core */ \"./src/core/index.js\");\n/* harmony import */ var _notice_processing_functions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../notice-processing-functions */ \"./src/demos/notice-processing-functions.js\");\n/* harmony import */ var _RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\");\n/* harmony import */ var _checkFileContents__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./checkFileContents */ \"./src/demos/file-check/checkFileContents.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const FILE_CHECK_VERSION_STRING = '0.4.3';\n\nfunction FileCheck(props) {\n  // debugLog(`I'm here in FileCheck v${FILE_CHECK_VERSION_STRING}`);\n  // consoleLogObject(\"props\", props);\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(\"Waiting-FileCheck\"),\n      _useState2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_useState, 2),\n      result = _useState2[0],\n      setResultValue = _useState2[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    // debugLog(\"FileCheck.useEffect() called with \", JSON.stringify(props));\n    // Use an IIFE (Immediately Invoked Function Expression)\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\n    Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n      var fileContent, rawCFResults, addFields, languageCode, repoCodeGuess, repoPreloadList, successFlag, processOptions, displayType, renderSummary, processedResults, _processedResults, _processedResults2;\n\n      return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              renderSummary = function _renderSummary(processedResults) {\n                var cutoffString = ''; // NOTE: Couldn’t figure out why ?. was not allowed in the statement below\n\n                if (rawCFResults && rawCFResults.checkedOptions && rawCFResults.checkedOptions.cutoffPriorityLevel) cutoffString = \" Priority level \".concat(rawCFResults.checkedOptions.cutoffPriorityLevel, \" or lower were not included.\");\n                return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", null, \"Checked \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, filename), \" (from \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"i\", null, username), \" \", repoName, \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"i\", null, branchOrRelease === undefined ? 'DEFAULT' : branchOrRelease), \" branch)\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", null, \"\\xA0\\xA0\\xA0\\xA0Finished in \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderElapsedTime\"], {\n                  elapsedSeconds: processedResults.elapsedSeconds\n                }), \" with \", rawCFResults.noticeList.length === 0 ? 'no' : rawCFResults.noticeList.length.toLocaleString(), \" notice\", rawCFResults.noticeList.length === 1 ? '' : 's', processedResults.numIgnoredNotices || processedResults.numDisabledNotices ? ' (but ' : '', processedResults.numIgnoredNotices ? \"\".concat(processedResults.numIgnoredNotices.toLocaleString(), \" ignored notice(s)\") : \"\", processedResults.numIgnoredNotices && processedResults.numDisabledNotices ? ' and ' : '', processedResults.numDisabledNotices ? \"\".concat(processedResults.numDisabledNotices.toLocaleString(), \" expected/disabled notice\").concat(processedResults.numDisabledNotices === 1 ? '' : 's') : \"\", processedResults.numIgnoredNotices || processedResults.numDisabledNotices ? ')' : '', \".\", cutoffString));\n              };\n\n              if (!(!props.wait || props.wait !== 'N')) {\n                _context.next = 4;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"span\", {\n                style: {\n                  color: 'blue'\n                }\n              }, \"Waiting for user\\u2026\"), \" (Adjust settings below as necessary and then set \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"wait='N'\"), \" to start)\"));\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (username) {\n                _context.next = 7;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"No \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"username\"), \" set!\"));\n              return _context.abrupt(\"return\");\n\n            case 7:\n              if (repoName) {\n                _context.next = 10;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"No \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"repoName\"), \" set!\"));\n              return _context.abrupt(\"return\");\n\n            case 10:\n              if (filename) {\n                _context.next = 13;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"No \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"filename\"), \" set!\"));\n              return _context.abrupt(\"return\");\n\n            case 13:\n              if (!(props.reloadAllFilesFirst && props.reloadAllFilesFirst.slice(0).toUpperCase() === 'Y')) {\n                _context.next = 20;\n                break;\n              }\n\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_9__[\"userLog\"])(\"Clearing cache before running file check…\");\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'orange'\n                }\n              }, \"Clearing cache before running file check\\u2026\"));\n              _context.next = 18;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"clearCaches\"])();\n\n            case 18:\n              _context.next = 22;\n              break;\n\n            case 20:\n              _context.next = 22;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"clearCheckedArticleCache\"])();\n\n            case 22:\n              // otherwise we wouldn’t see any of the warnings again from checking these\n              // Display our \"waiting\" message\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Fetching \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"i\", null, username), \" \", repoName, \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, filename), \"\\u2026\")); // Fetch the file that we need to check (but it might already be in the cache)\n              // debugLog(`FileCheck about to call cachedGetFile(${username}, ${repoName}, ${filename}, ${branch})…`);\n\n              _context.next = 25;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"cachedGetFile\"])({\n                username: username,\n                repository: repoName,\n                path: filename,\n                branch: branchOrRelease\n              });\n\n            case 25:\n              fileContent = _context.sent;\n\n              if (fileContent) {\n                _context.next = 31;\n                break;\n              }\n\n              // could it be a release, not a branch???\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_9__[\"userLog\"])(\"Unable to fetch \".concat(filename, \" from branch \").concat(branchOrRelease, \", so trying a release instead\\u2026\"));\n              _context.next = 30;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"cachedFetchFileFromServerWithTag\"])({\n                username: username,\n                repository: repoName,\n                path: filename,\n                tag: branchOrRelease\n              });\n\n            case 30:\n              fileContent = _context.sent;\n\n            case 31:\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Checking \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"i\", null, username), \" \", repoName, \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, filename), \"\\u2026\"));\n              rawCFResults = {\n                noticeList: [{\n                  priority: 990,\n                  message: \"Unable to load file\",\n                  username: username,\n                  repoName: repoName,\n                  filename: filename,\n                  location: givenLocation\n                }],\n                elapsedSeconds: 0\n              };\n\n              if (!fileContent) {\n                _context.next = 50;\n                break;\n              }\n\n              // debugLog(`rawCFResults=${JSON.stringify(rawCFResults)}`);\n              // Because we know here that we're only checking one file, we don’t need the filename field in the notices\n              // WRONG: We want the filename so that the lineNumber can be made into a live link\n              addFields = function addFields(notice) {\n                notice.username = username;\n                notice.repoName = repoName;\n                notice.repoCode = repoCodeGuess;\n                if (!notice.extra) notice.extra = repoCodeGuess;\n                return notice;\n              };\n\n              languageCode = repoName.split('_')[0];\n              repoCodeGuess = '';\n              if (repoName === 'hbo_uhb') repoCodeGuess = 'UHB';else if (repoName === 'el-x-koine_ugnt') repoCodeGuess = 'UGNT';else if (repoName.endsWith('lt')) repoCodeGuess = 'LT';else if (repoName.endsWith('st')) repoCodeGuess = 'ST';else if (repoName.endsWith('_ta')) repoCodeGuess = 'TA';else if (repoName.endsWith('_tw')) repoCodeGuess = 'TW';else if (repoName.endsWith('_twl')) repoCodeGuess = 'TWL';else if (repoName.endsWith('_tn')) repoCodeGuess = 'TN';else if (repoName.endsWith('_tq')) repoCodeGuess = username === 'Door43-Catalog' ? 'TQ1' : 'TQ';else if (repoName.endsWith('_sn')) repoCodeGuess = 'SN';else if (repoName.endsWith('_sq')) repoCodeGuess = 'SQ';else if (repoName.endsWith('_obs-twl')) repoCodeGuess = 'OBS-TWL';else if (repoName.endsWith('_obs-tn')) repoCodeGuess = 'OBS-TN';else if (repoName.endsWith('_obs-tq')) repoCodeGuess = username === 'Door43-Catalog' ? 'OBS-TQ1' : 'OBS-TQ';else if (repoName.endsWith('_obs-sn')) repoCodeGuess = 'OBS-SN';else if (repoName.endsWith('_obs-sq')) repoCodeGuess = 'OBS-SQ'; // Even though we're only checking one file,\n              //  sometimes it pays to preload another repo if the file has many links to that repo\n\n              repoPreloadList = []; // The repo being checked doesn't need to be added here as done separately below\n\n              if (!checkingOptions.disableAllLinkFetchingFlag) {\n                if (repoCodeGuess === 'TN') {\n                  repoPreloadList.push(checkingOptions.disableLinkedTWArticlesCheckFlag ? 'TWtree' : 'TW');\n                  repoPreloadList.push(checkingOptions.disableLinkedTAArticlesCheckFlag ? 'TAtree' : 'TA');\n                } // TODO: There's sure to be others we need to put in here\n\n              }\n\n              if (!repoPreloadList.length) {\n                _context.next = 46;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Preloading \", repoPreloadList.length, \" repo\", repoPreloadList.length === 1 ? '' : 's', \" for \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"i\", null, username), \" \", languageCode, \" ready for \", repoName, \" repo check\\u2026\"));\n              _context.next = 44;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"preloadReposIfNecessary\"])(username, languageCode, [], 'master', repoPreloadList);\n\n            case 44:\n              successFlag = _context.sent;\n              if (!successFlag) console.error(\"RepoCheck error: Failed to pre-load all repos\"); // else debugLog(`RepoCheck preloaded repos ${repoCode} and ${repoPreloadList}`)\n\n            case 46:\n              _context.next = 48;\n              return Object(_checkFileContents__WEBPACK_IMPORTED_MODULE_8__[\"checkFileContents\"])(username, languageCode, repoCodeGuess, branchOrRelease, filename, fileContent, givenLocation, checkingOptions);\n\n            case 48:\n              rawCFResults = _context.sent;\n              rawCFResults.noticeList = rawCFResults.noticeList.map(addFields);\n\n            case 50:\n              // debugLog(`FileCheck got initial results with ${rawCFResults.successList.length} success message(s) and ${rawCFResults.noticeList.length} notice(s)`);\n              // // Since we know the repoName here, add it to our notices\n              // for (const thisNotice of rawCFResults.noticeList)\n              //   thisNotice.repoName = repoName; // Add in this info that we know\n              // Add some extra fields to our rawCFResults object in case we need this information again later\n              rawCFResults.checkType = 'File';\n              rawCFResults.username = username;\n              rawCFResults.repoName = repoName;\n              rawCFResults.branch = props.branch;\n              rawCFResults.filename = filename;\n              rawCFResults.checkingOptions = checkingOptions; // Now do our final handling of the result\n\n              processOptions = {// Uncomment any of these to test them\n                // 'maximumSimilarMessages': 4, // default is 3  -- 0 means don’t suppress\n                // 'errorPriorityLevel': 800, // default is 700\n                // 'cutoffPriorityLevel': 100, // default is 0\n                // 'sortBy': 'ByRepo', // default is 'ByPriority', also have 'AsFound'\n                // 'ignorePriorityNumberList': [123, 202], // default is []\n              }; // Or this allows the parameters to be specified as a FileCheck property\n\n              if (props.maximumSimilarMessages) processOptions.maximumSimilarMessages = Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"ourParseInt\"])(props.maximumSimilarMessages);\n              if (props.errorPriorityLevel) processOptions.errorPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"ourParseInt\"])(props.errorPriorityLevel);\n              if (props.cutoffPriorityLevel) processOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n              if (props.sortBy) processOptions.sortBy = props.sortBy; // if (props.ignorePriorityNumberList) processOptions.ignorePriorityNumberList = props.ignorePriorityNumberList;\n\n              displayType = 'ErrorsWarnings'; // default\n\n              if (props.displayType) displayType = props.displayType;\n\n              if (displayType === 'ErrorsWarnings') {\n                processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_6__[\"processNoticesToErrorsWarnings\"])(rawCFResults, processOptions); //                 userLog(`${`FileCheck got processed results with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)`}\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenErrors=${processedResults.numHiddenErrors.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (processedResults.errorList.length || processedResults.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesErrorsWarnings\"], {\n                  results: processedResults\n                })));else // no errors or warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesErrorsWarnings\"], {\n                    results: processedResults\n                  })));\n              } else if (displayType === 'SevereMediumLow') {\n                _processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_6__[\"processNoticesToSevereMediumLow\"])(rawCFResults, processOptions); //                 userLog(`FileCheck got processed results with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenErrors=${processedResults.numHiddenErrors.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults.severeList.length || _processedResults.mediumList.length || _processedResults.lowList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesSevereMediumLow\"], {\n                  results: _processedResults\n                })));else // no severe, medium, or low notices\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesSevereMediumLow\"], {\n                    results: _processedResults\n                  })));\n              } else if (displayType === 'SingleList') {\n                _processedResults2 = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_6__[\"processNoticesToSingleList\"])(rawCFResults, processOptions); //       userLog(`FileCheck got processed results with ${processedResults.successList.length.toLocaleString()} success message(s) and ${processedResults.warningList.length.toLocaleString()} notice(s)\n                // numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults2.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesNoticesGradient\"], {\n                  results: _processedResults2\n                })));else // no warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesNoticesGradient\"], {\n                    results: _processedResults2\n                  })));\n              } else setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"Invalid displayType='\", displayType, \"'\"));\n\n            case 64:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))(); // end of async part in unnamedFunction\n    // Doesn’t work if we add this to next line: username,repoName,branch,checkingOptions,filename,givenLocation,props\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []); // end of useEffect part\n\n  var username = props.username; // debugLog(`FileCheck username='${username}'`);\n\n  if (!username) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"ERROR\"), \": The Door43 \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"username\"), \" must be specified\");\n  var repoName = props.repoName; // debugLog(`FileCheck repoName='${repoName}'`);\n\n  if (!repoName) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"ERROR\"), \": The Door43 \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"repository name\"), \" must be specified\");\n  var branchOrRelease = props.branchOrRelease; // debugLog(`FileCheck branchOrRelease='${branchOrRelease}'`);\n\n  if (branchOrRelease === undefined) branchOrRelease = 'master';\n  var filename = props.filename; // debugLog(`filename='${filename}'`);\n\n  if (!filename) return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"ERROR\"), \": The Door43 \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"filename\"), \" must be specified\");\n  var givenLocation = props['location'] ? props['location'] : \"\";\n  if (givenLocation && givenLocation[0] !== ' ') givenLocation = \" \".concat(givenLocation);\n  var checkingOptions = {\n    // Uncomment any of these to test them\n    // excerptLength: 25,\n    suppressNoticeDisablingFlag: true,\n    // Leave this one as true (otherwise demo checks are less efficient)\n    checkType: 'File' // Always leave this one in\n\n  }; // Or this allows the parameters to be specified as a FileCheck property\n\n  if (props.excerptLength) checkingOptions.excerptLength = Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"ourParseInt\"])(props.excerptLength);\n  if (props.cutoffPriorityLevel) checkingOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n  if (props.disableAllLinkFetchingFlag) checkingOptions.disableAllLinkFetchingFlag = props.disableAllLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTAArticlesCheckFlag) checkingOptions.disableLinkedTAArticlesCheckFlag = props.disableLinkedTAArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTWArticlesCheckFlag) checkingOptions.disableLinkedTWArticlesCheckFlag = props.disableLinkedTWArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLexiconLinkFetchingFlag) checkingOptions.disableLexiconLinkFetchingFlag = props.disableLexiconLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedLexiconEntriesCheckFlag) checkingOptions.disableLinkedLexiconEntriesCheckFlag = props.disableLinkedLexiconEntriesCheckFlag.toLowerCase() === 'true'; // {/* <div className={classes.root}> */}\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", {\n    className: \"Fred\"\n  }, result);\n}\n\n; // end of FileCheck()\n\nvar styles = function styles(theme) {\n  return {\n    root: {}\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__[\"withStyles\"])(styles)(FileCheck));\n\n//# sourceURL=webpack:///./src/demos/file-check/FileCheck.js?");

/***/ }),

/***/ "./src/demos/file-check/checkFileContents.js":
/*!***************************************************!*\
  !*** ./src/demos/file-check/checkFileContents.js ***!
  \***************************************************/
/*! exports provided: checkFileContents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkFileContents\", function() { return checkFileContents; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _core_books_books__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core */ \"./src/core/index.js\");\n\n\n\n// eslint-disable-next-line no-unused-vars\n\n // eslint-disable-next-line no-unused-vars\n\n // const CHECK_FILE_CONTENTS_VERSION_STRING = '0.6.0';\n\n/**\n *\n * @param {string} username for Door43.org\n * @param {string} languageCode, e.g., 'en'\n * @param {string} repoCode, e.g., 'LT', 'TN', 'TN2', 'TQ', 'TWL', etc.\n * @param {string} branch, e.g., 'master'\n * @param {string} filepath -- often just a filename\n * @param {string} fileContent\n * @param {string} givenLocation\n * @param {Object} givenCheckingOptions\n */\n\nfunction checkFileContents(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n  return _checkFileContents.apply(this, arguments);\n}\n\nfunction _checkFileContents() {\n  _checkFileContents = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(username, languageCode, repoCode, branch, filepath, fileContent, givenLocation, givenCheckingOptions) {\n    var startTime, ourCFLocation, filebits, filename, filenameLower, repoName, newCheckingOptions, checkFileResultObject, filenameMain, bookID, checkFunction, _filenameMain, _bookID, _filenameMain2, _bookID2, addFilenameField;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            addFilenameField = function _addFilenameField(noticeObjectParameter) {\n              if (noticeObjectParameter.debugChain) noticeObjectParameter.debugChain = \"checkFileContents \".concat(noticeObjectParameter.debugChain);\n              if (noticeObjectParameter.fieldName === filepath) delete noticeObjectParameter.fieldName; // TODO: Might we need to add username, repoName, or branch here ???\n\n              return noticeObjectParameter.extra ? noticeObjectParameter : Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, noticeObjectParameter), {}, {\n                filename: filepath\n              }); // NOTE: might be an indirect check on a TA/TW article or UHAL/UGL entry\n            };\n\n            // Determine the file type from the filename extension\n            //  and return the results of checking that kind of file text\n            // functionLog(`checkFileContents(un='${username}', lC='${languageCode}', rC='${repoCode}', rBr='${branch}', fn='${filepath}', ${fileContent.length} chars, ${givenLocation}, ${JSON.stringify(givenCheckingOptions)})…`);\n            //parameterAssert(username !== undefined, \"checkFileContents: 'username' parameter should be defined\");\n            //parameterAssert(typeof username === 'string', `checkFileContents: 'username' parameter should be a string not a '${typeof username}': ${username}`);\n            //parameterAssert(languageCode !== undefined, \"checkFileContents: 'languageCode' parameter should be defined\");\n            //parameterAssert(typeof languageCode === 'string', `checkFileContents: 'languageCode' parameter should be a string not a '${typeof languageCode}': ${languageCode}`);\n            //parameterAssert(repoCode !== undefined, \"checkFileContents: 'repoCode' parameter should be defined\");\n            //parameterAssert(typeof repoCode === 'string', `checkFileContents: 'repoCode' parameter should be a string not a '${typeof repoCode}': ${repoCode}`);\n            //parameterAssert(REPO_CODES_LIST.includes(repoCode), `checkFileContents: 'repoCode' parameter should not be '${repoCode}'`);\n            //parameterAssert(branch !== undefined, \"checkFileContents: 'branch' parameter should be defined\");\n            //parameterAssert(typeof branch === 'string', `checkFileContents: 'branch' parameter should be a string not a '${typeof branch}': ${branch}`);\n            //parameterAssert(filepath !== undefined, \"checkFileContents: 'filepath' parameter should be defined\");\n            //parameterAssert(typeof filepath === 'string', `checkFileContents: 'filepath' parameter should be a string not a '${typeof filepath}': ${filepath}`);\n            //parameterAssert(fileContent !== undefined, \"checkFileContents: 'fileContent' parameter should be defined\");\n            //parameterAssert(typeof fileContent === 'string', `checkFileContents: 'fileContent' parameter should be a string not a '${typeof fileContent}': ${fileContent.length}`);\n            //parameterAssert(givenLocation !== undefined, \"checkFileContents: 'givenLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkFileContents: 'givenLocation' parameter should be a string not a '${typeof givenLocation}': ${givenLocation}`);\n            //parameterAssert(givenCheckingOptions !== undefined, \"checkFileContents: 'givenCheckingOptions' parameter should be defined\");\n            startTime = new Date();\n            ourCFLocation = givenLocation;\n            if (ourCFLocation[0] !== ' ') ourCFLocation = ' ' + ourCFLocation;\n            filebits = filepath.split('/');\n            filename = filebits[filebits.length - 1]; // debugLog(`checkFileContents from filepath='${filepath}' got (${filebits.length}) ${filebits} and then '${filename}'`);\n\n            filenameLower = filename.toLowerCase();\n            repoName = Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"formRepoName\"])(languageCode, repoCode);\n            newCheckingOptions = givenCheckingOptions ? Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, givenCheckingOptions) : {}; // clone before modify\n\n            if (!newCheckingOptions.originalLanguageRepoUsername) newCheckingOptions.originalLanguageRepoUsername = username;\n            if (!newCheckingOptions.taRepoUsername) newCheckingOptions.taRepoUsername = username;\n            if (!newCheckingOptions.twRepoUsername) newCheckingOptions.twRepoUsername = username;\n            checkFileResultObject = {\n              checkedFileCount: 0\n            };\n\n            if (!filenameLower.endsWith('.tsv')) {\n              _context.next = 30;\n              break;\n            }\n\n            filenameMain = filepath.slice(0, filepath.length - 4); // drop .tsv\n            // functionLog(`checkFileContents have TSV filenameMain=${filenameMain}`);\n\n            bookID = filenameMain.startsWith(\"\".concat(languageCode, \"_\")) || filenameMain.startsWith('en_') ? filenameMain.slice(filenameMain.length - 3) : filenameMain.slice(filenameMain.length - 3, filenameMain.length).toUpperCase(); // functionLog(`checkFileContents have TSV bookID=${bookID}`);\n            //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkFileContents: '${bookID}' is not a valid USFM book identifier`);\n\n            if (!(filepath.startsWith(\"\".concat(languageCode, \"_\")) || filenameMain.startsWith('en_'))) {\n              _context.next = 23;\n              break;\n            }\n\n            Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(repoCode === 'TN', \"These filenames \".concat(filenameMain, \" are only for TN \").concat(repoCode));\n            _context.next = 20;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"internalCheckTN_TSV9Table\"])(username, languageCode, repoCode, bookID, filepath, fileContent, ourCFLocation, newCheckingOptions);\n\n          case 20:\n            checkFileResultObject = _context.sent;\n            _context.next = 28;\n            break;\n\n          case 23:\n            // let adjustedRepoCode = repoCode;\n            // if (adjustedRepoCode.startsWith('OBS-'))\n            //   adjustedRepoCode = adjustedRepoCode.slice(4); // Remove the 'OBS-' from the beginning\n            Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(repoCode !== 'TN' && repoCode !== 'TQ1' && repoCode !== 'OBS-TN' && repoCode !== 'OBS-TQ1' && repoCode !== 'OBS_SN' && repoCode !== 'OBS-SQ', \"This checkFileContents code with \".concat(filenameMain, \" is not for \").concat(repoCode));\n            checkFunction = {\n              'TWL': _core__WEBPACK_IMPORTED_MODULE_4__[\"internalCheckTWL_TSV6Table\"],\n              'OBS-TWL': _core__WEBPACK_IMPORTED_MODULE_4__[\"internalCheckTWL_TSV6Table\"],\n              'TN2': _core__WEBPACK_IMPORTED_MODULE_4__[\"checkNotesTSV7Table\"],\n              'OBS-TN': _core__WEBPACK_IMPORTED_MODULE_4__[\"checkNotesTSV7Table\"],\n              'TQ': _core__WEBPACK_IMPORTED_MODULE_4__[\"checkQuestionsTSV7Table\"],\n              'OBS-TQ': _core__WEBPACK_IMPORTED_MODULE_4__[\"checkQuestionsTSV7Table\"],\n              'SN': _core__WEBPACK_IMPORTED_MODULE_4__[\"checkNotesTSV7Table\"],\n              'OBS-SN': _core__WEBPACK_IMPORTED_MODULE_4__[\"checkNotesTSV7Table\"],\n              'SQ': _core__WEBPACK_IMPORTED_MODULE_4__[\"checkQuestionsTSV7Table\"],\n              'OBS-SQ': _core__WEBPACK_IMPORTED_MODULE_4__[\"checkQuestionsTSV7Table\"]\n            }[repoCode]; // debugLog(`checkFileContents() got ${checkFunction} function for ${repoCode}`);\n\n            _context.next = 27;\n            return checkFunction(username, languageCode, repoCode, bookID, filepath, fileContent, ourCFLocation, newCheckingOptions);\n\n          case 27:\n            checkFileResultObject = _context.sent;\n\n          case 28:\n            _context.next = 83;\n            break;\n\n          case 30:\n            if (!filenameLower.endsWith('.usfm')) {\n              _context.next = 38;\n              break;\n            }\n\n            _filenameMain = filepath.slice(0, filepath.length - 5); // drop .usfm\n            // debugLog(`Have USFM filenameMain=${filenameMain}`);\n\n            _bookID = _filenameMain.slice(_filenameMain.length - 3); // debugLog(`Have USFM bookcode=${bookID}`);\n            //parameterAssert(books.isValidBookID(bookID), `checkFileContents: '${bookID}' is not a valid USFM book identifier`);\n\n            _context.next = 35;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"checkUSFMText\"])(username, languageCode, repoCode, _bookID, filepath, fileContent, ourCFLocation, newCheckingOptions);\n\n          case 35:\n            checkFileResultObject = _context.sent;\n            _context.next = 83;\n            break;\n\n          case 38:\n            if (!filenameLower.endsWith('.sfm')) {\n              _context.next = 48;\n              break;\n            }\n\n            _filenameMain2 = filepath.slice(0, filepath.length - 4); // drop .sfm\n\n            Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"checkFileContents have SFM filenameMain=\".concat(_filenameMain2));\n            _bookID2 = _filenameMain2.slice(2, 5);\n            Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"checkFileContents have SFM bookcode=\".concat(_bookID2)); //parameterAssert(books.isValidBookID(bookID), `checkFileContents: '${bookID}' is not a valid USFM book identifier`);\n\n            _context.next = 45;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"checkUSFMText\"])(username, languageCode, repoCode, _bookID2, filepath, fileContent, ourCFLocation, newCheckingOptions);\n\n          case 45:\n            checkFileResultObject = _context.sent;\n            _context.next = 83;\n            break;\n\n          case 48:\n            if (!filenameLower.endsWith('.md')) {\n              _context.next = 60;\n              break;\n            }\n\n            if (!(repoCode === 'UHAL' && filename[0] === 'H' && filename.length === 8 || repoCode === 'UGL' && filename === '01.md')) {\n              _context.next = 55;\n              break;\n            }\n\n            _context.next = 52;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"checkLexiconFileContents\"])(username, languageCode, repoCode, filepath, fileContent, ourCFLocation, newCheckingOptions);\n\n          case 52:\n            checkFileResultObject = _context.sent;\n            _context.next = 58;\n            break;\n\n          case 55:\n            _context.next = 57;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"checkMarkdownFileContents\"])(username, languageCode, repoCode, filepath, fileContent, ourCFLocation, newCheckingOptions);\n\n          case 57:\n            checkFileResultObject = _context.sent;\n\n          case 58:\n            _context.next = 83;\n            break;\n\n          case 60:\n            if (!filenameLower.endsWith('.txt')) {\n              _context.next = 64;\n              break;\n            }\n\n            checkFileResultObject = Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"checkPlainText\"])(username, languageCode, repoCode, 'text', filepath, fileContent, ourCFLocation, newCheckingOptions);\n            _context.next = 83;\n            break;\n\n          case 64:\n            if (!(filenameLower === 'manifest.yaml')) {\n              _context.next = 70;\n              break;\n            }\n\n            _context.next = 67;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"checkManifestText\"])(username, languageCode, repoCode, repoName, branch, fileContent, ourCFLocation, newCheckingOptions);\n\n          case 67:\n            checkFileResultObject = _context.sent;\n            _context.next = 83;\n            break;\n\n          case 70:\n            if (!filenameLower.endsWith('.yaml')) {\n              _context.next = 74;\n              break;\n            }\n\n            checkFileResultObject = Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"checkYAMLText\"])(username, languageCode, repoCode, filepath, fileContent, ourCFLocation, newCheckingOptions);\n            _context.next = 83;\n            break;\n\n          case 74:\n            if (!filenameLower.startsWith('license')) {\n              _context.next = 81;\n              break;\n            }\n\n            _context.next = 77;\n            return Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"checkMarkdownFileContents\"])(username, languageCode, repoCode, filepath, fileContent, ourCFLocation, newCheckingOptions);\n\n          case 77:\n            checkFileResultObject = _context.sent;\n            checkFileResultObject.noticeList.unshift({\n              priority: 982,\n              message: \"File extension is not recognized, so treated as markdown.\",\n              filename: filepath,\n              location: ourCFLocation\n            });\n            _context.next = 83;\n            break;\n\n          case 81:\n            checkFileResultObject = Object(_core__WEBPACK_IMPORTED_MODULE_4__[\"checkPlainText\"])(username, languageCode, repoCode, 'raw', filepath, fileContent, ourCFLocation, newCheckingOptions);\n            checkFileResultObject.noticeList.unshift({\n              priority: 995,\n              message: \"File extension is not recognized, so treated as plain text.\",\n              filename: filepath,\n              location: ourCFLocation\n            });\n\n          case 83:\n            checkFileResultObject.noticeList = checkFileResultObject.noticeList.map(addFilenameField); // Add some extra fields to our checkFileResult object\n            //  in case we need this information again later\n\n            checkFileResultObject.checkedFileCount += 1;\n            checkFileResultObject.checkedFilename = filepath;\n            checkFileResultObject.checkedFilesize = fileContent.length;\n            checkFileResultObject.checkedOptions = newCheckingOptions;\n            checkFileResultObject.elapsedSeconds = (new Date() - startTime) / 1000; // seconds\n            // debugLog(`checkFileContents() returning ${JSON.stringify(checkFileResult)}`);\n\n            return _context.abrupt(\"return\", checkFileResultObject);\n\n          case 90:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _checkFileContents.apply(this, arguments);\n}\n\n; // end of checkFileContents()\n\n//# sourceURL=webpack:///./src/demos/file-check/checkFileContents.js?");

/***/ }),

/***/ "./src/demos/gl-book-package-check/GlBookPackageCheck.js":
/*!***************************************************************!*\
  !*** ./src/demos/gl-book-package-check/GlBookPackageCheck.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _core_books_books__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core */ \"./src/core/index.js\");\n/* harmony import */ var _notice_processing_functions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../notice-processing-functions */ \"./src/demos/notice-processing-functions.js\");\n/* harmony import */ var _RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\");\n/* harmony import */ var _book_package_check_checkBookPackage__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../book-package-check/checkBookPackage */ \"./src/demos/book-package-check/checkBookPackage.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utilities */ \"./src/core/utilities.js\");\n\n\n\n // import { withStyles } from '@material-ui/core/styles';\n\n\n\n\n\n\n // const GL_BP_VALIDATOR_VERSION_STRING = '0.1.21';\n\nfunction GlBookPackageCheck(\n/*username, languageCode, bookIDs,*/\nprops) {\n  // Check a single Bible book across many repositories\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(\"Waiting-CheckBookPackage\"),\n      _useState2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_useState, 2),\n      result = _useState2[0],\n      setResultValue = _useState2[1]; // debugLog(`I'm here in GlBookPackageCheck v${GL_BP_VALIDATOR_VERSION_STRING}`);\n  // consoleLogObject(\"props\", props);\n  // consoleLogObject(\"props.classes\", props.classes);\n  // TODO: We currently ignore originalLanguagesUsername\n\n\n  var username = props.otherLanguageUsername; // debugLog(`username='${username}'`);\n\n  var languageCode = props.languageCode; // debugLog(`languageCode='${languageCode}'`);\n\n  var bookID = props.bookID; // debugLog(`bookID='${bookID}'`);\n\n  var dataSet = props.dataSet; // debugLog(`dataSet='${dataSet}'`);\n\n  var branch = props.branch; // debugLog(`branch='${branch}'`);\n\n  var checkingOptions = {\n    // Uncomment any of these to test them\n    // excerptLength: 25,\n    checkManifestFlag: true,\n    checkReadmeFlag: true,\n    checkLicenseFlag: true,\n    suppressNoticeDisablingFlag: true,\n    // Leave this one as true (otherwise demo checks are less efficient)\n    checkType: 'GLBookPackage' // Always leave this one in\n\n  }; // Or this allows the parameters to be specified as a GlBookPackageCheck property\n\n  if (props.excerptLength) checkingOptions.excerptLength = Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"ourParseInt\"])(props.excerptLength);\n  if (props.cutoffPriorityLevel) checkingOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n  if (props.disableAllLinkFetchingFlag) checkingOptions.disableAllLinkFetchingFlag = props.disableAllLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTAArticlesCheckFlag) checkingOptions.disableLinkedTAArticlesCheckFlag = props.disableLinkedTAArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTWArticlesCheckFlag) checkingOptions.disableLinkedTWArticlesCheckFlag = props.disableLinkedTWArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLexiconLinkFetchingFlag) checkingOptions.disableLexiconLinkFetchingFlag = props.disableLexiconLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedLexiconEntriesCheckFlag) checkingOptions.disableLinkedLexiconEntriesCheckFlag = props.disableLinkedLexiconEntriesCheckFlag.toLowerCase() === 'true';\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    // debugLog(\"GlBookPackageCheck.useEffect() called with \", JSON.stringify(props));\n    // Use an IIFE (Immediately Invoked Function Expression)\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\n    Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n      var whichTestament, repoPreloadList, origLangRepo, successFlag, rawGlBPsResults, processOptions, displayType, renderSummary, processedResults, _processedResults, _processedResults2;\n\n      return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              renderSummary = function _renderSummary(processedResults) {\n                return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", null, \"Checked \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, username, \" \", languageCode, \" \", bookID), \" (from \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"i\", null, branch === undefined ? 'DEFAULT' : branch), \" branches)\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderCheckedFilesList\"], {\n                  username: username,\n                  results: processedResults\n                }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderTotals\"], {\n                  rawNoticeListLength: rawGlBPsResults.noticeList.length,\n                  results: processedResults\n                }));\n              };\n\n              if (!(!props.wait || props.wait !== 'N')) {\n                _context.next = 4;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"span\", {\n                style: {\n                  color: 'blue'\n                }\n              }, \"Waiting for user\\u2026\"), \" (Adjust settings below as necessary and then set \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"wait='N'\"), \" to start)\"));\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!(bookID !== 'OBS' && !_core_books_books__WEBPACK_IMPORTED_MODULE_4__[\"isValidBookID\"](bookID))) {\n                _context.next = 8;\n                break;\n              }\n\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_9__[\"userLog\"])(\"Invalid '\".concat(bookID, \"' bookID given!\"));\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"Please enter a valid USFM book identifier or 'OBS'. ('\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, bookID), \"' is not valid.)\"));\n              return _context.abrupt(\"return\");\n\n            case 8:\n              if (!(props.reloadAllFilesFirst && props.reloadAllFilesFirst.slice(0).toUpperCase() === 'Y')) {\n                _context.next = 15;\n                break;\n              }\n\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_9__[\"userLog\"])(\"Clearing cache before running GL book packages check…\");\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'orange'\n                }\n              }, \"Clearing cache before running GL book packages check\\u2026\"));\n              _context.next = 13;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"clearCaches\"])();\n\n            case 13:\n              _context.next = 17;\n              break;\n\n            case 15:\n              _context.next = 17;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"clearCheckedArticleCache\"])();\n\n            case 17:\n              // otherwise we wouldn’t see any of the warnings again from checking these\n              // Load whole repo zip files which is maybe faster than loading several individual files\n              //  especially if we are going to also check the manifests, license, and ReadMe files as well as the book file.\n              // Remember that the manifest check actually checks the existence of all the projects, i.e., all files in the repo\n              whichTestament = bookID === 'OBS' ? 'none' : _core_books_books__WEBPACK_IMPORTED_MODULE_4__[\"testament\"](bookID); // returns 'old' or 'new'\n\n              if (bookID === 'OBS') {\n                repoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ']; // for DEFAULT\n\n                if (dataSet === 'OLD') repoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN1', 'OBS-TQ1', 'OBS-SN1', 'OBS-SQ1'];else if (dataSet === 'NEW') repoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];else if (dataSet === 'BOTH') repoPreloadList = ['OBS', 'OBS-TWL', 'OBS-TN', 'OBS-TQ', 'OBS-SN', 'OBS-SQ'];\n              } else {\n                // not OBS\n                repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TQ', 'SN', 'SQ']; // for DEFAULT\n\n                if (dataSet === 'OLD') repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TQ1'];else if (dataSet === 'NEW') repoPreloadList = ['TWL', 'LT', 'ST', 'TN2', 'TQ', 'SN', 'SQ'];else if (dataSet === 'BOTH') repoPreloadList = ['TWL', 'LT', 'ST', 'TN', 'TN2', 'TQ', 'SN', 'SQ'];\n                Object(_core_utilities__WEBPACK_IMPORTED_MODULE_9__[\"logicAssert\"])(whichTestament === 'old' || whichTestament === 'new', \"BookPackageCheck() couldn\\u2019t find testament for '\".concat(bookID, \"'\"));\n                origLangRepo = whichTestament === 'old' ? 'UHB' : 'UGNT';\n                repoPreloadList.unshift(origLangRepo);\n              }\n\n              if (!checkingOptions.disableAllLinkFetchingFlag) {\n                // Both Bible books and OBS refer to TW and TA\n                repoPreloadList.push(checkingOptions.disableLinkedTWArticlesCheckFlag ? 'TWtree' : 'TW');\n                repoPreloadList.push(checkingOptions.disableLinkedTAArticlesCheckFlag ? 'TAtree' : 'TA');\n\n                if (!checkingOptions.disableLexiconLinkFetchingFlag) {\n                  // TODO: What if it's OBS (whichTestament === 'none' ???)\n                  // const lexiconRepo = whichTestament === 'old' ? 'UHAL' : 'UGL';\n                  // repoPreloadList.push(whichTestament === 'old' ? 'UHAL' : 'UGL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n                  repoPreloadList.push(checkingOptions.disableLinkedLexiconEntriesCheckFlag ? 'UHALtree' : 'UHAL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n\n                  repoPreloadList.push(checkingOptions.disableLinkedLexiconEntriesCheckFlag ? 'UGLtree' : 'UGL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n                }\n              } // debugLog(`GlBookPackageCheck got repoPreloadList=${repoPreloadList} for dataSet=${dataSet}`)\n\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Preloading \", repoPreloadList.length, \" repos for \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"i\", null, username), \" \", languageCode, \" ready for GL book package check\\u2026\"));\n              _context.next = 23;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"preloadReposIfNecessary\"])(username, languageCode, [bookID], branch, repoPreloadList);\n\n            case 23:\n              successFlag = _context.sent;\n              if (!successFlag) console.error(\"AllBookPackagesCheck error: Failed to pre-load all repos\"); // Display our \"waiting\" message\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Checking \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"i\", null, username), \" \", languageCode, \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, bookID), \" book packages\\u2026\"));\n              _context.next = 28;\n              return Object(_book_package_check_checkBookPackage__WEBPACK_IMPORTED_MODULE_8__[\"checkBookPackage\"])(username, languageCode, bookID, setResultValue, checkingOptions);\n\n            case 28:\n              rawGlBPsResults = _context.sent;\n              // debugLog(\"checkBookPackage() returned\", typeof rawCBPsResults); //, JSON.stringify(rawCBPsResults));\n              // Add some extra fields to our rawCBPsResults object in case we need this information again later\n              rawGlBPsResults.checkType = 'GLBookPackages';\n              rawGlBPsResults.username = username;\n              rawGlBPsResults.languageCode = languageCode;\n              rawGlBPsResults.checkedOptions = checkingOptions; // debugLog(\"Here with CBPs rawCBPsResults\", typeof rawCBPsResults);\n              // Now do our final handling of the result -- we have some options available\n\n              processOptions = {// Uncomment any of these to test them\n                // 'maximumSimilarMessages': 4, // default is 3 -- 0 means don’t suppress\n                // 'errorPriorityLevel': 800, // default is 700\n                // 'cutoffPriorityLevel': 100, // default is 0\n                // 'sortBy': 'ByRepo', // default is 'ByPriority', also have 'AsFound'\n                // 'ignorePriorityNumberList': [123, 202], // default is []\n              }; // Or this allows the parameters to be specified as a GlBookPackageCheck property\n\n              if (props.maximumSimilarMessages) processOptions.maximumSimilarMessages = Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"ourParseInt\"])(props.maximumSimilarMessages);\n              if (props.errorPriorityLevel) processOptions.errorPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"ourParseInt\"])(props.errorPriorityLevel);\n              if (props.cutoffPriorityLevel) processOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_5__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n              if (props.sortBy) processOptions.sortBy = props.sortBy; // if (props.ignorePriorityNumberList) processOptions.ignorePriorityNumberList = props.ignorePriorityNumberList;\n\n              displayType = 'ErrorsWarnings'; // default\n\n              if (props.displayType) displayType = props.displayType;\n\n              if (displayType === 'ErrorsWarnings') {\n                processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_6__[\"processNoticesToErrorsWarnings\"])(rawGlBPsResults, processOptions); //                 userLog(`GlBookPackageCheck got back processedResults with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenErrors=${processedResults.numHiddenErrors.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n                // debugLog(\"Here now in rendering bit!\");\n\n                if (processedResults.errorList.length || processedResults.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesErrorsWarnings\"], {\n                  results: processedResults\n                })));else // no errors or warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesErrorsWarnings\"], {\n                    results: processedResults\n                  })));\n              } else if (displayType === 'SevereMediumLow') {\n                _processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_6__[\"processNoticesToSevereMediumLow\"])(rawGlBPsResults, processOptions); //                 userLog(`GlBookPackageCheck got processed results with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenErrors=${processedResults.numHiddenErrors.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults.severeList.length || _processedResults.mediumList.length || _processedResults.lowList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesSevereMediumLow\"], {\n                  results: _processedResults\n                })));else // no severe, medium, or low notices\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesSevereMediumLow\"], {\n                    results: _processedResults\n                  })));\n              } else if (displayType === 'SingleList') {\n                _processedResults2 = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_6__[\"processNoticesToSingleList\"])(rawGlBPsResults, processOptions); //                 userLog(`GlBookPackageCheck got processed results with ${processedResults.successList.length.toLocaleString()} success message(s) and ${processedResults.warningList.length.toLocaleString()} notice(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults2.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesNoticesGradient\"], {\n                  results: _processedResults2\n                })));else // no warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_7__[\"RenderSuccessesNoticesGradient\"], {\n                    results: _processedResults2\n                  })));\n              } else setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"Invalid displayType='\", displayType, \"'\")); // debugLog(\"Finished rendering bit.\");\n\n\n            case 41:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))(); // end of async part in unnamedFunction\n    // Doesn’t work if we add this to next line: bookIDList,bookIDs,username,branch,checkingOptions,languageCode,props\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [bookID, branch, JSON.stringify(checkingOptions), languageCode, JSON.stringify(props), username]); // end of useEffect part\n  // {/* <div className={classes.root}> */}\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", {\n    className: \"Fred\"\n  }, result);\n} // GlBookPackageCheck.propTypes = {\n//   /** @ignore */\n//   username: PropTypes.object.isRequired,\n//   /** @ignore */\n//   languageCode: PropTypes.object.isRequired,\n//   bookIDs: PropTypes.object.isRequired,\n//   props: PropTypes.object,\n// };\n// const styles = theme => ({\n//   root: {\n//   },\n// });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GlBookPackageCheck);\n\n//# sourceURL=webpack:///./src/demos/gl-book-package-check/GlBookPackageCheck.js?");

/***/ }),

/***/ "./src/demos/notice-processing-functions.js":
/*!**************************************************!*\
  !*** ./src/demos/notice-processing-functions.js ***!
  \**************************************************/
/*! exports provided: processNoticesToErrorsWarnings, processNoticesToSevereMediumLow, processNoticesToSingleList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"processNoticesToErrorsWarnings\", function() { return processNoticesToErrorsWarnings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"processNoticesToSevereMediumLow\", function() { return processNoticesToSevereMediumLow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"processNoticesToSingleList\", function() { return processNoticesToSingleList; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/utilities */ \"./src/core/utilities.js\");\n/* harmony import */ var _core_disabled_notices__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/disabled-notices */ \"./src/core/disabled-notices.js\");\n\n\n\n\n// eslint-disable-next-line no-unused-vars\n\n // const NOTICE_PROCESSOR_VERSION_STRING = '0.10.4';\n// TODO: Hidden message code probably doesn’t work for the other sort orders\n\nvar DEFAULT_MAXIMUM_HIDDEN_NOTICES = 60; // Don’t want to hide HUNDREDS/THOUSANDS of notices for each notice type\n\nvar DEFAULT_MAXIMUM_HIDDEN_NOTICES_MESSAGE = \"Further hidden notices (beyond \".concat(DEFAULT_MAXIMUM_HIDDEN_NOTICES, \") were suppressed!\");\nvar maximumHiddenNotices = DEFAULT_MAXIMUM_HIDDEN_NOTICES,\n    maximumHiddenNoticesMessage = DEFAULT_MAXIMUM_HIDDEN_NOTICES_MESSAGE; // All of the following can be overriden with optionalProcessingOptions\n\nvar DEFAULT_MAXIMUM_SIMILAR_MESSAGES = 3; // Zero means no suppression of similar messages\n\nvar maximumSimilarMessages = DEFAULT_MAXIMUM_SIMILAR_MESSAGES;\nvar DEFAULT_CUTOFF_PRIORITY_LEVEL = 0; // This level or lower gets excluded from the lists\n\nvar DEFAULT_IGNORE_PRIORITY_NUMBER_LIST = []; // For processNoticesToErrorsWarnings\n\nvar DEFAULT_ERROR_PRIORITY_LEVEL = 700; // This level or higher becomes an error (cf. warnings)\n// For processNoticesToSevereMediumLow\n\nvar DEFAULT_SEVERE_PRIORITY_LEVEL = 800; // This level or higher becomes a severe error\n\nvar DEFAULT_MEDIUM_PRIORITY_LEVEL = 600; // This level or higher becomes a medium error\n// For processNoticesToSingleList\n// (no constants required)\n\n/**\n* @description - Preprocesses the successList and noticeList\n* @param {Object} givenNoticeObject - must contain a noticeList array\n* @param {Object} optionalProcessingOptions - may contain parameters\n* @return {Array} containing three items: remainingNoticeList, allTotals, resultObject\n*/\n\nfunction processNoticesCommon(givenNoticeObject, optionalProcessingOptions) {\n  /*\n      Expects to get an object with:\n          successList: a list of strings describing what has been checked\n          noticeList: a list of components to notices, being:\n              priority: A notice priority number in the range 1-1,000.\n                  Each different type of warning/error has a unique number\n                    (but not each instance of those warnings/errors).\n                  By default, notice priority numbers 700 and over are\n                    considered `errors` and 0-699 are considered `warnings`,\n                    but in truth, that’s rather arbitrary.\n              message: The actual general description text of the notice\n              details: Additional clarifying notice information (if relevant)\n              The next three fields may be ommitted if irrelevant\n               (since BCV is not relevant to all types of files/repos)\n                  bookID: book identifier 3-character UPPERCASE string\n                  C: Chapter number string\n                  V: Verse number string (can also be a bridge, e.g., '22-23')\n              repoName: repository name (if relevant)\n              filename: string (if relevant)\n              rowID: 4-character string (if relevant)\n              lineNumber: A one-based integer indicating the line number in the file\n              fieldName: string (if relevant)\n              characterIndex: A zero-based integer index which indicates the position\n                  of the error on the line or in the text field as appropriate.\n              excerpt: An excerpt of the checked text which indicates the area\n                    containing the problem.\n                  Where helpful, some character substitutions have already been made,\n                    for example, if the notice is about spaces,\n                    it is generally helpful to display spaces as a visible\n                    character in an attempt to best highlight the issue to the user.\n               location: A string indicating the context of the notice,\n                      e.g., `in 'someBook.usfm'.\n              There is also an optional notice component (where multiple files/repos are checked)\n              extra: A string indicating an extra location component, e.g., repoCode or bookID\n                  This will probably need to be added to the message string but is left\n                      until now in order to allow the most display flexibility\n      Available options are:\n          cutoffPriorityLevel (integer; default is DEFAULT_CUTOFF_PRIORITY_LEVEL above)\n          maximumSimilarMessages (integer; default is DEFAULT_MAXIMUM_SIMILAR_MESSAGES above)\n          sortBy ('AsFound' or 'ByPriority' or 'ByRepo', default is 'ByPriority')\n          ignorePriorityNumberList (list of integers, default is empty list, list of notice priority numbers to be ignored)\n      Also, any other parameters are just passed through,\n          although filenameList might be abbreviated, e.g. for 100s of .md files.\n       Returns an array of three fields:\n          remainingNoticeList\n              A list of notice entries, each one containing exactly eight or nine fields (see above)\n                  i.e., notice entries originally containing five or six fields have had blank BCV fields inserted.\n          allTotals\n              A table with a count of notices for that priority/message.\n                  (May be used in further processing for possible removal of lots of similar messages)\n          resultObject\n              A prototype object which will be added to and then returned as the final result of the NEXT notice processing step.\n              Contains the following:\n                  successList -- a list of strings noting what has been checked\n                  numIgnored Notices (int)\n                  numSuppressedNotices (int)\n                  processingOptions (a copy of the optionalProcessingOptions passed to these functions)\n                  Any other fields that were part of the givenNoticeObject passed to these functions. These might include:\n                      checkedFilenames -- list of strings\n                      checkedRepos -- list of strings\n                  depending on the type of check that was made.\n  */\n  //     functionLog(`processNoticesCommon v${NOTICE_PROCESSOR_VERSION_STRING}\n  //    with (${Object.keys(givenNoticeObject).length})\n  //    with options=${JSON.stringify(optionalProcessingOptions)}\n  //    Given ${givenNoticeObject.successList.length.toLocaleString()} success string(s) plus ${givenNoticeObject.noticeList.length.toLocaleString()} notice(s)`);\n  //     //    containing ${JSON.stringify(givenNoticeObject)}\n  var standardisedNoticeList = givenNoticeObject.noticeList; // TODO: Why did we need this???\n\n  maximumHiddenNotices = DEFAULT_MAXIMUM_HIDDEN_NOTICES;\n  maximumHiddenNoticesMessage = DEFAULT_MAXIMUM_HIDDEN_NOTICES_MESSAGE;\n  maximumSimilarMessages = DEFAULT_MAXIMUM_SIMILAR_MESSAGES;\n\n  try {\n    maximumSimilarMessages = optionalProcessingOptions.maximumSimilarMessages;\n  } catch (npfMSMerror) {}\n\n  if (typeof maximumSimilarMessages !== 'number' || isNaN(maximumSimilarMessages)) {\n    maximumSimilarMessages = DEFAULT_MAXIMUM_SIMILAR_MESSAGES; // debugLog(`Using default maximumSimilarMessages=${maximumSimilarMessages}`);\n  } // else userLog(`Using supplied maximumSimilarMessages=${maximumSimilarMessages} cf. default=${DEFAULT_MAXIMUM_SIMILAR_MESSAGES}`);\n  // Check for duplicate notices in the noticeList\n  // This might indicate that a function is being called twice unnecessarily\n  // This entire section may be commented out of production code\n  // It only really makes sense if the debugChain is enabled\n\n\n  if (givenNoticeObject.noticeList && givenNoticeObject.noticeList.length) if (givenNoticeObject.noticeList.length > 8000) {\n    Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"processNoticesCommon with \".concat(givenNoticeObject.noticeList.length.toLocaleString(), \" notices is too many to search for duplicates!\"));\n  } else {\n    var uniqueListContains = function uniqueListContains(item) {\n      // returns -1 or the index of the first match\n      for (var ix = 0; ix < uniqueList.length; ix++) {\n        var thisUniqueNotice = uniqueList[ix];\n        if ( // compare as few essentialfields as possible to find matches\n        thisUniqueNotice.priority === item.priority && thisUniqueNotice.message === item.message && (thisUniqueNotice.details === item.details || thisUniqueNotice.details === undefined || item.details === undefined) && (thisUniqueNotice.repoCode === item.repoCode || thisUniqueNotice.repoCode === undefined || item.repoCode === undefined) && (thisUniqueNotice.filename === item.filename || thisUniqueNotice.filename === undefined || item.filename === undefined) && (thisUniqueNotice.rowID === item.rowID || thisUniqueNotice.rowID === undefined || item.rowID === undefined) && (thisUniqueNotice.lineNumber === item.lineNumber || thisUniqueNotice.lineNumber === undefined || item.lineNumber === undefined) && (thisUniqueNotice.characterIndex === item.characterIndex || thisUniqueNotice.characterIndex === undefined || item.characterIndex === undefined) && (thisUniqueNotice.excerpt === item.excerpt || thisUniqueNotice.excerpt === undefined || item.excerpt === undefined) && (thisUniqueNotice.extra === item.extra || thisUniqueNotice.extra === undefined || item.extra === undefined)) return ix;\n      }\n\n      return -1;\n    };\n\n    Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"processNoticesCommon checking \".concat(givenNoticeObject.noticeList.length.toLocaleString(), \" notices for duplicates\\u2026\"));\n    var uniqueList = [];\n\n    var _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(standardisedNoticeList),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var thisGivenNotice = _step.value;\n        var xx = void 0;\n        if ((xx = uniqueListContains(thisGivenNotice)) === -1) // wasn’t found\n          uniqueList.push(thisGivenNotice);else Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"Duplicate notices:\\n\".concat(JSON.stringify(thisGivenNotice), \"\\nwhen had\\n\").concat(JSON.stringify(uniqueList[xx])));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (uniqueList.length !== givenNoticeObject.noticeList.length) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"Here with \".concat(givenNoticeObject.noticeList.length.toLocaleString(), \" notices and \").concat(uniqueList.length.toLocaleString(), \" unique notices\"));\n  } // Run a check through the noticeList to help discover any programming errors that need fixing\n  // This entire section may be commented out of production code\n\n  if (givenNoticeObject.noticeList && givenNoticeObject.noticeList.length) {\n    // eslint-disable-next-line no-unused-vars\n    var ALL_TSV_FIELDNAMES = ['Book', 'Chapter', 'Verse', 'Reference', 'ID', 'Tags', 'SupportReference', 'OrigWords', 'TWLink', 'OrigQuote', 'Quote', 'Occurrence', 'GLQuote', 'Question', 'Response', 'OccurrenceNote', 'Note'];\n    var numberStore = {},\n        duplicatePriorityList = [];\n\n    var _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(standardisedNoticeList),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _thisGivenNotice = _step2.value;\n        var thisPriority = _thisGivenNotice.priority,\n            thisMsg = _thisGivenNotice.message; //(typeof thisPriority === 'number' && thisPriority > 0 && thisPriority < 10000, `BAD PRIORITY for ${JSON.stringify(thisGivenNotice)}`);\n        //parameterAssert(typeof thisMsg === 'string' && thisMsg.length >= 10, `BAD MESSAGE for ${JSON.stringify(thisGivenNotice)}`);\n        // Check that notice priority numbers are unique (to detect programming errors)\n\n        var oldMsg = numberStore[thisPriority];\n\n        if (oldMsg && oldMsg !== thisMsg && !duplicatePriorityList.includes(thisPriority) // Some of the messages include the troubling character in the message\n        //    so we expect them to differ slightly\n        && !thisMsg.startsWith('Mismatched ') && !thisMsg.startsWith('Unexpected doubled ') && !thisMsg.startsWith('Unexpected space after ') && !thisMsg.startsWith('Unexpected content after \\\\') && !thisMsg.startsWith('USFMGrammar: ') && !thisMsg.startsWith('Bad punctuation nesting: ') && !thisMsg.startsWith('At end of text with unclosed ') && !thisMsg.startsWith('Possible mismatched ') && !thisMsg.endsWith(' character combination') && !thisMsg.endsWith(' character after space') && !thisMsg.endsWith(' character at start of line') && !thisMsg.endsWith(' character at end of line') && !thisMsg.endsWith(' marker at start of line') && !thisMsg.endsWith(' closing character (no matching opener)') && !thisMsg.endsWith(' closing character doesn’t match')) {\n          console.error(\"POSSIBLE PROGRAMMING ERROR: priority \".concat(thisPriority, \" has at least two different messages: '\").concat(oldMsg, \"' and '\").concat(thisMsg, \"'\"));\n          duplicatePriorityList.push(thisPriority); // so that we only give the error once\n        } // Check fields for bad values, and also across fields for unexpected combinations\n\n\n        var thisRepoName = _thisGivenNotice.repoName,\n            thisFilename = _thisGivenNotice.filename,\n            thisLineNumber = _thisGivenNotice.lineNumber,\n            thisC = _thisGivenNotice.C,\n            thisV = _thisGivenNotice.V,\n            thisRowID = _thisGivenNotice.rowID,\n            thisFieldName = _thisGivenNotice.fieldName,\n            thisLocation = _thisGivenNotice.location,\n            thisExtra = _thisGivenNotice.extra;\n\n        if (thisRepoName) {\n          //parameterAssert(thisRepoName.indexOf(' ') < 0 && thisRepoName.indexOf('/') < 0 && thisRepoName.indexOf('\\\\') < 0, `repoName '${thisRepoName}' contains unexpected characters in ${JSON.stringify(thisGivenNotice)}`);\n          if (thisLocation) {\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"parameterAssert\"])(thisLocation.indexOf(thisRepoName) < 0, \"repoName is repeated in location in \".concat(JSON.stringify(_thisGivenNotice)));\n          }\n        }\n\n        if (thisFilename) {\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(thisFilename.indexOf(':') < 0 && thisFilename.indexOf('\\\\') < 0, \"filename '\".concat(thisFilename, \"' contains unexpected characters in \").concat(JSON.stringify(_thisGivenNotice)));\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(ALL_TSV_FIELDNAMES.indexOf(thisFilename) < 0, \"filename '\".concat(thisFilename, \"' contains a TSV fieldName!\")); // NOTE: Some OBS and other messages have to include part of the part in the 'filename' (to prevent ambiguity) so we don’t disallow forward slash\n          // if (!thisRepoName || !(thisRepoName.endsWith('_obs') || thisRepoName.endsWith('_ta') || thisRepoName.endsWith('_tw')))\n          //     //parameterAssert(thisFilename.indexOf('/') < 0, `filename '${thisFilename}' contains unexpected characters in ${JSON.stringify(thisGivenNotice)}`);\n\n          if (thisLocation) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(thisLocation.indexOf(thisFilename) < 0, \"filename is repeated in location in \".concat(JSON.stringify(_thisGivenNotice)));\n        }\n\n        if (thisC) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(thisC === 'front' || !isNaN(thisC * 1), \"C '\".concat(thisC, \"' contains unexpected characters in \").concat(JSON.stringify(_thisGivenNotice)));\n\n        if (thisV) {\n          // NOTE: We don’t allow for a en-dash in verse ranges -- should we?\n          if (thisV.indexOf('-') !== -1) {\n            // it contains a hyphen, i.e., a verse range\n            var vBits = thisV.split('-');\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(vBits.length === 2 && !isNaN(vBits[0] * 1) && !isNaN(vBits[1] * 1), \"V '\".concat(thisV, \"' verse range contains unexpected characters in \").concat(JSON.stringify(_thisGivenNotice)));\n          } else // NOTE: Question mark below is in \"bad verse number\" notices\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(thisV === 'intro' || thisV === '?' || !isNaN(thisV * 1), \"V '\".concat(thisV, \"' contains unexpected characters in \").concat(JSON.stringify(_thisGivenNotice)));\n        }\n\n        if (thisRowID) {\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(thisRowID.indexOf(' ') < 0 && thisRowID.indexOf('/') < 0 && thisRowID.indexOf('\\\\') < 0, \"rowID '\".concat(thisRowID, \"' contains unexpected characters in \").concat(JSON.stringify(_thisGivenNotice)));\n          if (thisLocation) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(thisLocation.indexOf(thisRowID) < 0, \"rowID is repeated in location in \".concat(JSON.stringify(_thisGivenNotice)));\n        }\n\n        if (thisFieldName) {\n          // NOTE: fieldName can be a USFM marker, e.g., 'from \\w'\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(thisFieldName.indexOf('/') < 0, \"fieldName '\".concat(thisFieldName, \"' contains unexpected characters in \").concat(JSON.stringify(_thisGivenNotice)));\n          if (thisLocation) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(thisFieldName === 'w' // 'w' is just too likely to occur in the location string\n          || thisLocation.indexOf(thisFieldName) < 0, \"fieldName is repeated in location in \".concat(JSON.stringify(_thisGivenNotice)));\n        }\n\n        if (thisLineNumber) {\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(typeof thisLineNumber === 'number' && thisLineNumber > 0, \"lineNumber '\".concat(thisLineNumber, \"' contains unexpected value in \").concat(JSON.stringify(_thisGivenNotice))); // Note: lineNumber can occur in location, e.g., in 3 in '3JN' or 'Door43' so have to take additional care not to give false alarms\n\n          if (thisLocation && thisLineNumber > 4 && thisLineNumber !== 43) // && (!thisGivenNotice.bookID || thisGivenNotice.bookID.indexOf(thisLineNumber + '') < 0)\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(thisLocation.indexOf(thisLineNumber + '') < 0 && thisLocation.indexOf(thisLineNumber.toLocaleString()) < 0, \"lineNumber might be repeated in location in \".concat(JSON.stringify(_thisGivenNotice)));\n        }\n\n        if (thisExtra) {\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(thisExtra !== '01', \"extra should not be '\".concat(thisExtra, \"'\"));\n        }\n\n        numberStore[thisPriority] = thisMsg;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  var resultObject = {\n    // inititalise with our new fields\n    numIgnoredNotices: 0,\n    // Ignored by unique priority number\n    numDisabledNotices: 0,\n    // Individually disabled\n    numSuppressedNotices: 0,\n    // Similar notices dropped completely\n    numCutoffNotices: 0,\n    // Low priority notices dropped completely\n    processingOptions: optionalProcessingOptions // Just helpfully includes what we were given (may be undefined)\n\n  }; // Copy across all the other properties that we aren’t interested in\n\n  for (var gnoPropertyName in givenNoticeObject) {\n    if (gnoPropertyName !== 'successList' && gnoPropertyName !== 'noticeList') resultObject[gnoPropertyName] = givenNoticeObject[gnoPropertyName];\n  } // Fetch our processing parameters\n\n\n  var ignorePriorityNumberList;\n\n  try {\n    ignorePriorityNumberList = optionalProcessingOptions.ignorePriorityNumberList;\n  } catch (npfIPNLerror) {}\n\n  if (ignorePriorityNumberList === undefined) {\n    ignorePriorityNumberList = DEFAULT_IGNORE_PRIORITY_NUMBER_LIST; // debugLog(`Using default ignorePriorityNumberList=${JSON.stringify(ignorePriorityNumberList)}`);\n  } else Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"processNoticesCommon using supplied ignorePriorityNumberList=\".concat(JSON.stringify(ignorePriorityNumberList), \" cf. default=\").concat(JSON.stringify(DEFAULT_IGNORE_PRIORITY_NUMBER_LIST))); //parameterAssert(Array.isArray(ignorePriorityNumberList), `ignorePriorityNumberList should be an Array, not ${typeof ignorePriorityNumberList}=${ignorePriorityNumberList}`);\n\n\n  var sortBy;\n\n  try {\n    sortBy = optionalProcessingOptions.sortBy; // debugLog(`processNoticesCommon setting sortBy='${sortBy}' from optionalProcessingOptions`);\n  } catch (npfSBerror) {}\n\n  if (sortBy === undefined) {\n    sortBy = 'ByPriority'; // debugLog(`processNoticesCommon using default sortBy='${sortBy}'`);\n  } // else userLog(`processNoticesCommon using supplied sortBy='${sortBy}' cf. default='ByPriority'`);\n\n\n  var cutoffPriorityLevel;\n\n  try {\n    cutoffPriorityLevel = optionalProcessingOptions.cutoffPriorityLevel;\n  } catch (npfCPLerror) {}\n\n  if (cutoffPriorityLevel === undefined) {\n    cutoffPriorityLevel = DEFAULT_CUTOFF_PRIORITY_LEVEL; // debugLog(`processNoticesCommon using default cutoffPriorityLevel=${cutoffPriorityLevel}`);\n  } // else userLog(`processNoticesCommon using supplied cutoffPriorityLevel=${cutoffPriorityLevel} cf. default=${DEFAULT_CUTOFF_PRIORITY_LEVEL}`);\n  // if (cutoffPriorityLevel > errorPriorityLevel)\n  // resultObject.errorList.push({999, \"Cutoff level must not be higher than error level\", excerpt:`(${cutoffPriorityLevel} vs ${errorPriorityLevel})`, \" in processNoticesCommon options\"]);\n\n\n  var showDisabledNoticesFlag = optionalProcessingOptions.showDisabledNoticesFlag === true;\n  if (showDisabledNoticesFlag) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"processNoticesCommon has showDisabledNoticesFlag=\".concat(showDisabledNoticesFlag)); // Adjust the list of success notices to combine multiple similar messages, e.g., Checked this book, Checked that book\n  //  into one summary message, e.g., Checked this and that books.\n\n  if (givenNoticeObject.successList) {\n      // Handle the successList\n      if (givenNoticeObject.successList.length < 5) resultObject.successList = givenNoticeObject.successList;else {\n        // successList is fairly long -- maybe we can shorten it by combining multiple similar messages\n        var BibleRegex = /\\d\\d-(\\w\\w\\w).usfm/; // \"Checked JUD file: 66-JUD.usfm\"\n\n        var NotesRegex = /\\d\\d-(\\w\\w\\w).tsv/; // \"Checked EN_TN_01-GEN.TSV file: en_tn_01-GEN.tsv\"\n        // const TWLRegex = /twl_(\\w\\w\\w).tsv/; // From repoCheck \"Checked en_twl BBB file: twl_BBB.tsv\"\n\n        var manifestRegex = /Checked ([\\w\\-_]{2,25}) manifest file/;\n        var READMEregex = /Checked ([\\w\\-_]{2,25}) README file/;\n        var LICENSEregex = /Checked ([\\w\\-_]{2,25}) LICENSE file/;\n        resultObject.successList = [];\n        var UHBBookList = [],\n            UGNTBookList = [],\n            LTBookList = [],\n            STBookList = [],\n            TNBookList = [],\n            TN2BookList = [],\n            TQBookList = [];\n        var USFMBookList = [],\n            TSVNotesList = [],\n            manifestsList = [],\n            READMEsList = [],\n            LICENSEsList = [];\n        var TNList = [],\n            TQList = [],\n            TWLList = [];\n\n        var _iterator3 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(givenNoticeObject.successList),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var thisParticularSuccessMsg = _step3.value;\n            // debugLog(\"thisParticularSuccessMsg\", thisParticularSuccessMsg);\n            var regexResult = void 0;\n            if (thisParticularSuccessMsg.startsWith('Checked UHB file: ')) UHBBookList.push(thisParticularSuccessMsg.slice(18, thisParticularSuccessMsg.length));else if (thisParticularSuccessMsg.startsWith('Checked UGNT file: ')) UGNTBookList.push(thisParticularSuccessMsg.slice(19, thisParticularSuccessMsg.length));else if (thisParticularSuccessMsg.startsWith('Checked TWL file: ')) TWLList.push(thisParticularSuccessMsg.slice(18, thisParticularSuccessMsg.length));else if (thisParticularSuccessMsg.startsWith('Checked LT file: ')) LTBookList.push(thisParticularSuccessMsg.slice(17, thisParticularSuccessMsg.length));else if (thisParticularSuccessMsg.startsWith('Checked ST file: ')) STBookList.push(thisParticularSuccessMsg.slice(17, thisParticularSuccessMsg.length));else if (thisParticularSuccessMsg.startsWith('Checked TN file: ')) TNBookList.push(thisParticularSuccessMsg.slice(17, thisParticularSuccessMsg.length));else if (thisParticularSuccessMsg.startsWith('Checked TN2 file: ')) TN2BookList.push(thisParticularSuccessMsg.slice(18, thisParticularSuccessMsg.length));else if (thisParticularSuccessMsg.startsWith('Checked TQ file: ')) TQBookList.push(thisParticularSuccessMsg.slice(17, thisParticularSuccessMsg.length));else if (thisParticularSuccessMsg.startsWith('Checked TN2 ') && thisParticularSuccessMsg.slice(14, 20) === ' file:') TNList.push(thisParticularSuccessMsg.slice(21, thisParticularSuccessMsg.length));else if (thisParticularSuccessMsg.startsWith('Checked TQ ') && thisParticularSuccessMsg.slice(14, 20) === ' file:') TQList.push(thisParticularSuccessMsg.slice(20, thisParticularSuccessMsg.length));else if (thisParticularSuccessMsg.startsWith('Checked TWL ') && thisParticularSuccessMsg.slice(15, 21) === ' file:') TWLList.push(thisParticularSuccessMsg.slice(22, thisParticularSuccessMsg.length));else if ((regexResult = BibleRegex.exec(thisParticularSuccessMsg)) !== null // but don’t do it for Book Package checks (in different repos)\n            && thisParticularSuccessMsg.startsWith(\"Checked \".concat(regexResult[1], \" file\"))) USFMBookList.push(regexResult[1]);else if ((regexResult = NotesRegex.exec(thisParticularSuccessMsg)) !== null // but don’t do it for Book Package checks (in different repos)\n            && thisParticularSuccessMsg.startsWith(\"Checked \".concat(regexResult[1], \" file\"))) TSVNotesList.push(regexResult[1]); // else if ((regexResult = TWLRegex.exec(thisParticularSuccessMsg)) !== null)\n            //     TWLList.push(regexResult[1]);\n            else if ((regexResult = manifestRegex.exec(thisParticularSuccessMsg)) !== null) manifestsList.push(regexResult[1]);else if ((regexResult = READMEregex.exec(thisParticularSuccessMsg)) !== null) READMEsList.push(regexResult[1]);else if ((regexResult = LICENSEregex.exec(thisParticularSuccessMsg)) !== null) LICENSEsList.push(regexResult[1]);else // Just copy it across\n              resultObject.successList.push(thisParticularSuccessMsg);\n          } // Recreate original messages if exactly one found\n\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        if (UHBBookList.length === 1) resultObject.successList.push(\"Checked UHB file: \".concat(UHBBookList[0]));\n        if (UGNTBookList.length === 1) resultObject.successList.push(\"Checked UGNT file: \".concat(UGNTBookList[0])); // if (TWLBookList.length === 1)\n        // resultObject.successList.push(`Checked TWL file: ${TWLBookList[0]}`);\n\n        if (LTBookList.length === 1) resultObject.successList.push(\"Checked LT file: \".concat(LTBookList[0]));\n        if (STBookList.length === 1) resultObject.successList.push(\"Checked ST file: \".concat(STBookList[0]));\n        if (TNBookList.length === 1) resultObject.successList.push(\"Checked TN file: \".concat(TNBookList[0]));\n        if (TN2BookList.length === 1) resultObject.successList.push(\"Checked TN2 file: \".concat(TN2BookList[0]));\n        if (TQBookList.length === 1) resultObject.successList.push(\"Checked TQ file: \".concat(TQBookList[0]));\n        if (USFMBookList.length === 1) resultObject.successList.push(\"Checked \".concat(USFMBookList[0], \" file\"));\n        if (TSVNotesList.length === 1) resultObject.successList.push(\"Checked \".concat(TSVNotesList[0], \" file\"));\n        if (TNList.length === 1) resultObject.successList.push(\"Checked TN2 file: \".concat(TNList[0]));\n        if (TQList.length === 1) resultObject.successList.push(\"Checked TQ file: \".concat(TQList[0]));\n        if (TWLList.length === 1) resultObject.successList.push(\"Checked TWL file: \".concat(TWLList[0]));\n        if (manifestsList.length === 1) resultObject.successList.push(\"Checked \".concat(manifestsList[0], \" manifest file\"));\n        if (READMEsList.length === 1) resultObject.successList.push(\"Checked \".concat(READMEsList[0], \" README file\"));\n        if (LICENSEsList.length === 1) resultObject.successList.push(\"Checked \".concat(LICENSEsList[0], \" LICENSE file\")); // Put summary messages at the beginning of the list if more than one found\n        // Process these messages in the opposite order than we want them to display (since we push to beginning of list each time)\n\n        if (LICENSEsList.length > 1) resultObject.successList.unshift(\"Checked \".concat(LICENSEsList.length, \" LICENSE files: \").concat(LICENSEsList.join(', ')));\n        if (READMEsList.length > 1) resultObject.successList.unshift(\"Checked \".concat(READMEsList.length, \" README files: \").concat(READMEsList.join(', ')));\n        if (manifestsList.length > 1) resultObject.successList.unshift(\"Checked \".concat(manifestsList.length, \" manifest files: \").concat(manifestsList.join(', ')));\n        if (TSVNotesList.length > 1) resultObject.successList.unshift(\"Checked \".concat(TSVNotesList.length, \" TSV notes files: \").concat(TSVNotesList.join(', ')));\n        if (USFMBookList.length > 1) resultObject.successList.unshift(\"Checked \".concat(USFMBookList.length, \" USFM Bible files: \").concat(USFMBookList.join(', ')));\n        if (TWLList.length > 1) resultObject.successList.unshift(\"Checked \".concat(TWLList.length, \" TWL files: \").concat(TWLList.join(', ')));\n        if (TQList.length > 1) resultObject.successList.unshift(\"Checked \".concat(TQList.length, \" TQ files: \").concat(TQList.join(', ')));\n        if (TNList.length > 1) resultObject.successList.unshift(\"Checked \".concat(TNList.length, \" TN files: \").concat(TNList.join(', ')));\n        if (TQBookList.length > 1) resultObject.successList.unshift(\"Checked \".concat(TQBookList.length, \" TQ files: \").concat(TQBookList.join(', ')));\n        if (TN2BookList.length > 1) resultObject.successList.unshift(\"Checked \".concat(TN2BookList.length, \" TN2 files: \").concat(TN2BookList.join(', ')));\n        if (TNBookList.length > 1) resultObject.successList.unshift(\"Checked \".concat(TNBookList.length, \" TN files: \").concat(TNBookList.join(', ')));\n        if (STBookList.length > 1) resultObject.successList.unshift(\"Checked \".concat(STBookList.length, \" ST files: \").concat(STBookList.join(', ')));\n        if (LTBookList.length > 1) resultObject.successList.unshift(\"Checked \".concat(LTBookList.length, \" LT files: \").concat(LTBookList.join(', '))); // if (TWLBookList.length > 1)\n        // resultObject.successList.unshift(`Checked ${TWLBookList.length} TWL files: ${LTBookList.join(', ')}`);\n\n        if (UGNTBookList.length > 1) resultObject.successList.unshift(\"Checked \".concat(UGNTBookList.length, \" UGNT files: \").concat(UGNTBookList.join(', ')));\n        if (UHBBookList.length > 1) resultObject.successList.unshift(\"Checked \".concat(UHBBookList.length, \" UHB files: \").concat(UHBBookList.join(', ')));\n      }\n  } else resultObject.successList = []; // Handle the checkedFilenames list\n  //  which might have 100s or 1,000s of .md filenames\n\n  if (resultObject.checkedFilenames && resultObject.checkedFilenames.length > 10) {\n    // debugLog(`Have ${resultObject.checkedFilenames.length} checkedFilenames`);\n    resultObject.checkedFilenames = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(new Set(resultObject.checkedFilenames)); // Only keep unique ones\n    // debugLog(`Now have ${resultObject.checkedFilenames.length} checkedFilenames`);\n    // debugLog(JSON.stringify(resultObject.checkedFilenames));\n  } // Specialised processing\n  // If have s5 marker warnings, add one summary error\n  // consoleLogObject('standardisedNoticeList', standardisedNoticeList);\n\n\n  var _iterator4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(standardisedNoticeList),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var thisParticularNotice = _step4.value;\n\n      // debugLog(\"thisParticularNotice\", JSON.stringify(thisParticularNotice));\n      if (thisParticularNotice.message.indexOf('\\\\s5') >= 0) {\n        var thisNewNotice = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, thisParticularNotice), {}, {\n          priority: 701,\n          message: \"\\\\s5 fields should be coded as \\\\ts\\\\* milestones\",\n          location: \" in \".concat(givenNoticeObject.checkType),\n          // I think we need to delete these fields below as they were probably set in thisParticularNotice\n          C: undefined,\n          V: undefined,\n          characterIndex: undefined,\n          excerpt: undefined\n        }); // if (thisParticularNotice.filename && thisParticularNotice.filename.length)\n        //     thisNewNotice.filename = thisParticularNotice.filename; // Sometimes we have an additional file identifier\n        // if (thisParticularNotice.repoName && thisParticularNotice.repoName.length)\n        //     thisNewNotice.repoName = thisParticularNotice.repoName; // Sometimes we have an additional file identifier\n        // if (thisParticularNotice.extra && thisParticularNotice.extra.length)\n        //     thisNewNotice.extra = thisParticularNotice.extra; // Sometimes we have an additional file identifier\n\n\n        standardisedNoticeList.push(thisNewNotice);\n        break;\n      }\n    } // Remove any notices that they have asked us to ignore\n    //  plus any from our list of disabled notices (for certain repos/files, etc.)\n\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  var remainingNoticeList = [];\n\n  var _iterator5 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(standardisedNoticeList),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var _thisNotice3 = _step5.value;\n      if (ignorePriorityNumberList.includes(_thisNotice3.priority)) resultObject.numIgnoredNotices++;else if (Object(_core_disabled_notices__WEBPACK_IMPORTED_MODULE_5__[\"isDisabledNotice\"])(_thisNotice3)) {\n        if (showDisabledNoticesFlag) {\n          _thisNotice3.message = \"(disabled) \".concat(_thisNotice3.message);\n          remainingNoticeList.push(_thisNotice3);\n        } else // ignore it as usual\n          resultObject.numDisabledNotices++;\n      } else remainingNoticeList.push(_thisNotice3);\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  if (resultObject.numIgnoredNotices) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"processNoticesCommon ignored \".concat(resultObject.numIgnoredNotices.toLocaleString(), \" generic notice(s) out of \").concat(givenNoticeObject.noticeList.length.toLocaleString()));\n  if (resultObject.numDisabledNotices) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"processNoticesCommon disabled \".concat(resultObject.numDisabledNotices.toLocaleString(), \" specific notice(s) out of \").concat(givenNoticeObject.noticeList.length.toLocaleString())); // Cut off the lowest priority notices if requested\n\n  if (cutoffPriorityLevel > 0) {\n    var newNoticeList = [];\n\n    var _iterator6 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(remainingNoticeList),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var thisNotice = _step6.value;\n        if (thisNotice.priority < cutoffPriorityLevel) resultObject.numCutoffNotices++;else newNoticeList.push(thisNotice);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n\n    remainingNoticeList = newNoticeList;\n  }\n\n  if (resultObject.numCutoffNotices) Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"processNoticesCommon dropped \".concat(resultObject.numCutoffNotices, \" notices below cutoffPriorityLevel of \").concat(cutoffPriorityLevel)); // if (cutoffPriorityLevel > errorPriorityLevel)\n  // resultObject.errorList.push({999, \"Cutoff level must not be higher than error level\", excerpt:`(${cutoffPriorityLevel} vs ${errorPriorityLevel})`, \" in processNoticesCommon options\"]);\n  // Ensure that our displayed message list doesn’t end up too huge for the browser to handle\n\n  if (remainingNoticeList.length > 6000) {\n    maximumHiddenNotices = Math.min(20, maximumHiddenNotices);\n    maximumHiddenNoticesMessage = \"Further hidden notices (beyond \".concat(maximumHiddenNotices, \") were suppressed!\");\n  }\n\n  if (remainingNoticeList.length > 10000) {\n    maximumSimilarMessages = Math.min(2, maximumSimilarMessages);\n    standardisedNoticeList.push({\n      priority: 1,\n      message: \"Reduced numbers of similar and hidden messages because of large list (\".concat(standardisedNoticeList.length.toLocaleString(), \")\"),\n      location: \" during notice processing\"\n    });\n  } // Sort the remainingNoticeList as required\n\n\n  var SORT_LIST = ['TN', 'TN2', 'LT', 'ST', 'UHB', 'UGNT', 'TWL', 'TW', 'TQ', 'TQ1', 'SN', 'SQ', 'TA', undefined, 'README', 'LICENSE'];\n  if (sortBy === 'ByPriority' || sortBy === 'ByRepo') // NOTE: We do have some notices with the same priority but different actual messages, esp. 191 Unexpected xx character after space\n    remainingNoticeList.sort(function (a, b) {\n      return \"\".concat(String(b.priority).padStart(3, '0')).concat(b.message) > \"\".concat(String(a.priority).padStart(3, '0')).concat(a.message);\n    });else if (sortBy !== 'AsFound') console.error(\"Sorting '\".concat(sortBy, \"' is not implemented yet!!!\"));\n  if (sortBy === 'ByRepo') // sort again by repoCode string\n    remainingNoticeList.sort(function (a, b) {\n      return SORT_LIST.indexOf(a.repoCode) - SORT_LIST.indexOf(b.repoCode);\n    }); // remainingNoticeList.sort(function (a, b) { return b.repoCode > a.repoCode; });\n  // Add in extra info if it’s there -- default is to prepend it to the msg\n  //  Doing this prevents errors/warnings from different repos or books from being combined\n\n  if (remainingNoticeList.length && remainingNoticeList[0].extra && remainingNoticeList[0].extra.length) {\n    // debugLog(`We need to add the extra location, e.g. '${remainingNoticeList[0][5]}': will prepend it to the messages`);\n    var _newNoticeList = [];\n\n    var _iterator7 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(remainingNoticeList),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var _thisNotice = _step7.value;\n        var _thisExtra = _thisNotice.extra; // logicAssert(thisExtra && thisExtra.length, `Expect thisNotice to have an \"extra\" field: ${JSON.stringify(thisNotice)}`)\n\n        var newNotice = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, _thisNotice); // We don’t need the extra field if we've already got this info\n\n\n        if (_thisExtra && _thisExtra !== _thisNotice.repoName && _thisExtra !== _thisNotice.bookID) newNotice.message = \"\".concat(_thisExtra, \": \").concat(_thisNotice.message);\n        delete newNotice.extra; // since we've used it (if it existed)\n\n        _newNoticeList.push(newNotice);\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    remainingNoticeList = _newNoticeList;\n  } // Count the number of occurrences of each message\n  //  ready for further processing\n\n\n  var allTotals = {};\n\n  for (var _i = 0, _remainingNoticeList = remainingNoticeList; _i < _remainingNoticeList.length; _i++) {\n    var _thisNotice2 = _remainingNoticeList[_i];\n    var thisCombinedID = \"\".concat(String(_thisNotice2.priority).padStart(3, '0')).concat(_thisNotice2.message); // Could have identical worded messages but with different priorities\n\n    if (isNaN(allTotals[thisCombinedID])) allTotals[thisCombinedID] = 1;else allTotals[thisCombinedID]++;\n  } // debugLog(`processNoticesCommon is returning resultObject=${JSON.stringify(resultObject)}`);\n\n\n  return [remainingNoticeList, allTotals, resultObject];\n} // end of processNoticesCommon function\n\n/**\n *\n * @param {Object} givenNoticeObject\n * @param {Object} optionalProcessingOptions\n * @return {Object} containing errorList and warningList\n */\n\n\nfunction processNoticesToErrorsWarnings(givenNoticeObject, optionalProcessingOptions) {\n  /*\n      Available options are:\n          errorPriorityLevel (integer; default is DEFAULT_ERROR_PRIORITY_LEVEL above)\n          maximumSimilarMessages (integer; default is DEFAULT_MAXIMUM_SIMILAR_MESSAGES above)\n       Returns an object with:\n          successList: a list of strings describing what has been checked\n          errorList\n          warningList\n          numIgnoredNotices, numDisabledNotices, numSuppressedNotices, numHiddenErrors, numHiddenWarnings\n          processingOptions: just helpfully passes on what we were given (may be undefined)\n      Also, any other parameters are just passed through,\n          although filenameList might be abbreviated, e.g. for 100s of .md files.\n  */\n  // functionLog(`processNoticesToErrorsWarnings v${NOTICE_PROCESSOR_VERSION_STRING}\n  //   with ${Object.keys(optionalProcessingOptions).length} resultObject entries\n  //   and options=${JSON.stringify(optionalProcessingOptions)}\n  //    Given ${givenNoticeObject.successList.length.toLocaleString()} success string(s) plus ${givenNoticeObject.noticeList.length.toLocaleString()} notice(s)`);\n  var _processNoticesCommon = processNoticesCommon(givenNoticeObject, optionalProcessingOptions),\n      _processNoticesCommon2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_processNoticesCommon, 3),\n      remainingNoticeList = _processNoticesCommon2[0],\n      allTotals = _processNoticesCommon2[1],\n      resultObject = _processNoticesCommon2[2]; // Add the fields that we need here to the existing resultObject\n\n\n  resultObject.errorList = [];\n  resultObject.warningList = [];\n  resultObject.numHiddenErrors = 0;\n  resultObject.numHiddenWarnings = 0;\n  var errorPriorityLevel;\n\n  try {\n    errorPriorityLevel = optionalProcessingOptions.errorPriorityLevel;\n  } catch (npfEPLerror) {}\n\n  if (errorPriorityLevel === undefined) {\n    errorPriorityLevel = DEFAULT_ERROR_PRIORITY_LEVEL; // debugLog(`Using default errorPriorityLevel=${errorPriorityLevel}`);\n  } else Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"Using supplied errorPriorityLevel=\".concat(errorPriorityLevel, \" cf. default=\").concat(DEFAULT_ERROR_PRIORITY_LEVEL)); // Check for repeated notices that should be compressed\n  //  while simultaneously separating into error and warning lists\n\n\n  var counter = {};\n\n  var _iterator8 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(remainingNoticeList),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var thisNotice = _step8.value;\n      var thisPriority = thisNotice.priority,\n          thisMsg = thisNotice.message;\n      var thisCombinedID = \"\".concat(String(thisNotice.priority).padStart(3, '0')).concat(thisNotice.message); // Could have identical worded messages but with different priorities\n\n      if (isNaN(counter[thisCombinedID])) counter[thisCombinedID] = 1;else counter[thisCombinedID]++;\n\n      if (maximumSimilarMessages > 0 && allTotals[thisCombinedID] > maximumSimilarMessages + 1 && counter[thisCombinedID] === maximumSimilarMessages + 1) {\n        if (thisPriority >= errorPriorityLevel) {\n          var numHidden = allTotals[thisCombinedID] - maximumSimilarMessages;\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(numHidden !== 1, \"Shouldn\\u2019t suppress just one error of priority \".concat(thisPriority));\n          var adjHidden = Math.min(numHidden, maximumHiddenNotices);\n          var numSuppressed = numHidden - adjHidden;\n          resultObject.errorList.push({\n            priority: thisPriority,\n            message: thisMsg,\n            location: \" \\u2191 \".concat(adjHidden.toLocaleString(), \" MORE SIMILAR ERROR\").concat(adjHidden === 1 ? '' : 'S', \" HIDDEN\").concat(numSuppressed ? \" (PLUS \".concat(numSuppressed.toLocaleString(), \" SUPPRESSED)\") : ''),\n            hiddenNotices: [thisNotice]\n          });\n          resultObject.numHiddenErrors++;\n        } else {\n          var _numHidden = allTotals[thisCombinedID] - maximumSimilarMessages;\n\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(_numHidden !== 1, \"Shouldn\\u2019t suppress just one warning of priority \".concat(thisPriority));\n\n          var _adjHidden = Math.min(_numHidden, maximumHiddenNotices);\n\n          var _numSuppressed = _numHidden - _adjHidden;\n\n          resultObject.warningList.push({\n            priority: thisPriority,\n            message: thisMsg,\n            location: \" \\u2191 \".concat(_adjHidden.toLocaleString(), \" MORE SIMILAR WARNING\").concat(_adjHidden === 1 ? '' : 'S', \" HIDDEN\").concat(_numSuppressed ? \" (PLUS \".concat(_numSuppressed.toLocaleString(), \" SUPPRESSED)\") : ''),\n            hiddenNotices: [thisNotice]\n          });\n          resultObject.numHiddenWarnings++;\n        }\n      } else if (maximumSimilarMessages > 0 && counter[thisCombinedID] > maximumSimilarMessages + 1) {\n        if (thisPriority >= errorPriorityLevel) {\n          var previousObject = resultObject.errorList[resultObject.errorList.length - 1];\n\n          try {\n            if (previousObject.hiddenNotices.length < maximumHiddenNotices) {\n              previousObject.hiddenNotices.push(thisNotice);\n              resultObject.numHiddenErrors++;\n            } else {\n              // suppress these excess notices\n              var lastHiddenNoticeObject = previousObject.hiddenNotices[previousObject.hiddenNotices.length - 1];\n              if (lastHiddenNoticeObject.message !== maximumHiddenNoticesMessage) previousObject.hiddenNotices.push({\n                priority: thisNotice.priority,\n                message: maximumHiddenNoticesMessage\n              });\n              resultObject.numSuppressedNotices++;\n            }\n          } catch (e) {\n            // presumably no hidden Notices in previous Object\n            console.assert(!previousObject.hiddenNotices, \"Didn\\u2019t expected hiddenNotices to be defined: \".concat(JSON.stringify(previousObject), \" error was: \").concat(e.message));\n            resultObject.numSuppressedNotices++;\n          }\n        } else {\n          var _previousObject = resultObject.warningList[resultObject.warningList.length - 1];\n\n          try {\n            if (_previousObject.hiddenNotices.length < maximumHiddenNotices) {\n              _previousObject.hiddenNotices.push(thisNotice);\n\n              resultObject.numHiddenWarnings++;\n            } else {\n              // suppress these excess notices\n              var _lastHiddenNoticeObject = _previousObject.hiddenNotices[_previousObject.hiddenNotices.length - 1];\n              if (_lastHiddenNoticeObject.message !== maximumHiddenNoticesMessage) _previousObject.hiddenNotices.push({\n                priority: thisNotice.priority,\n                message: maximumHiddenNoticesMessage\n              });\n              resultObject.numSuppressedNotices++;\n            }\n          } catch (e) {\n            // presumably no hidden Notices in previous Object\n            console.assert(!_previousObject.hiddenNotices, \"Didn\\u2019t expected hiddenNotices to be defined: \".concat(JSON.stringify(_previousObject), \" error was: \").concat(e.message));\n            resultObject.numSuppressedNotices++;\n          }\n        }\n      } else if (thisPriority >= errorPriorityLevel) resultObject.errorList.push(thisNotice);else resultObject.warningList.push(thisNotice);\n    } // debugLog(`processNoticesToErrorsWarnings is returning ${resultObject.successList.length} successes, ${resultObject.errorList.length} errors, and ${resultObject.warningList.length} warnings\n    //   numIgnoredNotices=${resultObject.numIgnoredNotices} numHiddenErrors=${resultObject.numHiddenErrors} numHiddenWarnings=${resultObject.numHiddenWarnings}`);\n\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n\n  return resultObject;\n} // end of processNoticesToErrorsWarnings function\n\n/**\n *\n * @param {Object} givenNoticeObject\n * @param {Object} optionalProcessingOptions\n * @return {Object} containing severeList, mediumList, and lowList\n */\n\nfunction processNoticesToSevereMediumLow(givenNoticeObject, optionalProcessingOptions) {\n  /*\n      Available options are:\n          severePriorityLevel (integer; default is DEFAULT_SEVERE_PRIORITY_LEVEL above)\n          mediumPriorityLevel (integer; default is DEFAULT_MEDIUM_PRIORITY_LEVEL above)\n          maximumSimilarMessages (integer; default is DEFAULT_MAXIMUM_SIMILAR_MESSAGES above)\n       Returns an object with:\n          successList: a list of strings describing what has been checked\n          severeList\n          mediumList\n          lowList\n          numIgnoredNotices, numDisabledNotices, numSuppressedNotices, numCutoffNotices, umHiddenSevere, numHiddenMedium, numHiddenLow\n          processingOptions: just helpfully passes on what we were given (may be undefined)\n      Also, any other parameters are just passed through,\n          although filenameList might be abbreviated, e.g. for 100s of .md files.\n  */\n  //     functionLog(`processNoticesToSevereMediumLow v${NOTICE_PROCESSOR_VERSION_STRING} with options=${JSON.stringify(optionalProcessingOptions)}\n  //   with ${Object.keys(optionalProcessingOptions).length} resultObject entries\n  //   and options=${JSON.stringify(optionalProcessingOptions)}\n  //    Given ${givenNoticeObject.successList.length.toLocaleString()} success string(s) plus ${givenNoticeObject.noticeList.length.toLocaleString()} notice(s)`);\n  var _processNoticesCommon3 = processNoticesCommon(givenNoticeObject, optionalProcessingOptions),\n      _processNoticesCommon4 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_processNoticesCommon3, 3),\n      remainingNoticeList = _processNoticesCommon4[0],\n      allTotals = _processNoticesCommon4[1],\n      resultObject = _processNoticesCommon4[2]; // Add the fields that we need here to the existing resultObject\n\n\n  resultObject.severeList = [];\n  resultObject.mediumList = [];\n  resultObject.lowList = [];\n  resultObject.numHiddenSevere = 0;\n  resultObject.numHiddenMedium = 0;\n  resultObject.numHiddenLow = 0;\n  var severePriorityLevel;\n\n  try {\n    severePriorityLevel = optionalProcessingOptions.severePriorityLevel;\n  } catch (npfSPLerror) {}\n\n  if (severePriorityLevel === undefined) {\n    severePriorityLevel = DEFAULT_SEVERE_PRIORITY_LEVEL; // debugLog(`Using default severePriorityLevel=${severePriorityLevel}`);\n  } else Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"Using supplied severePriorityLevel=\".concat(severePriorityLevel, \" cf. default=\").concat(DEFAULT_SEVERE_PRIORITY_LEVEL));\n\n  var mediumPriorityLevel;\n\n  try {\n    mediumPriorityLevel = optionalProcessingOptions.mediumPriorityLevel;\n  } catch (nfpMPLerror) {}\n\n  if (mediumPriorityLevel === undefined) {\n    mediumPriorityLevel = DEFAULT_MEDIUM_PRIORITY_LEVEL; // debugLog(`Using default mediumPriorityLevel=${mediumPriorityLevel}`);\n  } else Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"userLog\"])(\"Using supplied mediumPriorityLevel=\".concat(mediumPriorityLevel, \" cf. default=\").concat(DEFAULT_MEDIUM_PRIORITY_LEVEL)); // Check for repeated notices that should be compressed\n  //  while simultaneously separating into error and warning lists\n\n\n  var counter = {};\n\n  var _iterator9 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(remainingNoticeList),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var thisNotice = _step9.value;\n      var thisPriority = thisNotice.priority,\n          thisMsg = thisNotice.message;\n      var thisCombinedID = \"\".concat(String(thisNotice.priority).padStart(3, '0')).concat(thisNotice.message); // Could have identical worded messages but with different priorities\n\n      if (isNaN(counter[thisCombinedID])) counter[thisCombinedID] = 1;else counter[thisCombinedID]++;\n\n      if (maximumSimilarMessages > 0 && allTotals[thisCombinedID] > maximumSimilarMessages + 1 && counter[thisCombinedID] === maximumSimilarMessages + 1) {\n        if (thisPriority >= severePriorityLevel) {\n          var numHidden = allTotals[thisCombinedID] - maximumSimilarMessages;\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(numHidden !== 1, \"Shouldn\\u2019t suppress just one severe error of priority \".concat(thisPriority));\n          var adjHidden = Math.min(numHidden, maximumHiddenNotices);\n          var numSuppressed = numHidden - adjHidden;\n          resultObject.severeList.push({\n            priority: thisPriority,\n            message: thisMsg,\n            location: \" \\u2191 \".concat(adjHidden.toLocaleString(), \" MORE SIMILAR ERROR\").concat(adjHidden === 1 ? '' : 'S', \" HIDDEN\").concat(numSuppressed ? \" (PLUS \".concat(numSuppressed.toLocaleString(), \" SUPPRESSED)\") : ''),\n            hiddenNotices: [thisNotice]\n          });\n          resultObject.numHiddenSevere++;\n        } else if (thisPriority >= mediumPriorityLevel) {\n          var _numHidden2 = allTotals[thisCombinedID] - maximumSimilarMessages;\n\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(_numHidden2 !== 1, \"Shouldn\\u2019t suppress just one medium error of priority \".concat(thisPriority));\n\n          var _adjHidden2 = Math.min(_numHidden2, maximumHiddenNotices);\n\n          var _numSuppressed2 = _numHidden2 - _adjHidden2;\n\n          resultObject.mediumList.push({\n            priority: thisPriority,\n            message: thisMsg,\n            location: \" \\u2191 \".concat(_adjHidden2.toLocaleString(), \" MORE SIMILAR ERROR\").concat(_adjHidden2 === 1 ? '' : 'S', \" HIDDEN\").concat(_numSuppressed2 ? \" (PLUS \".concat(_numSuppressed2.toLocaleString(), \" SUPPRESSED)\") : ''),\n            hiddenNotices: [thisNotice]\n          });\n          resultObject.numHiddenMedium++;\n        } else {\n          var _numHidden3 = allTotals[thisCombinedID] - maximumSimilarMessages;\n\n          Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(_numHidden3 !== 1, \"Shouldn\\u2019t suppress just one low warning of priority \".concat(thisPriority));\n\n          var _adjHidden3 = Math.min(_numHidden3, maximumHiddenNotices);\n\n          var _numSuppressed3 = _numHidden3 - _adjHidden3;\n\n          resultObject.lowList.push({\n            priority: thisPriority,\n            message: thisMsg,\n            location: \" \\u2191 \".concat(_adjHidden3.toLocaleString(), \" MORE SIMILAR WARNING\").concat(_adjHidden3 === 1 ? '' : 'S', \" HIDDEN\").concat(_numSuppressed3 ? \" (PLUS \".concat(_numSuppressed3.toLocaleString(), \" SUPPRESSED)\") : ''),\n            hiddenNotices: [thisNotice]\n          });\n          resultObject.numHiddenLow++;\n        }\n      } else if (maximumSimilarMessages > 0 && counter[thisCombinedID] > maximumSimilarMessages + 1) {\n        if (thisPriority >= severePriorityLevel) {\n          var previousObject = resultObject.severeList[resultObject.severeList.length - 1];\n\n          try {\n            if (previousObject.hiddenNotices.length < maximumHiddenNotices) {\n              previousObject.hiddenNotices.push(thisNotice);\n              resultObject.numHiddenSevere++;\n            } else {\n              // suppress these excess notices\n              var lastHiddenNoticeObject = previousObject.hiddenNotices[previousObject.hiddenNotices.length - 1];\n              if (lastHiddenNoticeObject.message !== maximumHiddenNoticesMessage) previousObject.hiddenNotices.push({\n                priority: thisNotice.priority,\n                message: maximumHiddenNoticesMessage\n              });\n              resultObject.numSuppressedNotices++;\n            }\n          } catch (e) {\n            // presumably no hidden Notices in previous Object\n            console.assert(!previousObject.hiddenNotices, \"Didn\\u2019t expected hiddenNotices to be defined: \".concat(JSON.stringify(previousObject), \" error was: \").concat(e.message));\n            resultObject.numSuppressedNotices++;\n          }\n        } else if (thisPriority >= mediumPriorityLevel) {\n          var _previousObject2 = resultObject.mediumList[resultObject.mediumList.length - 1];\n\n          try {\n            if (_previousObject2.hiddenNotices.length < maximumHiddenNotices) {\n              _previousObject2.hiddenNotices.push(thisNotice);\n\n              resultObject.numHiddenMedium++;\n            } else {\n              // suppress these excess notices\n              var _lastHiddenNoticeObject2 = _previousObject2.hiddenNotices[_previousObject2.hiddenNotices.length - 1];\n              if (_lastHiddenNoticeObject2.message !== maximumHiddenNoticesMessage) _previousObject2.hiddenNotices.push({\n                priority: thisNotice.priority,\n                message: maximumHiddenNoticesMessage\n              });\n              resultObject.numSuppressedNotices++;\n            }\n          } catch (e) {\n            // presumably no hidden Notices in previous Object\n            console.assert(!_previousObject2.hiddenNotices, \"Didn\\u2019t expected hiddenNotices to be defined: \".concat(JSON.stringify(_previousObject2), \" error was: \").concat(e.message));\n            resultObject.numSuppressedNotices++;\n          }\n        } else {\n          var _previousObject3 = resultObject.lowList[resultObject.lowList.length - 1];\n\n          try {\n            if (_previousObject3.hiddenNotices.length < maximumHiddenNotices) {\n              _previousObject3.hiddenNotices.push(thisNotice);\n\n              resultObject.numHiddenLow++;\n            } else {\n              // suppress these excess notices\n              var _lastHiddenNoticeObject3 = _previousObject3.hiddenNotices[_previousObject3.hiddenNotices.length - 1];\n              if (_lastHiddenNoticeObject3.message !== maximumHiddenNoticesMessage) _previousObject3.hiddenNotices.push({\n                priority: thisNotice.priority,\n                message: maximumHiddenNoticesMessage\n              });\n              resultObject.numSuppressedNotices++;\n            }\n          } catch (e) {\n            // presumably no hidden Notices in previous Object\n            console.assert(!_previousObject3.hiddenNotices, \"Didn\\u2019t expected hiddenNotices to be defined: \".concat(JSON.stringify(_previousObject3), \" error was: \").concat(e.message));\n            resultObject.numSuppressedNotices++;\n          }\n        }\n      } else if (thisPriority >= severePriorityLevel) resultObject.severeList.push(thisNotice);else if (thisPriority >= mediumPriorityLevel) resultObject.mediumList.push(thisNotice);else resultObject.lowList.push(thisNotice);\n    } // debugLog(`processNoticesToSevereMediumLow is returning ${resultObject.successList.length} successes, ${resultObject.severeList.length} severe, ${resultObject.mediumList.length} medium, and ${resultObject.lowList.length} low\n    //   numIgnoredNotices=${resultObject.numIgnoredNotices} numHiddenSevere=${resultObject.numHiddenSevere} numHiddenMedium=${resultObject.numHiddenMedium} numHiddenLow=${resultObject.numHiddenLow}`);\n\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  return resultObject;\n} // end of processNoticesToSevereMediumLow function\n\n/**\n *\n * @param {Object} givenNoticeObject\n * @param {Object} optionalProcessingOptions\n * @return {Object} containing warningList\n */\n\nfunction processNoticesToSingleList(givenNoticeObject, optionalProcessingOptions) {\n  /*\n      Available options are:\n          severePriorityLevel (integer; default is DEFAULT_SEVERE_PRIORITY_LEVEL above)\n          mediumPriorityLevel (integer; default is DEFAULT_MEDIUM_PRIORITY_LEVEL above)\n          maximumSimilarMessages (integer; default is DEFAULT_MAXIMUM_SIMILAR_MESSAGES above)\n       Returns an object with:\n          successList: a list of strings describing what has been checked\n          warningList\n          numIgnoredNotices, numDisabledNotices, numSuppressedNotices, numCutoffNotices, numHiddenNotices\n          processingOptions: just helpfully passes on what we were given (may be undefined)\n      Also, any other parameters are just passed through,\n          although filenameList might be abbreviated, e.g. for 100s of .md files.\n  */\n  // functionLog(`processNoticesToSingleList v${NOTICE_PROCESSOR_VERSION_STRING}\n  //     with ${Object.keys(optionalProcessingOptions).length} resultObject entries\n  //     and options=${JSON.stringify(optionalProcessingOptions)}\n  //     Given ${givenNoticeObject.successList.length.toLocaleString()} success string(s) plus ${givenNoticeObject.noticeList.length.toLocaleString()} notice(s)`);\n  var _processNoticesCommon5 = processNoticesCommon(givenNoticeObject, optionalProcessingOptions),\n      _processNoticesCommon6 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_processNoticesCommon5, 3),\n      remainingNoticeList = _processNoticesCommon6[0],\n      allTotals = _processNoticesCommon6[1],\n      resultObject = _processNoticesCommon6[2]; // Add the fields that we need here to the existing resultObject\n\n\n  resultObject.warningList = [];\n  resultObject.numHiddenNotices = 0; // Check for repeated notices that should be compressed\n  //  while simultaneously creating warning list\n\n  var counter = {};\n\n  var _iterator10 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(remainingNoticeList),\n      _step10;\n\n  try {\n    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n      var thisNotice = _step10.value;\n      var thisPriority = thisNotice.priority,\n          thisMsg = thisNotice.message;\n      var thisCombinedID = \"\".concat(String(thisNotice.priority).padStart(3, '0')).concat(thisNotice.message); // Could have identical worded messages but with different priorities\n\n      if (isNaN(counter[thisCombinedID])) counter[thisCombinedID] = 1;else counter[thisCombinedID]++;\n\n      if (maximumSimilarMessages > 0 && allTotals[thisCombinedID] > maximumSimilarMessages + 1 && counter[thisCombinedID] === maximumSimilarMessages + 1) {\n        var numHidden = allTotals[thisCombinedID] - maximumSimilarMessages;\n        Object(_core_utilities__WEBPACK_IMPORTED_MODULE_4__[\"logicAssert\"])(numHidden !== 1, \"Shouldn\\u2019t suppress just one notice of priority \".concat(thisPriority));\n        var adjHidden = Math.min(numHidden, maximumHiddenNotices);\n        var numSuppressed = numHidden - adjHidden;\n        resultObject.warningList.push({\n          priority: thisPriority,\n          message: thisMsg,\n          location: \" \\u2191 \".concat(adjHidden.toLocaleString(), \" MORE SIMILAR NOTICE\").concat(adjHidden === 1 ? '' : 'S', \" HIDDEN\").concat(numSuppressed ? \" (PLUS \".concat(numSuppressed.toLocaleString(), \" SUPPRESSED)\") : ''),\n          hiddenNotices: [thisNotice]\n        });\n        resultObject.numHiddenNotices++;\n      } else if (maximumSimilarMessages > 0 && counter[thisCombinedID] > maximumSimilarMessages + 1) {\n        // debugLog(`Have thisCombinedID='${thisCombinedID}' and ${counter[thisCombinedID]}`)\n        var previousObject = resultObject.warningList[resultObject.warningList.length - 1];\n\n        try {\n          // console.assert(previousObject, `previousObject should be defined: ${resultObject.warningList.length}`);\n          // console.assert(previousObject.hiddenNotices, `resultObject.warningList[${resultObject.warningList.length-1}].hiddenNotices should be defined: now ${JSON.stringify(thisNotice, 2)} with ${JSON.stringify(previousObject, 2)} and before that ${JSON.stringify(resultObject.warningList[resultObject.warningList.length-2])}`);\n          if (previousObject.hiddenNotices.length < maximumHiddenNotices) {\n            previousObject.hiddenNotices.push(thisNotice);\n            resultObject.numHiddenNotices++;\n          } else {\n            // suppress these excess notices\n            var lastHiddenNoticeObject = previousObject.hiddenNotices[previousObject.hiddenNotices.length - 1];\n            if (lastHiddenNoticeObject.message !== maximumHiddenNoticesMessage) previousObject.hiddenNotices.push({\n              priority: thisNotice.priority,\n              message: maximumHiddenNoticesMessage\n            });\n            resultObject.numSuppressedNotices++;\n          }\n        } catch (e) {\n          // presumably no hidden Notices in previous Object\n          console.assert(!previousObject.hiddenNotices, \"Didn\\u2019t expected hiddenNotices to be defined: \".concat(JSON.stringify(previousObject), \" error was: \").concat(e.message));\n          resultObject.numSuppressedNotices++;\n        }\n      } else resultObject.warningList.push(thisNotice);\n    } // debugLog(`processNoticesToSingleList is returning ${resultObject.successList.length} successes, ${resultObject.warningList.length} warnings\n    //   numIgnoredNotices=${resultObject.numIgnoredNotices} numHiddenNotices=${resultObject.numHiddenNotices}`);\n\n  } catch (err) {\n    _iterator10.e(err);\n  } finally {\n    _iterator10.f();\n  }\n\n  return resultObject;\n} // end of processNoticesToSingleList function\n\n//# sourceURL=webpack:///./src/demos/notice-processing-functions.js?");

/***/ }),

/***/ "./src/demos/repo-check/RepoCheck.js":
/*!*******************************************!*\
  !*** ./src/demos/repo-check/RepoCheck.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @material-ui/core/styles */ \"./node_modules/@material-ui/core/esm/styles/index.js\");\n/* harmony import */ var _notice_processing_functions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../notice-processing-functions */ \"./src/demos/notice-processing-functions.js\");\n/* harmony import */ var _RenderProcessedResults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../RenderProcessedResults */ \"./src/demos/RenderProcessedResults.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core */ \"./src/core/index.js\");\n/* harmony import */ var _checkRepo__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./checkRepo */ \"./src/demos/repo-check/checkRepo.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const REPO_VALIDATOR_VERSION_STRING = '0.3.5';\n\nfunction RepoCheck(\n/*username, languageCode,*/\nprops) {\n  /*\n  Check an entire repository\n   Loads the zip file and the repo tree\n      and then checks all the individual files\n  */\n  // debugLog(`I'm here in RepoCheck v${REPO_VALIDATOR_VERSION_STRING}`);\n  // consoleLogObject(\"props\", props);\n  // consoleLogObject(\"props.classes\", props.classes);\n  var username = props.username; // debugLog(`username='${username}'`);\n\n  var repoName = props.repoName; // debugLog(`repoName='${repoName}'`);\n\n  var branchOrRelease = props.branchOrRelease; // debugLog(`branch='${branch}'`);\n\n  if (branchOrRelease === undefined) branchOrRelease = 'master';\n  var checkingOptions = {\n    // Uncomment any of these to test them\n    // excerptLength: 25,\n    suppressNoticeDisablingFlag: true,\n    // Leave this one as true (otherwise demo checks are less efficient)\n    checkType: 'Repo' // Always leave this one in\n\n  }; // NOTE: I removed this again as it didn’t really seem to make sense to enable it here\n  //          Also, I don’t think the results were getting returned correctly yet\n  // if (repoName && repoName.endsWith('_tn')) {\n  //     // TODO: Should the user be able to turn this off and on ????\n  //     checkingOptions.disableLinkedTAArticlesCheckFlag = false;\n  //     checkingOptions.disableLinkedTWArticlesCheckFlag = false;\n  // }\n  // Or this allows the parameters to be specified as a RepoCheck property\n\n  if (props.skipOTBooks) checkingOptions.skipOTBooks = props.skipOTBooks.toLowerCase() === 'true';\n  if (props.skipNTBooks) checkingOptions.skipNTBooks = props.skipNTBooks.toLowerCase() === 'true';\n  if (props.excerptLength) checkingOptions.excerptLength = Object(_core__WEBPACK_IMPORTED_MODULE_7__[\"ourParseInt\"])(props.excerptLength);\n  if (props.cutoffPriorityLevel) checkingOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_7__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n  if (props.disableAllLinkFetchingFlag) checkingOptions.disableAllLinkFetchingFlag = props.disableAllLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTAArticlesCheckFlag) checkingOptions.disableLinkedTAArticlesCheckFlag = props.disableLinkedTAArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLinkedTWArticlesCheckFlag) checkingOptions.disableLinkedTWArticlesCheckFlag = props.disableLinkedTWArticlesCheckFlag.toLowerCase() === 'true';\n  if (props.disableLexiconLinkFetchingFlag) checkingOptions.disableLexiconLinkFetchingFlag = props.disableLexiconLinkFetchingFlag.toLowerCase() === 'true';\n  if (props.disableLinkedLexiconEntriesCheckFlag) checkingOptions.disableLinkedLexiconEntriesCheckFlag = props.disableLinkedLexiconEntriesCheckFlag.toLowerCase() === 'true';\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(\"Waiting-checkRepo\"),\n      _useState2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_useState, 2),\n      result = _useState2[0],\n      setResultValue = _useState2[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    // debugLog(\"RepoCheck.useEffect() called with \", JSON.stringify(props));\n    // Use an IIFE (Immediately Invoked Function Expression)\n    //  e.g., see https://medium.com/javascript-in-plain-english/https-medium-com-javascript-in-plain-english-stop-feeling-iffy-about-using-an-iife-7b0292aba174\n    Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n      var _repoName$split, _repoName$split2, languageCode, repoCode, repoPreloadList, successFlag, renderSummary, rawCRResults, processOptions, displayType, processedResults, _processedResults, _processedResults2;\n\n      return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!props.wait || props.wait !== 'N')) {\n                _context.next = 3;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"span\", {\n                style: {\n                  color: 'blue'\n                }\n              }, \"Waiting for user\\u2026\"), \" (Adjust settings below as necessary and then set \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"wait='N'\"), \" to start)\"));\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (username) {\n                _context.next = 6;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"No \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"username\"), \" set!\"));\n              return _context.abrupt(\"return\");\n\n            case 6:\n              if (repoName) {\n                _context.next = 9;\n                break;\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"No \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, \"repoName\"), \" set!\"));\n              return _context.abrupt(\"return\");\n\n            case 9:\n              if (!(props.reloadAllFilesFirst && props.reloadAllFilesFirst.slice(0).toUpperCase() === 'Y')) {\n                _context.next = 16;\n                break;\n              }\n\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_9__[\"userLog\"])(\"Clearing cache before running respository check…\");\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'orange'\n                }\n              }, \"Clearing cache before running repository check\\u2026\"));\n              _context.next = 14;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_7__[\"clearCaches\"])();\n\n            case 14:\n              _context.next = 18;\n              break;\n\n            case 16:\n              _context.next = 18;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_7__[\"clearCheckedArticleCache\"])();\n\n            case 18:\n              // otherwise we wouldn’t see any of the warnings again from checking these\n              _repoName$split = repoName.split('_'), _repoName$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_repoName$split, 2), languageCode = _repoName$split2[0], repoCode = _repoName$split2[1];\n              repoCode = repoCode.toUpperCase();\n              if (repoCode === 'TN2') repoCode = 'TN'; // else if (repoCode === 'TQ1') repoCode = 'TQ';\n              // debugLog(`RepoCheck languageCode='${languageCode}' repoCode='${repoCode}'`);\n              // Load whole repos, especially if we are going to check files in manifests\n              // NOTE: We make TWO calls to preloadReposIfNecessary()\n              //          because the branchOrRelease only applies to the repo being checked\n              //          for all other repos, we just use `master`\n\n              repoPreloadList = []; // The repo being checked doesn't need to be added here as done separately below\n\n              if (!checkingOptions.disableAllLinkFetchingFlag) {\n                if (repoCode !== 'TW') repoPreloadList.push(checkingOptions.disableLinkedTWArticlesCheckFlag ? 'TWtree' : 'TW');\n                if (repoCode !== 'UHB' && repoCode !== 'UGNT' && repoCode !== 'TA') repoPreloadList.push(checkingOptions.disableLinkedTAArticlesCheckFlag ? 'TAtree' : 'TA'); // Original languages only have TW links\n                // if (repoCode !== 'TA' && repoCode !== 'TW') repoPreloadList.push(repoCode);\n\n                if (repoCode === 'TWL' || repoCode === 'TN' || repoCode.endsWith('LT') || repoCode.endsWith('ST')) {\n                  // These all refer to the original languages\n                  if (!checkingOptions.skipNTBooks) repoPreloadList.unshift('UGNT');\n                  if (!checkingOptions.skipOTBooks) repoPreloadList.unshift('UHB');\n                }\n\n                if (repoCode.startsWith('OBS-')) repoPreloadList.push('OBS');\n\n                if (!checkingOptions.disableLexiconLinkFetchingFlag && (['UHB', 'UGNT', 'TW'].includes(repoCode) || repoCode.endsWith('LT') || repoCode.endsWith('ST'))) {\n                  if (repoCode !== 'UGNT') repoPreloadList.push(checkingOptions.disableLinkedLexiconEntriesCheckFlag ? 'UHALtree' : 'UHAL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n\n                  if (repoCode !== 'UHB') repoPreloadList.push(checkingOptions.disableLinkedLexiconEntriesCheckFlag ? 'UGLtree' : 'UGL'); // UHB/UGNT, ULT, UST, TW all have lexicon links\n                }\n              }\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Preloading \", repoCode, \" and \", repoPreloadList.length, \" repos for \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"i\", null, username), \" \", languageCode, \" ready for \", repoName, \" repo check\\u2026\"));\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_9__[\"logicAssert\"])(!repoPreloadList.includes(repoCode), \"Shouldn't have our repoCode \".concat(repoCode, \" in repoPreloadList: \").concat(repoPreloadList));\n              _context.next = 27;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_7__[\"preloadReposIfNecessary\"])(username, languageCode, [], branchOrRelease, [repoCode]);\n\n            case 27:\n              _context.t0 = _context.sent;\n\n              if (!_context.t0) {\n                _context.next = 32;\n                break;\n              }\n\n              _context.next = 31;\n              return Object(_core__WEBPACK_IMPORTED_MODULE_7__[\"preloadReposIfNecessary\"])(username, languageCode, [], 'master', repoPreloadList);\n\n            case 31:\n              _context.t0 = _context.sent;\n\n            case 32:\n              successFlag = _context.t0;\n              if (!successFlag) console.error(\"RepoCheck error: Failed to pre-load all repos\"); // else debugLog(`RepoCheck preloaded repos ${repoCode} and ${repoPreloadList}`)\n              // Display our \"waiting\" message\n\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'magenta'\n                }\n              }, \"Checking \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, repoName), \" repo\\u2026\")); // Put all this in a try/catch block coz otherwise it’s difficult to debug/view errors\n\n              _context.prev = 35;\n\n              renderSummary = function renderSummary(processedResults) {\n                var repoLink = branchOrRelease === undefined ? \"https://git.door43.org/\".concat(username, \"/\").concat(repoName, \"/\") : \"https://git.door43.org/\".concat(username, \"/\").concat(repoName, \"/src/branch/\").concat(branchOrRelease, \"/\");\n                return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", null, \"Checked \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, username, \" \", repoName), \" (from \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"i\", null, branchOrRelease === undefined ? 'DEFAULT' : branchOrRelease), \" \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"a\", {\n                  rel: \"noopener noreferrer\",\n                  target: \"_blank\",\n                  href: repoLink\n                }, \"branch\"), \")\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_6__[\"RenderCheckedFilesList\"], {\n                  username: username,\n                  results: processedResults\n                }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_6__[\"RenderTotals\"], {\n                  rawNoticeListLength: rawCRResults.noticeList.length,\n                  results: processedResults\n                }));\n              };\n\n              rawCRResults = {};\n              _context.prev = 38;\n              _context.next = 41;\n              return Object(_checkRepo__WEBPACK_IMPORTED_MODULE_8__[\"checkRepo\"])(username, repoName, branchOrRelease, \"\", setResultValue, checkingOptions);\n\n            case 41:\n              rawCRResults = _context.sent;\n              _context.next = 48;\n              break;\n\n            case 44:\n              _context.prev = 44;\n              _context.t1 = _context[\"catch\"](38);\n              rawCRResults = {\n                successList: [],\n                noticeList: []\n              };\n              rawCRResults.noticeList.push({\n                priority: 999,\n                message: \"checkRepo function FAILED\",\n                repoName: repoName,\n                excerpt: _context.t1,\n                location: repoName\n              }); // debugLog(\"RepoCheck trace is\", checkRepoError.trace);\n\n            case 48:\n              // debugLog(\"checkRepo() returned\", typeof rawCRResults); //, JSON.stringify(rawCRResults));\n              // Add some extra fields to our rawCRResults object in case we need this information again later\n              rawCRResults.checkType = 'Repo';\n              rawCRResults.username = username;\n              rawCRResults.languageCode = languageCode;\n              rawCRResults.checkedOptions = checkingOptions; // debugLog(\"Here with RC rawCRResults\", typeof rawCRResults);\n              // Now do our final handling of the result -- we have some options available\n\n              processOptions = {// Uncomment any of these to test them\n                // 'maximumSimilarMessages': 4, // default is 3 -- 0 means don’t suppress\n                // 'errorPriorityLevel': 800, // default is 700\n                // 'cutoffPriorityLevel': 100, // default is 0\n                // 'sortBy': 'ByRepo', // default is 'ByPriority', also have 'AsFound'\n                // 'ignorePriorityNumberList': [123, 202], // default is []\n              }; // Or this allows the parameters to be specified as a RepoCheck property\n\n              if (props.maximumSimilarMessages) processOptions.maximumSimilarMessages = Object(_core__WEBPACK_IMPORTED_MODULE_7__[\"ourParseInt\"])(props.maximumSimilarMessages);\n              if (props.errorPriorityLevel) processOptions.errorPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_7__[\"ourParseInt\"])(props.errorPriorityLevel);\n              if (props.cutoffPriorityLevel) processOptions.cutoffPriorityLevel = Object(_core__WEBPACK_IMPORTED_MODULE_7__[\"ourParseInt\"])(props.cutoffPriorityLevel);\n              if (props.sortBy) processOptions.sortBy = props.sortBy; // if (props.ignorePriorityNumberList) processOptions.ignorePriorityNumberList = props.ignorePriorityNumberList;\n\n              if (props.showDisabledNoticesFlag) processOptions.showDisabledNoticesFlag = props.showDisabledNoticesFlag.toLowerCase() === 'true';\n              displayType = 'ErrorsWarnings'; // default\n\n              if (props.displayType) displayType = props.displayType;\n\n              if (displayType === 'ErrorsWarnings') {\n                processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_5__[\"processNoticesToErrorsWarnings\"])(rawCRResults, processOptions); // displayPropertyNames(\"RC processedResults\", processedResults);\n                //             userLog(`RepoCheck got back processedResults with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()}`, \"numHiddenErrors=\" + processedResults.numHiddenErrors.toLocaleString(), \"numHiddenWarnings=\" + processedResults.numHiddenWarnings.toLocaleString());\n                // debugLog(\"Here now in rendering bit!\");\n\n                if (processedResults.errorList.length || processedResults.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_6__[\"RenderSuccessesErrorsWarnings\"], {\n                  results: processedResults\n                })));else // no errors or warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_6__[\"RenderSuccessesErrorsWarnings\"], {\n                    results: processedResults\n                  })));\n              } else if (displayType === 'SevereMediumLow') {\n                _processedResults = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_5__[\"processNoticesToSevereMediumLow\"])(rawCRResults, processOptions); //             userLog(`RepoCheck got back processedResults with ${processedResults.successList.length.toLocaleString()} success message(s), ${processedResults.errorList.length.toLocaleString()} error(s) and ${processedResults.warningList.length.toLocaleString()} warning(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()}`, \"numHiddenErrors=\" + processedResults.numHiddenErrors.toLocaleString(), \"numHiddenWarnings=\" + processedResults.numHiddenWarnings.toLocaleString());\n\n                if (_processedResults.severeList.length || _processedResults.mediumList.length || _processedResults.lowList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_6__[\"RenderSuccessesSevereMediumLow\"], {\n                  results: _processedResults\n                })));else // no severe, medium, or low notices\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_6__[\"RenderSuccessesSevereMediumLow\"], {\n                    results: _processedResults\n                  })));\n              } else if (displayType === 'SingleList') {\n                _processedResults2 = Object(_notice_processing_functions__WEBPACK_IMPORTED_MODULE_5__[\"processNoticesToSingleList\"])(rawCRResults, processOptions); // debugLog(`RepoCheck got back processedResults with ${processedResults.successList.length.toLocaleString()} success message(s) and ${processedResults.warningList.length.toLocaleString()} notice(s)\n                //   numIgnoredNotices=${processedResults.numIgnoredNotices.toLocaleString()} numHiddenWarnings=${processedResults.numHiddenWarnings.toLocaleString()}`);\n\n                if (_processedResults2.warningList.length) setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_6__[\"RenderSuccessesNoticesGradient\"], {\n                  results: _processedResults2\n                })));else // no warnings\n                  setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, renderSummary(_processedResults2), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_RenderProcessedResults__WEBPACK_IMPORTED_MODULE_6__[\"RenderSuccessesNoticesGradient\"], {\n                    results: _processedResults2\n                  })));\n              } else setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"Invalid displayType='\", displayType, \"'\")); // debugLog(\"Finished rendering bit.\");\n\n\n              _context.next = 67;\n              break;\n\n            case 63:\n              _context.prev = 63;\n              _context.t2 = _context[\"catch\"](35);\n              console.error(\"RepoCheck main code block got error: \".concat(_context.t2.message));\n              setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"p\", {\n                style: {\n                  color: 'red'\n                }\n              }, \"RepoCheck main code block got error: \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"b\", null, _context.t2.message))));\n\n            case 67:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[35, 63], [38, 44]]);\n    }))(); // end of async part in unnamedFunction\n    // Doesn’t work if we add this to next line: languageCode,username,repoName,branch,checkingOptions,props\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []); // end of useEffect part\n  // {/* <div className={classes.root}> */}\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(\"div\", {\n    className: \"Fred\"\n  }, result);\n} // RepoCheck.propTypes = {\n//   /** @ignore */\n//   username: PropTypes.object.isRequired,\n//   /** @ignore */\n//   languageCode: PropTypes.object.isRequired,\n//   props: PropTypes.object,\n// };\n\n\nvar styles = function styles(theme) {\n  return {\n    root: {}\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__[\"withStyles\"])(styles)(RepoCheck));\n\n//# sourceURL=webpack:///./src/demos/repo-check/RepoCheck.js?");

/***/ }),

/***/ "./src/demos/repo-check/checkRepo.js":
/*!*******************************************!*\
  !*** ./src/demos/repo-check/checkRepo.js ***!
  \*******************************************/
/*! exports provided: checkRepo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkRepo\", function() { return checkRepo; });\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2 */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _core_defaults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/defaults */ \"./src/core/defaults.js\");\n/* harmony import */ var _core_books_books__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/books/books */ \"./src/core/books/books.js\");\n/* harmony import */ var _file_check_checkFileContents__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../file-check/checkFileContents */ \"./src/demos/file-check/checkFileContents.js\");\n/* harmony import */ var _core_getApi__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/getApi */ \"./src/core/getApi.js\");\n/* harmony import */ var _core_utilities__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utilities */ \"./src/core/utilities.js\");\n\n\n\n\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n\n\n // eslint-disable-next-line no-unused-vars\n\n // const REPO_VALIDATOR_VERSION_STRING = '0.6.6';\n\n/**\n *\n * @param {string} username\n * @param {string} repoName\n * @param {string} repoBranch\n * @param {string} givenLocation\n * @param {Function} setResultValue\n * @param {Object} givenCheckingOptions\n */\n\nfunction checkRepo(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _checkRepo.apply(this, arguments);\n}\n\nfunction _checkRepo() {\n  _checkRepo = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(username, repoName, repoBranch, givenLocation, setResultValue, givenCheckingOptions) {\n    var abortFlag, startTime, _repoName$split, _repoName$split2, languageCode, repoCode, newCheckingOptions, getFile_, checkRepoResult, addSuccessMessage, addNoticePartial, ourCheckRepoFileContents, _ourCheckRepoFileContents, ourLocation, fetchRepositoryZipFile_, zipFetchSucceeded, getFileListFromZip_, pathList, filesToCheckCount, checkedFileCount, checkedFilenames, checkedFilenameExtensions, totalCheckedSize, _iterator, _step, thisFilepath, thisFilename, thisFilenameExtension, bookOrFileCode, ourBookID, bookID, _bookID, whichTestament, _getFile_, repoFileContent, notice;\n\n    return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ourCheckRepoFileContents = function _ourCheckRepoFileCont2() {\n              _ourCheckRepoFileContents = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__[\"default\"])( /*#__PURE__*/_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(cfBookOrFileCode, cfBookID, cfFilename, cfFileContent, cfFileLocation, cfCheckingOptions) {\n                var adjustedLanguageCode, cfcResultObject, _iterator2, _step2, cfcNoticeEntry;\n\n                return _mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        // We assume that checking for compulsory fields is done elsewhere\n                        // functionLog(`checkRepo ourCheckRepoFileContents(bk/fC='${cfBookOrFileCode}', bk='${cfBookID}', fn='${cfFilename}', ${cfFileContent.length}, ${cfFileLocation}, ${JSON.stringify(cfCheckingOptions)})…`);\n                        // Updates the global list of notices\n                        //parameterAssert(cfBookOrFileCode !== undefined, \"ourCheckRepoFileContents: 'cfBookOrFileCode' parameter should be defined\");\n                        //parameterAssert(typeof cfBookOrFileCode === 'string', `ourCheckRepoFileContents: 'cfBookOrFileCode' parameter should be a string not a '${typeof cfBookOrFileCode}': '${cfBookOrFileCode}'`);\n                        //parameterAssert(cfBookID !== undefined, \"ourCheckRepoFileContents: 'cfBookID' parameter should be defined\");\n                        //parameterAssert(typeof cfBookID === 'string', `ourCheckRepoFileContents: 'cfBookID' parameter should be a string not a '${typeof cfBookID}'`);\n                        if (cfBookID) {//parameterAssert(cfBookID.length === 3, `ourCheckRepoFileContents: 'cfBookID' parameter should be three characters long not ${cfBookID.length}`);\n                          //parameterAssert(cfBookID.toUpperCase() === cfBookID, `ourCheckRepoFileContents: 'cfBookID' parameter should be UPPERCASE not '${cfBookID}'`);\n                          //parameterAssert(cfBookID === 'OBS' || books.isValidBookID(cfBookID), `ourCheckRepoFileContents: '${cfBookID}' is not a valid USFM book identifier`);\n                        } //parameterAssert(cfFilename !== undefined, \"ourCheckRepoFileContents: 'cfFilename' parameter should be defined\");\n                        //parameterAssert(typeof cfFilename === 'string', `ourCheckRepoFileContents: 'cfFilename' parameter should be a string not a '${typeof cfFilename}'`);\n                        //parameterAssert(cfFileContent !== undefined, \"ourCheckRepoFileContents: 'cfFileContent' parameter should be defined\");\n                        //parameterAssert(typeof cfFileContent === 'string', `ourCheckRepoFileContents: 'cfFileContent' parameter should be a string not a '${typeof cfFileContent}'`);\n                        //parameterAssert(cfFileLocation !== undefined, \"ourCheckRepoFileContents: 'cfFileLocation' parameter should be defined\");\n                        //parameterAssert(typeof cfFileLocation === 'string', `ourCheckRepoFileContents: 'cfFileLocation' parameter should be a string not a '${typeof cfFileLocation}'`);\n                        //parameterAssert(cfCheckingOptions !== undefined, \"ourCheckRepoFileContents: 'cfCheckingOptions' parameter should be defined\");\n\n\n                        adjustedLanguageCode = languageCode;\n                        if (\n                        /*filename === 'manifest.yaml' || */\n                        cfFilename === 'LICENSE.md' || (languageCode === 'el-x-koine' || languageCode === 'hbo') && cfFilename === 'README.md') adjustedLanguageCode = 'en'; // Correct the language for these auxilliary files\n\n                        _context.next = 5;\n                        return Object(_file_check_checkFileContents__WEBPACK_IMPORTED_MODULE_9__[\"checkFileContents\"])(username, adjustedLanguageCode, repoCode, repoBranch, cfFilename, cfFileContent, cfFileLocation, cfCheckingOptions);\n\n                      case 5:\n                        cfcResultObject = _context.sent;\n                        // debugLog(\"checkFileContents() returned\", resultObject.successList.length, \"success message(s) and\", resultObject.noticeList.length, \"notice(s)\");\n                        // for (const successEntry of resultObject.successList)\n                        //     userLog(\"  \", successEntry);\n                        // Process noticeList line by line,  appending the bookOrFileCode as an extra field as we go\n                        _iterator2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cfcResultObject.noticeList);\n\n                        try {\n                          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                            cfcNoticeEntry = _step2.value;\n                            // We add the bookOrFileCode as an extra value (unless it’s already there from a TA or TW check)\n                            if (cfcNoticeEntry.extra) checkRepoResult.noticeList.push(cfcNoticeEntry); // Add this notice directly\n                            else {\n                              // no extra field yet\n                              // addNoticePartial({ ...cfcNoticeEntry, bookID: cfBookID, extra: bookOrFileCode.toUpperCase() });\n                              // const newNoticeObject = { ...cfcNoticeEntry, bookID: cfBookID };\n                              if (cfBookID.length) cfcNoticeEntry.bookID = cfBookID;\n\n                              if (/[0-5][0-9]/.test(cfBookOrFileCode)) {\n                                // Assume it's an OBS story number 01…50\n                                // debugLog(`ourCheckRepoFileContents adding integer extra: 'Story ${cfBookOrFileCode}'`);\n                                cfcNoticeEntry.extra = \"Story \".concat(cfBookOrFileCode);\n                              } else if (cfBookOrFileCode !== '01' // UGL (from content/G04230/01.md)\n                              && (cfBookOrFileCode[0] !== 'H' || cfBookOrFileCode.length !== 5)) {\n                                // UHAL, e.g., H0612 from content/H0612.md\n                                // debugLog(`ourCheckRepoFileContents adding UC extra: '${cfBookOrFileCode.toUpperCase()}'`);\n                                cfcNoticeEntry.extra = cfBookOrFileCode.toUpperCase();\n                              }\n\n                              addNoticePartial(cfcNoticeEntry);\n                            }\n                          }\n                          /* Removing the following code as it’s unneeded\n                          //  as we don’t enable TA or TW checking per repo anyway\n                          // Anyway, not sure that the following code was working yet\n                          if (repoName.endsWith('_tn')) {\n                            // The following is needed coz we might be checking the linked TA and/or TW articles from TN2 TSV files\n                            userLog(`cfcResultObject JSON.stringify({ ...cfcResultObject, noticeList: \"deleted\" })`);\n                            if (cfcResultObject.checkedFileCount && cfcResultObject.checkedFileCount > 0) {\n                              checkRepoResult.checkedFileCount += cfcResultObject.checkedFileCount;\n                              addSuccessMessage(`Checked ${cfcResultObject.checkedFileCount} linked TA/TW articles`);\n                            }\n                            if (cfcResultObject.checkedFilesizes && cfcResultObject.checkedFilesizes > 0) checkRepoResult.totalCheckedSize += cfcResultObject.checkedFilesizes;\n                            if (cfcResultObject.checkedRepoNames && cfcResultObject.checkedRepoNames.length > 0)\n                              for (const checkedRepoName of cfcResultObject.checkedRepoNames)\n                                try { if (checkRepoResult.checkedRepoNames.indexOf(checkedRepoName) < 0) checkRepoResult.checkedRepoNames.push(checkedRepoName); }\n                                catch { checkRepoResult.checkedRepoNames = [checkedRepoName]; }\n                            if (cfcResultObject.checkedFilenameExtensions && cfcResultObject.checkedFilenameExtensions.length > 0)\n                              for (const checkedFilenameExtension of cfcResultObject.checkedFilenameExtensions)\n                                checkRepoResult.checkedFilenameExtensions.add(checkedFilenameExtension);\n                          }\n                          */\n\n                        } catch (err) {\n                          _iterator2.e(err);\n                        } finally {\n                          _iterator2.f();\n                        }\n\n                      case 8:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _ourCheckRepoFileContents.apply(this, arguments);\n            };\n\n            ourCheckRepoFileContents = function _ourCheckRepoFileCont(_x7, _x8, _x9, _x10, _x11, _x12) {\n              return _ourCheckRepoFileContents.apply(this, arguments);\n            };\n\n            addNoticePartial = function _addNoticePartial(incompleteNoticeObject) {\n              // Adds the notices to the result that we will later return\n              // bookID is a three-character UPPERCASE USFM book identifier or 'OBS'.\n              // Note that bookID,C,V might all be empty strings (as some repos don’t have BCV)\n              // functionLog(`checkRepo addNoticePartial: ${incompleteNoticeObject.priority}:${incompleteNoticeObject.message} bookID=${incompleteNoticeObject.bookID} ${incompleteNoticeObject.C}:${incompleteNoticeObject.V} ${incompleteNoticeObject.filename}:${incompleteNoticeObject.lineNumber} ${incompleteNoticeObject.characterIndex > 0 ? ` (at character ${incompleteNoticeObject.characterIndex})` : \"\"}${incompleteNoticeObject.excerpt ? ` ${incompleteNoticeObject.excerpt}` : \"\"}${incompleteNoticeObject.location}`);\n              //parameterAssert(incompleteNoticeObject.priority !== undefined, \"cR addNoticePartial: 'priority' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.priority === 'number', `cR addNoticePartial: 'priority' parameter should be a number not a '${typeof incompleteNoticeObject.priority}'`);\n              //parameterAssert(incompleteNoticeObject.message !== undefined, \"cR addNoticePartial: 'message' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.message === 'string', `cR addNoticePartial: 'message' parameter should be a string not a '${typeof incompleteNoticeObject.message}'`);\n              // parameterAssert(bookID !== undefined, \"cR addNoticePartial: 'bookID' parameter should be defined\");\n              if (incompleteNoticeObject.bookID) {//parameterAssert(typeof incompleteNoticeObject.bookID === 'string', `cR addNoticePartial: 'bookID' parameter should be a string not a '${typeof incompleteNoticeObject.bookID}'`);\n                //parameterAssert(incompleteNoticeObject.bookID.length === 3, `cR addNoticePartial: 'bookID' parameter should be three characters long not ${incompleteNoticeObject.bookID.length}`);\n                //parameterAssert(incompleteNoticeObject.bookID === 'OBS' || books.isOptionalValidBookID(incompleteNoticeObject.bookID), `cR addNoticePartial: '${incompleteNoticeObject.bookID}' is not a valid USFM book identifier`);\n              } // parameterAssert(C !== undefined, \"cR addNoticePartial: 'C' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.C) {//parameterAssert(typeof incompleteNoticeObject.C === 'string', `cR addNoticePartial: 'C' parameter should be a string not a '${typeof incompleteNoticeObject.C}'`);\n              } // parameterAssert(V !== undefined, \"cR addNoticePartial: 'V' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.V) {//parameterAssert(typeof incompleteNoticeObject.V === 'string', `cR addNoticePartial: 'V' parameter should be a string not a '${typeof incompleteNoticeObject.V}'`);\n              } // parameterAssert(characterIndex !== undefined, \"cR addNoticePartial: 'characterIndex' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.characterIndex) {//parameterAssert(typeof incompleteNoticeObject.characterIndex === 'number', `cR addNoticePartial: 'characterIndex' parameter should be a number not a '${typeof incompleteNoticeObject.characterIndex}'`);\n              } // parameterAssert(excerpt !== undefined, \"cR addNoticePartial: 'excerpt' parameter should be defined\");\n\n\n              if (incompleteNoticeObject.excerpt) {//parameterAssert(typeof incompleteNoticeObject.excerpt === 'string', `cR addNoticePartial: 'excerpt' parameter should be a string not a '${typeof incompleteNoticeObject.excerpt}'`);\n              } //parameterAssert(incompleteNoticeObject.location !== undefined, \"cR addNoticePartial: 'location' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.location === 'string', `cR addNoticePartial: 'location' parameter should be a string not a '${typeof incompleteNoticeObject.location}'`);\n              // parameterAssert(incompleteNoticeObject.extra !== undefined, \"cR addNoticePartial: 'extra' parameter should be defined\");\n              //parameterAssert(typeof incompleteNoticeObject.extra === 'string', `cR addNoticePartial: 'extra' parameter should be a string not a '${typeof incompleteNoticeObject.extra}'`);\n\n\n              if (incompleteNoticeObject.debugChain) incompleteNoticeObject.debugChain = \"checkRepo \".concat(incompleteNoticeObject.debugChain); // Add in the repoName from the outer scope\n\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"aboutToOverwrite\"])('checkRepo', ['username', 'repoCode', 'repoName'], incompleteNoticeObject, {\n                username: username,\n                repoCode: repoCode,\n                repoName: repoName\n              });\n              checkRepoResult.noticeList.push(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, incompleteNoticeObject), {}, {\n                username: username,\n                repoCode: repoCode,\n                repoName: repoName\n              }));\n            };\n\n            addSuccessMessage = function _addSuccessMessage(successString) {\n              // Adds the message to the result that we will later return\n              // functionLog(`checkRepo success: ${successString}`);\n              checkRepoResult.successList.push(successString);\n            };\n\n            /*\n            It returns an object containing:\n                successList: an array of strings to tell the use exactly what has been checked\n                noticeList: an array of 9 (i.e., with extra bookOrFileCode parameter at end) notice components\n            */\n            // functionLog(`checkRepo(un='${username}', rN='${repoName}', rBr='${repoBranch}', ${givenLocation}, (fn), ${JSON.stringify(givenCheckingOptions)})…`);\n            //parameterAssert(username !== undefined, \"checkRepo: 'username' parameter should be defined\");\n            //parameterAssert(typeof username === 'string', `checkRepo: 'username' parameter should be a string not a '${typeof username}'`);\n            //parameterAssert(repoName !== undefined, \"checkRepo: 'repoName' parameter should be defined\");\n            //parameterAssert(typeof repoName === 'string', `checkRepo: 'repoName' parameter should be a string not a '${typeof repoName}'`);\n            //parameterAssert(repoBranch !== undefined, \"checkRepo: 'repoBranch' parameter should be defined\");\n            //parameterAssert(typeof repoBranch === 'string', `checkRepo: 'repoBranch' parameter should be a string not a '${typeof repoBranch}'`);\n            //parameterAssert(givenLocation !== undefined, \"checkRepo: 'givenRowLocation' parameter should be defined\");\n            //parameterAssert(typeof givenLocation === 'string', `checkRepo: 'givenRowLocation' parameter should be a string not a '${typeof givenLocation}'`);\n            abortFlag = false;\n            startTime = new Date();\n            _repoName$split = repoName.split('_'), _repoName$split2 = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_repoName$split, 2), languageCode = _repoName$split2[0], repoCode = _repoName$split2[1];\n            repoCode = repoCode.toUpperCase(); // debugLog(`checkRepo got languageCode='${languageCode}' repoCode='${repoCode}' repoBranch='${repoBranch}'`);\n\n            if (repoCode === 'TN2') {\n              repoCode = 'TN';\n              if (repoBranch === undefined) repoBranch = 'newFormat';\n            } else if (repoCode.endsWith('LT')) repoCode = 'LT';else if (repoCode.endsWith('ST')) repoCode = 'ST'; // debugLog(`checkRepo now has languageCode='${languageCode}' repoCode='${repoCode}' repoBranch='${repoBranch}'`);\n\n\n            Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"logicAssert\"])(_core_defaults__WEBPACK_IMPORTED_MODULE_7__[\"REPO_CODES_LIST\"].includes(repoCode), \"checkRepo: 'repoCode' parameter should not be '\".concat(repoCode, \"'\"));\n            if (repoBranch === undefined) repoBranch = 'master'; // Ideally we should ask what the default branch is\n\n            newCheckingOptions = givenCheckingOptions ? Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({}, givenCheckingOptions) : {}; // clone before modify\n\n            getFile_ = newCheckingOptions.getFile ? newCheckingOptions.getFile : _core_getApi__WEBPACK_IMPORTED_MODULE_10__[\"cachedGetFile\"]; // default to using caching of files\n\n            newCheckingOptions.getFile = getFile_; // use same getFile_ when we call core functions\n\n            if (!newCheckingOptions.originalLanguageRepoUsername) newCheckingOptions.originalLanguageRepoUsername = username;\n            if (!newCheckingOptions.taRepoUsername) newCheckingOptions.taRepoUsername = username;\n            if (!newCheckingOptions.twRepoUsername) newCheckingOptions.twRepoUsername = username;\n            checkRepoResult = {\n              successList: [],\n              noticeList: [],\n              checkedFileCount: 0,\n              checkedFileSizes: 0,\n              checkedFilenames: [],\n              checkedFilenameExtensions: [],\n              checkedRepoNames: []\n            };\n            _context2.next = 20;\n            return Object(_core_getApi__WEBPACK_IMPORTED_MODULE_10__[\"repositoryExistsOnDoor43\"])({\n              username: username,\n              repository: repoName\n            });\n\n          case 20:\n            if (_context2.sent) {\n              _context2.next = 26;\n              break;\n            }\n\n            setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"p\", {\n              style: {\n                color: 'red'\n              }\n            }, \"No such \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"b\", null, username, \"/\", repoName), \" repository!\"));\n            console.error(\"checkRepo \".concat(username, \"/\").concat(repoName, \" doesn\\u2019t seem to exist\"));\n            addNoticePartial({\n              priority: 986,\n              message: \"Repository doesn’t seem to exist\",\n              username: username,\n              location: givenLocation,\n              extra: repoName\n            });\n            _context2.next = 118;\n            break;\n\n          case 26:\n            _context2.prev = 26;\n            ourLocation = givenLocation;\n            if (ourLocation && ourLocation[0] !== ' ') ourLocation = \" \".concat(ourLocation); // if (ourLocation.indexOf(username) < 0)\n            // ourLocation = ` in ${username} ${repoName} ${givenLocation}`\n            // Update our \"waiting\" message\n\n            setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"p\", {\n              style: {\n                color: 'magenta'\n              }\n            }, \"Fetching zipped files from \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"b\", null, username, \"/\", repoName), \" repository\\u2026\")); // Let’s fetch the zipped repo since it should be much more efficient than individual fetches\n            // functionLog(`checkRepo: fetch zip file for ${repoName}…`);\n\n            fetchRepositoryZipFile_ = (givenCheckingOptions === null || givenCheckingOptions === void 0 ? void 0 : givenCheckingOptions.fetchRepositoryZipFile) ? givenCheckingOptions.fetchRepositoryZipFile : _core_getApi__WEBPACK_IMPORTED_MODULE_10__[\"cachedGetRepositoryZipFile\"];\n            _context2.next = 33;\n            return fetchRepositoryZipFile_({\n              username: username,\n              repository: repoName,\n              branch: repoBranch,\n              branchOrRelease: repoBranch\n            });\n\n          case 33:\n            zipFetchSucceeded = _context2.sent;\n\n            if (zipFetchSucceeded) {\n              _context2.next = 39;\n              break;\n            }\n\n            console.error(\"checkRepo: misfetched zip file for repo with \".concat(zipFetchSucceeded));\n            setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"p\", {\n              style: {\n                color: 'red'\n              }\n            }, \"Failed to fetching zipped files from \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"b\", null, username, \"/\", repoName), \" repository\"));\n            addNoticePartial({\n              priority: 989,\n              message: \"Unable to find/load repository\",\n              location: ourLocation\n            });\n            return _context2.abrupt(\"return\", checkRepoResult);\n\n          case 39:\n            // Now we need to fetch the list of files from the repo\n            setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"p\", {\n              style: {\n                color: 'magenta'\n              }\n            }, \"Preprocessing file list from \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"b\", null, username, \"/\", repoName), \" repository\\u2026\")); // const pathList = await getFileListFromFetchedTreemaps(username, repoName, branch);\n\n            getFileListFromZip_ = (givenCheckingOptions === null || givenCheckingOptions === void 0 ? void 0 : givenCheckingOptions.getFileListFromZip) ? givenCheckingOptions.getFileListFromZip : _core_getApi__WEBPACK_IMPORTED_MODULE_10__[\"getFileListFromZip\"];\n            _context2.next = 43;\n            return getFileListFromZip_({\n              username: username,\n              repository: repoName,\n              branchOrRelease: repoBranch\n            });\n\n          case 43:\n            pathList = _context2.sent;\n            // debugLog(`Got pathlist (${pathList.length}) = ${pathList}`);\n            // So now we want to work through checking all the files in this repo\n            // Main loop for checkRepo()\n            // const countString = `${pathList.length.toLocaleString()} file${pathList.length === 1 ? '' : 's'}`;\n            filesToCheckCount = pathList.length;\n            checkedFileCount = 0, checkedFilenames = [], checkedFilenameExtensions = new Set(), totalCheckedSize = 0;\n            _iterator = Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(pathList);\n            _context2.prev = 47;\n\n            _iterator.s();\n\n          case 49:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 96;\n              break;\n            }\n\n            thisFilepath = _step.value;\n\n            if (!abortFlag) {\n              _context2.next = 53;\n              break;\n            }\n\n            return _context2.abrupt(\"break\", 96);\n\n          case 53:\n            // Update our \"waiting\" message\n            setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"p\", {\n              style: {\n                color: 'magenta'\n              }\n            }, \"Checking \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"b\", null, username, \"/\", repoName), \" repo: checked \", checkedFileCount.toLocaleString(), \"/\", filesToCheckCount.toLocaleString(), \" file\", filesToCheckCount === 1 ? '' : 's', \"\\u2026\"));\n            thisFilename = thisFilepath.split('/').pop(); // debugLog(`thisFilename=${thisFilename}`);\n\n            thisFilenameExtension = thisFilename.split('.').pop(); // debugLog(`thisFilenameExtension=${thisFilenameExtension}`);\n            // Default to the main filename without the extension\n\n            bookOrFileCode = thisFilename.slice(0, thisFilename.length - thisFilenameExtension.length - 1);\n            ourBookID = ''; // Stays blank for OBS files\n\n            if (thisFilenameExtension === 'usfm') {\n              // const filenameMain = thisFilename.slice(0, thisFilename.length - 5); // drop .usfm\n              // debugLog(`Have USFM filenameMain=${bookOrFileCode}`);\n              bookID = bookOrFileCode.slice(bookOrFileCode.length - 3).toUpperCase(); // debugLog(`Have USFM bookcode=${bookID}`);\n              //parameterAssert(books.isValidBookID(bookID), `checkRepo: '${bookID}' is not a valid USFM book identifier (for USFM)`);\n\n              bookOrFileCode = bookID;\n              ourBookID = bookID;\n            } else if (thisFilenameExtension === 'tsv') {\n              // debugLog(`Have TSV thisFilename(${thisFilename.length})='${thisFilename}'`);\n              // debugLog(`Have TSV bookOrFileCode(${bookOrFileCode.length})='${bookOrFileCode}'`);\n              _bookID = void 0; // bookOrFileCode could be something like 'en_tn_09-1SA.tsv ' or 'tn_2CO' or 'twl_1CH'\n              // bookID = (bookOrFileCode.length === 6 || bookOrFileCode.length === 7) ? bookOrFileCode.slice(0, 3) : bookOrFileCode.slice(-3).toUpperCase();\n\n              _bookID = bookOrFileCode.slice(-3).toUpperCase();\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"logicAssert\"])(_bookID !== 'twl' && _bookID !== 'TWL', \"Should get a valid bookID here, not '\".concat(_bookID, \"'\")); // debugLog(`Have TSV bookcode(${bookID.length})='${bookID}'`);\n\n              if (repoCode === 'TWL' || repoCode === 'SN' || repoCode === 'SQ' || repoCode === 'TN2' || repoCode === 'TQ') {// new repos allow `OBS`\n                //parameterAssert(bookID === 'OBS' || books.isValidBookID(bookID), `checkRepo: '${bookID}' is not a valid USFM book identifier (for TSV)`);\n              } else {//parameterAssert(bookID !== 'OBS' && books.isValidBookID(bookID), `checkRepo: '${bookID}' is not a valid USFM book identifier (for TSV)`);\n              }\n\n              bookOrFileCode = _bookID;\n              ourBookID = _bookID;\n            } else if (repoName.endsWith('_ta') && thisFilepath.indexOf('/') > 0) bookOrFileCode = thisFilepath.split('/')[1];else if (repoName.endsWith('_tq') && thisFilepath.indexOf('/') > 0) bookOrFileCode = thisFilepath.split('/')[0];\n\n            whichTestament = 'none'; // For non-book repos, e.g., TW, TA\n\n            if (bookOrFileCode === 'OBS') whichTestament = 'both';else if (bookOrFileCode.length === 3) {\n              // but not OBS\n              try {\n                whichTestament = _core_books_books__WEBPACK_IMPORTED_MODULE_8__[\"testament\"](bookOrFileCode); // returns 'old' or 'new'\n              } catch (bNNerror) {\n                if (_core_books_books__WEBPACK_IMPORTED_MODULE_8__[\"isValidBookID\"](bookOrFileCode)) // must be in FRT, BAK, etc.\n                  whichTestament = 'other';\n              } // logicAssert(whichTestament === 'old' || whichTestament === 'new', `checkRepo() couldn’t find testament for '${bookOrFileCode}': got ${whichTestament}`);\n\n            } // debugLog(`checkRepo: Found testament '${whichTestament}' for '${bookOrFileCode}'`);\n\n            if (!((givenCheckingOptions === null || givenCheckingOptions === void 0 ? void 0 : givenCheckingOptions.skipOTBooks) && whichTestament === 'old' || (givenCheckingOptions === null || givenCheckingOptions === void 0 ? void 0 : givenCheckingOptions.skipNTBooks) && whichTestament === 'new')) {\n              _context2.next = 64;\n              break;\n            }\n\n            // debugLog(`checkRepo skipping ${repoName} '${bookOrFileCode}' (${whichTestament}) because skipOTBooks=${givenCheckingOptions.skipOTBooks} and skipNTBooks=${givenCheckingOptions.skipNTBooks}`);\n            --filesToCheckCount;\n            return _context2.abrupt(\"continue\", 94);\n\n          case 64:\n            // debugLog(`checkRepo: Try to load ${username} ${repoName} ${thisFilepath} ${repoBranch}`);\n            // debugLog(`checkRepo:        bookOrFileCode='${bookOrFileCode}' ourBookID='${ourBookID}'`);\n            _getFile_ = (givenCheckingOptions === null || givenCheckingOptions === void 0 ? void 0 : givenCheckingOptions.getFile) ? givenCheckingOptions.getFile : _core_getApi__WEBPACK_IMPORTED_MODULE_10__[\"cachedGetFile\"];\n            repoFileContent = void 0;\n            _context2.prev = 66;\n            _context2.next = 69;\n            return _getFile_({\n              username: username,\n              repository: repoName,\n              path: thisFilepath,\n              branch: repoBranch\n            });\n\n          case 69:\n            repoFileContent = _context2.sent;\n            _context2.next = 85;\n            break;\n\n          case 72:\n            _context2.prev = 72;\n            _context2.t0 = _context2[\"catch\"](66);\n            // NOTE: The error can depend on whether the zipped repo is cached or not\n            console.error(\"checkRepo(\".concat(username, \", \").concat(repoName, \", \").concat(repoBranch, \", \").concat(givenLocation, \", (fn), \").concat(JSON.stringify(givenCheckingOptions), \")) failed to load\"), thisFilepath, repoBranch, \"\".concat(_context2.t0));\n            _context2.next = 77;\n            return Object(_core_getApi__WEBPACK_IMPORTED_MODULE_10__[\"repositoryExistsOnDoor43\"])({\n              username: username,\n              repository: repoName\n            });\n\n          case 77:\n            if (_context2.sent) {\n              _context2.next = 81;\n              break;\n            }\n\n            checkRepoResult.noticeList.push({\n              priority: 997,\n              message: \"Repository doesn’t exist\",\n              username: username,\n              repoCode: repoCode,\n              repoName: repoName,\n              location: givenLocation,\n              extra: repoCode\n            });\n            _context2.next = 84;\n            break;\n\n          case 81:\n            notice = {\n              priority: 996,\n              message: \"Unable to load file\",\n              username: username,\n              bookID: ourBookID,\n              filename: thisFilename,\n              location: \"\".concat(givenLocation, \" \").concat(thisFilepath),\n              extra: repoName\n            }; // eslint-disable-next-line eqeqeq\n\n            if (_context2.t0 != 'TypeError: repoFileContent is null') notice.details = \"error=\".concat(_context2.t0);\n            addNoticePartial(notice);\n\n          case 84:\n            return _context2.abrupt(\"return\");\n\n          case 85:\n            if (!repoFileContent) {\n              _context2.next = 94;\n              break;\n            }\n\n            if (pathList.length < 100) // assume they might be lots of very small files if >= 100\n              Object(_core_utilities__WEBPACK_IMPORTED_MODULE_11__[\"userLog\"])(\"checkRepo for \".concat(repoName, \" checking \").concat(thisFilename, \"\\u2026\"));\n            _context2.next = 89;\n            return ourCheckRepoFileContents(bookOrFileCode, ourBookID, // OBS has many files with the same name, so we have to give some of the path as well\n            // repoName.endsWith('_obs') ? thisFilepath.replace('content/', '') : thisFilename,\n            thisFilenameExtension === 'md' ? thisFilepath.replace('content/', '').replace('bible/', '') : thisFilename, repoFileContent, ourLocation, newCheckingOptions);\n\n          case 89:\n            checkedFileCount += 1;\n            checkedFilenames.push(thisFilename);\n            checkedFilenameExtensions.add(thisFilenameExtension);\n            totalCheckedSize += repoFileContent.length; // functionLog(`checkRepo checked ${thisFilename}`);\n\n            if (thisFilenameExtension !== 'md') // There’s often far, far too many of these\n              addSuccessMessage(\"Checked \".concat(repoName, \" \").concat(bookOrFileCode.toUpperCase(), \" file: \").concat(thisFilename.endsWith('.yaml') ? thisFilepath : thisFilename));\n\n          case 94:\n            _context2.next = 49;\n            break;\n\n          case 96:\n            _context2.next = 101;\n            break;\n\n          case 98:\n            _context2.prev = 98;\n            _context2.t1 = _context2[\"catch\"](47);\n\n            _iterator.e(_context2.t1);\n\n          case 101:\n            _context2.prev = 101;\n\n            _iterator.f();\n\n            return _context2.finish(101);\n\n          case 104:\n            // Check that we processed a license and a manifest\n            if (checkedFilenames.indexOf('LICENSE.md') < 0) addNoticePartial({\n              priority: 946,\n              message: \"Missing LICENSE.md\",\n              location: ourLocation,\n              extra: \"\".concat(repoName, \" LICENSE\")\n            });\n            if (checkedFilenames.indexOf('manifest.yaml') < 0) addNoticePartial({\n              priority: 947,\n              message: \"Missing manifest.yaml\",\n              location: ourLocation,\n              extra: \"\".concat(repoName, \" MANIFEST\")\n            }); // Add some extra fields to our checkRepoResult object\n            //  in case we need this information again later\n\n            checkRepoResult.checkedFileCount += checkedFileCount;\n            checkRepoResult.checkedFilenames = checkedFilenames;\n            checkRepoResult.checkedFilenameExtensions = [].concat(Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkRepoResult.checkedFilenameExtensions), Object(_mnt_SSD_uW_Software_GitHub_uw_content_validation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(checkedFilenameExtensions)); // convert Set to Array\n\n            checkRepoResult.checkedFilesizes += totalCheckedSize;\n            checkRepoResult.checkedRepoNames.unshift(\"\".concat(username, \"/\").concat(repoName)); // checkRepoResult.checkedOptions = checkingOptions; // This is done at the caller level\n\n            addSuccessMessage(\"Checked \".concat(username, \" repo: \").concat(repoName)); // functionLog(`checkRepo() is returning ${checkRepoResult.successList.length.toLocaleString()} success message(s) and ${checkRepoResult.noticeList.length.toLocaleString()} notice(s)`);\n\n            _context2.next = 118;\n            break;\n\n          case 114:\n            _context2.prev = 114;\n            _context2.t2 = _context2[\"catch\"](26);\n            console.error(\"checkRepo main code block got error: \".concat(_context2.t2.message));\n            setResultValue( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_6___default.a.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"p\", {\n              style: {\n                color: 'red'\n              }\n            }, \"checkRepo main code block got error: \", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"b\", null, _context2.t2.message), \" with \", _context2.t2.trace)));\n\n          case 118:\n            checkRepoResult.elapsedSeconds = (new Date() - startTime) / 1000; // seconds\n            // debugLog(`checkRepo() returning ${JSON.stringify(checkRepoResult)}`);\n\n            return _context2.abrupt(\"return\", checkRepoResult);\n\n          case 120:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[26, 114], [47, 98, 101, 104], [66, 72]]);\n  }));\n  return _checkRepo.apply(this, arguments);\n}\n\n; // end of checkRepo()\n\n//# sourceURL=webpack:///./src/demos/repo-check/checkRepo.js?");

/***/ }),

/***/ 0:
/*!****************************************************************!*\
  !*** multi ./node_modules/react-styleguidist/lib/client/index ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! /mnt/SSD/uW/Software/GitHub/uw-content-validation/node_modules/react-styleguidist/lib/client/index */\"./node_modules/react-styleguidist/lib/client/index.js\");\n\n\n//# sourceURL=webpack:///multi_./node_modules/react-styleguidist/lib/client/index?");

/***/ })

},[[0,"runtime-main",0]]]);